// bwip-js // Barcode Writer in Pure JavaScript
// https://github.com/metafloor/bwip-js
//
// This code was automatically generated from:
// Barcode Writer in Pure PostScript - Version 2016-12-16
//
// Copyright (c) 2011-2016 Mark Warren
// Copyright (c) 2004-2016 Terry Burton
//
// Licensed MIT. See the LICENSE file in the bwip-js root directory.
function BWIPP() {
	// bwip-js/barcode-hdr.js
	//
	// This code is injected above the cross-compiled barcode.ps.

	// The BWIPJS object (graphics interface)
	var $$ = null;

	// The global dictionary.  Each renderer and encoder declare a
	// $1 local dict.
	var $0 = {
		$error: {} // the postscript error object
	};

	var $j = 0; // stack pointer
	var $k = []; // operand stack

	// Array ctor
	//	$a()	: Build a new array up to the Infinity-marker on the stack.
	//	$a(arr)	: Convert native array to a "view" of the array.
	//	$a(len)	: Create a new array of length `len`
	function $a(a) {
		if (!arguments.length) {
			for (var i = $j - 1; i >= 0 && $k[i] !== Infinity; i--);
			if (i < 0) {
				throw new Error('array-marker-not-found');
			}
			a = $k.splice(i + 1, $j - 1 - i);
			$j = i;
		} else if (!(a instanceof Array)) {
			a = new Array(+arguments[0]);
			for (var i = 0, l = a.length; i < l; i++) {
				a[i] = null;
			}
		}
		a.b = a; // base array
		a.o = 0; // offset into base
		return a;
	}

	// dict ctor
	//	$d() : look for the Infinity marker on the stack
	function $d() {
		var d = {};
		for (var i = $j - 1; i >= 0 && $k[i] !== Infinity; i -= 2) {
			if ($k[i - 1] === Infinity) {
				throw new Error('dict-malformed-stack');
			}
			// Unlike javascript, postscript dict keys differentiate between
			// numbers and the string representation of a number.
			var k = $k[i - 1]; // "key" into the dict entry
			var t = typeof k;
			if (t === 'number') {
				d['\uffff' + k] = $k[i];
			} else if (t === 'string') {
				d[k] = $k[i];
			} else if (k instanceof Uint8Array) {
				d[$z(k)] = $k[i];
			} else {
				throw 'dict-not-a-valid-key(' + k + ')';
			}
		}
		if (i < 0) {
			throw 'dict-marker-not-found';
		}
		$j = i;
		return d;
	}

	// string ctor
	//	s(number)	: create zero-filled string of number-length
	//	s(string)	: make a copy of the string
	//	s(uint8[])	: make a copy of the string
	//
	// Returns a Uint8Array-string.
	function $s(v) {
		var t = typeof v;
		if (t === 'number') {
			return new Uint8Array(v);
		}
		if (t !== 'string') {
			v = '' + v;
		}
		var s = new Uint8Array(v.length);
		for (var i = 0; i < v.length; i++) {
			s[i] = v.charCodeAt(i);
		}
		return s;
	}

	// Primarily designed to convert uint8-string to string, but will call the
	// the toString() method on any value.
	function $z(s) {
		if (s instanceof Uint8Array) {
			// Postscript treats nul-char as end of string, even if string is
			// longer.
			for (var i = 0, l = s.length; i < l && s[i]; i++);
			if (i < l) {
				return String.fromCharCode.apply(null, s.subarray(0, i));
			}
			return String.fromCharCode.apply(null, s)
		}
		return '' + s;
	}

	// Copies source to dest and returns a view of just the copied characters
	function $strcpy(dst, src) {
		if (typeof dst === 'string') {
			dst = $s(dst);
		}
		if (src instanceof Uint8Array) {
			for (var i = 0, l = src.length; i < l; i++) {
				dst[i] = src[i];
			}
		} else {
			for (var i = 0, l = src.length; i < l; i++) {
				dst[i] = src.charCodeAt(i);
			}
		}
		return src.length < dst.length ? dst.subarray(0, src.length) : dst;
	}

	// cvs operator - convert a value to its string representation
	//	s : string to store into
	//	v : any value
	function $cvs(s, v) {
		var t = typeof v;
		if (t == 'number' || t == 'boolean' || v === null) {
			v = '' + v;
		} else if (t !== 'string') {
			v = '--nostringval--';
		}
		for (var i = 0, l = v.length; i < l; i++) {
			s[i] = v.charCodeAt(i);
		}
		$k[$j++] = i < s.length ? s.subarray(0, i) : s;
	}
	// cvrs operator - convert a number to a radix string
	//	s : string to store into
	//	n : number
	//	r : radix
	function $cvrs(s, n, r) {
		return $strcpy(s, (~~n).toString(r).toUpperCase());
	}

	// get operator
	//	s : source
	//	k : key
	function $get(s, k) {
		if (s instanceof Uint8Array) {
			return s[k];
		}
		if (typeof s === 'string') {
			return s.charCodeAt(k);
		}
		if (s instanceof Array) {
			return s.b[s.o + k];
		}
		// Must be a dict object : with postscript dict objects, a number key
		// is differerent than its string representation.  postscript uses
		// 8-bit strings, so \uffff can never be in a key value.
		if (typeof k === 'number') {
			return s['\uffff' + k];
		}
		if (k instanceof Uint8Array) {
			return s[$z(k)];
		}
		return s[k];
	}

	// put operator
	//	d : dest
	//	k : key
	//	v : value
	function $put(d, k, v) {
		if (d instanceof Uint8Array) {
			d[k] = v;
		} else if (d instanceof Array) {
			d.b[d.o + k] = v;
		} else if (typeof d == 'object') {
			if (k instanceof Uint8Array) {
				d[$z(k)] = v;
			} else {
				d[typeof k == 'number' ? '\uffff' + k : k] = v;
			}
		} else {
			throw 'put-not-writable-' + (typeof d);
		}
	}

	// getinterval operator
	//	s : src
	//	o : offset
	//	l : length
	function $geti(s, o, l) {
		if (s instanceof Uint8Array) {
			return s.subarray(o, o + l);
		}
		if (s instanceof Array) {
			var a = new Array(l);
			a.b = s.b; // base array
			a.o = s.o + o; // offset into base
			return a;
		}
		// Must be a string
		return s.substr(o, l);
	}

	// putinterval operator
	//	d : dst
	//	o : offset
	//	s : src
	function $puti(d, o, s) {
		if (d instanceof Uint8Array) {
			if (typeof s == 'string') {
				for (var i = 0, l = s.length; i < l; i++) {
					d[o + i] = s.charCodeAt(i);
				}
			} else {
				// When both d and s are the same, we want to copy
				// backwards, which works for the general case as well.
				for (var i = s.length - 1; i >= 0; i--) {
					d[o + i] = s[i];
				}
			}
		} else if (d instanceof Array) {
			// Operate on the base arrays
			var darr = d.b;
			var doff = o + d.o;
			var sarr = s.b;
			var soff = s.o;

			for (var i = 0, l = s.length; i < l; i++) {
				darr[doff + i] = sarr[soff + i];
			}
		} else {
			throw 'putinterval-not-writable-' + (typeof d);
		}
	}

	// type operator
	function $type(v) {
		// null can be mis-typed - get it out of the way
		if (v === null || v === undefined) {
			return 'nulltype';
		}
		var t = typeof v;
		if (t == 'number') {
			return v % 1 ? 'realtype' : 'integertype';
		}
		if (t == 'boolean') {
			return 'booleantype';
		}
		if (t == 'string' || v instanceof Uint8Array) {
			return 'stringtype';
		}
		if (t == 'function') {
			return 'operatortype';
		}
		if (v instanceof Array) {
			return 'arraytype';
		}
		return 'dicttype';
		// filetype
		// fonttype
		// gstatetype
		// marktype	(v === Infinity)
		// nametype
		// savetype
	}

	// search operator
	//		string seek search suffix match prefix true %if-found
	//						   string false				%if-not-found
	function $search(str, seek) {
		if (!(str instanceof Uint8Array)) {
			str = $s(str);
		}
		var ls = str.length;

		// Virtually all uses of search in BWIPP are for single-characters.
		// Optimize for that case.
		if (seek.length == 1) {
			var lk = 1;
			var cd = seek instanceof Uint8Array ? seek[0] : seek.charCodeAt(0);
			for (var i = 0; i < ls && str[i] != cd; i++);
		} else {
			// Slow path, 
			if (!(seek instanceof Uint8Array)) {
				seek = $(seek);
			}
			var lk = seek.length;
			var cd = seek[0];
			for (var i = 0; i < ls && str[i] != cd; i++);
			while (i < ls) {
				for (var j = 1; j < lk && str[i + j] === seek[j]; j++);
				if (j === lk) {
					break;
				}
				for (i++; i < ls && str[i] != cd; i++);
			}
		}
		if (i < ls) {
			$k[$j++] = str.subarray(i + lk);
			$k[$j++] = str.subarray(i, i + lk);
			$k[$j++] = str.subarray(0, i);
			$k[$j++] = true;
		} else {
			$k[$j++] = str;
			$k[$j++] = false;
		}
	}

	// The callback is omitted when forall is being used just to push onto the
	// stack.
	function $forall(o, cb) {
		if (o instanceof Uint8Array) {
			for (var i = 0, l = o.length; i < l; i++) {
				$k[$j++] = o[i];
				cb && cb();
			}
		} else if (o instanceof Array) {
			// The array may be a view.
			for (var a = o.b, i = o.o, l = o.o + o.length; i < l; i++) {
				$k[$j++] = a[i];
				cb && cb();
			}
		} else if (typeof o === 'string') {
			for (var i = 0, l = o.length; i < l; i++) {
				$k[$j++] = o.charCodeAt(i);
				cb && cb();
			}
		} else {
			for (var id in o) {
				$k[$j++] = id;
				$k[$j++] = o[id];
				cb && cb();
			}
		}
	}

	function $cleartomark() {
		while ($j > 0 && $k[--$j] !== Infinity);
	}

	function $counttomark() {
		for (var i = $j - 1; i >= 0 && $k[i] !== Infinity; i--);
		return $j - i - 1;
	}

	function $aload(a) {
		for (var i = 0, l = a.length, b = a.b, o = a.o; i < l; i++) {
			$k[$j++] = b[o + i];
		}
		// This push has been optimized out.  See $.aload() in psc.js.
		//$k[$j++] = a;
	}

	function $astore(a) {
		for (var i = 0, l = a.length, b = a.b, o = a.o + l - 1; i < l; i++) {
			b[o - i] = $k[--$j];
		}
		$k[$j++] = a;
	}

	function $eq(a, b) {
		if (typeof a === 'string' && typeof b === 'string') {
			return a == b;
		}
		if (a instanceof Uint8Array && b instanceof Uint8Array) {
			if (a.length != b.length) {
				return false;
			}
			for (var i = 0, l = a.length; i < l; i++) {
				if (a[i] != b[i]) {
					return false;
				}
			}
			return true;
		}
		if (a instanceof Uint8Array && typeof b === 'string' ||
			b instanceof Uint8Array && typeof a === 'string') {
			if (a instanceof Uint8Array) {
				a = $z(a);
			} else {
				b = $z(b);
			}
			return a == b;
		}
		return a == b;
	}

	function $ne(a, b) {
		return !$eq(a, b);
	}

	function $lt(a, b) {
		if (a instanceof Uint8Array) {
			a = $z(a);
		}
		if (b instanceof Uint8Array) {
			b = $z(b);
		}
		return a < b;
	}

	function $le(a, b) {
		if (a instanceof Uint8Array) {
			a = $z(a);
		}
		if (b instanceof Uint8Array) {
			b = $z(b);
		}
		return a <= b;
	}

	function $gt(a, b) {
		if (a instanceof Uint8Array) {
			a = $z(a);
		}
		if (b instanceof Uint8Array) {
			b = $z(b);
		}
		return a > b;
	}

	function $ge(a, b) {
		if (a instanceof Uint8Array) {
			a = $z(a);
		}
		if (b instanceof Uint8Array) {
			b = $z(b);
		}
		return a >= b;
	}

	function $an(a, b) { // and
		return (typeof a === 'boolean') ? a && b : a & b;
	}

	function $or(a, b) { // or
		return (typeof a === 'boolean') ? a || b : a | b;
	}

	function $xo(a, b) { // xor
		return (typeof a === 'boolean') ? !a && b || a && !b : a ^ b;
	}

	// DEBUG-BEGIN
	function $stack() {
		console.log('[[[');
		for (var i = $j - 1; i >= 0; i--) {
			console.log(tostring($k[i]));
		}
		console.log(']]]');

		function tostring(v) {
			// null can be mis-typed - get it out of the way
			if (v === null) {
				return 'null';
			} else if (v === undefined) {
				return '<undefined>';
			} else if (v instanceof Array) {
				var s = '<array,' + v.o + ',' + v.length + '>[';
				for (var j = v.o, a = v.b, l = v.length + v.o; j < l; j++) {
					s += (j == v.o ? '' : ',') + tostring(a[j]);
				}
				return s + ']';
			} else if (v instanceof Uint8Array) {
				return '(' + $z[v] + ')';
			} else if (typeof v === 'object') {
				var s = '<<';
				for (var id in v) {
					s += (s.length == 7 ? '' : ',') + id + ':' + tostring(v[id]);
				}
				return s + '>>';
			} else if (typeof v === 'string') {
				return '"' + v + '"';
			} else {
				return '' + v;
			}
		}
	}
	// DEBUG-END
	$0.raiseerror = function() {
		$0.$error.errorinfo = $k[--$j]; /*55*/
		$0.$error.errorname = $k[--$j]; /*56*/
		$0.$error.command = null; /*57*/
		$0.$error.newerror = true; /*58*/
		throw new Error($0.$error.errorname + ": " + $0.$error.errorinfo); /*59*/
	};
	$0.ean5 = function() {
		var $1 = {}; /*650*/
		$1.options = $k[--$j]; /*652*/
		$1.barcode = $k[--$j]; /*653*/
		$1.dontdraw = false; /*655*/
		$1.includetext = false; /*656*/
		$1.textfont = "Helvetica"; /*657*/
		$1.textsize = 12; /*658*/
		$1.textxoffset = 0; /*659*/
		$1.textyoffset = "unset"; /*660*/
		$1.height = 0.7; /*661*/
		$forall($1.options, function() { /*672*/
			var _3 = $k[--$j]; /*672*/
			$1[$k[--$j]] = _3; /*672*/
		}); /*672*/
		$1.textfont = "" + $1.textfont; /*674*/
		$1.textsize = +$1.textsize; /*675*/
		$1.height = +$1.height; /*676*/
		$1.textxoffset = +$1.textxoffset; /*677*/
		if ($eq($1.textyoffset, "unset")) { /*681*/
			$1.textyoffset = ($1.height * 72) + 1; /*679*/
		} else { /*681*/
			$1.textyoffset = +$1.textyoffset; /*681*/
		} /*681*/
		if ($1.barcode.length != 5) { /*687*/
			$k[$j++] = "bwipp.ean5badLength"; /*686*/
			$k[$j++] = "EAN-5 add-on must be 5 digits"; /*686*/
			$0.raiseerror(); /*686*/
		} /*686*/
		$forall($1.barcode, function() { /*692*/
			var _E = $k[--$j]; /*689*/
			if ((_E < 48) || (_E > 57)) { /*691*/
				$k[$j++] = "bwipp.ean5badCharacter"; /*690*/
				$k[$j++] = "EAN-5 add-on must contain only digits"; /*690*/
				$0.raiseerror(); /*690*/
			} /*690*/
		}); /*690*/
		$1.encs = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "1312", "1213", "3112", "112", "11"]); /*699*/
		$1.barchars = "0123456789"; /*702*/
		$1.mirrormaps = $a(["11000", "10100", "10010", "10001", "01100", "00110", "00011", "01010", "01001", "00101"]); /*708*/
		$1.checksum = 0; /*709*/
		for (var _H = 0; _H <= 4; _H += 1) { /*718*/
			$1.i = _H; /*711*/
			$1.barchar = $get($1.barcode, $1.i) - 48; /*712*/
			if (($1.i % 2) == 0) { /*716*/
				$1.checksum = ($1.barchar * 3) + $1.checksum; /*714*/
			} else { /*716*/
				$1.checksum = ($1.barchar * 9) + $1.checksum; /*716*/
			} /*716*/
		} /*716*/
		$1.checksum = $1.checksum % 10; /*719*/
		$1.mirrormap = $get($1.mirrormaps, $1.checksum); /*720*/
		$1.sbs = $s(31); /*722*/
		$1.txt = $a(5); /*723*/
		for (var _W = 0; _W <= 4; _W += 1) { /*753*/
			$1.i = _W; /*726*/
			if ($1.i == 0) { /*732*/
				$puti($1.sbs, 0, $get($1.encs, 10)); /*730*/
			} else { /*732*/
				$puti($1.sbs, (($1.i - 1) * 6) + 7, $get($1.encs, 11)); /*732*/
			} /*732*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*736*/
			$j--; /*737*/
			$1.indx = $k[--$j].length; /*738*/
			$j -= 2; /*739*/
			$1.enc = $get($1.encs, $1.indx); /*740*/
			if ($get($1.mirrormap, $1.i) == 49) { /*750*/
				$1.enclen = $1.enc.length; /*742*/
				$1.revenc = $s($1.enclen); /*743*/
				for (var _v = 0, _u = $1.enclen - 1; _v <= _u; _v += 1) { /*748*/
					$1.j = _v; /*745*/
					$1.char = $get($1.enc, $1.j); /*746*/
					$put($1.revenc, ($1.enclen - $1.j) - 1, $1.char); /*747*/
				} /*747*/
				$1.enc = $1.revenc; /*749*/
			} /*749*/
			$puti($1.sbs, ($1.i * 6) + 3, $1.enc); /*751*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ((($1.i - 1) * 9) + 13) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*752*/
		} /*752*/
		$k[$j++] = Infinity; /*767*/
		$k[$j++] = "ren"; /*759*/
		$k[$j++] = $0.renlinear; /*759*/
		$k[$j++] = "sbs"; /*759*/
		$k[$j++] = Infinity; /*759*/
		var _1I = $1.sbs; /*758*/
		for (var _1J = 0, _1K = _1I.length; _1J < _1K; _1J++) { /*758*/
			$k[$j++] = $get(_1I, _1J) - 48; /*758*/
		} /*758*/
		var _1M = $a(); /*759*/
		$k[$j++] = _1M; /*760*/
		$k[$j++] = "bhs"; /*760*/
		$k[$j++] = Infinity; /*760*/
		for (var _1N = 0, _1O = 16; _1N < _1O; _1N++) { /*759*/
			$k[$j++] = $1.height; /*759*/
		} /*759*/
		var _1Q = $a(); /*760*/
		$k[$j++] = _1Q; /*761*/
		$k[$j++] = "bbs"; /*761*/
		$k[$j++] = Infinity; /*761*/
		for (var _1R = 0, _1S = 16; _1R < _1S; _1R++) { /*760*/
			$k[$j++] = 0; /*760*/
		} /*760*/
		var _1T = $a(); /*761*/
		$k[$j++] = _1T; /*763*/
		if ($1.includetext) { /*763*/
			$k[$j++] = "txt"; /*762*/
			$k[$j++] = $1.txt; /*762*/
		} /*762*/
		$k[$j++] = "opt"; /*767*/
		$k[$j++] = $1.options; /*767*/
		$k[$j++] = "guardrightpos"; /*767*/
		$k[$j++] = 10; /*767*/
		$k[$j++] = "guardrightypos"; /*767*/
		$k[$j++] = $1.textyoffset + 4; /*767*/
		$k[$j++] = "bordertop"; /*767*/
		$k[$j++] = 10; /*767*/
		var _1Y = $d(); /*767*/
		$k[$j++] = _1Y; /*770*/
		if (!$1.dontdraw) { /*770*/
			$0.renlinear(); /*770*/
		} /*770*/
	};
	$0.ean2 = function() {
		var $1 = {}; /*797*/
		$1.options = $k[--$j]; /*799*/
		$1.barcode = $k[--$j]; /*800*/
		$1.dontdraw = false; /*802*/
		$1.includetext = false; /*803*/
		$1.textfont = "Helvetica"; /*804*/
		$1.textsize = 12; /*805*/
		$1.textxoffset = 0; /*806*/
		$1.textyoffset = "unset"; /*807*/
		$1.height = 0.7; /*808*/
		$forall($1.options, function() { /*819*/
			var _3 = $k[--$j]; /*819*/
			$1[$k[--$j]] = _3; /*819*/
		}); /*819*/
		$1.textfont = "" + $1.textfont; /*821*/
		$1.textsize = +$1.textsize; /*822*/
		$1.height = +$1.height; /*823*/
		$1.textxoffset = +$1.textxoffset; /*824*/
		if ($eq($1.textyoffset, "unset")) { /*828*/
			$1.textyoffset = ($1.height * 72) + 1; /*826*/
		} else { /*828*/
			$1.textyoffset = +$1.textyoffset; /*828*/
		} /*828*/
		if ($1.barcode.length != 2) { /*834*/
			$k[$j++] = "bwipp.ean2badLength"; /*833*/
			$k[$j++] = "EAN-2 add-on must be 2 digits"; /*833*/
			$0.raiseerror(); /*833*/
		} /*833*/
		$forall($1.barcode, function() { /*839*/
			var _E = $k[--$j]; /*836*/
			if ((_E < 48) || (_E > 57)) { /*838*/
				$k[$j++] = "bwipp.ean2badCharacter"; /*837*/
				$k[$j++] = "EAN-2 add-on must contain only digits"; /*837*/
				$0.raiseerror(); /*837*/
			} /*837*/
		}); /*837*/
		$1.encs = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "1312", "1213", "3112", "112", "11"]); /*846*/
		$1.barchars = "0123456789"; /*849*/
		$1.mirrormap = $get($a(["00", "01", "10", "11"]), (~~$z($geti($1.barcode, 0, 2))) % 4); /*852*/
		$1.sbs = $s(13); /*854*/
		$1.txt = $a(2); /*855*/
		for (var _M = 0; _M <= 1; _M += 1) { /*885*/
			$1.i = _M; /*858*/
			if ($1.i == 0) { /*864*/
				$puti($1.sbs, 0, $get($1.encs, 10)); /*862*/
			} else { /*864*/
				$puti($1.sbs, (($1.i - 1) * 6) + 7, $get($1.encs, 11)); /*864*/
			} /*864*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*868*/
			$j--; /*869*/
			$1.indx = $k[--$j].length; /*870*/
			$j -= 2; /*871*/
			$1.enc = $get($1.encs, $1.indx); /*872*/
			if ($get($1.mirrormap, $1.i) == 49) { /*882*/
				$1.enclen = $1.enc.length; /*874*/
				$1.revenc = $s($1.enclen); /*875*/
				for (var _l = 0, _k = $1.enclen - 1; _l <= _k; _l += 1) { /*880*/
					$1.j = _l; /*877*/
					$1.char = $get($1.enc, $1.j); /*878*/
					$put($1.revenc, ($1.enclen - $1.j) - 1, $1.char); /*879*/
				} /*879*/
				$1.enc = $1.revenc; /*881*/
			} /*881*/
			$puti($1.sbs, ($1.i * 6) + 3, $1.enc); /*883*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ((($1.i - 1) * 9) + 13) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*884*/
		} /*884*/
		$k[$j++] = Infinity; /*899*/
		$k[$j++] = "ren"; /*891*/
		$k[$j++] = $0.renlinear; /*891*/
		$k[$j++] = "sbs"; /*891*/
		$k[$j++] = Infinity; /*891*/
		var _18 = $1.sbs; /*890*/
		for (var _19 = 0, _1A = _18.length; _19 < _1A; _19++) { /*890*/
			$k[$j++] = $get(_18, _19) - 48; /*890*/
		} /*890*/
		var _1C = $a(); /*891*/
		$k[$j++] = _1C; /*892*/
		$k[$j++] = "bhs"; /*892*/
		$k[$j++] = Infinity; /*892*/
		for (var _1D = 0, _1E = 12; _1D < _1E; _1D++) { /*891*/
			$k[$j++] = $1.height; /*891*/
		} /*891*/
		var _1G = $a(); /*892*/
		$k[$j++] = _1G; /*893*/
		$k[$j++] = "bbs"; /*893*/
		$k[$j++] = Infinity; /*893*/
		for (var _1H = 0, _1I = 12; _1H < _1I; _1H++) { /*892*/
			$k[$j++] = 0; /*892*/
		} /*892*/
		var _1J = $a(); /*893*/
		$k[$j++] = _1J; /*895*/
		if ($1.includetext) { /*895*/
			$k[$j++] = "txt"; /*894*/
			$k[$j++] = $1.txt; /*894*/
		} /*894*/
		$k[$j++] = "opt"; /*899*/
		$k[$j++] = $1.options; /*899*/
		$k[$j++] = "guardrightpos"; /*899*/
		$k[$j++] = 10; /*899*/
		$k[$j++] = "guardrightypos"; /*899*/
		$k[$j++] = $1.textyoffset + 4; /*899*/
		$k[$j++] = "bordertop"; /*899*/
		$k[$j++] = 10; /*899*/
		var _1O = $d(); /*899*/
		$k[$j++] = _1O; /*902*/
		if (!$1.dontdraw) { /*902*/
			$0.renlinear(); /*902*/
		} /*902*/
	};
	$0.ean13 = function() {
		var $1 = {}; /*931*/
		$1.options = $k[--$j]; /*933*/
		$1.barcode = $k[--$j]; /*934*/
		$1.dontdraw = false; /*936*/
		$1.includetext = false; /*937*/
		$1.textfont = "Helvetica"; /*938*/
		$1.textsize = 12; /*939*/
		$1.textxoffset = -10; /*940*/
		$1.textyoffset = -4.5; /*941*/
		$1.height = 1; /*942*/
		$1.addongap = 12; /*943*/
		$1.addontextfont = "unset"; /*944*/
		$1.addontextsize = "unset"; /*945*/
		$1.addontextxoffset = "unset"; /*946*/
		$1.addontextyoffset = "unset"; /*947*/
		$forall($1.options, function() { /*958*/
			var _3 = $k[--$j]; /*958*/
			$1[$k[--$j]] = _3; /*958*/
		}); /*958*/
		$1.textfont = "" + $1.textfont; /*960*/
		$1.textsize = +$1.textsize; /*961*/
		$1.textxoffset = +$1.textxoffset; /*962*/
		$1.textyoffset = +$1.textyoffset; /*963*/
		$1.height = +$1.height; /*964*/
		$1.addongap = +$1.addongap; /*965*/
		if ($ne($1.addontextfont, "unset")) { /*966*/
			$1.addontextfont = "" + $1.addontextfont; /*966*/
		} /*966*/
		if ($ne($1.addontextsize, "unset")) { /*967*/
			$1.addontextsize = +$1.addontextsize; /*967*/
		} /*967*/
		if ($ne($1.addontextxoffset, "unset")) { /*968*/
			$1.addontextxoffset = +$1.addontextxoffset; /*968*/
		} /*968*/
		if ($ne($1.addontextyoffset, "unset")) { /*969*/
			$1.addontextyoffset = +$1.addontextyoffset; /*969*/
		} /*969*/
		$search($1.barcode, " "); /*972*/
		if ($k[--$j]) { /*978*/
			$1.barcode = $k[--$j]; /*973*/
			$j--; /*974*/
			$1.addon = $k[--$j]; /*975*/
		} else { /*978*/
			$j--; /*977*/
			$1.addon = ""; /*978*/
		} /*978*/
		if (($1.barcode.length != 12) && ($1.barcode.length != 13)) { /*984*/
			$k[$j++] = "bwipp.ean13badLength"; /*983*/
			$k[$j++] = "EAN-13 must be 12 or 13 digits"; /*983*/
			$0.raiseerror(); /*983*/
		} /*983*/
		$forall($1.barcode, function() { /*989*/
			var _Q = $k[--$j]; /*986*/
			if ((_Q < 48) || (_Q > 57)) { /*988*/
				$k[$j++] = "bwipp.ean13badCharacter"; /*987*/
				$k[$j++] = "EAN-13 must contain only digits"; /*987*/
				$0.raiseerror(); /*987*/
			} /*987*/
		}); /*987*/
		if ((($1.addon.length != 0) && ($1.addon.length != 2)) && ($1.addon.length != 5)) { /*992*/
			$k[$j++] = "bwipp.ean13badAddOnLength"; /*991*/
			$k[$j++] = "Add-on for EAN-13 must be 2 or 5 digits"; /*991*/
			$0.raiseerror(); /*991*/
		} /*991*/
		$1.pad = $s(13); /*995*/
		$1.checksum = 0; /*996*/
		for (var _V = 0; _V <= 11; _V += 1) { /*1005*/
			$1.i = _V; /*998*/
			$1.barchar = $get($1.barcode, $1.i) - 48; /*999*/
			if (($1.i % 2) == 0) { /*1003*/
				$1.checksum = $1.barchar + $1.checksum; /*1001*/
			} else { /*1003*/
				$1.checksum = ($1.barchar * 3) + $1.checksum; /*1003*/
			} /*1003*/
		} /*1003*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*1006*/
		if ($1.barcode.length == 13) { /*1011*/
			if ($get($1.barcode, 12) != ($1.checksum + 48)) { /*1010*/
				$k[$j++] = "bwipp.ean13badCheckDigit"; /*1009*/
				$k[$j++] = "Incorrect EAN-13 check digit provided"; /*1009*/
				$0.raiseerror(); /*1009*/
			} /*1009*/
		} /*1009*/
		$puti($1.pad, 0, $1.barcode); /*1012*/
		$put($1.pad, 12, $1.checksum + 48); /*1013*/
		$1.barcode = $1.pad; /*1014*/
		$1.encs = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "1312", "1213", "3112", "111", "11111", "111"]); /*1021*/
		$1.barchars = "0123456789"; /*1024*/
		$1.mirrormaps = $a(["000000", "001011", "001101", "001110", "010011", "011001", "011100", "010101", "010110", "011010"]); /*1030*/
		$1.sbs = $s(59); /*1032*/
		$1.txt = $a(13); /*1033*/
		$puti($1.sbs, 0, $get($1.encs, 10)); /*1036*/
		$1.mirrormap = $get($1.mirrormaps, $get($1.barcode, 0) - 48); /*1039*/
		$put($1.txt, 0, $a([$geti($1.barcode, 0, 1), $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*1040*/
		for (var _17 = 1; _17 <= 6; _17 += 1) { /*1063*/
			$1.i = _17; /*1045*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*1046*/
			$j--; /*1047*/
			$1.indx = $k[--$j].length; /*1048*/
			$j -= 2; /*1049*/
			$1.enc = $get($1.encs, $1.indx); /*1050*/
			if ($get($1.mirrormap, $1.i - 1) == 49) { /*1060*/
				$1.enclen = $1.enc.length; /*1052*/
				$1.revenc = $s($1.enclen); /*1053*/
				for (var _1O = 0, _1N = $1.enclen - 1; _1O <= _1N; _1O += 1) { /*1058*/
					$1.j = _1O; /*1055*/
					$1.char = $get($1.enc, $1.j); /*1056*/
					$put($1.revenc, ($1.enclen - $1.j) - 1, $1.char); /*1057*/
				} /*1057*/
				$1.enc = $1.revenc; /*1059*/
			} /*1059*/
			$puti($1.sbs, (($1.i - 1) * 4) + 3, $1.enc); /*1061*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ((($1.i - 1) * 7) + 14) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*1062*/
		} /*1062*/
		$puti($1.sbs, ((7 - 1) * 4) + 3, $get($1.encs, 11)); /*1066*/
		for (var _1o = 7; _1o <= 12; _1o += 1) { /*1079*/
			$1.i = _1o; /*1071*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*1072*/
			$j--; /*1073*/
			$1.indx = $k[--$j].length; /*1074*/
			$j -= 2; /*1075*/
			$1.enc = $get($1.encs, $1.indx); /*1076*/
			$puti($1.sbs, (($1.i - 1) * 4) + 8, $1.enc); /*1077*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ((($1.i - 1) * 7) + 18) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*1078*/
		} /*1078*/
		$puti($1.sbs, 56, $get($1.encs, 12)); /*1082*/
		$k[$j++] = Infinity; /*1084*/
		var _2E = $1.sbs; /*1084*/
		for (var _2F = 0, _2G = _2E.length; _2F < _2G; _2F++) { /*1084*/
			$k[$j++] = $get(_2E, _2F) - 48; /*1084*/
		} /*1084*/
		$1.sbs = $a(); /*1084*/
		if ($1.includetext) { /*1091*/
			$k[$j++] = Infinity; /*1086*/
			$k[$j++] = $1.height; /*1086*/
			$k[$j++] = $1.height; /*1086*/
			for (var _2M = 0, _2N = 12; _2M < _2N; _2M++) { /*1086*/
				$k[$j++] = $1.height - 0.075; /*1086*/
			} /*1086*/
			$k[$j++] = $1.height; /*1086*/
			$k[$j++] = $1.height; /*1086*/
			for (var _2R = 0, _2S = 12; _2R < _2S; _2R++) { /*1086*/
				$k[$j++] = $1.height - 0.075; /*1086*/
			} /*1086*/
			$k[$j++] = $1.height; /*1086*/
			$k[$j++] = $1.height; /*1086*/
			$1.bhs = $a(); /*1086*/
			$k[$j++] = Infinity; /*1087*/
			$k[$j++] = 0; /*1087*/
			$k[$j++] = 0; /*1087*/
			for (var _2X = 0, _2Y = 12; _2X < _2Y; _2X++) { /*1087*/
				$k[$j++] = 0.075; /*1087*/
			} /*1087*/
			$k[$j++] = 0; /*1087*/
			$k[$j++] = 0; /*1087*/
			for (var _2Z = 0, _2a = 12; _2Z < _2a; _2Z++) { /*1087*/
				$k[$j++] = 0.075; /*1087*/
			} /*1087*/
			$k[$j++] = 0; /*1087*/
			$k[$j++] = 0; /*1087*/
			$1.bbs = $a(); /*1087*/
		} else { /*1091*/
			$k[$j++] = Infinity; /*1089*/
			for (var _2c = 0, _2d = 30; _2c < _2d; _2c++) { /*1089*/
				$k[$j++] = $1.height; /*1089*/
			} /*1089*/
			$1.bhs = $a(); /*1089*/
			$k[$j++] = Infinity; /*1090*/
			for (var _2g = 0, _2h = 30; _2g < _2h; _2g++) { /*1090*/
				$k[$j++] = 0; /*1090*/
			} /*1090*/
			$1.bbs = $a(); /*1090*/
			$1.txt = $a([]); /*1091*/
		} /*1091*/
		$1.guardrightypos = 0; /*1093*/
		if ($ne($1.addon, "")) { /*1114*/
			$k[$j++] = "addopts"; /*1104*/
			$k[$j++] = Infinity; /*1104*/
			$k[$j++] = "dontdraw"; /*1101*/
			$k[$j++] = true; /*1101*/
			$k[$j++] = "includetext"; /*1101*/
			$k[$j++] = true; /*1101*/
			$k[$j++] = "height"; /*1101*/
			$k[$j++] = $1.height - 0.15; /*1101*/
			$k[$j++] = "textxoffset"; /*1101*/
			if ($1.addontextxoffset != "unset") { /*1101*/
				$k[$j++] = $1.addontextxoffset; /*1101*/
			} else { /*1101*/
				$k[$j++] = 95 + $1.addongap; /*1101*/
			} /*1101*/
			if ($1.addontextyoffset != "unset") { /*1102*/
				$k[$j++] = "textyoffset"; /*1102*/
				$k[$j++] = $1.addontextyoffset; /*1102*/
			} /*1102*/
			$k[$j++] = "textsize"; /*1103*/
			if ($1.addontextsize != "unset") { /*1103*/
				$k[$j++] = $1.addontextsize; /*1103*/
			} else { /*1103*/
				$k[$j++] = $1.textsize; /*1103*/
			} /*1103*/
			$k[$j++] = "textfont"; /*1104*/
			if ($ne($1.addontextfont, "unset")) { /*1104*/
				$k[$j++] = $1.addontextfont; /*1104*/
			} else { /*1104*/
				$k[$j++] = $1.textfont; /*1104*/
			} /*1104*/
			var _2x = $d(); /*1104*/
			$1[$k[--$j]] = _2x; /*1105*/
			if ($1.addon.length == 2) { /*1106*/
				$k[$j++] = $1.addon; /*1106*/
				$k[$j++] = $1.addopts; /*1106*/
				$0.ean2(); /*1106*/
			} /*1106*/
			if ($1.addon.length == 5) { /*1107*/
				$k[$j++] = $1.addon; /*1107*/
				$k[$j++] = $1.addopts; /*1107*/
				$0.ean5(); /*1107*/
			} /*1107*/
			$1.addcode = $k[--$j]; /*1108*/
			$k[$j++] = Infinity; /*1109*/
			$aload($1.sbs); /*1109*/
			$k[$j++] = $1.addongap; /*1109*/
			$aload($1.addcode.sbs); /*1109*/
			$1.sbs = $a(); /*1109*/
			$k[$j++] = Infinity; /*1110*/
			$aload($1.bhs); /*1110*/
			$forall($1.addcode.bhs, function() { /*1110*/
				var _3E = $k[--$j]; /*1110*/
				$k[$j++] = _3E - 0.075; /*1110*/
			}); /*1110*/
			$1.bhs = $a(); /*1110*/
			$k[$j++] = Infinity; /*1111*/
			$aload($1.bbs); /*1111*/
			$forall($1.addcode.bbs, function() { /*1111*/
				var _3J = $k[--$j]; /*1111*/
				$k[$j++] = _3J + 0.075; /*1111*/
			}); /*1111*/
			$1.bbs = $a(); /*1111*/
			$k[$j++] = Infinity; /*1112*/
			$aload($1.txt); /*1112*/
			$aload($1.addcode.txt); /*1112*/
			$1.txt = $a(); /*1112*/
			$1.guardrightypos = ($1.height * 72) - 6; /*1113*/
		} /*1113*/
		var _3W = {
			ren: $0.renlinear,
			sbs: $1.sbs,
			bhs: $1.bhs,
			bbs: $1.bbs,
			txt: $1.txt,
			opt: $1.options,
			guardrightpos: 10,
			guardrightypos: $1.guardrightypos,
			borderbottom: 5
		}; /*1126*/
		$k[$j++] = _3W; /*1129*/
		if (!$1.dontdraw) { /*1129*/
			$0.renlinear(); /*1129*/
		} /*1129*/
	};
	$0.ean8 = function() {
		var $1 = {}; /*1158*/
		$1.options = $k[--$j]; /*1160*/
		$1.barcode = $k[--$j]; /*1161*/
		$1.dontdraw = false; /*1163*/
		$1.includetext = false; /*1164*/
		$1.textfont = "Helvetica"; /*1165*/
		$1.textsize = 12; /*1166*/
		$1.textxoffset = 4; /*1167*/
		$1.textyoffset = -4.5; /*1168*/
		$1.height = 1; /*1169*/
		$1.addongap = 12; /*1170*/
		$1.addontextfont = "unset"; /*1171*/
		$1.addontextsize = "unset"; /*1172*/
		$1.addontextxoffset = "unset"; /*1173*/
		$1.addontextyoffset = "unset"; /*1174*/
		$forall($1.options, function() { /*1185*/
			var _3 = $k[--$j]; /*1185*/
			$1[$k[--$j]] = _3; /*1185*/
		}); /*1185*/
		$1.textfont = "" + $1.textfont; /*1187*/
		$1.textsize = +$1.textsize; /*1188*/
		$1.textxoffset = +$1.textxoffset; /*1189*/
		$1.textyoffset = +$1.textyoffset; /*1190*/
		$1.height = +$1.height; /*1191*/
		$1.addongap = +$1.addongap; /*1192*/
		if ($ne($1.addontextfont, "unset")) { /*1193*/
			$1.addontextfont = "" + $1.addontextfont; /*1193*/
		} /*1193*/
		if ($ne($1.addontextsize, "unset")) { /*1194*/
			$1.addontextsize = +$1.addontextsize; /*1194*/
		} /*1194*/
		if ($ne($1.addontextxoffset, "unset")) { /*1195*/
			$1.addontextxoffset = +$1.addontextxoffset; /*1195*/
		} /*1195*/
		if ($ne($1.addontextyoffset, "unset")) { /*1196*/
			$1.addontextyoffset = +$1.addontextyoffset; /*1196*/
		} /*1196*/
		$search($1.barcode, " "); /*1199*/
		if ($k[--$j]) { /*1205*/
			$1.barcode = $k[--$j]; /*1200*/
			$j--; /*1201*/
			$1.addon = $k[--$j]; /*1202*/
		} else { /*1205*/
			$j--; /*1204*/
			$1.addon = ""; /*1205*/
		} /*1205*/
		if (($1.barcode.length != 7) && ($1.barcode.length != 8)) { /*1211*/
			$k[$j++] = "bwipp.ean8badLength"; /*1210*/
			$k[$j++] = "EAN-8 must be 7 or 8 digits"; /*1210*/
			$0.raiseerror(); /*1210*/
		} /*1210*/
		$forall($1.barcode, function() { /*1216*/
			var _Q = $k[--$j]; /*1213*/
			if ((_Q < 48) || (_Q > 57)) { /*1215*/
				$k[$j++] = "bwipp.ean8badCharacter"; /*1214*/
				$k[$j++] = "EAN-8 must contain only digits"; /*1214*/
				$0.raiseerror(); /*1214*/
			} /*1214*/
		}); /*1214*/
		if ((($1.addon.length != 0) && ($1.addon.length != 2)) && ($1.addon.length != 5)) { /*1219*/
			$k[$j++] = "bwipp.ean8badAddOnLength"; /*1218*/
			$k[$j++] = "Add-on for EAN-8 must be 2 or 5 digits"; /*1218*/
			$0.raiseerror(); /*1218*/
		} /*1218*/
		$1.pad = $s(8); /*1222*/
		$1.checksum = 0; /*1223*/
		for (var _V = 0; _V <= 6; _V += 1) { /*1232*/
			$1.i = _V; /*1225*/
			$1.barchar = $get($1.barcode, $1.i) - 48; /*1226*/
			if (($1.i % 2) != 0) { /*1230*/
				$1.checksum = $1.barchar + $1.checksum; /*1228*/
			} else { /*1230*/
				$1.checksum = ($1.barchar * 3) + $1.checksum; /*1230*/
			} /*1230*/
		} /*1230*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*1233*/
		if ($1.barcode.length == 8) { /*1238*/
			if ($get($1.barcode, 7) != ($1.checksum + 48)) { /*1237*/
				$k[$j++] = "bwipp.ean8badCheckDigit"; /*1236*/
				$k[$j++] = "Incorrect EAN-8 check digit provided"; /*1236*/
				$0.raiseerror(); /*1236*/
			} /*1236*/
		} /*1236*/
		$puti($1.pad, 0, $1.barcode); /*1239*/
		$put($1.pad, 7, $1.checksum + 48); /*1240*/
		$1.barcode = $1.pad; /*1241*/
		$1.encs = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "1312", "1213", "3112", "111", "11111", "111"]); /*1248*/
		$1.barchars = "0123456789"; /*1251*/
		$1.sbs = $s(43); /*1253*/
		$1.txt = $a(8); /*1254*/
		$puti($1.sbs, 0, $get($1.encs, 10)); /*1257*/
		for (var _u = 0; _u <= 3; _u += 1) { /*1270*/
			$1.i = _u; /*1262*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*1263*/
			$j--; /*1264*/
			$1.indx = $k[--$j].length; /*1265*/
			$j -= 2; /*1266*/
			$1.enc = $get($1.encs, $1.indx); /*1267*/
			$puti($1.sbs, ($1.i * 4) + 3, $1.enc); /*1268*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ($1.i * 7) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*1269*/
		} /*1269*/
		$puti($1.sbs, (4 * 4) + 3, $get($1.encs, 11)); /*1273*/
		for (var _1K = 4; _1K <= 7; _1K += 1) { /*1286*/
			$1.i = _1K; /*1278*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*1279*/
			$j--; /*1280*/
			$1.indx = $k[--$j].length; /*1281*/
			$j -= 2; /*1282*/
			$1.enc = $get($1.encs, $1.indx); /*1283*/
			$puti($1.sbs, ($1.i * 4) + 8, $1.enc); /*1284*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), (($1.i * 7) + $1.textxoffset) + 4, $1.textyoffset, $1.textfont, $1.textsize])); /*1285*/
		} /*1285*/
		$puti($1.sbs, 40, $get($1.encs, 12)); /*1289*/
		$k[$j++] = Infinity; /*1291*/
		var _1k = $1.sbs; /*1291*/
		for (var _1l = 0, _1m = _1k.length; _1l < _1m; _1l++) { /*1291*/
			$k[$j++] = $get(_1k, _1l) - 48; /*1291*/
		} /*1291*/
		$1.sbs = $a(); /*1291*/
		if ($1.includetext) { /*1298*/
			$k[$j++] = Infinity; /*1293*/
			$k[$j++] = $1.height; /*1293*/
			$k[$j++] = $1.height; /*1293*/
			for (var _1s = 0, _1t = 8; _1s < _1t; _1s++) { /*1293*/
				$k[$j++] = $1.height - 0.075; /*1293*/
			} /*1293*/
			$k[$j++] = $1.height; /*1293*/
			$k[$j++] = $1.height; /*1293*/
			for (var _1x = 0, _1y = 8; _1x < _1y; _1x++) { /*1293*/
				$k[$j++] = $1.height - 0.075; /*1293*/
			} /*1293*/
			$k[$j++] = $1.height; /*1293*/
			$k[$j++] = $1.height; /*1293*/
			$1.bhs = $a(); /*1293*/
			$k[$j++] = Infinity; /*1294*/
			$k[$j++] = 0; /*1294*/
			$k[$j++] = 0; /*1294*/
			for (var _23 = 0, _24 = 8; _23 < _24; _23++) { /*1294*/
				$k[$j++] = 0.075; /*1294*/
			} /*1294*/
			$k[$j++] = 0; /*1294*/
			$k[$j++] = 0; /*1294*/
			for (var _25 = 0, _26 = 8; _25 < _26; _25++) { /*1294*/
				$k[$j++] = 0.075; /*1294*/
			} /*1294*/
			$k[$j++] = 0; /*1294*/
			$k[$j++] = 0; /*1294*/
			$1.bbs = $a(); /*1294*/
		} else { /*1298*/
			$k[$j++] = Infinity; /*1296*/
			for (var _28 = 0, _29 = 22; _28 < _29; _28++) { /*1296*/
				$k[$j++] = $1.height; /*1296*/
			} /*1296*/
			$1.bhs = $a(); /*1296*/
			$k[$j++] = Infinity; /*1297*/
			for (var _2C = 0, _2D = 22; _2C < _2D; _2C++) { /*1297*/
				$k[$j++] = 0; /*1297*/
			} /*1297*/
			$1.bbs = $a(); /*1297*/
			$1.txt = $a([]); /*1298*/
		} /*1298*/
		$1.guardrightypos = 0; /*1300*/
		if ($ne($1.addon, "")) { /*1321*/
			$k[$j++] = "addopts"; /*1311*/
			$k[$j++] = Infinity; /*1311*/
			$k[$j++] = "dontdraw"; /*1308*/
			$k[$j++] = true; /*1308*/
			$k[$j++] = "includetext"; /*1308*/
			$k[$j++] = true; /*1308*/
			$k[$j++] = "height"; /*1308*/
			$k[$j++] = $1.height - 0.15; /*1308*/
			$k[$j++] = "textxoffset"; /*1308*/
			if ($1.addontextxoffset != "unset") { /*1308*/
				$k[$j++] = $1.addontextxoffset; /*1308*/
			} else { /*1308*/
				$k[$j++] = 67 + $1.addongap; /*1308*/
			} /*1308*/
			if ($1.addontextyoffset != "unset") { /*1309*/
				$k[$j++] = "textyoffset"; /*1309*/
				$k[$j++] = $1.addontextyoffset; /*1309*/
			} /*1309*/
			$k[$j++] = "textsize"; /*1310*/
			if ($1.addontextsize != "unset") { /*1310*/
				$k[$j++] = $1.addontextsize; /*1310*/
			} else { /*1310*/
				$k[$j++] = $1.textsize; /*1310*/
			} /*1310*/
			$k[$j++] = "textfont"; /*1311*/
			if ($ne($1.addontextfont, "unset")) { /*1311*/
				$k[$j++] = $1.addontextfont; /*1311*/
			} else { /*1311*/
				$k[$j++] = $1.textfont; /*1311*/
			} /*1311*/
			var _2T = $d(); /*1311*/
			$1[$k[--$j]] = _2T; /*1312*/
			if ($1.addon.length == 2) { /*1313*/
				$k[$j++] = $1.addon; /*1313*/
				$k[$j++] = $1.addopts; /*1313*/
				$0.ean2(); /*1313*/
			} /*1313*/
			if ($1.addon.length == 5) { /*1314*/
				$k[$j++] = $1.addon; /*1314*/
				$k[$j++] = $1.addopts; /*1314*/
				$0.ean5(); /*1314*/
			} /*1314*/
			$1.addcode = $k[--$j]; /*1315*/
			$k[$j++] = Infinity; /*1316*/
			$aload($1.sbs); /*1316*/
			$k[$j++] = $1.addongap; /*1316*/
			$aload($1.addcode.sbs); /*1316*/
			$1.sbs = $a(); /*1316*/
			$k[$j++] = Infinity; /*1317*/
			$aload($1.bhs); /*1317*/
			$forall($1.addcode.bhs, function() { /*1317*/
				var _2k = $k[--$j]; /*1317*/
				$k[$j++] = _2k - 0.075; /*1317*/
			}); /*1317*/
			$1.bhs = $a(); /*1317*/
			$k[$j++] = Infinity; /*1318*/
			$aload($1.bbs); /*1318*/
			$forall($1.addcode.bbs, function() { /*1318*/
				var _2p = $k[--$j]; /*1318*/
				$k[$j++] = _2p + 0.075; /*1318*/
			}); /*1318*/
			$1.bbs = $a(); /*1318*/
			$k[$j++] = Infinity; /*1319*/
			$aload($1.txt); /*1319*/
			$aload($1.addcode.txt); /*1319*/
			$1.txt = $a(); /*1319*/
			$1.guardrightypos = ($1.height * 72) - 6; /*1320*/
		} /*1320*/
		var _32 = {
			ren: $0.renlinear,
			sbs: $1.sbs,
			bhs: $1.bhs,
			bbs: $1.bbs,
			txt: $1.txt,
			opt: $1.options,
			guardleftpos: 10,
			guardrightpos: 10,
			guardrightypos: $1.guardrightypos,
			borderbottom: 5
		}; /*1334*/
		$k[$j++] = _32; /*1337*/
		if (!$1.dontdraw) { /*1337*/
			$0.renlinear(); /*1337*/
		} /*1337*/
	};
	$0.upca = function() {
		var $1 = {}; /*1366*/
		$1.options = $k[--$j]; /*1368*/
		$1.barcode = $k[--$j]; /*1369*/
		$1.dontdraw = false; /*1371*/
		$1.includetext = false; /*1372*/
		$1.textfont = "Helvetica"; /*1373*/
		$1.textsize = 12; /*1374*/
		$1.textxoffset = -7; /*1375*/
		$1.textyoffset = -4.5; /*1376*/
		$1.height = 1; /*1377*/
		$1.addongap = 12; /*1378*/
		$1.addontextfont = "unset"; /*1379*/
		$1.addontextsize = "unset"; /*1380*/
		$1.addontextxoffset = "unset"; /*1381*/
		$1.addontextyoffset = "unset"; /*1382*/
		$forall($1.options, function() { /*1393*/
			var _3 = $k[--$j]; /*1393*/
			$1[$k[--$j]] = _3; /*1393*/
		}); /*1393*/
		$1.textfont = "" + $1.textfont; /*1395*/
		$1.textsize = +$1.textsize; /*1396*/
		$1.textxoffset = +$1.textxoffset; /*1397*/
		$1.textyoffset = +$1.textyoffset; /*1398*/
		$1.height = +$1.height; /*1399*/
		$1.addongap = +$1.addongap; /*1400*/
		if ($ne($1.addontextfont, "unset")) { /*1401*/
			$1.addontextfont = "" + $1.addontextfont; /*1401*/
		} /*1401*/
		if ($ne($1.addontextsize, "unset")) { /*1402*/
			$1.addontextsize = +$1.addontextsize; /*1402*/
		} /*1402*/
		if ($ne($1.addontextxoffset, "unset")) { /*1403*/
			$1.addontextxoffset = +$1.addontextxoffset; /*1403*/
		} /*1403*/
		if ($ne($1.addontextyoffset, "unset")) { /*1404*/
			$1.addontextyoffset = +$1.addontextyoffset; /*1404*/
		} /*1404*/
		$search($1.barcode, " "); /*1407*/
		if ($k[--$j]) { /*1413*/
			$1.barcode = $k[--$j]; /*1408*/
			$j--; /*1409*/
			$1.addon = $k[--$j]; /*1410*/
		} else { /*1413*/
			$j--; /*1412*/
			$1.addon = ""; /*1413*/
		} /*1413*/
		if (($1.barcode.length == 7) || ($1.barcode.length == 8)) { /*1459*/
			$forall($1.barcode, function() { /*1423*/
				var _Q = $k[--$j]; /*1420*/
				if ((_Q < 48) || (_Q > 57)) { /*1422*/
					$k[$j++] = "bwipp.upcAupcEbadCharacter"; /*1421*/
					$k[$j++] = "UPC-E must contain only digits"; /*1421*/
					$0.raiseerror(); /*1421*/
				} /*1421*/
			}); /*1421*/
			var _S = $get($1.barcode, 0); /*1424*/
			if ((_S != 48) && (_S != 49)) { /*1426*/
				$k[$j++] = "bwipp.upcAupcEbadNumberSystem"; /*1425*/
				$k[$j++] = "UPC-E must have number system 0 or 1"; /*1425*/
				$0.raiseerror(); /*1425*/
			} /*1425*/
			for (var _T = 0, _U = 1; _T < _U; _T++) { /*1454*/
				var _W = ($1.barcode.length == 8) ? 12 : 11; /*1428*/
				$1.upcacode = $s(_W); /*1428*/
				if (($get($1.barcode, 6) - 48) <= 2) { /*1435*/
					$puti($1.upcacode, 0, $geti($1.barcode, 0, 3)); /*1430*/
					$puti($1.upcacode, 3, $geti($1.barcode, 6, 1)); /*1431*/
					$puti($1.upcacode, 4, "0000"); /*1432*/
					$puti($1.upcacode, 8, $geti($1.barcode, 3, 3)); /*1433*/
					break; /*1434*/
				} /*1434*/
				if (($get($1.barcode, 6) - 48) == 3) { /*1441*/
					$puti($1.upcacode, 0, $geti($1.barcode, 0, 4)); /*1437*/
					$puti($1.upcacode, 4, "00000"); /*1438*/
					$puti($1.upcacode, 9, $geti($1.barcode, 4, 2)); /*1439*/
					break; /*1440*/
				} /*1440*/
				if (($get($1.barcode, 6) - 48) == 4) { /*1447*/
					$puti($1.upcacode, 0, $geti($1.barcode, 0, 5)); /*1443*/
					$puti($1.upcacode, 5, "00000"); /*1444*/
					$puti($1.upcacode, 10, $geti($1.barcode, 5, 1)); /*1445*/
					break; /*1446*/
				} /*1446*/
				if (($get($1.barcode, 6) - 48) >= 5) { /*1453*/
					$puti($1.upcacode, 0, $geti($1.barcode, 0, 6)); /*1449*/
					$puti($1.upcacode, 6, "0000"); /*1450*/
					$puti($1.upcacode, 10, $geti($1.barcode, 6, 1)); /*1451*/
					break; /*1452*/
				} /*1452*/
			} /*1452*/
			if ($1.barcode.length == 8) { /*1457*/
				$puti($1.upcacode, 11, $geti($1.barcode, 7, 1)); /*1456*/
			} /*1456*/
			$1.barcode = $1.upcacode; /*1458*/
		} /*1458*/
		if (($1.barcode.length != 11) && ($1.barcode.length != 12)) { /*1464*/
			$k[$j++] = "bwipp.upcAbadLength"; /*1463*/
			$k[$j++] = "UPC-A must be 11 or 12 digits"; /*1463*/
			$0.raiseerror(); /*1463*/
		} /*1463*/
		var _1I = $1.barcode; /*1465*/
		for (var _1J = 0, _1K = _1I.length; _1J < _1K; _1J++) { /*1469*/
			var _1L = $get(_1I, _1J); /*1469*/
			if ((_1L < 48) || (_1L > 57)) { /*1468*/
				$k[$j++] = "bwipp.upcAbadCharacter"; /*1467*/
				$k[$j++] = "UPC-A must contain only digits"; /*1467*/
				$0.raiseerror(); /*1467*/
			} /*1467*/
		} /*1467*/
		if ((($1.addon.length != 0) && ($1.addon.length != 2)) && ($1.addon.length != 5)) { /*1472*/
			$k[$j++] = "bwipp.upcAbadAddOnLength"; /*1471*/
			$k[$j++] = "Add-on for UPC-A must be 2 or 5 digits"; /*1471*/
			$0.raiseerror(); /*1471*/
		} /*1471*/
		$1.pad = $s(12); /*1475*/
		$1.checksum = 0; /*1476*/
		for (var _1Q = 0; _1Q <= 10; _1Q += 1) { /*1485*/
			$1.i = _1Q; /*1478*/
			$1.barchar = $get($1.barcode, $1.i) - 48; /*1479*/
			if (($1.i % 2) != 0) { /*1483*/
				$1.checksum = $1.checksum + $1.barchar; /*1481*/
			} else { /*1483*/
				$1.checksum = $1.checksum + ($1.barchar * 3); /*1483*/
			} /*1483*/
		} /*1483*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*1486*/
		if ($1.barcode.length == 12) { /*1491*/
			if ($get($1.barcode, 11) != ($1.checksum + 48)) { /*1490*/
				$k[$j++] = "bwipp.upcAbadCheckDigit"; /*1489*/
				$k[$j++] = "Incorrect UPC check digit provided"; /*1489*/
				$0.raiseerror(); /*1489*/
			} /*1489*/
		} /*1489*/
		$puti($1.pad, 0, $1.barcode); /*1492*/
		$put($1.pad, 11, $1.checksum + 48); /*1493*/
		$1.barcode = $1.pad; /*1494*/
		$1.encs = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "1312", "1213", "3112", "111", "11111", "111"]); /*1501*/
		$1.barchars = "0123456789"; /*1504*/
		$1.sbs = $s(59); /*1506*/
		$1.txt = $a(12); /*1507*/
		$puti($1.sbs, 0, $get($1.encs, 10)); /*1510*/
		for (var _1p = 0; _1p <= 5; _1p += 1) { /*1527*/
			$1.i = _1p; /*1515*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*1516*/
			$j--; /*1517*/
			$1.indx = $k[--$j].length; /*1518*/
			$j -= 2; /*1519*/
			$1.enc = $get($1.encs, $1.indx); /*1520*/
			$puti($1.sbs, ($1.i * 4) + 3, $1.enc); /*1521*/
			if ($1.i == 0) { /*1525*/
				$put($1.txt, 0, $a([$geti($1.barcode, 0, 1), $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize - 2])); /*1523*/
			} else { /*1525*/
				$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), (($1.i * 7) + 11) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*1525*/
			} /*1525*/
		} /*1525*/
		$puti($1.sbs, (6 * 4) + 3, $get($1.encs, 11)); /*1530*/
		for (var _2O = 6; _2O <= 11; _2O += 1) { /*1547*/
			$1.i = _2O; /*1535*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*1536*/
			$j--; /*1537*/
			$1.indx = $k[--$j].length; /*1538*/
			$j -= 2; /*1539*/
			$1.enc = $get($1.encs, $1.indx); /*1540*/
			$puti($1.sbs, ($1.i * 4) + 8, $1.enc); /*1541*/
			if ($1.i == 11) { /*1545*/
				$put($1.txt, 11, $a([$geti($1.barcode, 11, 1), $1.textxoffset + 103, $1.textyoffset, $1.textfont, $1.textsize - 2])); /*1543*/
			} else { /*1545*/
				$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), (($1.i * 7) + $1.textxoffset) + 15, $1.textyoffset, $1.textfont, $1.textsize])); /*1545*/
			} /*1545*/
		} /*1545*/
		$puti($1.sbs, 56, $get($1.encs, 12)); /*1550*/
		$k[$j++] = Infinity; /*1552*/
		var _2x = $1.sbs; /*1552*/
		for (var _2y = 0, _2z = _2x.length; _2y < _2z; _2y++) { /*1552*/
			$k[$j++] = $get(_2x, _2y) - 48; /*1552*/
		} /*1552*/
		$1.sbs = $a(); /*1552*/
		if ($1.includetext) { /*1559*/
			$k[$j++] = Infinity; /*1554*/
			for (var _33 = 0, _34 = 4; _33 < _34; _33++) { /*1554*/
				$k[$j++] = $1.height; /*1554*/
			} /*1554*/
			for (var _36 = 0, _37 = 10; _36 < _37; _36++) { /*1554*/
				$k[$j++] = $1.height - 0.075; /*1554*/
			} /*1554*/
			$k[$j++] = $1.height; /*1554*/
			$k[$j++] = $1.height; /*1554*/
			for (var _3B = 0, _3C = 10; _3B < _3C; _3B++) { /*1554*/
				$k[$j++] = $1.height - 0.075; /*1554*/
			} /*1554*/
			for (var _3E = 0, _3F = 4; _3E < _3F; _3E++) { /*1554*/
				$k[$j++] = $1.height; /*1554*/
			} /*1554*/
			$1.bhs = $a(); /*1554*/
			$k[$j++] = Infinity; /*1555*/
			$k[$j++] = 0; /*1555*/
			$k[$j++] = 0; /*1555*/
			$k[$j++] = 0; /*1555*/
			$k[$j++] = 0; /*1555*/
			for (var _3I = 0, _3J = 10; _3I < _3J; _3I++) { /*1555*/
				$k[$j++] = 0.075; /*1555*/
			} /*1555*/
			$k[$j++] = 0; /*1555*/
			$k[$j++] = 0; /*1555*/
			for (var _3K = 0, _3L = 10; _3K < _3L; _3K++) { /*1555*/
				$k[$j++] = 0.075; /*1555*/
			} /*1555*/
			$k[$j++] = 0; /*1555*/
			$k[$j++] = 0; /*1555*/
			$k[$j++] = 0; /*1555*/
			$k[$j++] = 0; /*1555*/
			$1.bbs = $a(); /*1555*/
		} else { /*1559*/
			$k[$j++] = Infinity; /*1557*/
			for (var _3N = 0, _3O = 30; _3N < _3O; _3N++) { /*1557*/
				$k[$j++] = $1.height; /*1557*/
			} /*1557*/
			$1.bhs = $a(); /*1557*/
			$k[$j++] = Infinity; /*1558*/
			for (var _3R = 0, _3S = 30; _3R < _3S; _3R++) { /*1558*/
				$k[$j++] = 0; /*1558*/
			} /*1558*/
			$1.bbs = $a(); /*1558*/
			$1.txt = $a([]); /*1559*/
		} /*1559*/
		$1.guardrightypos = 0; /*1561*/
		if ($ne($1.addon, "")) { /*1582*/
			$k[$j++] = "addopts"; /*1572*/
			$k[$j++] = Infinity; /*1572*/
			$k[$j++] = "dontdraw"; /*1569*/
			$k[$j++] = true; /*1569*/
			$k[$j++] = "includetext"; /*1569*/
			$k[$j++] = true; /*1569*/
			$k[$j++] = "height"; /*1569*/
			$k[$j++] = $1.height - 0.15; /*1569*/
			$k[$j++] = "textxoffset"; /*1569*/
			if ($1.addontextxoffset != "unset") { /*1569*/
				$k[$j++] = $1.addontextxoffset; /*1569*/
			} else { /*1569*/
				$k[$j++] = 95 + $1.addongap; /*1569*/
			} /*1569*/
			if ($1.addontextyoffset != "unset") { /*1570*/
				$k[$j++] = "textyoffset"; /*1570*/
				$k[$j++] = $1.addontextyoffset; /*1570*/
			} /*1570*/
			$k[$j++] = "textsize"; /*1571*/
			if ($1.addontextsize != "unset") { /*1571*/
				$k[$j++] = $1.addontextsize; /*1571*/
			} else { /*1571*/
				$k[$j++] = $1.textsize; /*1571*/
			} /*1571*/
			$k[$j++] = "textfont"; /*1572*/
			if ($ne($1.addontextfont, "unset")) { /*1572*/
				$k[$j++] = $1.addontextfont; /*1572*/
			} else { /*1572*/
				$k[$j++] = $1.textfont; /*1572*/
			} /*1572*/
			var _3i = $d(); /*1572*/
			$1[$k[--$j]] = _3i; /*1573*/
			if ($1.addon.length == 2) { /*1574*/
				$k[$j++] = $1.addon; /*1574*/
				$k[$j++] = $1.addopts; /*1574*/
				$0.ean2(); /*1574*/
			} /*1574*/
			if ($1.addon.length == 5) { /*1575*/
				$k[$j++] = $1.addon; /*1575*/
				$k[$j++] = $1.addopts; /*1575*/
				$0.ean5(); /*1575*/
			} /*1575*/
			$1.addcode = $k[--$j]; /*1576*/
			$k[$j++] = Infinity; /*1577*/
			$aload($1.sbs); /*1577*/
			$k[$j++] = $1.addongap; /*1577*/
			$aload($1.addcode.sbs); /*1577*/
			$1.sbs = $a(); /*1577*/
			$k[$j++] = Infinity; /*1578*/
			$aload($1.bhs); /*1578*/
			$forall($1.addcode.bhs, function() { /*1578*/
				var _3z = $k[--$j]; /*1578*/
				$k[$j++] = _3z - 0.075; /*1578*/
			}); /*1578*/
			$1.bhs = $a(); /*1578*/
			$k[$j++] = Infinity; /*1579*/
			$aload($1.bbs); /*1579*/
			$forall($1.addcode.bbs, function() { /*1579*/
				var _44 = $k[--$j]; /*1579*/
				$k[$j++] = _44 + 0.075; /*1579*/
			}); /*1579*/
			$1.bbs = $a(); /*1579*/
			$k[$j++] = Infinity; /*1580*/
			$aload($1.txt); /*1580*/
			$aload($1.addcode.txt); /*1580*/
			$1.txt = $a(); /*1580*/
			$1.guardrightypos = ($1.height * 72) - 6; /*1581*/
		} /*1581*/
		var _4H = {
			ren: $0.renlinear,
			sbs: $1.sbs,
			bhs: $1.bhs,
			bbs: $1.bbs,
			txt: $1.txt,
			opt: $1.options,
			guardrightpos: 10,
			guardrightypos: $1.guardrightypos,
			borderbottom: 5
		}; /*1594*/
		$k[$j++] = _4H; /*1597*/
		if (!$1.dontdraw) { /*1597*/
			$0.renlinear(); /*1597*/
		} /*1597*/
	};
	$0.upce = function() {
		var $1 = {}; /*1626*/
		$1.options = $k[--$j]; /*1628*/
		$1.barcode = $k[--$j]; /*1629*/
		$1.dontdraw = false; /*1631*/
		$1.includetext = false; /*1632*/
		$1.textfont = "Helvetica"; /*1633*/
		$1.textsize = 12; /*1634*/
		$1.textxoffset = -7; /*1635*/
		$1.textyoffset = -4.5; /*1636*/
		$1.height = 1; /*1637*/
		$1.addongap = 12; /*1638*/
		$1.addontextfont = "unset"; /*1639*/
		$1.addontextsize = "unset"; /*1640*/
		$1.addontextxoffset = "unset"; /*1641*/
		$1.addontextyoffset = "unset"; /*1642*/
		$forall($1.options, function() { /*1653*/
			var _3 = $k[--$j]; /*1653*/
			$1[$k[--$j]] = _3; /*1653*/
		}); /*1653*/
		$1.textfont = "" + $1.textfont; /*1655*/
		$1.textsize = +$1.textsize; /*1656*/
		$1.textxoffset = +$1.textxoffset; /*1657*/
		$1.textyoffset = +$1.textyoffset; /*1658*/
		$1.height = +$1.height; /*1659*/
		$1.addongap = +$1.addongap; /*1660*/
		if ($ne($1.addontextfont, "unset")) { /*1661*/
			$1.addontextfont = "" + $1.addontextfont; /*1661*/
		} /*1661*/
		if ($ne($1.addontextsize, "unset")) { /*1662*/
			$1.addontextsize = +$1.addontextsize; /*1662*/
		} /*1662*/
		if ($ne($1.addontextxoffset, "unset")) { /*1663*/
			$1.addontextxoffset = +$1.addontextxoffset; /*1663*/
		} /*1663*/
		if ($ne($1.addontextyoffset, "unset")) { /*1664*/
			$1.addontextyoffset = +$1.addontextyoffset; /*1664*/
		} /*1664*/
		$search($1.barcode, " "); /*1667*/
		if ($k[--$j]) { /*1673*/
			$1.barcode = $k[--$j]; /*1668*/
			$j--; /*1669*/
			$1.addon = $k[--$j]; /*1670*/
		} else { /*1673*/
			$j--; /*1672*/
			$1.addon = ""; /*1673*/
		} /*1673*/
		if (($1.barcode.length == 11) || ($1.barcode.length == 12)) { /*1715*/
			$forall($1.barcode, function() { /*1683*/
				var _Q = $k[--$j]; /*1680*/
				if ((_Q < 48) || (_Q > 57)) { /*1682*/
					$k[$j++] = "bwipp.upcEupcAbadCharacter"; /*1681*/
					$k[$j++] = "UPC-A must contain only digits"; /*1681*/
					$0.raiseerror(); /*1681*/
				} /*1681*/
			}); /*1681*/
			for (var _R = 0, _S = 1; _R < _S; _R++) { /*1710*/
				var _U = ($1.barcode.length == 12) ? 8 : 7; /*1685*/
				$1.upcecode = $s(_U); /*1685*/
				if ((($get($1.barcode, 3) - 48) <= 2) && $eq($geti($1.barcode, 4, 4), "0000")) { /*1691*/
					$puti($1.upcecode, 0, $geti($1.barcode, 0, 3)); /*1687*/
					$puti($1.upcecode, 3, $geti($1.barcode, 8, 3)); /*1688*/
					$puti($1.upcecode, 6, $geti($1.barcode, 3, 1)); /*1689*/
					break; /*1690*/
				} /*1690*/
				if ($eq($geti($1.barcode, 4, 5), "00000")) { /*1697*/
					$puti($1.upcecode, 0, $geti($1.barcode, 0, 4)); /*1693*/
					$puti($1.upcecode, 4, $geti($1.barcode, 9, 2)); /*1694*/
					$puti($1.upcecode, 6, "3"); /*1695*/
					break; /*1696*/
				} /*1696*/
				if ($eq($geti($1.barcode, 5, 5), "00000")) { /*1703*/
					$puti($1.upcecode, 0, $geti($1.barcode, 0, 5)); /*1699*/
					$puti($1.upcecode, 5, $geti($1.barcode, 10, 1)); /*1700*/
					$puti($1.upcecode, 6, "4"); /*1701*/
					break; /*1702*/
				} /*1702*/
				if ((($get($1.barcode, 10) - 48) >= 5) && $eq($geti($1.barcode, 6, 4), "0000")) { /*1708*/
					$puti($1.upcecode, 0, $geti($1.barcode, 0, 6)); /*1705*/
					$puti($1.upcecode, 6, $geti($1.barcode, 10, 1)); /*1706*/
					break; /*1707*/
				} /*1707*/
				$k[$j++] = "bwipp.upcEupcAnotCompressible"; /*1709*/
				$k[$j++] = "UPC-A cannot be converted to a UPC-E"; /*1709*/
				$0.raiseerror(); /*1709*/
			} /*1709*/
			if ($1.barcode.length == 12) { /*1713*/
				$puti($1.upcecode, 7, $geti($1.barcode, 11, 1)); /*1712*/
			} /*1712*/
			$1.barcode = $1.upcecode; /*1714*/
		} /*1714*/
		if (($1.barcode.length != 7) && ($1.barcode.length != 8)) { /*1720*/
			$k[$j++] = "bwipp.upcEbadLength"; /*1719*/
			$k[$j++] = "UPC-E must be 7 or 8 digits"; /*1719*/
			$0.raiseerror(); /*1719*/
		} /*1719*/
		var _1I = $1.barcode; /*1721*/
		for (var _1J = 0, _1K = _1I.length; _1J < _1K; _1J++) { /*1725*/
			var _1L = $get(_1I, _1J); /*1725*/
			if ((_1L < 48) || (_1L > 57)) { /*1724*/
				$k[$j++] = "bwipp.upcEbadCharacter"; /*1723*/
				$k[$j++] = "UPC-E must contain only digits"; /*1723*/
				$0.raiseerror(); /*1723*/
			} /*1723*/
		} /*1723*/
		if ((($1.addon.length != 0) && ($1.addon.length != 2)) && ($1.addon.length != 5)) { /*1728*/
			$k[$j++] = "bwipp.upcEbadAddOnLength"; /*1727*/
			$k[$j++] = "Add-on for UPC-E must be 2 or 5 digits"; /*1727*/
			$0.raiseerror(); /*1727*/
		} /*1727*/
		var _1Q = $get($1.barcode, 0); /*1731*/
		if ((_1Q != 48) && (_1Q != 49)) { /*1733*/
			$k[$j++] = "bwipp.upcEbadNumberSystem"; /*1732*/
			$k[$j++] = "UPC-E must have number system 0 or 1"; /*1732*/
			$0.raiseerror(); /*1732*/
		} /*1732*/
		$1.encs = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "1312", "1213", "3112", "111", "111111"]); /*1740*/
		$1.barchars = "0123456789"; /*1743*/
		$1.mirrormaps = $a(["000111", "001011", "001101", "001110", "010011", "011001", "011100", "010101", "010110", "011010"]); /*1748*/
		for (var _1T = 0, _1U = 1; _1T < _1U; _1T++) { /*1778*/
			$1.upcacode = $s(11); /*1752*/
			if (($get($1.barcode, 6) - 48) <= 2) { /*1759*/
				$puti($1.upcacode, 0, $geti($1.barcode, 0, 3)); /*1754*/
				$puti($1.upcacode, 3, $geti($1.barcode, 6, 1)); /*1755*/
				$puti($1.upcacode, 4, "0000"); /*1756*/
				$puti($1.upcacode, 8, $geti($1.barcode, 3, 3)); /*1757*/
				break; /*1758*/
			} /*1758*/
			if (($get($1.barcode, 6) - 48) == 3) { /*1765*/
				$puti($1.upcacode, 0, $geti($1.barcode, 0, 4)); /*1761*/
				$puti($1.upcacode, 4, "00000"); /*1762*/
				$puti($1.upcacode, 9, $geti($1.barcode, 4, 2)); /*1763*/
				break; /*1764*/
			} /*1764*/
			if (($get($1.barcode, 6) - 48) == 4) { /*1771*/
				$puti($1.upcacode, 0, $geti($1.barcode, 0, 5)); /*1767*/
				$puti($1.upcacode, 5, "00000"); /*1768*/
				$puti($1.upcacode, 10, $geti($1.barcode, 5, 1)); /*1769*/
				break; /*1770*/
			} /*1770*/
			if (($get($1.barcode, 6) - 48) >= 5) { /*1777*/
				$puti($1.upcacode, 0, $geti($1.barcode, 0, 6)); /*1773*/
				$puti($1.upcacode, 6, "0000"); /*1774*/
				$puti($1.upcacode, 10, $geti($1.barcode, 6, 1)); /*1775*/
				break; /*1776*/
			} /*1776*/
		} /*1776*/
		$1.checksum = 0; /*1779*/
		for (var _29 = 0; _29 <= 10; _29 += 1) { /*1788*/
			$1.i = _29; /*1781*/
			$1.barchar = $get($1.upcacode, $1.i) - 48; /*1782*/
			if (($1.i % 2) != 0) { /*1786*/
				$1.checksum = $1.checksum + $1.barchar; /*1784*/
			} else { /*1786*/
				$1.checksum = $1.checksum + ($1.barchar * 3); /*1786*/
			} /*1786*/
		} /*1786*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*1789*/
		if ($1.barcode.length == 8) { /*1794*/
			if ($get($1.barcode, 7) != ($1.checksum + 48)) { /*1793*/
				$k[$j++] = "bwipp.upcEbadCheckDigit"; /*1792*/
				$k[$j++] = "Incorrect UPC check digit provided"; /*1792*/
				$0.raiseerror(); /*1792*/
			} /*1792*/
		} /*1792*/
		$1.pad = $s(8); /*1795*/
		$puti($1.pad, 0, $1.barcode); /*1796*/
		$put($1.pad, 7, $1.checksum + 48); /*1797*/
		$1.barcode = $1.pad; /*1798*/
		$1.txt = $a(8); /*1799*/
		$put($1.txt, 0, $a([$geti($1.barcode, 0, 1), $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize - 2])); /*1800*/
		$1.mirrormap = $get($1.mirrormaps, $1.checksum); /*1803*/
		if ($get($1.barcode, 0) == 48) { /*1817*/
			$1.invt = $s($1.mirrormap.length); /*1807*/
			for (var _2l = 0, _2k = $1.mirrormap.length - 1; _2l <= _2k; _2l += 1) { /*1815*/
				$1.i = _2l; /*1809*/
				if ($get($1.mirrormap, $1.i) == 48) { /*1813*/
					$put($1.invt, $1.i, 49); /*1811*/
				} else { /*1813*/
					$put($1.invt, $1.i, 48); /*1813*/
				} /*1813*/
			} /*1813*/
			$1.mirrormap = $1.invt; /*1816*/
		} /*1816*/
		$1.sbs = $s(33); /*1819*/
		$puti($1.sbs, 0, $get($1.encs, 10)); /*1822*/
		for (var _2y = 1; _2y <= 6; _2y += 1) { /*1844*/
			$1.i = _2y; /*1825*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*1827*/
			$j--; /*1828*/
			$1.indx = $k[--$j].length; /*1829*/
			$j -= 2; /*1830*/
			$1.enc = $get($1.encs, $1.indx); /*1831*/
			if ($get($1.mirrormap, $1.i - 1) == 49) { /*1841*/
				$1.enclen = $1.enc.length; /*1833*/
				$1.revenc = $s($1.enclen); /*1834*/
				for (var _3F = 0, _3E = $1.enclen - 1; _3F <= _3E; _3F += 1) { /*1839*/
					$1.j = _3F; /*1836*/
					$1.char = $get($1.enc, $1.j); /*1837*/
					$put($1.revenc, ($1.enclen - $1.j) - 1, $1.char); /*1838*/
				} /*1838*/
				$1.enc = $1.revenc; /*1840*/
			} /*1840*/
			$puti($1.sbs, (($1.i - 1) * 4) + 3, $1.enc); /*1842*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ((($1.i - 1) * 7) + 11) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*1843*/
		} /*1843*/
		$put($1.txt, 7, $a([$geti($1.barcode, 7, 1), ((6 * 7) + 18) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize - 2])); /*1846*/
		$puti($1.sbs, 27, $get($1.encs, 11)); /*1849*/
		$k[$j++] = Infinity; /*1851*/
		var _3n = $1.sbs; /*1851*/
		for (var _3o = 0, _3p = _3n.length; _3o < _3p; _3o++) { /*1851*/
			$k[$j++] = $get(_3n, _3o) - 48; /*1851*/
		} /*1851*/
		$1.sbs = $a(); /*1851*/
		if ($1.includetext) { /*1858*/
			$k[$j++] = Infinity; /*1853*/
			$k[$j++] = $1.height; /*1853*/
			$k[$j++] = $1.height; /*1853*/
			for (var _3v = 0, _3w = 12; _3v < _3w; _3v++) { /*1853*/
				$k[$j++] = $1.height - 0.075; /*1853*/
			} /*1853*/
			$k[$j++] = $1.height; /*1853*/
			$k[$j++] = $1.height; /*1853*/
			$k[$j++] = $1.height; /*1853*/
			$1.bhs = $a(); /*1853*/
			$k[$j++] = Infinity; /*1854*/
			$k[$j++] = 0; /*1854*/
			$k[$j++] = 0; /*1854*/
			for (var _42 = 0, _43 = 12; _42 < _43; _42++) { /*1854*/
				$k[$j++] = 0.075; /*1854*/
			} /*1854*/
			$k[$j++] = 0; /*1854*/
			$k[$j++] = 0; /*1854*/
			$k[$j++] = 0; /*1854*/
			$1.bbs = $a(); /*1854*/
		} else { /*1858*/
			$k[$j++] = Infinity; /*1856*/
			for (var _45 = 0, _46 = 17; _45 < _46; _45++) { /*1856*/
				$k[$j++] = $1.height; /*1856*/
			} /*1856*/
			$1.bhs = $a(); /*1856*/
			$k[$j++] = Infinity; /*1857*/
			for (var _49 = 0, _4A = 17; _49 < _4A; _49++) { /*1857*/
				$k[$j++] = 0; /*1857*/
			} /*1857*/
			$1.bbs = $a(); /*1857*/
			$1.txt = $a([]); /*1858*/
		} /*1858*/
		$1.guardrightypos = 0; /*1860*/
		if ($ne($1.addon, "")) { /*1881*/
			$k[$j++] = "addopts"; /*1871*/
			$k[$j++] = Infinity; /*1871*/
			$k[$j++] = "dontdraw"; /*1868*/
			$k[$j++] = true; /*1868*/
			$k[$j++] = "includetext"; /*1868*/
			$k[$j++] = true; /*1868*/
			$k[$j++] = "height"; /*1868*/
			$k[$j++] = $1.height - 0.15; /*1868*/
			$k[$j++] = "textxoffset"; /*1868*/
			if ($1.addontextxoffset != "unset") { /*1868*/
				$k[$j++] = $1.addontextxoffset; /*1868*/
			} else { /*1868*/
				$k[$j++] = 51 + $1.addongap; /*1868*/
			} /*1868*/
			if ($1.addontextyoffset != "unset") { /*1869*/
				$k[$j++] = "textyoffset"; /*1869*/
				$k[$j++] = $1.addontextyoffset; /*1869*/
			} /*1869*/
			$k[$j++] = "textsize"; /*1870*/
			if ($1.addontextsize != "unset") { /*1870*/
				$k[$j++] = $1.addontextsize; /*1870*/
			} else { /*1870*/
				$k[$j++] = $1.textsize; /*1870*/
			} /*1870*/
			$k[$j++] = "textfont"; /*1871*/
			if ($ne($1.addontextfont, "unset")) { /*1871*/
				$k[$j++] = $1.addontextfont; /*1871*/
			} else { /*1871*/
				$k[$j++] = $1.textfont; /*1871*/
			} /*1871*/
			var _4Q = $d(); /*1871*/
			$1[$k[--$j]] = _4Q; /*1872*/
			if ($1.addon.length == 2) { /*1873*/
				$k[$j++] = $1.addon; /*1873*/
				$k[$j++] = $1.addopts; /*1873*/
				$0.ean2(); /*1873*/
			} /*1873*/
			if ($1.addon.length == 5) { /*1874*/
				$k[$j++] = $1.addon; /*1874*/
				$k[$j++] = $1.addopts; /*1874*/
				$0.ean5(); /*1874*/
			} /*1874*/
			$1.addcode = $k[--$j]; /*1875*/
			$k[$j++] = Infinity; /*1876*/
			$aload($1.sbs); /*1876*/
			$k[$j++] = $1.addongap; /*1876*/
			$aload($1.addcode.sbs); /*1876*/
			$1.sbs = $a(); /*1876*/
			$k[$j++] = Infinity; /*1877*/
			$aload($1.bhs); /*1877*/
			$forall($1.addcode.bhs, function() { /*1877*/
				var _4h = $k[--$j]; /*1877*/
				$k[$j++] = _4h - 0.075; /*1877*/
			}); /*1877*/
			$1.bhs = $a(); /*1877*/
			$k[$j++] = Infinity; /*1878*/
			$aload($1.bbs); /*1878*/
			$forall($1.addcode.bbs, function() { /*1878*/
				var _4m = $k[--$j]; /*1878*/
				$k[$j++] = _4m + 0.075; /*1878*/
			}); /*1878*/
			$1.bbs = $a(); /*1878*/
			$k[$j++] = Infinity; /*1879*/
			$aload($1.txt); /*1879*/
			$aload($1.addcode.txt); /*1879*/
			$1.txt = $a(); /*1879*/
			$1.guardrightypos = ($1.height * 72) - 6; /*1880*/
		} /*1880*/
		var _4z = {
			ren: $0.renlinear,
			sbs: $1.sbs,
			bhs: $1.bhs,
			bbs: $1.bbs,
			txt: $1.txt,
			opt: $1.options,
			guardrightpos: 10,
			guardrightypos: $1.guardrightypos,
			borderbottom: 5
		}; /*1893*/
		$k[$j++] = _4z; /*1896*/
		if (!$1.dontdraw) { /*1896*/
			$0.renlinear(); /*1896*/
		} /*1896*/
	};
	$0.isbn = function() {
		var $1 = {}; /*1924*/
		$1.options = $k[--$j]; /*1926*/
		$1.barcode = $k[--$j]; /*1927*/
		$1.dontdraw = false; /*1929*/
		$1.includetext = false; /*1930*/
		$1.isbntextfont = "OCR-A"; /*1931*/
		$1.isbntextsize = 8.5; /*1932*/
		$1.isbntextxoffset = "unset"; /*1933*/
		$1.isbntextyoffset = "unset"; /*1934*/
		$1.height = 1; /*1935*/
		$1.addongap = 12; /*1936*/
		$1.legacy = false; /*1937*/
		$forall($1.options, function() { /*1948*/
			var _3 = $k[--$j]; /*1948*/
			$1[$k[--$j]] = _3; /*1948*/
		}); /*1948*/
		$1.isbntextfont = "" + $1.isbntextfont; /*1950*/
		$1.isbntextsize = +$1.isbntextsize; /*1951*/
		if ($ne($1.isbntextxoffset, "unset")) { /*1952*/
			$1.isbntextxoffset = +$1.isbntextxoffset; /*1952*/
		} /*1952*/
		if ($ne($1.isbntextyoffset, "unset")) { /*1953*/
			$1.isbntextyoffset = +$1.isbntextyoffset; /*1953*/
		} /*1953*/
		$1.height = +$1.height; /*1954*/
		$1.addongap = +$1.addongap; /*1955*/
		$search($1.barcode, " "); /*1958*/
		if ($k[--$j]) { /*1964*/
			$1.barcode = $k[--$j]; /*1959*/
			$j--; /*1960*/
			$1.addon = $k[--$j]; /*1961*/
		} else { /*1964*/
			$j--; /*1963*/
			$1.addon = ""; /*1964*/
		} /*1964*/
		if ((($1.barcode.length != 15) && ($1.barcode.length != 17)) && (($1.barcode.length != 11) && ($1.barcode.length != 13))) { /*1971*/
			$k[$j++] = "bwipp.isbnBadLength"; /*1970*/
			$k[$j++] = "ISBN-13 must be 15 or 17 characters including dashes. ISBN-10 must be 11 or 13 characters including dashes"; /*1970*/
			$0.raiseerror(); /*1970*/
		} /*1970*/
		if ((($1.addon.length != 0) && ($1.addon.length != 2)) && ($1.addon.length != 5)) { /*1974*/
			$k[$j++] = "bwipp.isbnBadAddOnLength"; /*1973*/
			$k[$j++] = "Add-on for ISBN must be 2 or 5 digits"; /*1973*/
			$0.raiseerror(); /*1973*/
		} /*1973*/
		if ($1.barcode.length >= 15) { /*2038*/
			var _Q = $geti($1.barcode, 0, 4); /*1976*/
			if ($ne(_Q, "978-") && $ne(_Q, "979-")) { /*1978*/
				$k[$j++] = "bwipp.isbn13badPrefix"; /*1977*/
				$k[$j++] = "ISBN-13 prefix must be 978- or 979-"; /*1977*/
				$0.raiseerror(); /*1977*/
			} /*1977*/
			$1.wasdash = false; /*1979*/
			$1.numdash = 0; /*1979*/
			$1.numdigit = 0; /*1979*/
			$forall($geti($1.barcode, 5, 9), function() { /*1993*/
				var _T = $k[--$j]; /*1981*/
				$k[$j++] = _T; /*1988*/
				if (_T == 45) { /*1988*/
					if ($1.wasdash) { /*1985*/
						$k[$j++] = "bwipp.isbn13adjacentDashes"; /*1984*/
						$k[$j++] = "ISBN-13 does not permit adjacent dashes"; /*1984*/
						$0.raiseerror(); /*1984*/
					} /*1984*/
					$1.wasdash = true; /*1986*/
					$1.numdash = $1.numdash + 1; /*1987*/
				} /*1987*/
				var _W = $k[--$j]; /*1989*/
				if ((_W >= 48) && (_W <= 57)) { /*1992*/
					$1.wasdash = false; /*1990*/
					$1.numdigit = $1.numdigit + 1; /*1991*/
				} /*1991*/
			}); /*1991*/
			if (($1.numdash != 2) || ($1.numdigit != 7)) { /*1996*/
				$k[$j++] = "bwipp.isbn13numDashesDigits"; /*1995*/
				$k[$j++] = "Incorrect number of dashes and digits for ISBN-13"; /*1995*/
				$0.raiseerror(); /*1995*/
			} /*1995*/
			var _b = $get($1.barcode, 14); /*1997*/
			if ((_b < 48) || (_b > 57)) { /*1999*/
				$k[$j++] = "bwipp.isbn13character15"; /*1998*/
				$k[$j++] = "ISBN-13 character 15 must be a digit"; /*1998*/
				$0.raiseerror(); /*1998*/
			} /*1998*/
			if ($1.barcode.length == 17) { /*2007*/
				if ($ne($geti($1.barcode, 15, 1), "-")) { /*2003*/
					$k[$j++] = "bwipp.isbn13character16"; /*2002*/
					$k[$j++] = "ISBN-13 penultimate character must be a dash"; /*2002*/
					$0.raiseerror(); /*2002*/
				} /*2002*/
				var _g = $get($1.barcode, 16); /*2004*/
				if ((_g < 48) || (_g > 57)) { /*2006*/
					$k[$j++] = "bwipp.isbn13character17"; /*2005*/
					$k[$j++] = "ISBN-13 final character must be a digit"; /*2005*/
					$0.raiseerror(); /*2005*/
				} /*2005*/
			} /*2005*/
		} else { /*2038*/
			var _i = $get($1.barcode, 0); /*2009*/
			if ((_i < 48) || (_i > 57)) { /*2011*/
				$k[$j++] = "bwipp.isbn10FirstDigit"; /*2010*/
				$k[$j++] = "ISBN-10 first character must be a digit"; /*2010*/
				$0.raiseerror(); /*2010*/
			} /*2010*/
			$1.wasdash = false; /*2012*/
			$1.numdash = 0; /*2012*/
			$1.numdigit = 0; /*2012*/
			$forall($geti($1.barcode, 1, 9), function() { /*2026*/
				var _l = $k[--$j]; /*2014*/
				$k[$j++] = _l; /*2021*/
				if (_l == 45) { /*2021*/
					if ($1.wasdash) { /*2018*/
						$k[$j++] = "bwipp.isbn10adjacentDashes"; /*2017*/
						$k[$j++] = "ISBN-10 does not permit adjacent dashes"; /*2017*/
						$0.raiseerror(); /*2017*/
					} /*2017*/
					$1.wasdash = true; /*2019*/
					$1.numdash = $1.numdash + 1; /*2020*/
				} /*2020*/
				var _o = $k[--$j]; /*2022*/
				if ((_o >= 48) && (_o <= 57)) { /*2025*/
					$1.wasdash = false; /*2023*/
					$1.numdigit = $1.numdigit + 1; /*2024*/
				} /*2024*/
			}); /*2024*/
			if (($1.numdash != 2) || ($1.numdigit != 7)) { /*2029*/
				$k[$j++] = "bwipp.isbn10numDashesDigits"; /*2028*/
				$k[$j++] = "Incorrect number of dashes and digits for ISBN-10"; /*2028*/
				$0.raiseerror(); /*2028*/
			} /*2028*/
			var _t = $get($1.barcode, 10); /*2030*/
			if ((_t < 48) || (_t > 57)) { /*2032*/
				$k[$j++] = "bwipp.isbn10character11"; /*2031*/
				$k[$j++] = "ISBN-10 character 11 must be a digit"; /*2031*/
				$0.raiseerror(); /*2031*/
			} /*2031*/
			if ($1.barcode.length == 13) { /*2040*/
				if ($ne($geti($1.barcode, 11, 1), "-")) { /*2036*/
					$k[$j++] = "bwipp.isbn10character12"; /*2035*/
					$k[$j++] = "ISBN-10 penultimate character must be a dash"; /*2035*/
					$0.raiseerror(); /*2035*/
				} /*2035*/
				var _y = $get($1.barcode, 12); /*2037*/
				if (((_y < 48) || (_y > 57)) && (_y != 88)) { /*2039*/
					$k[$j++] = "bwipp.isbn10character13"; /*2038*/
					$k[$j++] = "ISBN-10 final character must be a digit or X"; /*2038*/
					$0.raiseerror(); /*2038*/
				} /*2038*/
			} /*2038*/
		} /*2038*/
		$1.isbntxt = $1.barcode; /*2043*/
		if ($1.isbntxt.length <= 13) { /*2069*/
			$1.isbn = $s(10); /*2047*/
			$1.checksum = 0; /*2048*/
			$1.i = 0; /*2049*/
			$1.n = 0; /*2049*/
			for (;;) { /*2061*/
				$1.isbnchar = $get($1.isbntxt, $1.i) - 48; /*2051*/
				if ($1.isbnchar != -3) { /*2058*/
					$put($1.isbn, $1.n, $1.isbnchar + 48); /*2053*/
					if ($1.n < 9) { /*2056*/
						$1.checksum = $1.checksum + ((10 - $1.n) * $1.isbnchar); /*2055*/
					} /*2055*/
					$1.n = $1.n + 1; /*2057*/
				} /*2057*/
				$1.i = $1.i + 1; /*2059*/
				if ($1.i == $1.isbntxt.length) { /*2060*/
					break; /*2060*/
				} /*2060*/
			} /*2060*/
			var _1I = (11 - ($1.checksum % 11)) % 11; /*2062*/
			$k[$j++] = "checksum"; /*2062*/
			$k[$j++] = _1I; /*2062*/
			if (_1I == 10) { /*2062*/
				$j--; /*2062*/
				$k[$j++] = 40; /*2062*/
			} /*2062*/
			var _1J = $k[--$j]; /*2062*/
			$1[$k[--$j]] = _1J + 48; /*2062*/
			$1.isbn = $geti($1.isbn, 0, 9); /*2063*/
			if ($1.isbntxt.length == 13) { /*2068*/
				if ($get($1.isbntxt, 12) != $1.checksum) { /*2067*/
					$k[$j++] = "bwipp.isbn10badCheckDigit"; /*2066*/
					$k[$j++] = "Incorrect ISBN-10 check digit provided"; /*2066*/
					$0.raiseerror(); /*2066*/
				} /*2066*/
			} /*2066*/
		} /*2066*/
		if ((!$1.legacy) || ($1.isbntxt.length >= 15)) { /*2105*/
			if ($1.isbntxt.length <= 13) { /*2079*/
				$1.pad = $s(15); /*2075*/
				$puti($1.pad, 0, "978-"); /*2076*/
				$puti($1.pad, 4, $geti($1.isbntxt, 0, 11)); /*2077*/
				$1.isbntxt = $1.pad; /*2078*/
			} /*2078*/
			$1.isbn = $s(13); /*2082*/
			$1.checksum = 0; /*2083*/
			$1.i = 0; /*2084*/
			$1.n = 0; /*2084*/
			for (;;) { /*2096*/
				$1.isbnchar = $get($1.isbntxt, $1.i) - 48; /*2086*/
				if ($1.isbnchar != -3) { /*2093*/
					$put($1.isbn, $1.n, $1.isbnchar + 48); /*2088*/
					if ($1.n < 12) { /*2091*/
						$k[$j++] = "checksum"; /*2090*/
						$k[$j++] = $1.isbnchar; /*2090*/
						if (($1.n % 2) != 0) { /*2090*/
							var _1l = $k[--$j]; /*2090*/
							$k[$j++] = _1l * 3; /*2090*/
						} /*2090*/
						var _1n = $k[--$j]; /*2090*/
						$1[$k[--$j]] = _1n + $1.checksum; /*2090*/
					} /*2090*/
					$1.n = $1.n + 1; /*2092*/
				} /*2092*/
				$1.i = $1.i + 1; /*2094*/
				if ($1.i == $1.isbntxt.length) { /*2095*/
					break; /*2095*/
				} /*2095*/
			} /*2095*/
			$1.checksum = ((10 - ($1.checksum % 10)) % 10) + 48; /*2097*/
			$1.isbn = $geti($1.isbn, 0, 12); /*2098*/
			if ($1.isbntxt.length == 17) { /*2103*/
				if ($get($1.isbntxt, 16) != $1.checksum) { /*2102*/
					$k[$j++] = "bwipp.isbn13badCheckDigit"; /*2101*/
					$k[$j++] = "Incorrect ISBN-13 check digit provided"; /*2101*/
					$0.raiseerror(); /*2101*/
				} /*2101*/
			} /*2101*/
		} /*2101*/
		var _21 = ($1.isbn.length == 12) ? 22 : 18; /*2108*/
		$1.pad = $s(_21); /*2108*/
		$puti($1.pad, 0, "ISBN "); /*2109*/
		$puti($1.pad, 5, $1.isbntxt); /*2110*/
		$put($1.pad, $1.pad.length - 2, 45); /*2111*/
		$put($1.pad, $1.pad.length - 1, $1.checksum); /*2112*/
		$1.isbntxt = $1.pad; /*2113*/
		$1.barcode = $s(12); /*2116*/
		if ($1.isbn.length == 9) { /*2121*/
			$puti($1.barcode, 0, "978"); /*2118*/
			$puti($1.barcode, 3, $1.isbn); /*2119*/
		} else { /*2121*/
			$puti($1.barcode, 0, $1.isbn); /*2121*/
		} /*2121*/
		if ($ne($1.addon, "")) { /*2131*/
			var _2L = $s((12 + $1.addon.length) + 1); /*2126*/
			$puti(_2L, 0, $1.barcode); /*2127*/
			$puti(_2L, 12, " "); /*2128*/
			$puti(_2L, 13, $1.addon); /*2129*/
			$1.barcode = _2L; /*2130*/
		} /*2130*/
		$1.options.dontdraw = true; /*2134*/
		$1.options.addongap = $1.addongap; /*2135*/
		$k[$j++] = "args"; /*2136*/
		$k[$j++] = $1.barcode; /*2136*/
		$k[$j++] = $1.options; /*2136*/
		$0.ean13(); /*2136*/
		var _2T = $k[--$j]; /*2136*/
		$1[$k[--$j]] = _2T; /*2136*/
		if ($1.includetext) { /*2155*/
			if ($1.isbntextxoffset == "unset") { /*2142*/
				$k[$j++] = "isbntextxoffset"; /*2141*/
				if ($1.isbn.length == 9) { /*2141*/
					$k[$j++] = -1; /*2141*/
				} else { /*2141*/
					$k[$j++] = -12; /*2141*/
				} /*2141*/
				var _2Y = $k[--$j]; /*2141*/
				$1[$k[--$j]] = _2Y; /*2141*/
			} /*2141*/
			if ($1.isbntextyoffset == "unset") { /*2145*/
				$1.isbntextyoffset = ($1.height * 72) + 3; /*2144*/
			} /*2144*/
			var _2d = $1.args.txt !== undefined; /*2146*/
			if (_2d) { /*2153*/
				$1.txt = $1.args.txt; /*2147*/
				$1.newtxt = $a($1.txt.length + 1); /*2148*/
				$puti($1.newtxt, 0, $1.txt); /*2149*/
				$put($1.newtxt, $1.newtxt.length - 1, $a([$1.isbntxt, $1.isbntextxoffset, $1.isbntextyoffset, $1.isbntextfont, $1.isbntextsize])); /*2150*/
				$1.args.txt = $1.newtxt; /*2151*/
			} else { /*2153*/
				$1.args.txt = $a([$a([$1.isbntxt, $1.isbntextxoffset, $1.isbntextyoffset, $1.isbntextfont, $1.isbntextsize])]); /*2153*/
			} /*2153*/
		} /*2153*/
		$1.args.opt = $1.options; /*2157*/
		$k[$j++] = $1.args; /*2160*/
		if (!$1.dontdraw) { /*2160*/
			$0.renlinear(); /*2160*/
		} /*2160*/
	};
	$0.ismn = function() {
		var $1 = {}; /*2188*/
		$1.options = $k[--$j]; /*2190*/
		$1.barcode = $k[--$j]; /*2191*/
		$1.dontdraw = false; /*2193*/
		$1.includetext = false; /*2194*/
		$1.ismntextfont = "OCR-A"; /*2195*/
		$1.ismntextsize = 8.5; /*2196*/
		$1.ismntextxoffset = "unset"; /*2197*/
		$1.ismntextyoffset = "unset"; /*2198*/
		$1.height = 1; /*2199*/
		$1.addongap = 12; /*2200*/
		$1.legacy = false; /*2201*/
		$forall($1.options, function() { /*2212*/
			var _3 = $k[--$j]; /*2212*/
			$1[$k[--$j]] = _3; /*2212*/
		}); /*2212*/
		$1.ismntextfont = "" + $1.ismntextfont; /*2214*/
		$1.ismntextsize = +$1.ismntextsize; /*2215*/
		if ($ne($1.ismntextxoffset, "unset")) { /*2216*/
			$1.ismntextxoffset = +$1.ismntextxoffset; /*2216*/
		} /*2216*/
		if ($ne($1.ismntextyoffset, "unset")) { /*2217*/
			$1.ismntextyoffset = +$1.ismntextyoffset; /*2217*/
		} /*2217*/
		$1.height = +$1.height; /*2218*/
		$1.addongap = +$1.addongap; /*2219*/
		$search($1.barcode, " "); /*2222*/
		if ($k[--$j]) { /*2228*/
			$1.barcode = $k[--$j]; /*2223*/
			$j--; /*2224*/
			$1.addon = $k[--$j]; /*2225*/
		} else { /*2228*/
			$j--; /*2227*/
			$1.addon = ""; /*2228*/
		} /*2228*/
		if ((($1.barcode.length != 15) && ($1.barcode.length != 17)) && (($1.barcode.length != 11) && ($1.barcode.length != 13))) { /*2235*/
			$k[$j++] = "bwipp.ismnBadLength"; /*2234*/
			$k[$j++] = "ISMN-13 must be 15 or 17 characters including dashes. ISMN-10 must be 11 or 13 characters including dashes"; /*2234*/
			$0.raiseerror(); /*2234*/
		} /*2234*/
		if ((($1.addon.length != 0) && ($1.addon.length != 2)) && ($1.addon.length != 5)) { /*2238*/
			$k[$j++] = "bwipp.ismnBadAddOnLength"; /*2237*/
			$k[$j++] = "Add-on for ISMN must be 2 or 5 digits"; /*2237*/
			$0.raiseerror(); /*2237*/
		} /*2237*/
		if ($1.barcode.length >= 15) { /*2305*/
			if ($ne($geti($1.barcode, 0, 4), "979-")) { /*2242*/
				$k[$j++] = "bwipp.ismn13badPrefix"; /*2241*/
				$k[$j++] = "ISMN-13 prefix must be 979-"; /*2241*/
				$0.raiseerror(); /*2241*/
			} /*2241*/
			$1.wasdash = false; /*2243*/
			$1.numdash = 0; /*2243*/
			$1.numdigit = 0; /*2243*/
			$forall($geti($1.barcode, 5, 9), function() { /*2257*/
				var _T = $k[--$j]; /*2245*/
				$k[$j++] = _T; /*2252*/
				if (_T == 45) { /*2252*/
					if ($1.wasdash) { /*2249*/
						$k[$j++] = "bwipp.ismn13adjacentDashes"; /*2248*/
						$k[$j++] = "ISMN-13 does not permit adjacent dashes"; /*2248*/
						$0.raiseerror(); /*2248*/
					} /*2248*/
					$1.wasdash = true; /*2250*/
					$1.numdash = $1.numdash + 1; /*2251*/
				} /*2251*/
				var _W = $k[--$j]; /*2253*/
				if ((_W >= 48) && (_W <= 57)) { /*2256*/
					$1.wasdash = false; /*2254*/
					$1.numdigit = $1.numdigit + 1; /*2255*/
				} /*2255*/
			}); /*2255*/
			if (($1.numdash != 2) || ($1.numdigit != 7)) { /*2260*/
				$k[$j++] = "bwipp.ismn13numDashesDigits"; /*2259*/
				$k[$j++] = "Incorrect number of dashes and digits for ISMN-13"; /*2259*/
				$0.raiseerror(); /*2259*/
			} /*2259*/
			var _b = $get($1.barcode, 14); /*2261*/
			if ((_b < 48) || (_b > 57)) { /*2263*/
				$k[$j++] = "bwipp.ismn13character15"; /*2262*/
				$k[$j++] = "ISMN-13 character 15 must be a digit"; /*2262*/
				$0.raiseerror(); /*2262*/
			} /*2262*/
			if ($1.barcode.length == 17) { /*2271*/
				if ($ne($geti($1.barcode, 15, 1), "-")) { /*2267*/
					$k[$j++] = "bwipp.ismn13character16"; /*2266*/
					$k[$j++] = "ISMN-13 penultimate character must be a dash"; /*2266*/
					$0.raiseerror(); /*2266*/
				} /*2266*/
				var _g = $get($1.barcode, 16); /*2268*/
				if ((_g < 48) || (_g > 57)) { /*2270*/
					$k[$j++] = "bwipp.ismn13character17"; /*2269*/
					$k[$j++] = "ISMN-13 final character must be a digit"; /*2269*/
					$0.raiseerror(); /*2269*/
				} /*2269*/
			} /*2269*/
		} else { /*2305*/
			if ($ne($geti($1.barcode, 0, 2), "M-")) { /*2275*/
				$k[$j++] = "bwipp.ismn10badPrefix"; /*2274*/
				$k[$j++] = "ISMN-10 prefix must be M-"; /*2274*/
				$0.raiseerror(); /*2274*/
			} /*2274*/
			var _k = $get($1.barcode, 2); /*2276*/
			if ((_k < 48) || (_k > 57)) { /*2278*/
				$k[$j++] = "bwipp.ismn10character3"; /*2277*/
				$k[$j++] = "ISMN-10 character 3 must be a digit"; /*2277*/
				$0.raiseerror(); /*2277*/
			} /*2277*/
			$1.wasdash = false; /*2279*/
			$1.numdash = 0; /*2279*/
			$1.numdigit = 0; /*2279*/
			$forall($geti($1.barcode, 3, 7), function() { /*2293*/
				var _n = $k[--$j]; /*2281*/
				$k[$j++] = _n; /*2288*/
				if (_n == 45) { /*2288*/
					if ($1.wasdash) { /*2285*/
						$k[$j++] = "bwipp.ismn10adjacentDashes"; /*2284*/
						$k[$j++] = "ISMN-10 does not permit adjacent dashes"; /*2284*/
						$0.raiseerror(); /*2284*/
					} /*2284*/
					$1.wasdash = true; /*2286*/
					$1.numdash = $1.numdash + 1; /*2287*/
				} /*2287*/
				var _q = $k[--$j]; /*2289*/
				if ((_q >= 48) && (_q <= 57)) { /*2292*/
					$1.wasdash = false; /*2290*/
					$1.numdigit = $1.numdigit + 1; /*2291*/
				} /*2291*/
			}); /*2291*/
			if (($1.numdash != 1) || ($1.numdigit != 6)) { /*2296*/
				$k[$j++] = "bwipp.ismn10numDashesDigits"; /*2295*/
				$k[$j++] = "Incorrect number of dashes and digits for ISMN-10"; /*2295*/
				$0.raiseerror(); /*2295*/
			} /*2295*/
			var _v = $get($1.barcode, 10); /*2297*/
			if ((_v < 48) || (_v > 57)) { /*2299*/
				$k[$j++] = "bwipp.ismn10character11"; /*2298*/
				$k[$j++] = "ISMN-10 character 11 must be a digit"; /*2298*/
				$0.raiseerror(); /*2298*/
			} /*2298*/
			if ($1.barcode.length == 13) { /*2307*/
				if ($ne($geti($1.barcode, 11, 1), "-")) { /*2303*/
					$k[$j++] = "bwipp.ismn10character12"; /*2302*/
					$k[$j++] = "ISMN-10 penultimate character must be a dash"; /*2302*/
					$0.raiseerror(); /*2302*/
				} /*2302*/
				var _10 = $get($1.barcode, 12); /*2304*/
				if (((_10 < 48) || (_10 > 57)) && (_10 != 88)) { /*2306*/
					$k[$j++] = "bwipp.ismn10character13"; /*2305*/
					$k[$j++] = "ISMN-10 final character must be a digit or X"; /*2305*/
					$0.raiseerror(); /*2305*/
				} /*2305*/
			} /*2305*/
		} /*2305*/
		$1.ismntxt = $1.barcode; /*2310*/
		$1.legacytxt = ""; /*2313*/
		if ($1.ismntxt.length <= 13) { /*2320*/
			$1.legacytxt = $1.ismntxt; /*2315*/
			$1.pad = $s($1.ismntxt.length + 4); /*2316*/
			$puti($1.pad, 0, "979-0-"); /*2317*/
			$puti($1.pad, 6, $geti($1.ismntxt, 2, $1.ismntxt.length - 2)); /*2318*/
			$1.ismntxt = $1.pad; /*2319*/
		} /*2319*/
		$1.ismn = $s(13); /*2323*/
		$1.checksum = 0; /*2324*/
		$1.i = 0; /*2325*/
		$1.n = 0; /*2325*/
		for (;;) { /*2341*/
			$1.ismnchar = $get($1.ismntxt, $1.i) - 48; /*2327*/
			if ($1.ismnchar != -3) { /*2338*/
				$put($1.ismn, $1.n, $1.ismnchar + 48); /*2329*/
				if ($1.n < 12) { /*2336*/
					if (($1.n % 2) == 0) { /*2334*/
						$1.checksum = $1.ismnchar + $1.checksum; /*2332*/
					} else { /*2334*/
						$1.checksum = ($1.ismnchar * 3) + $1.checksum; /*2334*/
					} /*2334*/
				} /*2334*/
				$1.n = $1.n + 1; /*2337*/
			} /*2337*/
			$1.i = $1.i + 1; /*2339*/
			if ($1.i == $1.ismntxt.length) { /*2340*/
				break; /*2340*/
			} /*2340*/
		} /*2340*/
		$1.checksum = ((10 - ($1.checksum % 10)) % 10) + 48; /*2342*/
		if (($1.barcode.length == 13) || ($1.barcode.length == 17)) { /*2349*/
			var _1X = $1.barcode; /*2346*/
			if ($get(_1X, _1X.length - 1) != $1.checksum) { /*2348*/
				$k[$j++] = "bwipp.ismnBadCheckDigit"; /*2347*/
				$k[$j++] = "Incorrect ISMN check digit provided"; /*2347*/
				$0.raiseerror(); /*2347*/
			} /*2347*/
		} /*2347*/
		if ($1.legacy && $ne($1.legacytxt, "")) { /*2356*/
			$1.ismntxt = $1.legacytxt; /*2353*/
			$1.pad = $s(18); /*2354*/
		} else { /*2356*/
			$1.pad = $s(22); /*2356*/
		} /*2356*/
		$puti($1.pad, 0, "ISMN "); /*2358*/
		$puti($1.pad, 5, $1.ismntxt); /*2359*/
		$put($1.pad, $1.pad.length - 2, 45); /*2360*/
		$put($1.pad, $1.pad.length - 1, $1.checksum); /*2361*/
		$1.ismntxt = $1.pad; /*2362*/
		$1.barcode = $geti($1.ismn, 0, 12); /*2365*/
		if ($ne($1.addon, "")) { /*2374*/
			var _1s = $s((12 + $1.addon.length) + 1); /*2369*/
			$puti(_1s, 0, $1.barcode); /*2370*/
			$puti(_1s, 12, " "); /*2371*/
			$puti(_1s, 13, $1.addon); /*2372*/
			$1.barcode = _1s; /*2373*/
		} /*2373*/
		$1.options.dontdraw = true; /*2377*/
		$1.options.addongap = $1.addongap; /*2378*/
		$k[$j++] = "args"; /*2379*/
		$k[$j++] = $1.barcode; /*2379*/
		$k[$j++] = $1.options; /*2379*/
		$0.ean13(); /*2379*/
		var _20 = $k[--$j]; /*2379*/
		$1[$k[--$j]] = _20; /*2379*/
		if ($1.includetext) { /*2398*/
			if ($1.ismntextxoffset == "unset") { /*2385*/
				$k[$j++] = "ismntextxoffset"; /*2384*/
				if ($1.ismntxt.length == 18) { /*2384*/
					$k[$j++] = -1; /*2384*/
				} else { /*2384*/
					$k[$j++] = -12; /*2384*/
				} /*2384*/
				var _25 = $k[--$j]; /*2384*/
				$1[$k[--$j]] = _25; /*2384*/
			} /*2384*/
			if ($1.ismntextyoffset == "unset") { /*2388*/
				$1.ismntextyoffset = ($1.height * 72) + 3; /*2387*/
			} /*2387*/
			var _2A = $1.args.txt !== undefined; /*2389*/
			if (_2A) { /*2396*/
				$1.txt = $1.args.txt; /*2390*/
				$1.newtxt = $a($1.txt.length + 1); /*2391*/
				$puti($1.newtxt, 0, $1.txt); /*2392*/
				$put($1.newtxt, $1.newtxt.length - 1, $a([$1.ismntxt, $1.ismntextxoffset, $1.ismntextyoffset, $1.ismntextfont, $1.ismntextsize])); /*2393*/
				$1.args.txt = $1.newtxt; /*2394*/
			} else { /*2396*/
				$1.args.txt = $a([$a([$1.ismntxt, $1.ismntextxoffset, $1.ismntextyoffset, $1.ismntextfont, $1.ismntextsize])]); /*2396*/
			} /*2396*/
		} /*2396*/
		$1.args.opt = $1.options; /*2400*/
		$k[$j++] = $1.args; /*2403*/
		if (!$1.dontdraw) { /*2403*/
			$0.renlinear(); /*2403*/
		} /*2403*/
	};
	$0.issn = function() {
		var $1 = {}; /*2431*/
		$1.options = $k[--$j]; /*2433*/
		$1.issntxt = $k[--$j]; /*2434*/
		$1.dontdraw = false; /*2436*/
		$1.includetext = false; /*2437*/
		$1.issntextfont = "OCR-A"; /*2438*/
		$1.issntextsize = 8.5; /*2439*/
		$1.issntextxoffset = "unset"; /*2440*/
		$1.issntextyoffset = "unset"; /*2441*/
		$1.height = 1; /*2442*/
		$1.addongap = 12; /*2443*/
		$forall($1.options, function() { /*2454*/
			var _3 = $k[--$j]; /*2454*/
			$1[$k[--$j]] = _3; /*2454*/
		}); /*2454*/
		$1.issntextfont = "" + $1.issntextfont; /*2456*/
		$1.issntextsize = +$1.issntextsize; /*2457*/
		if ($ne($1.issntextxoffset, "unset")) { /*2458*/
			$1.issntextxoffset = +$1.issntextxoffset; /*2458*/
		} /*2458*/
		if ($ne($1.issntextyoffset, "unset")) { /*2459*/
			$1.issntextyoffset = +$1.issntextyoffset; /*2459*/
		} /*2459*/
		$1.height = +$1.height; /*2460*/
		$1.addongap = +$1.addongap; /*2461*/
		$search($1.issntxt, " "); /*2464*/
		if ($k[--$j]) { /*2470*/
			$1.issntxt = $k[--$j]; /*2465*/
			$j--; /*2466*/
			$1.seqvar = $k[--$j]; /*2467*/
		} else { /*2470*/
			$j--; /*2469*/
			$1.seqvar = "00"; /*2470*/
		} /*2470*/
		$search($1.seqvar, " "); /*2474*/
		if ($k[--$j]) { /*2480*/
			$1.seqvar = $k[--$j]; /*2475*/
			$j--; /*2476*/
			$1.addon = $k[--$j]; /*2477*/
		} else { /*2480*/
			$j--; /*2479*/
			$1.addon = ""; /*2480*/
		} /*2480*/
		if (($1.issntxt.length != 8) && ($1.issntxt.length != 9)) { /*2486*/
			$k[$j++] = "bwipp.issnBadLength"; /*2485*/
			$k[$j++] = "ISSN must be 8 or 9 characters including dash"; /*2485*/
			$0.raiseerror(); /*2485*/
		} /*2485*/
		$forall($geti($1.issntxt, 0, 4), function() { /*2491*/
			var _P = $k[--$j]; /*2488*/
			if ((_P < 48) || (_P > 57)) { /*2490*/
				$k[$j++] = "bwipp.issnBadFormat"; /*2489*/
				$k[$j++] = "ISSN must have the format XXXX-XXXX"; /*2489*/
				$0.raiseerror(); /*2489*/
			} /*2489*/
		}); /*2489*/
		if ($ne($geti($1.issntxt, 4, 1), "-")) { /*2494*/
			$k[$j++] = "bwipp.issnBadFormat"; /*2493*/
			$k[$j++] = "ISSN must have the format XXXX-XXXX"; /*2493*/
			$0.raiseerror(); /*2493*/
		} /*2493*/
		$forall($geti($1.issntxt, 5, 3), function() { /*2499*/
			var _U = $k[--$j]; /*2496*/
			if ((_U < 48) || (_U > 57)) { /*2498*/
				$k[$j++] = "bwipp.issnBadFormat"; /*2497*/
				$k[$j++] = "ISSN must have the format XXXX-XXXX"; /*2497*/
				$0.raiseerror(); /*2497*/
			} /*2497*/
		}); /*2497*/
		if ($1.issntxt.length == 9) { /*2504*/
			var _X = $get($1.issntxt, 8); /*2501*/
			if (((_X < 48) || (_X > 57)) && (_X != 88)) { /*2503*/
				$k[$j++] = "bwipp.issnBadFormat"; /*2502*/
				$k[$j++] = "ISSN must have the format XXXX-XXXX"; /*2502*/
				$0.raiseerror(); /*2502*/
			} /*2502*/
		} /*2502*/
		if ($1.seqvar.length != 2) { /*2507*/
			$k[$j++] = "bwipp.issnBadSequenceVariantLength"; /*2506*/
			$k[$j++] = "Sequence variant for ISSN must be 2 digits"; /*2506*/
			$0.raiseerror(); /*2506*/
		} /*2506*/
		$forall($1.seqvar, function() { /*2512*/
			var _a = $k[--$j]; /*2509*/
			if ((_a < 48) || (_a > 57)) { /*2511*/
				$k[$j++] = "bwipp.issnSequenceVariantBadCharacter"; /*2510*/
				$k[$j++] = "Sequence variant for ISSN must contain only digits"; /*2510*/
				$0.raiseerror(); /*2510*/
			} /*2510*/
		}); /*2510*/
		if ((($1.addon.length != 0) && ($1.addon.length != 2)) && ($1.addon.length != 5)) { /*2515*/
			$k[$j++] = "bwipp.issnBadAddOnLength"; /*2514*/
			$k[$j++] = "Add-on for ISSN must be 2 or 5 digits"; /*2514*/
			$0.raiseerror(); /*2514*/
		} /*2514*/
		$1.issn = $s(8); /*2518*/
		$1.checksum = 0; /*2519*/
		$1.i = 0; /*2520*/
		$1.n = 0; /*2520*/
		for (;;) { /*2532*/
			$1.issnchar = $get($1.issntxt, $1.i) - 48; /*2522*/
			if ($1.issnchar != -3) { /*2529*/
				$put($1.issn, $1.n, $1.issnchar + 48); /*2524*/
				if ($1.n < 7) { /*2527*/
					$1.checksum = $1.checksum + ($1.issnchar * (8 - $1.n)); /*2526*/
				} /*2526*/
				$1.n = $1.n + 1; /*2528*/
			} /*2528*/
			$1.i = $1.i + 1; /*2530*/
			if ($1.i == $1.issntxt.length) { /*2531*/
				break; /*2531*/
			} /*2531*/
		} /*2531*/
		$1.checksum = (11 - ($1.checksum % 11)) % 11; /*2533*/
		var _w = $1.checksum + 48; /*2534*/
		$k[$j++] = "checksum"; /*2534*/
		$k[$j++] = _w; /*2534*/
		if (_w == 58) { /*2534*/
			$j--; /*2534*/
			$k[$j++] = 88; /*2534*/
		} /*2534*/
		var _x = $k[--$j]; /*2534*/
		$1[$k[--$j]] = _x; /*2534*/
		if ($1.issntxt.length == 9) { /*2539*/
			if ($get($1.issntxt, 8) != $1.checksum) { /*2538*/
				$k[$j++] = "bwipp.issnBadCheckDigit"; /*2537*/
				$k[$j++] = "Incorrect ISSN check digit provided"; /*2537*/
				$0.raiseerror(); /*2537*/
			} /*2537*/
		} /*2537*/
		$1.pad = $s(14); /*2542*/
		$puti($1.pad, 0, "ISSN "); /*2543*/
		$puti($1.pad, 5, $1.issntxt); /*2544*/
		$put($1.pad, 13, $1.checksum); /*2545*/
		$1.issntxt = $1.pad; /*2546*/
		$1.barcode = $geti($1.issn, 0, 7); /*2549*/
		$1.barcode = $s(12); /*2552*/
		$puti($1.barcode, 0, "977"); /*2553*/
		$puti($1.barcode, 3, $1.issn); /*2554*/
		$puti($1.barcode, 10, $1.seqvar); /*2555*/
		if ($ne($1.addon, "")) { /*2564*/
			var _1K = $s((12 + $1.addon.length) + 1); /*2559*/
			$puti(_1K, 0, $1.barcode); /*2560*/
			$puti(_1K, 12, " "); /*2561*/
			$puti(_1K, 13, $1.addon); /*2562*/
			$1.barcode = _1K; /*2563*/
		} /*2563*/
		$1.options.dontdraw = true; /*2567*/
		$1.options.addongap = $1.addongap; /*2568*/
		$k[$j++] = "args"; /*2569*/
		$k[$j++] = $1.barcode; /*2569*/
		$k[$j++] = $1.options; /*2569*/
		$0.ean13(); /*2569*/
		var _1S = $k[--$j]; /*2569*/
		$1[$k[--$j]] = _1S; /*2569*/
		if ($1.includetext) { /*2586*/
			if ($1.issntextxoffset == "unset") { /*2573*/
				$1.issntextxoffset = 10; /*2573*/
			} /*2573*/
			if ($1.issntextyoffset == "unset") { /*2576*/
				$1.issntextyoffset = ($1.height * 72) + 3; /*2575*/
			} /*2575*/
			var _1Z = $1.args.txt !== undefined; /*2577*/
			if (_1Z) { /*2584*/
				$1.txt = $1.args.txt; /*2578*/
				$1.newtxt = $a($1.txt.length + 1); /*2579*/
				$puti($1.newtxt, 0, $1.txt); /*2580*/
				$put($1.newtxt, $1.newtxt.length - 1, $a([$1.issntxt, $1.issntextxoffset, $1.issntextyoffset, $1.issntextfont, $1.issntextsize])); /*2581*/
				$1.args.txt = $1.newtxt; /*2582*/
			} else { /*2584*/
				$1.args.txt = $a([$a([$1.issntxt, $1.issntextxoffset, $1.issntextyoffset, $1.issntextfont, $1.issntextsize])]); /*2584*/
			} /*2584*/
		} /*2584*/
		$1.args.opt = $1.options; /*2588*/
		$k[$j++] = $1.args; /*2591*/
		if (!$1.dontdraw) { /*2591*/
			$0.renlinear(); /*2591*/
		} /*2591*/
	};
	$0.code128 = function() {
		var $1 = {}; /*2618*/
		$1.options = $k[--$j]; /*2620*/
		$1.barcode = $k[--$j]; /*2621*/
		$1.dontdraw = false; /*2623*/
		$1.includetext = false; /*2624*/
		$1.textfont = "Courier"; /*2625*/
		$1.textsize = 10; /*2626*/
		$1.textxoffset = 0; /*2627*/
		$1.textyoffset = -8.5; /*2628*/
		$1.height = 1; /*2629*/
		$1.encoding = "auto"; /*2630*/
		$1.raw = false; /*2631*/
		$1.parse = false; /*2632*/
		$1.parsefnc = false; /*2633*/
		$forall($1.options, function() { /*2644*/
			var _3 = $k[--$j]; /*2644*/
			$1[$k[--$j]] = _3; /*2644*/
		}); /*2644*/
		$1.textfont = "" + $1.textfont; /*2646*/
		$1.textsize = +$1.textsize; /*2647*/
		$1.textxoffset = +$1.textxoffset; /*2648*/
		$1.textyoffset = +$1.textyoffset; /*2649*/
		$1.height = +$1.height; /*2650*/
		$1.barlen = $1.barcode.length; /*2673*/
		$1.sta = -1; /*2676*/
		$1.stb = -2; /*2676*/
		$1.stc = -3; /*2676*/
		$1.swa = -4; /*2677*/
		$1.swb = -5; /*2677*/
		$1.swc = -6; /*2677*/
		$1.fn1 = -7; /*2678*/
		$1.fn2 = -8; /*2678*/
		$1.fn3 = -9; /*2678*/
		$1.fn4 = -10; /*2679*/
		$1.sft = -11; /*2679*/
		$1.stp = -12; /*2679*/
		$1.lka = -13; /*2680*/
		$1.lkc = -14; /*2680*/
		$1.charmaps = $a([$a([32, 32, "00"]), $a(["!", "!", "01"]), $a(["\"", "\"", "02"]), $a(["#", "#", "03"]), $a(["$", "$", "04"]), $a(["%", "%", "05"]), $a(["&", "&", "06"]), $a(["'", "'", "07"]), $a([40, 40, "08"]), $a([41, 41, "09"]), $a(["*", "*", "10"]), $a(["+", "+", "11"]), $a([",", ",", "12"]), $a(["-", "-", "13"]), $a([".", ".", "14"]), $a(["/", "/", "15"]), $a(["0", "0", "16"]), $a(["1", "1", "17"]), $a(["2", "2", "18"]), $a(["3", "3", "19"]), $a(["4", "4", "20"]), $a(["5", "5", "21"]), $a(["6", "6", "22"]), $a(["7", "7", "23"]), $a(["8", "8", "24"]), $a(["9", "9", "25"]), $a([":", ":", "26"]), $a([";", ";", "27"]), $a(["<", "<", "28"]), $a(["=", "=", "29"]), $a([">", ">", "30"]), $a(["?", "?", "31"]), $a(["@", "@", "32"]), $a(["A", "A", "33"]), $a(["B", "B", "34"]), $a(["C", "C", "35"]), $a(["D", "D", "36"]), $a(["E", "E", "37"]), $a(["F", "F", "38"]), $a(["G", "G", "39"]), $a(["H", "H", "40"]), $a(["I", "I", "41"]), $a(["J", "J", "42"]), $a(["K", "K", "43"]), $a(["L", "L", "44"]), $a(["M", "M", "45"]), $a(["N", "N", "46"]), $a(["O", "O", "47"]), $a(["P", "P", "48"]), $a(["Q", "Q", "49"]), $a(["R", "R", "50"]), $a(["S", "S", "51"]), $a(["T", "T", "52"]), $a(["U", "U", "53"]), $a(["V", "V", "54"]), $a(["W", "W", "55"]), $a(["X", "X", "56"]), $a(["Y", "Y", "57"]), $a(["Z", "Z", "58"]), $a(["[", "[", "59"]), $a([92, 92, "60"]), $a(["]", "]", "61"]), $a(["^", "^", "62"]), $a(["_", "_", "63"]), $a([0, "`", "64"]), $a([1, "a", "65"]), $a([2, "b", "66"]), $a([3, "c", "67"]), $a([4, "d", "68"]), $a([5, "e", "69"]), $a([6, "f", "70"]), $a([7, "g", "71"]), $a([8, "h", "72"]), $a([9, "i", "73"]), $a([10, "j", "74"]), $a([11, "k", "75"]), $a([12, "l", "76"]), $a([13, "m", "77"]), $a([14, "n", "78"]), $a([15, "o", "79"]), $a([16, "p", "80"]), $a([17, "q", "81"]), $a([18, "r", "82"]), $a([19, "s", "83"]), $a([20, "t", "84"]), $a([21, "u", "85"]), $a([22, "v", "86"]), $a([23, "w", "87"]), $a([24, "x", "88"]), $a([25, "y", "89"]), $a([26, "z", "90"]), $a([27, "{", "91"]), $a([28, "|", "92"]), $a([29, "}", "93"]), $a([30, "~", "94"]), $a([31, 127, "95"]), $a([$1.fn3, $1.fn3, "96"]), $a([$1.fn2, $1.fn2, "97"]), $a([$1.sft, $1.sft, "98"]), $a([$1.swc, $1.swc, "99"]), $a([$1.swb, $1.fn4, $1.swb]), $a([$1.fn4, $1.swa, $1.swa]), $a([$1.fn1, $1.fn1, $1.fn1]), $a([$1.sta, $1.sta, $1.sta]), $a([$1.stb, $1.stb, $1.stb]), $a([$1.stc, $1.stc, $1.stc]), $a([$1.stp, $1.stp, $1.stp])]); /*2721*/
		$1.charvals = $a([{}, {}, {}]); /*2724*/
		for (var _2R = 0, _2Q = $1.charmaps.length - 1; _2R <= _2Q; _2R += 1) { /*2733*/
			$1.i = _2R; /*2726*/
			$1.encs = $get($1.charmaps, $1.i); /*2727*/
			for (var _2V = 0; _2V <= 2; _2V += 1) { /*2732*/
				$1.j = _2V; /*2729*/
				var _2Y = $get($1.encs, $1.j); /*2730*/
				$k[$j++] = _2Y; /*2730*/
				if ($eq($type(_2Y), "stringtype")) { /*2730*/
					var _2b = $get($k[--$j], 0); /*2730*/
					$k[$j++] = _2b; /*2730*/
				} /*2730*/
				$put($get($1.charvals, $1.j), $k[--$j], $1.i); /*2731*/
			} /*2731*/
		} /*2731*/
		$1.seta = $get($1.charvals, 0); /*2734*/
		$1.setb = $get($1.charvals, 1); /*2735*/
		$1.setc = $get($1.charvals, 2); /*2736*/
		$put($1.seta, $1.lka, $get($1.seta, $1.swb)); /*2739*/
		$put($1.seta, $1.lkc, $get($1.seta, $1.swc)); /*2739*/
		$put($1.setb, $1.lka, $get($1.setb, $1.swc)); /*2740*/
		$put($1.setb, $1.lkc, $get($1.setb, $1.swa)); /*2740*/
		$put($1.setc, $1.lka, $get($1.setc, $1.swa)); /*2741*/
		$put($1.setc, $1.lkc, $get($1.setc, $1.swb)); /*2741*/
		if ($1.raw) { /*2743*/
			$1.encoding = "raw"; /*2743*/
		} /*2743*/
		if ($eq($1.encoding, "raw")) { /*2757*/
			$1.cws = $a($1.barlen); /*2746*/
			$1.i = 0; /*2747*/
			$1.j = 0; /*2747*/
			for (;;) { /*2754*/
				if ($1.i == $1.barlen) { /*2749*/
					break; /*2749*/
				} /*2749*/
				$1.cw = ~~$z($geti($1.barcode, $1.i + 1, 3)); /*2750*/
				$put($1.cws, $1.j, $1.cw); /*2751*/
				$1.i = $1.i + 4; /*2752*/
				$1.j = $1.j + 1; /*2753*/
			} /*2753*/
			$1.cws = $geti($1.cws, 0, $1.j); /*2755*/
			$1.text = ""; /*2756*/
		} /*2756*/
		if ($eq($1.encoding, "auto")) { /*3007*/
			var _3e = {
				FNC1: $1.fn1,
				FNC2: $1.fn2,
				FNC3: $1.fn3,
				LNKA: $1.lka,
				LNKC: $1.lkc
			}; /*2767*/
			$1.fncvals = _3e; /*2768*/
			$1.msg = $a($1.barlen); /*2771*/
			$1.text = $s($1.barlen); /*2772*/
			$1.i = 0; /*2773*/
			$1.j = 0; /*2773*/
			for (;;) { /*2789*/
				if ($1.i == $1.barlen) { /*2774*/
					break; /*2774*/
				} /*2774*/
				$1.char = $get($1.barcode, $1.i); /*2775*/
				$put($1.text, $1.j, $1.char); /*2776*/
				if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*2785*/
					if ($get($1.barcode, $1.i + 1) != 94) { /*2783*/
						$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*2779*/
						$puti($1.text, $1.j, " "); /*2780*/
						$1.i = $1.i + 4; /*2781*/
					} else { /*2783*/
						$1.i = $1.i + 1; /*2783*/
					} /*2783*/
				} /*2783*/
				$put($1.msg, $1.j, $1.char); /*2786*/
				$1.i = $1.i + 1; /*2787*/
				$1.j = $1.j + 1; /*2788*/
			} /*2788*/
			$1.msg = $geti($1.msg, 0, $1.j); /*2790*/
			$1.msglen = $1.msg.length; /*2791*/
			$1.text = $geti($1.text, 0, $1.j); /*2792*/
			$k[$j++] = Infinity; /*2795*/
			for (var _4K = 0, _4L = $1.msglen; _4K < _4L; _4K++) { /*2795*/
				$k[$j++] = 0; /*2795*/
			} /*2795*/
			$k[$j++] = 0; /*2795*/
			$1.numSA = $a(); /*2795*/
			$k[$j++] = Infinity; /*2796*/
			for (var _4O = 0, _4P = $1.msglen; _4O < _4P; _4O++) { /*2796*/
				$k[$j++] = 0; /*2796*/
			} /*2796*/
			$k[$j++] = 0; /*2796*/
			$1.numEA = $a(); /*2796*/
			for (var _4S = $1.msglen - 1; _4S >= 0; _4S -= 1) { /*2806*/
				$1.i = _4S; /*2798*/
				if ($get($1.msg, $1.i) >= 0) { /*2805*/
					if ($get($1.msg, $1.i) >= 128) { /*2803*/
						$put($1.numEA, $1.i, $get($1.numEA, $1.i + 1) + 1); /*2801*/
					} else { /*2803*/
						$put($1.numSA, $1.i, $get($1.numSA, $1.i + 1) + 1); /*2803*/
					} /*2803*/
				} /*2803*/
			} /*2803*/
			$1.ea = false; /*2809*/
			$1.msgtmp = $a([]); /*2809*/
			for (var _4m = 0, _4l = $1.msglen - 1; _4m <= _4l; _4m += 1) { /*2824*/
				$1.i = _4m; /*2811*/
				$1.c = $get($1.msg, $1.i); /*2812*/
				if ((!$xo($1.ea, $1.c < 128)) && ($1.c >= 0)) { /*2822*/
					if ($1.ea) { /*2814*/
						$k[$j++] = $1.numSA; /*2814*/
					} else { /*2814*/
						$k[$j++] = $1.numEA; /*2814*/
					} /*2814*/
					var _4y = $get($k[--$j], $1.i); /*2814*/
					var _51 = ((_4y + $1.i) == $1.msglen) ? 3 : 5; /*2815*/
					if (_4y < _51) { /*2820*/
						$k[$j++] = Infinity; /*2817*/
						$aload($1.msgtmp); /*2817*/
						$k[$j++] = $1.fn4; /*2817*/
						$1.msgtmp = $a(); /*2817*/
					} else { /*2820*/
						$k[$j++] = Infinity; /*2819*/
						$aload($1.msgtmp); /*2819*/
						$k[$j++] = $1.fn4; /*2819*/
						$k[$j++] = $1.fn4; /*2819*/
						$1.msgtmp = $a(); /*2819*/
						$1.ea = !$1.ea; /*2820*/
					} /*2820*/
				} /*2820*/
				$k[$j++] = Infinity; /*2823*/
				$aload($1.msgtmp); /*2823*/
				if ($1.c >= 0) { /*2823*/
					$k[$j++] = $1.c & 127; /*2823*/
				} else { /*2823*/
					$k[$j++] = $1.c; /*2823*/
				} /*2823*/
				$1.msgtmp = $a(); /*2823*/
			} /*2823*/
			$1.msg = $1.msgtmp; /*2825*/
			$1.msglen = $1.msg.length; /*2826*/
			$1.numsscr = function() {
				$1.n = 0; /*2830*/
				$1.s = 0; /*2830*/
				$1.p = $k[--$j]; /*2831*/
				for (;;) { /*2842*/
					if ($1.p >= $1.msglen) { /*2832*/
						break; /*2832*/
					} /*2832*/
					var _5M = $get($1.msg, $1.p); /*2833*/
					var _5O = $get($1.setc, _5M) !== undefined; /*2834*/
					$k[$j++] = _5M; /*2834*/
					if (!_5O) { /*2834*/
						$j--; /*2834*/
						break; /*2834*/
					} /*2834*/
					if ($k[--$j] == $1.fn1) { /*2838*/
						if (($1.s % 2) == 0) { /*2837*/
							$1.s = $1.s + 1; /*2837*/
						} else { /*2837*/
							break; /*2837*/
						} /*2837*/
					} /*2837*/
					$1.n = $1.n + 1; /*2839*/
					$1.s = $1.s + 1; /*2840*/
					$1.p = $1.p + 1; /*2841*/
				} /*2841*/
				$k[$j++] = $1.n; /*2843*/
				$k[$j++] = $1.s; /*2843*/
			}; /*2844*/
			$1.enca = function() {
				$put($1.cws, $1.j, $get($1.seta, $k[--$j])); /*2848*/
				$1.j = $1.j + 1; /*2849*/
			}; /*2850*/
			$1.encb = function() {
				$put($1.cws, $1.j, $get($1.setb, $k[--$j])); /*2852*/
				$1.j = $1.j + 1; /*2853*/
			}; /*2854*/
			$1.encc = function() {
				var _5k = $k[--$j]; /*2856*/
				$k[$j++] = _5k; /*2860*/
				if ($ne($type(_5k), "arraytype")) { /*2859*/
					var _5o = $get($1.setc, $k[--$j]); /*2857*/
					$k[$j++] = _5o; /*2857*/
				} else { /*2859*/
					$aload($k[--$j]); /*2859*/
					var _5q = $k[--$j]; /*2859*/
					var _5r = $k[--$j]; /*2859*/
					$k[$j++] = (_5q - 48) + ((_5r - 48) * 10); /*2859*/
				} /*2859*/
				$put($1.cws, $1.j, $k[--$j]); /*2861*/
				$1.j = $1.j + 1; /*2862*/
			}; /*2863*/
			$1.anotb = function() {
				var _5w = $k[--$j]; /*2866*/
				var _5y = $get($1.seta, _5w) !== undefined; /*2866*/
				var _60 = $get($1.setb, _5w) !== undefined; /*2866*/
				$k[$j++] = _5y && (!_60); /*2866*/
			}; /*2866*/
			$1.bnota = function() {
				var _61 = $k[--$j]; /*2867*/
				var _63 = $get($1.setb, _61) !== undefined; /*2867*/
				var _65 = $get($1.seta, _61) !== undefined; /*2867*/
				$k[$j++] = _63 && (!_65); /*2867*/
			}; /*2867*/
			$k[$j++] = Infinity; /*2870*/
			for (var _67 = 0, _68 = $1.msg.length; _67 < _68; _67++) { /*2870*/
				$k[$j++] = 0; /*2870*/
			} /*2870*/
			$k[$j++] = 9999; /*2870*/
			$1.nextanotb = $a(); /*2870*/
			$k[$j++] = Infinity; /*2871*/
			for (var _6B = 0, _6C = $1.msg.length; _6B < _6C; _6B++) { /*2871*/
				$k[$j++] = 0; /*2871*/
			} /*2871*/
			$k[$j++] = 9999; /*2871*/
			$1.nextbnota = $a(); /*2871*/
			for (var _6F = $1.msg.length - 1; _6F >= 0; _6F -= 1) { /*2884*/
				$1.i = _6F; /*2873*/
				$k[$j++] = $get($1.msg, $1.i); /*2874*/
				$1.anotb(); /*2874*/
				if ($k[--$j]) { /*2877*/
					$put($1.nextanotb, $1.i, 0); /*2875*/
				} else { /*2877*/
					$put($1.nextanotb, $1.i, $get($1.nextanotb, $1.i + 1) + 1); /*2877*/
				} /*2877*/
				$k[$j++] = $get($1.msg, $1.i); /*2879*/
				$1.bnota(); /*2879*/
				if ($k[--$j]) { /*2882*/
					$put($1.nextbnota, $1.i, 0); /*2880*/
				} else { /*2882*/
					$put($1.nextbnota, $1.i, $get($1.nextbnota, $1.i + 1) + 1); /*2882*/
				} /*2882*/
			} /*2882*/
			$1.abeforeb = function() {
				var _6c = $k[--$j]; /*2887*/
				$k[$j++] = $lt($get($1.nextanotb, _6c), $get($1.nextbnota, _6c)); /*2887*/
			}; /*2887*/
			$1.bbeforea = function() {
				var _6h = $k[--$j]; /*2888*/
				$k[$j++] = $lt($get($1.nextbnota, _6h), $get($1.nextanotb, _6h)); /*2888*/
			}; /*2888*/
			$1.cws = $a(($1.barcode.length * 2) + 3); /*2890*/
			$1.j = 0; /*2893*/
			if ($1.msglen > 0) { /*2894*/
				$k[$j++] = 0; /*2894*/
				$1.numsscr(); /*2894*/
			} else { /*2894*/
				$k[$j++] = -1; /*2894*/
				$k[$j++] = -1; /*2894*/
			} /*2894*/
			$1.nums = $k[--$j]; /*2894*/
			$1.nchars = $k[--$j]; /*2894*/
			for (;;) { /*2919*/
				if ($1.msglen == 0) { /*2900*/
					$k[$j++] = $1.stb; /*2897*/
					$1.enca(); /*2897*/
					$1.cset = "setb"; /*2898*/
					break; /*2899*/
				} /*2899*/
				if (($1.msglen == 2) && ($1.nums == 2)) { /*2905*/
					$k[$j++] = $1.stc; /*2902*/
					$1.enca(); /*2902*/
					$1.cset = "setc"; /*2903*/
					break; /*2904*/
				} /*2904*/
				if ($1.nums >= 4) { /*2910*/
					$k[$j++] = $1.stc; /*2907*/
					$1.enca(); /*2907*/
					$1.cset = "setc"; /*2908*/
					break; /*2909*/
				} /*2909*/
				$k[$j++] = 0; /*2911*/
				$1.abeforeb(); /*2911*/
				if ($k[--$j]) { /*2915*/
					$k[$j++] = $1.sta; /*2912*/
					$1.enca(); /*2912*/
					$1.cset = "seta"; /*2913*/
					break; /*2914*/
				} /*2914*/
				$k[$j++] = $1.stb; /*2916*/
				$1.enca(); /*2916*/
				$1.cset = "setb"; /*2917*/
				break; /*2918*/
			} /*2918*/
			$1.i = 0; /*2922*/
			for (;;) { /*3005*/
				if ($1.i == $1.msglen) { /*2923*/
					break; /*2923*/
				} /*2923*/
				$k[$j++] = $1.i; /*2925*/
				$1.numsscr(); /*2925*/
				$1.nums = $k[--$j]; /*2925*/
				$1.nchars = $k[--$j]; /*2925*/
				for (;;) { /*3003*/
					if ((($eq($1.cset, "seta") || $eq($1.cset, "setb")) && ($1.nums >= 4)) && ($get($1.msg, $1.i) != $1.fn1)) { /*2942*/
						if (($1.nums % 2) == 0) { /*2940*/
							$k[$j++] = $1.swc; /*2932*/
							if ($eq($1.cset, "seta")) { /*2932*/
								$1.enca(); /*2932*/
							} else { /*2932*/
								$1.encb(); /*2932*/
							} /*2932*/
							$1.cset = "setc"; /*2933*/
							break; /*2934*/
						} else { /*2940*/
							$k[$j++] = $get($1.msg, $1.i); /*2936*/
							if ($eq($1.cset, "seta")) { /*2936*/
								$1.enca(); /*2936*/
							} else { /*2936*/
								$1.encb(); /*2936*/
							} /*2936*/
							$1.i = $1.i + 1; /*2937*/
							$k[$j++] = $1.swc; /*2938*/
							if ($eq($1.cset, "seta")) { /*2938*/
								$1.enca(); /*2938*/
							} else { /*2938*/
								$1.encb(); /*2938*/
							} /*2938*/
							$1.cset = "setc"; /*2939*/
							break; /*2940*/
						} /*2940*/
					} /*2940*/
					$k[$j++] = $eq($1.cset, "setb"); /*2943*/
					$k[$j++] = $get($1.msg, $1.i); /*2943*/
					$1.anotb(); /*2943*/
					var _7R = $k[--$j]; /*2943*/
					if (($k[--$j] && _7R)) { /*2955*/
						if ($1.i < ($1.msglen - 1)) { /*2951*/
							$k[$j++] = $1.i + 1; /*2945*/
							$1.bbeforea(); /*2945*/
							if ($k[--$j]) { /*2950*/
								$k[$j++] = $1.sft; /*2946*/
								$1.encb(); /*2946*/
								$k[$j++] = $get($1.msg, $1.i); /*2947*/
								$1.enca(); /*2947*/
								$1.i = $1.i + 1; /*2948*/
								break; /*2949*/
							} /*2949*/
						} /*2949*/
						$k[$j++] = $1.swa; /*2952*/
						$1.encb(); /*2952*/
						$1.cset = "seta"; /*2953*/
						break; /*2954*/
					} /*2954*/
					$k[$j++] = $eq($1.cset, "seta"); /*2956*/
					$k[$j++] = $get($1.msg, $1.i); /*2956*/
					$1.bnota(); /*2956*/
					var _7h = $k[--$j]; /*2956*/
					if (($k[--$j] && _7h)) { /*2968*/
						if ($1.i < ($1.msglen - 1)) { /*2964*/
							$k[$j++] = $1.i + 1; /*2958*/
							$1.abeforeb(); /*2958*/
							if ($k[--$j]) { /*2963*/
								$k[$j++] = $1.sft; /*2959*/
								$1.enca(); /*2959*/
								$k[$j++] = $get($1.msg, $1.i); /*2960*/
								$1.encb(); /*2960*/
								$1.i = $1.i + 1; /*2961*/
								break; /*2962*/
							} /*2962*/
						} /*2962*/
						$k[$j++] = $1.swb; /*2965*/
						$1.enca(); /*2965*/
						$1.cset = "setb"; /*2966*/
						break; /*2967*/
					} /*2967*/
					if ($eq($1.cset, "setc") && ($1.nums < 2)) { /*2978*/
						$k[$j++] = $1.i; /*2970*/
						$1.abeforeb(); /*2970*/
						if ($k[--$j]) { /*2974*/
							$k[$j++] = $1.swa; /*2971*/
							$1.encc(); /*2971*/
							$1.cset = "seta"; /*2972*/
							break; /*2973*/
						} /*2973*/
						$k[$j++] = $1.swb; /*2975*/
						$1.encc(); /*2975*/
						$1.cset = "setb"; /*2976*/
						break; /*2977*/
					} /*2977*/
					if ($eq($1.cset, "seta")) { /*2985*/
						$k[$j++] = $get($1.msg, $1.i); /*2982*/
						$1.enca(); /*2982*/
						$1.i = $1.i + 1; /*2983*/
						break; /*2984*/
					} /*2984*/
					if ($eq($1.cset, "setb")) { /*2990*/
						$k[$j++] = $get($1.msg, $1.i); /*2987*/
						$1.encb(); /*2987*/
						$1.i = $1.i + 1; /*2988*/
						break; /*2989*/
					} /*2989*/
					if ($eq($1.cset, "setc")) { /*3000*/
						if ($get($1.msg, $1.i) == $1.fn1) { /*2997*/
							$k[$j++] = $1.fn1; /*2993*/
							$1.encc(); /*2993*/
							$1.i = $1.i + 1; /*2994*/
						} else { /*2997*/
							$k[$j++] = $geti($1.msg, $1.i, 2); /*2996*/
							$1.encc(); /*2996*/
							$1.i = $1.i + 2; /*2997*/
						} /*2997*/
						break; /*2999*/
					} /*2999*/
					break; /*3002*/
				} /*3002*/
			} /*3002*/
			$1.cws = $geti($1.cws, 0, $1.j); /*3006*/
		} /*3006*/
		var _8O = $a($1.j + 2); /*3010*/
		$puti(_8O, 0, $1.cws); /*3010*/
		$1.cws = _8O; /*3010*/
		$1.csum = $get($1.cws, 0); /*3011*/
		for (var _8U = 1, _8T = $1.j - 1; _8U <= _8T; _8U += 1) { /*3015*/
			$1.i = _8U; /*3013*/
			$1.csum = $1.csum + ($get($1.cws, $1.i) * $1.i); /*3014*/
		} /*3014*/
		$1.csum = $1.csum % 103; /*3016*/
		$put($1.cws, $1.j, $1.csum); /*3017*/
		$put($1.cws, $1.j + 1, $get($1.seta, $1.stp)); /*3018*/
		$1.encs = $a(["212222", "222122", "222221", "121223", "121322", "131222", "122213", "122312", "132212", "221213", "221312", "231212", "112232", "122132", "122231", "113222", "123122", "123221", "223211", "221132", "221231", "213212", "223112", "312131", "311222", "321122", "321221", "312212", "322112", "322211", "212123", "212321", "232121", "111323", "131123", "131321", "112313", "132113", "132311", "211313", "231113", "231311", "112133", "112331", "132131", "113123", "113321", "133121", "313121", "211331", "231131", "213113", "213311", "213131", "311123", "311321", "331121", "312113", "312311", "332111", "314111", "221411", "431111", "111224", "111422", "121124", "121421", "141122", "141221", "112214", "112412", "122114", "122411", "142112", "142211", "241211", "221114", "413111", "241112", "134111", "111242", "121142", "121241", "114212", "124112", "124211", "411212", "421112", "421211", "212141", "214121", "412121", "111143", "111341", "131141", "114113", "114311", "411113", "411311", "113141", "114131", "311141", "411131", "211412", "211214", "211232", "2331112"]); /*3038*/
		$1.sbs = $s(($1.cws.length * 6) + 1); /*3041*/
		for (var _8o = 0, _8n = $1.cws.length - 1; _8o <= _8n; _8o += 1) { /*3045*/
			$1.i = _8o; /*3043*/
			$puti($1.sbs, $1.i * 6, $get($1.encs, $get($1.cws, $1.i))); /*3044*/
		} /*3044*/
		$k[$j++] = Infinity; /*3055*/
		$k[$j++] = "ren"; /*3051*/
		$k[$j++] = $0.renlinear; /*3051*/
		$k[$j++] = "sbs"; /*3051*/
		$k[$j++] = Infinity; /*3051*/
		var _8w = $1.sbs; /*3050*/
		for (var _8x = 0, _8y = _8w.length; _8x < _8y; _8x++) { /*3050*/
			$k[$j++] = $get(_8w, _8x) - 48; /*3050*/
		} /*3050*/
		var _90 = $a(); /*3051*/
		$k[$j++] = _90; /*3052*/
		$k[$j++] = "bhs"; /*3052*/
		$k[$j++] = Infinity; /*3052*/
		for (var _92 = 0, _93 = ~~(($1.sbs.length + 1) / 2); _92 < _93; _92++) { /*3051*/
			$k[$j++] = $1.height; /*3051*/
		} /*3051*/
		var _95 = $a(); /*3052*/
		$k[$j++] = _95; /*3053*/
		$k[$j++] = "bbs"; /*3053*/
		$k[$j++] = Infinity; /*3053*/
		for (var _97 = 0, _98 = ~~(($1.sbs.length + 1) / 2); _97 < _98; _97++) { /*3052*/
			$k[$j++] = 0; /*3052*/
		} /*3052*/
		var _99 = $a(); /*3053*/
		$k[$j++] = _99; /*3055*/
		$k[$j++] = "txt"; /*3055*/
		$k[$j++] = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*3055*/
		$k[$j++] = "textxalign"; /*3055*/
		$k[$j++] = "center"; /*3055*/
		$k[$j++] = "opt"; /*3055*/
		$k[$j++] = $1.options; /*3055*/
		var _9I = $d(); /*3055*/
		$k[$j++] = _9I; /*3058*/
		if (!$1.dontdraw) { /*3058*/
			$0.renlinear(); /*3058*/
		} /*3058*/
	};
	$0["gs1-128"] = function() {
		var $1 = {}; /*3086*/
		$1.options = $k[--$j]; /*3088*/
		$1.barcode = $k[--$j]; /*3089*/
		$1.dontdraw = false; /*3091*/
		$1.includetext = false; /*3092*/
		$1.textfont = "Courier"; /*3093*/
		$1.textsize = 10; /*3094*/
		$1.textxoffset = 0; /*3095*/
		$1.textyoffset = -8.5; /*3096*/
		$1.height = 0.5; /*3097*/
		$1.linkagea = false; /*3098*/
		$1.linkagec = false; /*3099*/
		$forall($1.options, function() { /*3110*/
			var _3 = $k[--$j]; /*3110*/
			$1[$k[--$j]] = _3; /*3110*/
		}); /*3110*/
		$1.textfont = "" + $1.textfont; /*3112*/
		$1.textsize = +$1.textsize; /*3113*/
		$1.textxoffset = +$1.textxoffset; /*3114*/
		$1.textyoffset = +$1.textyoffset; /*3115*/
		$1.height = +$1.height; /*3116*/
		$1.text = $1.barcode; /*3118*/
		$1.expand = function() {
			$1.in = $k[--$j]; /*3122*/
			$1.out = $s($1.in.length); /*3123*/
			$1.j = 0; /*3124*/
			$k[$j++] = $1.in; /*3138*/
			for (;;) { /*3138*/
				$search($k[--$j], "^"); /*3127*/
				if ($k[--$j]) { /*3136*/
					var _H = $k[--$j]; /*3128*/
					$puti($1.out, $1.j, _H); /*3128*/
					$1.j = (_H.length + $1.j) + 1; /*3129*/
					$j--; /*3130*/
					var _L = $k[--$j]; /*3131*/
					$put($1.out, $1.j - 1, ~~$z($geti(_L, 0, 3))); /*3131*/
					$k[$j++] = $geti(_L, 3, _L.length - 3); /*3132*/
				} else { /*3136*/
					var _Q = $k[--$j]; /*3134*/
					$puti($1.out, $1.j, _Q); /*3134*/
					$1.j = _Q.length + $1.j; /*3135*/
					$k[$j++] = $geti($1.out, 0, $1.j); /*3136*/
					break; /*3136*/
				} /*3136*/
			} /*3136*/
		}; /*3139*/
		$1.ais = $a([]); /*3142*/
		$1.aival = {}; /*3143*/
		var _Y = $1.barcode; /*3144*/
		$k[$j++] = $geti(_Y, 1, _Y.length - 1); /*3156*/
		for (;;) { /*3156*/
			var _a = $k[--$j]; /*3146*/
			$k[$j++] = _a; /*3146*/
			if ($eq(_a, "")) { /*3146*/
				break; /*3146*/
			} /*3146*/
			$search($k[--$j], ")"); /*3147*/
			$j--; /*3147*/
			var _c = $k[--$j]; /*3148*/
			var _d = $k[--$j]; /*3148*/
			var _e = $k[--$j]; /*3149*/
			$k[$j++] = _c; /*3149*/
			$search(_e, "("); /*3149*/
			if ($k[--$j]) { /*3152*/
				var _g = $k[--$j]; /*3150*/
				var _h = $k[--$j]; /*3150*/
				var _i = $k[--$j]; /*3150*/
				var _j = $k[--$j]; /*3150*/
				$k[$j++] = _i; /*3150*/
				$k[$j++] = _j; /*3150*/
				$k[$j++] = _g; /*3150*/
			} else { /*3152*/
				var _k = $k[--$j]; /*3152*/
				var _l = $k[--$j]; /*3152*/
				$k[$j++] = ""; /*3152*/
				$k[$j++] = _l; /*3152*/
				$k[$j++] = _k; /*3152*/
			} /*3152*/
			$k[$j++] = Infinity; /*3154*/
			$aload($1.ais); /*3154*/
			var _o = $k[$j - 1 - ($counttomark() + 2)]; /*3154*/
			$k[$j++] = _o; /*3154*/
			$1.ais = $a(); /*3154*/
			var _r = $k[--$j]; /*3155*/
			var _s = $k[--$j]; /*3155*/
			$k[$j++] = $1.aival; /*3155*/
			$k[$j++] = _s; /*3155*/
			$k[$j++] = _r; /*3155*/
			$1.expand(); /*3155*/
			var _t = $k[--$j]; /*3155*/
			var _u = $k[--$j]; /*3155*/
			$put($k[--$j], _u, _t); /*3155*/
		} /*3155*/
		$j--; /*3157*/
		$1.aifixed = {}; /*3162*/
		$k[$j++] = Infinity; /*3164*/
		for (var _w = 0; _w <= 4; _w += 1) { /*3164*/
			$k[$j++] = _w; /*3164*/
		} /*3164*/
		var _x = $a(); /*3164*/
		for (var _y = 0, _z = _x.length; _y < _z; _y++) { /*3167*/
			var _12 = $strcpy($s(2), "00"); /*3166*/
			$put(_12, 1, $get(_x, _y) + 48); /*3166*/
			$put($1.aifixed, _12, _12); /*3166*/
		} /*3166*/
		$k[$j++] = Infinity; /*3172*/
		for (var _14 = 11; _14 <= 20; _14 += 1) { /*3169*/
			$k[$j++] = _14; /*3169*/
		} /*3169*/
		$k[$j++] = 23; /*3171*/
		for (var _15 = 31; _15 <= 36; _15 += 1) { /*3171*/
			$k[$j++] = _15; /*3171*/
		} /*3171*/
		$k[$j++] = 41; /*3172*/
		var _16 = $a(); /*3172*/
		for (var _17 = 0, _18 = _16.length; _17 < _18; _17++) { /*3175*/
			var _1B = $cvrs($s(2), $get(_16, _17), 10); /*3174*/
			$put($1.aifixed, _1B, _1B); /*3174*/
		} /*3174*/
		$1.fnc1 = -1; /*3178*/
		$1.c128 = $a([$1.fnc1]); /*3179*/
		for (var _1H = 0, _1G = $1.ais.length - 1; _1H <= _1G; _1H += 1) { /*3195*/
			$1.i = _1H; /*3181*/
			$1.ai = $get($1.ais, $1.i); /*3182*/
			$1.val = $get($1.aival, $1.ai); /*3183*/
			var _1R = $a(($1.c128.length + $1.ai.length) + $1.val.length); /*3184*/
			$puti(_1R, 0, $1.c128); /*3185*/
			$k[$j++] = _1R; /*3186*/
			$k[$j++] = _1R; /*3186*/
			$k[$j++] = $1.c128.length; /*3186*/
			$k[$j++] = $1.ai; /*3186*/
			$k[$j++] = Infinity; /*3186*/
			var _1V = $k[--$j]; /*3186*/
			var _1W = $k[--$j]; /*3186*/
			$k[$j++] = _1V; /*3186*/
			$forall(_1W); /*3186*/
			var _1X = $a(); /*3186*/
			var _1Y = $k[--$j]; /*3186*/
			$puti($k[--$j], _1Y, _1X); /*3186*/
			var _1a = $k[--$j]; /*3187*/
			$k[$j++] = _1a; /*3187*/
			$k[$j++] = _1a; /*3187*/
			$k[$j++] = $1.c128.length + $1.ai.length; /*3187*/
			$k[$j++] = $1.val; /*3187*/
			$k[$j++] = Infinity; /*3187*/
			var _1e = $k[--$j]; /*3187*/
			var _1f = $k[--$j]; /*3187*/
			$k[$j++] = _1e; /*3187*/
			$forall(_1f); /*3187*/
			var _1g = $a(); /*3187*/
			var _1h = $k[--$j]; /*3187*/
			$puti($k[--$j], _1h, _1g); /*3187*/
			$1.c128 = $k[--$j]; /*3188*/
			var _1p = $get($1.aifixed, $geti($1.ai, 0, 2)) !== undefined; /*3189*/
			if (($1.i != ($1.ais.length - 1)) && (!_1p)) { /*3194*/
				var _1r = $a($1.c128.length + 1); /*3190*/
				$puti(_1r, 0, $1.c128); /*3191*/
				$put(_1r, $1.c128.length, $1.fnc1); /*3192*/
				$1.c128 = _1r; /*3193*/
			} /*3193*/
		} /*3193*/
		$1.barcode = $s(($1.c128.length + 1) * 5); /*3198*/
		$1.i = 0; /*3199*/
		$1.j = 0; /*3199*/
		for (;;) { /*3209*/
			if ($1.i == $1.c128.length) { /*3200*/
				break; /*3200*/
			} /*3200*/
			var _21 = $get($1.c128, $1.i); /*3201*/
			$k[$j++] = _21; /*3206*/
			if (_21 == $1.fnc1) { /*3205*/
				$j--; /*3202*/
				$puti($1.barcode, $1.j, "^FNC1"); /*3202*/
				$1.j = $1.j + 4; /*3203*/
			} else { /*3205*/
				$put($1.barcode, $1.j, $k[--$j]); /*3205*/
			} /*3205*/
			$1.i = $1.i + 1; /*3207*/
			$1.j = $1.j + 1; /*3208*/
		} /*3208*/
		if ($1.linkagea || $1.linkagec) { /*3213*/
			$k[$j++] = $1.barcode; /*3211*/
			$k[$j++] = $1.j; /*3211*/
			if ($1.linkagea) { /*3211*/
				$k[$j++] = "^LNKA"; /*3211*/
			} else { /*3211*/
				$k[$j++] = "^LNKC"; /*3211*/
			} /*3211*/
			var _2G = $k[--$j]; /*3211*/
			var _2H = $k[--$j]; /*3211*/
			$puti($k[--$j], _2H, _2G); /*3211*/
			$1.j = $1.j + 5; /*3212*/
		} /*3212*/
		$1.barcode = $geti($1.barcode, 0, $1.j); /*3214*/
		$1.options.height = $1.height; /*3217*/
		$1.options.dontdraw = true; /*3218*/
		$1.options.parsefnc = true; /*3219*/
		$k[$j++] = "args"; /*3220*/
		$k[$j++] = $1.barcode; /*3220*/
		$k[$j++] = $1.options; /*3220*/
		$0.code128(); /*3220*/
		var _2T = $k[--$j]; /*3220*/
		$1[$k[--$j]] = _2T; /*3220*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*3222*/
		$1.args.textxalign = "center"; /*3223*/
		$1.args.opt = $1.options; /*3224*/
		$k[$j++] = $1.args; /*3227*/
		if (!$1.dontdraw) { /*3227*/
			$0.renlinear(); /*3227*/
		} /*3227*/
	};
	$0.ean14 = function() {
		var $1 = {}; /*3255*/
		$1.options = $k[--$j]; /*3257*/
		$1.barcode = $k[--$j]; /*3258*/
		$1.dontdraw = false; /*3260*/
		$1.includetext = false; /*3261*/
		$1.textfont = "Courier"; /*3262*/
		$1.textsize = 10; /*3263*/
		$1.textxoffset = 0; /*3264*/
		$1.textyoffset = -8.5; /*3265*/
		$1.height = 1; /*3266*/
		$forall($1.options, function() { /*3277*/
			var _3 = $k[--$j]; /*3277*/
			$1[$k[--$j]] = _3; /*3277*/
		}); /*3277*/
		$1.textfont = "" + $1.textfont; /*3279*/
		$1.textsize = +$1.textsize; /*3280*/
		$1.textxoffset = +$1.textxoffset; /*3281*/
		$1.textyoffset = +$1.textyoffset; /*3282*/
		$1.height = +$1.height; /*3283*/
		$1.text = $1.barcode; /*3286*/
		var _B = $1.barcode; /*3287*/
		$k[$j++] = $s(_B.length); /*3288*/
		$k[$j++] = 0; /*3288*/
		$forall(_B, function() { /*3288*/
			var _D = $k[--$j]; /*3288*/
			$k[$j++] = _D; /*3288*/
			if (_D != 32) { /*3288*/
				var _E = $k[--$j]; /*3288*/
				var _F = $k[--$j]; /*3288*/
				var _G = $k[--$j]; /*3288*/
				$put(_G, _F, _E); /*3288*/
				$k[$j++] = _G; /*3288*/
				$k[$j++] = _F + 1; /*3288*/
			} else { /*3288*/
				$j--; /*3288*/
			} /*3288*/
		}); /*3288*/
		var _H = $k[--$j]; /*3289*/
		$1.barcode = $geti($k[--$j], 0, _H); /*3289*/
		$1.hasspace = $1.text.length != $1.barcode.length; /*3290*/
		if ($ne($geti($1.barcode, 0, 4), "(01)")) { /*3295*/
			$k[$j++] = "bwipp.ean14badAI"; /*3294*/
			$k[$j++] = "GS1-14 must begin with (01) application identifier"; /*3294*/
			$0.raiseerror(); /*3294*/
		} /*3294*/
		if (($1.barcode.length != 17) && ($1.barcode.length != 18)) { /*3298*/
			$k[$j++] = "bwipp.ean14badLength"; /*3297*/
			$k[$j++] = "GS1-14 must be 13 or 14 digits"; /*3297*/
			$0.raiseerror(); /*3297*/
		} /*3297*/
		$forall($geti($1.barcode, 4, $1.barcode.length - 4), function() { /*3303*/
			var _T = $k[--$j]; /*3300*/
			if ((_T < 48) || (_T > 57)) { /*3302*/
				$k[$j++] = "bwipp.ean14badCharacter"; /*3301*/
				$k[$j++] = "GS1-14 must contain only digits"; /*3301*/
				$0.raiseerror(); /*3301*/
			} /*3301*/
		}); /*3301*/
		$1.checksum = 0; /*3306*/
		for (var _U = 0; _U <= 12; _U += 1) { /*3310*/
			$1.i = _U; /*3308*/
			$k[$j++] = "checksum"; /*3309*/
			$k[$j++] = $1.checksum; /*3309*/
			$k[$j++] = $get($1.barcode, $1.i + 4) - 48; /*3309*/
			if (($1.i % 2) == 0) { /*3309*/
				var _a = $k[--$j]; /*3309*/
				$k[$j++] = _a * 3; /*3309*/
			} /*3309*/
			var _b = $k[--$j]; /*3309*/
			var _c = $k[--$j]; /*3309*/
			$1[$k[--$j]] = _c + _b; /*3309*/
		} /*3309*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*3311*/
		if ($1.barcode.length == 18) { /*3325*/
			if ($get($1.barcode, 17) != ($1.checksum + 48)) { /*3315*/
				$k[$j++] = "bwipp.ean14badCheckDigit"; /*3314*/
				$k[$j++] = "Incorrect GS1-14 check digit provided"; /*3314*/
				$0.raiseerror(); /*3314*/
			} /*3314*/
		} else { /*3325*/
			var _j = $s(18); /*3317*/
			$puti(_j, 0, $1.barcode); /*3318*/
			$put(_j, 17, $1.checksum + 48); /*3319*/
			$1.barcode = _j; /*3320*/
			var _o = $1.hasspace ? 2 : 1; /*3321*/
			var _p = $s($1.text.length + _o); /*3321*/
			$puti(_p, _p.length - 2, " "); /*3322*/
			$put(_p, _p.length - 1, $1.checksum + 48); /*3323*/
			$puti(_p, 0, $1.text); /*3324*/
			$1.text = _p; /*3325*/
		} /*3325*/
		$1.gtin = $geti($1.barcode, 4, 14); /*3327*/
		$1.barcode = $s(21); /*3330*/
		$puti($1.barcode, 0, "^FNC101"); /*3331*/
		$puti($1.barcode, 7, $1.gtin); /*3332*/
		$1.options.dontdraw = true; /*3335*/
		$1.options.parsefnc = true; /*3336*/
		$k[$j++] = "args"; /*3337*/
		$k[$j++] = $1.barcode; /*3337*/
		$k[$j++] = $1.options; /*3337*/
		$0.code128(); /*3337*/
		var _12 = $k[--$j]; /*3337*/
		$1[$k[--$j]] = _12; /*3337*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*3339*/
		$1.args.textxalign = "center"; /*3340*/
		$1.args.opt = $1.options; /*3341*/
		$k[$j++] = $1.args; /*3344*/
		if (!$1.dontdraw) { /*3344*/
			$0.renlinear(); /*3344*/
		} /*3344*/
	};
	$0.sscc18 = function() {
		var $1 = {}; /*3372*/
		$1.options = $k[--$j]; /*3374*/
		$1.barcode = $k[--$j]; /*3375*/
		$1.dontdraw = false; /*3377*/
		$1.includetext = false; /*3378*/
		$1.textfont = "Courier"; /*3379*/
		$1.textsize = 10; /*3380*/
		$1.textxoffset = 0; /*3381*/
		$1.textyoffset = -8.5; /*3382*/
		$1.height = 1; /*3383*/
		$forall($1.options, function() { /*3394*/
			var _3 = $k[--$j]; /*3394*/
			$1[$k[--$j]] = _3; /*3394*/
		}); /*3394*/
		$1.textfont = "" + $1.textfont; /*3396*/
		$1.textsize = +$1.textsize; /*3397*/
		$1.textxoffset = +$1.textxoffset; /*3398*/
		$1.textyoffset = +$1.textyoffset; /*3399*/
		$1.height = +$1.height; /*3400*/
		$1.text = $1.barcode; /*3403*/
		var _B = $1.barcode; /*3404*/
		$k[$j++] = $s(_B.length); /*3405*/
		$k[$j++] = 0; /*3405*/
		$forall(_B, function() { /*3405*/
			var _D = $k[--$j]; /*3405*/
			$k[$j++] = _D; /*3405*/
			if (_D != 32) { /*3405*/
				var _E = $k[--$j]; /*3405*/
				var _F = $k[--$j]; /*3405*/
				var _G = $k[--$j]; /*3405*/
				$put(_G, _F, _E); /*3405*/
				$k[$j++] = _G; /*3405*/
				$k[$j++] = _F + 1; /*3405*/
			} else { /*3405*/
				$j--; /*3405*/
			} /*3405*/
		}); /*3405*/
		var _H = $k[--$j]; /*3406*/
		$1.barcode = $geti($k[--$j], 0, _H); /*3406*/
		$1.hasspace = $1.text.length != $1.barcode.length; /*3407*/
		if ($ne($geti($1.barcode, 0, 4), "(00)")) { /*3412*/
			$k[$j++] = "bwipp.sscc18badAI"; /*3411*/
			$k[$j++] = "SSCC-18 must begin with (00) application identifier"; /*3411*/
			$0.raiseerror(); /*3411*/
		} /*3411*/
		if (($1.barcode.length != 21) && ($1.barcode.length != 22)) { /*3415*/
			$k[$j++] = "bwipp.sscc18badLength"; /*3414*/
			$k[$j++] = "SSCC-18 must be 17 or 18 digits"; /*3414*/
			$0.raiseerror(); /*3414*/
		} /*3414*/
		$forall($geti($1.barcode, 4, $1.barcode.length - 4), function() { /*3420*/
			var _T = $k[--$j]; /*3417*/
			if ((_T < 48) || (_T > 57)) { /*3419*/
				$k[$j++] = "bwipp.sscc18badCharacter"; /*3418*/
				$k[$j++] = "SSCC-18 must contain only digits"; /*3418*/
				$0.raiseerror(); /*3418*/
			} /*3418*/
		}); /*3418*/
		$1.checksum = 0; /*3423*/
		for (var _U = 0; _U <= 16; _U += 1) { /*3427*/
			$1.i = _U; /*3425*/
			$k[$j++] = "checksum"; /*3426*/
			$k[$j++] = $1.checksum; /*3426*/
			$k[$j++] = $get($1.barcode, $1.i + 4) - 48; /*3426*/
			if (($1.i % 2) == 0) { /*3426*/
				var _a = $k[--$j]; /*3426*/
				$k[$j++] = _a * 3; /*3426*/
			} /*3426*/
			var _b = $k[--$j]; /*3426*/
			var _c = $k[--$j]; /*3426*/
			$1[$k[--$j]] = _c + _b; /*3426*/
		} /*3426*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*3428*/
		if ($1.barcode.length == 22) { /*3442*/
			if ($get($1.barcode, 21) != ($1.checksum + 48)) { /*3432*/
				$k[$j++] = "bwipp.sscc18badCheckDigit"; /*3431*/
				$k[$j++] = "Incorrect SSCC-18 check digit provided"; /*3431*/
				$0.raiseerror(); /*3431*/
			} /*3431*/
		} else { /*3442*/
			var _j = $s(22); /*3434*/
			$puti(_j, 0, $1.barcode); /*3435*/
			$put(_j, 21, $1.checksum + 48); /*3436*/
			$1.barcode = _j; /*3437*/
			var _o = $1.hasspace ? 2 : 1; /*3438*/
			var _p = $s($1.text.length + _o); /*3438*/
			$puti(_p, _p.length - 2, " "); /*3439*/
			$put(_p, _p.length - 1, $1.checksum + 48); /*3440*/
			$puti(_p, 0, $1.text); /*3441*/
			$1.text = _p; /*3442*/
		} /*3442*/
		$1.sscc = $geti($1.barcode, 4, 18); /*3444*/
		$1.barcode = $s(25); /*3447*/
		$puti($1.barcode, 0, "^FNC100"); /*3448*/
		$puti($1.barcode, 7, $1.sscc); /*3449*/
		$1.options.dontdraw = true; /*3452*/
		$1.options.parsefnc = true; /*3453*/
		$k[$j++] = "args"; /*3454*/
		$k[$j++] = $1.barcode; /*3454*/
		$k[$j++] = $1.options; /*3454*/
		$0.code128(); /*3454*/
		var _12 = $k[--$j]; /*3454*/
		$1[$k[--$j]] = _12; /*3454*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*3456*/
		$1.args.textxalign = "center"; /*3457*/
		$1.args.opt = $1.options; /*3458*/
		$k[$j++] = $1.args; /*3461*/
		if (!$1.dontdraw) { /*3461*/
			$0.renlinear(); /*3461*/
		} /*3461*/
	};
	$0.code39 = function() {
		var $1 = {}; /*3488*/
		$1.options = $k[--$j]; /*3490*/
		$1.barcode = $k[--$j]; /*3491*/
		$1.dontdraw = false; /*3493*/
		$1.includecheck = false; /*3494*/
		$1.validatecheck = false; /*3495*/
		$1.includetext = false; /*3496*/
		$1.includecheckintext = false; /*3497*/
		$1.hidestars = false; /*3498*/
		$1.textfont = "Courier"; /*3499*/
		$1.textsize = 10; /*3500*/
		$1.textyoffset = -8.5; /*3501*/
		$1.height = 1; /*3502*/
		$forall($1.options, function() { /*3513*/
			var _3 = $k[--$j]; /*3513*/
			$1[$k[--$j]] = _3; /*3513*/
		}); /*3513*/
		$1.textfont = "" + $1.textfont; /*3515*/
		$1.textsize = +$1.textsize; /*3516*/
		$1.textyoffset = +$1.textyoffset; /*3517*/
		$1.height = +$1.height; /*3518*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*3521*/
		$1.charvals = {}; /*3522*/
		for (var _9 = 0; _9 <= 42; _9 += 1) { /*3523*/
			$put($1.charvals, $geti($1.barchars, _9, 1), _9); /*3523*/
		} /*3523*/
		for (var _F = 0, _E = $1.barcode.length - 1; _F <= _E; _F += 1) { /*3530*/
			var _J = $get($1.charvals, $geti($1.barcode, _F, 1)) !== undefined; /*3527*/
			if (!_J) { /*3529*/
				$k[$j++] = "bwipp.code39badCharacter"; /*3528*/
				$k[$j++] = "Code 39 must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*3528*/
				$0.raiseerror(); /*3528*/
			} /*3528*/
		} /*3528*/
		$k[$j++] = "barlen"; /*3532*/
		$k[$j++] = $1.barcode.length; /*3532*/
		if ($1.validatecheck) { /*3532*/
			var _M = $k[--$j]; /*3532*/
			$k[$j++] = _M - 1; /*3532*/
		} /*3532*/
		var _N = $k[--$j]; /*3532*/
		$1[$k[--$j]] = _N; /*3532*/
		$1.checksum = 0; /*3534*/
		for (var _R = 0, _Q = $1.barlen - 1; _R <= _Q; _R += 1) { /*3538*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _R, 1)) + $1.checksum; /*3537*/
		} /*3537*/
		$1.checksum = $1.checksum % 43; /*3539*/
		if ($1.validatecheck) { /*3546*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*3543*/
				$k[$j++] = "bwipp.code39badCheckDigit"; /*3542*/
				$k[$j++] = "Incorrect Code 39 check digit provided"; /*3542*/
				$0.raiseerror(); /*3542*/
			} /*3542*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*3544*/
			$1.includecheck = true; /*3545*/
		} /*3545*/
		$1.encs = $a(["1113313111", "3113111131", "1133111131", "3133111111", "1113311131", "3113311111", "1133311111", "1113113131", "3113113111", "1133113111", "3111131131", "1131131131", "3131131111", "1111331131", "3111331111", "1131331111", "1111133131", "3111133111", "1131133111", "1111333111", "3111111331", "1131111331", "3131111311", "1111311331", "3111311311", "1131311311", "1111113331", "3111113311", "1131113311", "1111313311", "3311111131", "1331111131", "3331111111", "1311311131", "3311311111", "1331311111", "1311113131", "3311113111", "1331113111", "1313131111", "1313111311", "1311131311", "1113131311", "1311313111"]); /*3559*/
		var _l = $1.includecheck ? 3 : 2; /*3561*/
		$1.sbs = $s(($1.barlen + _l) * 10); /*3561*/
		var _p = $1.includecheck ? 3 : 2; /*3562*/
		$1.txt = $a($1.barlen + _p); /*3562*/
		$puti($1.sbs, 0, $get($1.encs, 43)); /*3565*/
		if (!$1.hidestars) { /*3569*/
			$put($1.txt, 0, $a(["*", 0, $1.textyoffset, $1.textfont, $1.textsize])); /*3567*/
		} else { /*3569*/
			$put($1.txt, 0, $a(["", 0, $1.textyoffset, $1.textfont, $1.textsize])); /*3569*/
		} /*3569*/
		for (var _17 = 0, _16 = $1.barlen - 1; _17 <= _16; _17 += 1) { /*3577*/
			$1.i = _17; /*3573*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*3574*/
			$puti($1.sbs, ($1.i * 10) + 10, $get($1.encs, $1.indx)); /*3575*/
			$put($1.txt, $1.i + 1, $a([$geti($1.barcode, $1.i, 1), ($1.i + 1) * 16, $1.textyoffset, $1.textfont, $1.textsize])); /*3576*/
		} /*3576*/
		if ($1.includecheck) { /*3598*/
			$puti($1.sbs, ($1.barlen * 10) + 10, $get($1.encs, $1.checksum)); /*3581*/
			if ($1.includecheckintext) { /*3585*/
				$put($1.txt, $1.barlen + 1, $a([$geti($1.barchars, $1.checksum, 1), ($1.barlen + 1) * 16, $1.textyoffset, $1.textfont, $1.textsize])); /*3583*/
			} else { /*3585*/
				$put($1.txt, $1.barlen + 1, $a(["", ($1.barlen + 1) * 16, $1.textyoffset, $1.textfont, $1.textsize])); /*3585*/
			} /*3585*/
			$puti($1.sbs, ($1.barlen * 10) + 20, $get($1.encs, 43)); /*3587*/
			if (!$1.hidestars) { /*3591*/
				$put($1.txt, $1.barlen + 2, $a(["*", ($1.barlen + 2) * 16, $1.textyoffset, $1.textfont, $1.textsize])); /*3589*/
			} else { /*3591*/
				$put($1.txt, $1.barlen + 2, $a(["", ($1.barlen + 2) * 16, $1.textyoffset, $1.textfont, $1.textsize])); /*3591*/
			} /*3591*/
		} else { /*3598*/
			$puti($1.sbs, ($1.barlen * 10) + 10, $get($1.encs, 43)); /*3594*/
			if (!$1.hidestars) { /*3598*/
				$put($1.txt, $1.barlen + 1, $a(["*", ($1.barlen + 1) * 16, $1.textyoffset, $1.textfont, $1.textsize])); /*3596*/
			} else { /*3598*/
				$put($1.txt, $1.barlen + 1, $a(["", ($1.barlen + 1) * 16, $1.textyoffset, $1.textfont, $1.textsize])); /*3598*/
			} /*3598*/
		} /*3598*/
		$k[$j++] = Infinity; /*3611*/
		$k[$j++] = "ren"; /*3606*/
		$k[$j++] = $0.renlinear; /*3606*/
		$k[$j++] = "sbs"; /*3606*/
		$k[$j++] = Infinity; /*3606*/
		var _2S = $1.sbs; /*3605*/
		for (var _2T = 0, _2U = _2S.length; _2T < _2U; _2T++) { /*3605*/
			$k[$j++] = $get(_2S, _2T) - 48; /*3605*/
		} /*3605*/
		var _2W = $a(); /*3606*/
		$k[$j++] = _2W; /*3607*/
		$k[$j++] = "bhs"; /*3607*/
		$k[$j++] = Infinity; /*3607*/
		for (var _2Y = 0, _2Z = ~~(($1.sbs.length + 1) / 2); _2Y < _2Z; _2Y++) { /*3606*/
			$k[$j++] = $1.height; /*3606*/
		} /*3606*/
		var _2b = $a(); /*3607*/
		$k[$j++] = _2b; /*3608*/
		$k[$j++] = "bbs"; /*3608*/
		$k[$j++] = Infinity; /*3608*/
		for (var _2d = 0, _2e = ~~(($1.sbs.length + 1) / 2); _2d < _2e; _2d++) { /*3607*/
			$k[$j++] = 0; /*3607*/
		} /*3607*/
		var _2f = $a(); /*3608*/
		$k[$j++] = _2f; /*3610*/
		if ($1.includetext) { /*3610*/
			$k[$j++] = "txt"; /*3609*/
			$k[$j++] = $1.txt; /*3609*/
		} /*3609*/
		$k[$j++] = "opt"; /*3611*/
		$k[$j++] = $1.options; /*3611*/
		var _2j = $d(); /*3611*/
		$k[$j++] = _2j; /*3614*/
		if (!$1.dontdraw) { /*3614*/
			$0.renlinear(); /*3614*/
		} /*3614*/
	};
	$0.code39ext = function() {
		var $1 = {}; /*3642*/
		$1.options = $k[--$j]; /*3644*/
		$1.barcode = $k[--$j]; /*3645*/
		$1.dontdraw = false; /*3647*/
		$1.includetext = false; /*3648*/
		$1.parse = false; /*3649*/
		$forall($1.options, function() { /*3660*/
			var _3 = $k[--$j]; /*3660*/
			$1[$k[--$j]] = _3; /*3660*/
		}); /*3660*/
		$forall($1.barcode, function() { /*3688*/
			if ($k[--$j] >= 128) { /*3687*/
				$k[$j++] = "bwipp.code39extBadCharacter"; /*3686*/
				$k[$j++] = "Code 39 Extended must contain only ASCII characters"; /*3686*/
				$0.raiseerror(); /*3686*/
			} /*3686*/
		}); /*3686*/
		$1.barlen = $1.barcode.length; /*3690*/
		$1.extencs = $a
		$1.newcode = $s($1.barlen * 2); /*3704*/
		$1.newtext = $s($1.barlen * 2); /*3705*/
		$1.j = 0; /*3706*/
		for (var _F = 0, _E = $1.barlen - 1; _F <= _E; _F += 1) { /*3714*/
			$1.i = _F; /*3708*/
			$1.extchar = $get($1.extencs, $get($1.barcode, $1.i)); /*3709*/
			$puti($1.newcode, $1.j, $1.extchar); /*3710*/
			$put($1.newtext, $1.j, $get($1.barcode, $1.i)); /*3711*/
			if ($1.extchar.length != 1) { /*3712*/
				$puti($1.newtext, $1.j + 1, " "); /*3712*/
			} /*3712*/
			$1.j = $1.j + $1.extchar.length; /*3713*/
		} /*3713*/
		$1.newcode = $geti($1.newcode, 0, $1.j); /*3715*/
		$1.newtext = $geti($1.newtext, 0, $1.j); /*3716*/
		$1.options.dontdraw = true; /*3719*/
		$k[$j++] = "args"; /*3720*/
		$k[$j++] = $1.newcode; /*3720*/
		$k[$j++] = $1.options; /*3720*/
		$0.code39(); /*3720*/
		var _h = $k[--$j]; /*3720*/
		$1[$k[--$j]] = _h; /*3720*/
		if ($1.includetext) { /*3732*/
			$1.txt = $1.args.txt; /*3724*/
			for (var _o = 0, _n = $1.newtext.length - 1; _o <= _n; _o += 1) { /*3730*/
				$1.i = _o; /*3726*/
				$1.txtentry = $get($1.txt, $1.i + 1); /*3727*/
				$put($1.txtentry, 0, $geti($1.newtext, $1.i, 1)); /*3728*/
				$put($1.txt, $1.i + 1, $1.txtentry); /*3729*/
			} /*3729*/
			$1.args.txt = $1.txt; /*3731*/
		} /*3731*/
		$1.args.opt = $1.options; /*3733*/
		$k[$j++] = $1.args; /*3736*/
		if (!$1.dontdraw) { /*3736*/
			$0.renlinear(); /*3736*/
		} /*3736*/
	};
	$0.code32 = function() {
		var $1 = {}; /*3764*/
		$1.options = $k[--$j]; /*3766*/
		$1.barcode = $k[--$j]; /*3767*/
		$1.dontdraw = false; /*3769*/
		$1.includetext = false; /*3770*/
		$1.textfont = "Courier"; /*3771*/
		$1.textsize = 10; /*3772*/
		$1.textyoffset = -8.5; /*3773*/
		$1.textxoffset = 0; /*3774*/
		$1.height = 1; /*3775*/
		$forall($1.options, function() { /*3786*/
			var _3 = $k[--$j]; /*3786*/
			$1[$k[--$j]] = _3; /*3786*/
		}); /*3786*/
		$1.textfont = "" + $1.textfont; /*3788*/
		$1.textsize = +$1.textsize; /*3789*/
		$1.textyoffset = +$1.textyoffset; /*3790*/
		$1.height = +$1.height; /*3791*/
		if (($1.barcode.length != 8) && ($1.barcode.length != 9)) { /*3796*/
			$k[$j++] = "bwipp.code32badLength"; /*3795*/
			$k[$j++] = "Italian Pharmacode must be 8 or 9 digits"; /*3795*/
			$0.raiseerror(); /*3795*/
		} /*3795*/
		$forall($1.barcode, function() { /*3801*/
			var _C = $k[--$j]; /*3798*/
			if ((_C < 48) || (_C > 57)) { /*3800*/
				$k[$j++] = "bwipp.code32badCharacter"; /*3799*/
				$k[$j++] = "Italian Pharmacode must contain only digits"; /*3799*/
				$0.raiseerror(); /*3799*/
			} /*3799*/
		}); /*3799*/
		$1.checksum = 0; /*3804*/
		for (var _D = 0; _D <= 7; _D += 1) { /*3809*/
			$1.i = _D; /*3806*/
			$k[$j++] = $get($1.barcode, $1.i) - 48; /*3807*/
			if (($1.i % 2) != 0) { /*3807*/
				var _I = $k[--$j]; /*3807*/
				$k[$j++] = _I * 2; /*3807*/
			} /*3807*/
			var _J = $k[--$j]; /*3807*/
			$k[$j++] = _J; /*3807*/
			if (_J > 9) { /*3807*/
				var _K = $k[--$j]; /*3807*/
				$k[$j++] = _K - 9; /*3807*/
			} /*3807*/
			$1.checksum = $k[--$j] + $1.checksum; /*3808*/
		} /*3808*/
		$1.checksum = $1.checksum % 10; /*3810*/
		if ($1.barcode.length == 9) { /*3815*/
			if ($get($1.barcode, 8) != ($1.checksum + 48)) { /*3814*/
				$k[$j++] = "bwipp.code32badCheckDigit"; /*3813*/
				$k[$j++] = "Incorrect Italian Pharmacode check digit provided"; /*3813*/
				$0.raiseerror(); /*3813*/
			} /*3813*/
		} /*3813*/
		var _S = $s(10); /*3816*/
		$puti(_S, 0, $1.barcode); /*3817*/
		$put(_S, 8, $1.checksum + 48); /*3818*/
		$1.text = _S; /*3819*/
		$1.val = $cvrs($1.barcode, ~~$z($1.text), 32); /*3822*/
		$1.barcode = $s(6); /*3823*/
		for (var _Z = 0; _Z <= 5; _Z += 1) { /*3824*/
			$put($1.barcode, _Z, 48); /*3824*/
		} /*3824*/
		$puti($1.barcode, 6 - $1.val.length, $1.val); /*3825*/
		for (var _e = 0; _e <= 5; _e += 1) { /*3832*/
			var _g = $get($1.barcode, _e); /*3829*/
			$k[$j++] = _e; /*3830*/
			$k[$j++] = _g; /*3830*/
			$k[$j++] = _g; /*3830*/
			for (var _h = 0, _i = "AEIO".length; _h < _i; _h++) { /*3830*/
				if ($k[--$j] >= $get("AEIO", _h)) { /*3830*/
					var _l = $k[--$j]; /*3830*/
					$k[$j++] = _l + 1; /*3830*/
				} /*3830*/
				var _m = $k[--$j]; /*3830*/
				$k[$j++] = _m; /*3830*/
				$k[$j++] = _m; /*3830*/
			} /*3830*/
			$j--; /*3830*/
			var _o = $k[--$j]; /*3831*/
			$put($1.barcode, $k[--$j], _o); /*3831*/
		} /*3831*/
		$puti($1.text, 1, $geti($1.text, 0, 9)); /*3835*/
		$put($1.text, 0, 65); /*3836*/
		$1.options.dontdraw = true; /*3839*/
		$k[$j++] = "args"; /*3840*/
		$k[$j++] = $1.barcode; /*3840*/
		$k[$j++] = $1.options; /*3840*/
		$0.code39(); /*3840*/
		var _x = $k[--$j]; /*3840*/
		$1[$k[--$j]] = _x; /*3840*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*3842*/
		$1.args.textxalign = "center"; /*3843*/
		$1.args.opt = $1.options; /*3844*/
		$k[$j++] = $1.args; /*3847*/
		if (!$1.dontdraw) { /*3847*/
			$0.renlinear(); /*3847*/
		} /*3847*/
	};
	$0.pzn = function() {
		var $1 = {}; /*3875*/
		$1.options = $k[--$j]; /*3877*/
		$1.barcode = $k[--$j]; /*3878*/
		$1.dontdraw = false; /*3880*/
		$1.includetext = false; /*3881*/
		$1.textfont = "Courier"; /*3882*/
		$1.textsize = 10; /*3883*/
		$1.textyoffset = -8.5; /*3884*/
		$1.textxoffset = 0; /*3885*/
		$1.height = 1; /*3886*/
		$1.pzn8 = false; /*3887*/
		$forall($1.options, function() { /*3898*/
			var _3 = $k[--$j]; /*3898*/
			$1[$k[--$j]] = _3; /*3898*/
		}); /*3898*/
		$1.textfont = "" + $1.textfont; /*3900*/
		$1.textsize = +$1.textsize; /*3901*/
		$1.textyoffset = +$1.textyoffset; /*3902*/
		$1.textxoffset = +$1.textxoffset; /*3903*/
		$1.height = +$1.height; /*3904*/
		if ($1.pzn8) { /*3913*/
			if (($1.barcode.length != 7) && ($1.barcode.length != 8)) { /*3910*/
				$k[$j++] = "bwipp.pzn8badLength"; /*3909*/
				$k[$j++] = "PZN8 must be 7 or 8 digits"; /*3909*/
				$0.raiseerror(); /*3909*/
			} /*3909*/
		} else { /*3913*/
			if (($1.barcode.length != 6) && ($1.barcode.length != 7)) { /*3914*/
				$k[$j++] = "bwipp.pzn7badLength"; /*3913*/
				$k[$j++] = "PZN7 must be 6 or 7 digits"; /*3913*/
				$0.raiseerror(); /*3913*/
			} /*3913*/
		} /*3913*/
		$forall($1.barcode, function() { /*3920*/
			var _G = $k[--$j]; /*3917*/
			if ((_G < 48) || (_G > 57)) { /*3919*/
				$k[$j++] = "bwipp.pznBadCharacter"; /*3918*/
				$k[$j++] = "PZN must contain only digits"; /*3918*/
				$0.raiseerror(); /*3918*/
			} /*3918*/
		}); /*3918*/
		var _I = $1.pzn8 ? 9 : 8; /*3923*/
		$1.msglen = _I; /*3923*/
		$1.checksum = 0; /*3924*/
		for (var _L = 0, _K = $1.msglen - 3; _L <= _K; _L += 1) { /*3929*/
			$1.i = _L; /*3926*/
			var _R = $1.pzn8 ? 1 : 2; /*3927*/
			$1.checksum = (($get($1.barcode, $1.i) - 48) * ($1.i + _R)) + $1.checksum; /*3928*/
		} /*3928*/
		$1.checksum = $1.checksum % 11; /*3930*/
		if ($1.checksum == 10) { /*3933*/
			$k[$j++] = "bwipp.pznBadInputSequence"; /*3932*/
			$k[$j++] = "Incorrect PZN input sequence provided"; /*3932*/
			$0.raiseerror(); /*3932*/
		} /*3932*/
		if ($1.barcode.length == ($1.msglen - 1)) { /*3938*/
			if ($get($1.barcode, $1.msglen - 2) != ($1.checksum + 48)) { /*3937*/
				$k[$j++] = "bwipp.pznBadCheckDigit"; /*3936*/
				$k[$j++] = "Incorrect PZN check digit provided"; /*3936*/
				$0.raiseerror(); /*3936*/
			} /*3936*/
		} /*3936*/
		var _c = $s($1.msglen); /*3939*/
		$put(_c, 0, 45); /*3940*/
		$puti(_c, 1, $1.barcode); /*3941*/
		$put(_c, $1.msglen - 1, $1.checksum + 48); /*3942*/
		$1.msg = _c; /*3943*/
		$1.options.dontdraw = true; /*3946*/
		$k[$j++] = "args"; /*3947*/
		$k[$j++] = $1.msg; /*3947*/
		$k[$j++] = $1.options; /*3947*/
		$0.code39(); /*3947*/
		var _j = $k[--$j]; /*3947*/
		$1[$k[--$j]] = _j; /*3947*/
		$1.text = $s($1.msglen + 5); /*3950*/
		$puti($1.text, 0, "PZN - "); /*3951*/
		$puti($1.text, 6, $geti($1.msg, 1, $1.msglen - 1)); /*3952*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*3954*/
		$1.args.textxalign = "center"; /*3955*/
		$1.args.opt = $1.options; /*3956*/
		$k[$j++] = $1.args; /*3959*/
		if (!$1.dontdraw) { /*3959*/
			$0.renlinear(); /*3959*/
		} /*3959*/
	};
	$0.code93 = function() {
		var $1 = {}; /*3986*/
		$1.options = $k[--$j]; /*3988*/
		$1.barcode = $k[--$j]; /*3989*/
		$1.dontdraw = false; /*3991*/
		$1.includecheck = false; /*3992*/
		$1.includetext = false; /*3993*/
		$1.textfont = "Courier"; /*3994*/
		$1.textsize = 10; /*3995*/
		$1.textyoffset = -8.5; /*3996*/
		$1.height = 1; /*3997*/
		$1.parsefnc = false; /*3998*/
		$forall($1.options, function() { /*4009*/
			var _3 = $k[--$j]; /*4009*/
			$1[$k[--$j]] = _3; /*4009*/
		}); /*4009*/
		$1.textfont = "" + $1.textfont; /*4011*/
		$1.textsize = +$1.textsize; /*4012*/
		$1.textyoffset = +$1.textyoffset; /*4013*/
		$1.height = +$1.height; /*4014*/
		$1.encs = $a(["131112", "111213", "111312", "111411", "121113", "121212", "121311", "111114", "131211", "141111", "211113", "211212", "211311", "221112", "221211", "231111", "112113", "112212", "112311", "122112", "132111", "111123", "111222", "111321", "121122", "131121", "212112", "212211", "211122", "211221", "221121", "222111", "112122", "112221", "122121", "123111", "121131", "311112", "311211", "321111", "112131", "113121", "211131", "121221", "312111", "311121", "122211", "111141", "1111411"]); /*4027*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*4030*/
		$1.barlen = $1.barcode.length; /*4032*/
		$1.sft1 = -1; /*4035*/
		$1.sft2 = -2; /*4035*/
		$1.sft3 = -3; /*4035*/
		$1.sft4 = -4; /*4035*/
		var _F = {
			"SFT$": $1.sft1,
			"SFT%": $1.sft2,
			"SFT/": $1.sft3,
			"SFT+": $1.sft4
		}; /*4040*/
		$1.fncvals = _F; /*4041*/
		$1.msg = $a($1.barlen); /*4044*/
		$1.i = 0; /*4045*/
		$1.j = 0; /*4045*/
		for (;;) { /*4059*/
			if ($1.i == $1.barlen) { /*4046*/
				break; /*4046*/
			} /*4046*/
			$1.char = $get($1.barcode, $1.i); /*4047*/
			if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*4055*/
				if ($get($1.barcode, $1.i + 1) != 94) { /*4053*/
					$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*4050*/
					$1.i = $1.i + 4; /*4051*/
				} else { /*4053*/
					$1.i = $1.i + 1; /*4053*/
				} /*4053*/
			} /*4053*/
			$put($1.msg, $1.j, $1.char); /*4056*/
			$1.i = $1.i + 1; /*4057*/
			$1.j = $1.j + 1; /*4058*/
		} /*4058*/
		$1.msg = $geti($1.msg, 0, $1.j); /*4060*/
		$1.msglen = $1.msg.length; /*4061*/
		if ($1.includecheck) { /*4066*/
			$1.sbs = $s(($1.msglen * 6) + 25); /*4064*/
		} else { /*4066*/
			$1.sbs = $s(($1.msglen * 6) + 13); /*4066*/
		} /*4066*/
		$1.txt = $a($1.msglen); /*4068*/
		$puti($1.sbs, 0, $get($1.encs, 47)); /*4071*/
		$1.checksum1 = 0; /*4073*/
		$1.checksum2 = 0; /*4073*/
		for (var _w = 0, _v = $1.msglen - 1; _w <= _v; _w += 1) { /*4092*/
			$1.i = _w; /*4075*/
			var _z = $get($1.msg, $1.i); /*4077*/
			$k[$j++] = _z; /*4086*/
			if (_z < 0) { /*4085*/
				$1.indx = 42 - $k[--$j]; /*4078*/
				$1.char = " "; /*4079*/
			} else { /*4085*/
				var _11 = $s(1); /*4081*/
				$put(_11, 0, $k[--$j]); /*4081*/
				$1.char = _11; /*4081*/
				$search($1.barchars, $1.char); /*4082*/
				$j--; /*4083*/
				$1.indx = $k[--$j].length; /*4084*/
				$j -= 2; /*4085*/
			} /*4085*/
			$1.enc = $get($1.encs, $1.indx); /*4087*/
			$puti($1.sbs, ($1.i * 6) + 6, $1.enc); /*4088*/
			$put($1.txt, $1.i, $a([$1.char, ($1.i * 9) + 9, $1.textyoffset, $1.textfont, $1.textsize])); /*4089*/
			$1.checksum1 = $1.checksum1 + ((((($1.msglen - $1.i) - 1) % 20) + 1) * $1.indx); /*4090*/
			$1.checksum2 = $1.checksum2 + (((($1.msglen - $1.i) % 15) + 1) * $1.indx); /*4091*/
		} /*4091*/
		if ($1.includecheck) { /*4104*/
			$1.checksum1 = $1.checksum1 % 47; /*4096*/
			$1.checksum2 = ($1.checksum2 + $1.checksum1) % 47; /*4097*/
			$puti($1.sbs, ($1.msglen * 6) + 6, $get($1.encs, $1.checksum1)); /*4098*/
			$puti($1.sbs, ($1.msglen * 6) + 12, $get($1.encs, $1.checksum2)); /*4099*/
			$puti($1.sbs, ($1.msglen * 6) + 18, $get($1.encs, 48)); /*4101*/
		} else { /*4104*/
			$puti($1.sbs, ($1.msglen * 6) + 6, $get($1.encs, 48)); /*4104*/
		} /*4104*/
		$k[$j++] = Infinity; /*4116*/
		$k[$j++] = "ren"; /*4111*/
		$k[$j++] = $0.renlinear; /*4111*/
		$k[$j++] = "sbs"; /*4111*/
		$k[$j++] = Infinity; /*4111*/
		var _1o = $1.sbs; /*4110*/
		for (var _1p = 0, _1q = _1o.length; _1p < _1q; _1p++) { /*4110*/
			$k[$j++] = $get(_1o, _1p) - 48; /*4110*/
		} /*4110*/
		var _1s = $a(); /*4111*/
		$k[$j++] = _1s; /*4112*/
		$k[$j++] = "bhs"; /*4112*/
		$k[$j++] = Infinity; /*4112*/
		for (var _1u = 0, _1v = ~~(($1.sbs.length + 1) / 2); _1u < _1v; _1u++) { /*4111*/
			$k[$j++] = $1.height; /*4111*/
		} /*4111*/
		var _1x = $a(); /*4112*/
		$k[$j++] = _1x; /*4113*/
		$k[$j++] = "bbs"; /*4113*/
		$k[$j++] = Infinity; /*4113*/
		for (var _1z = 0, _20 = ~~(($1.sbs.length + 1) / 2); _1z < _20; _1z++) { /*4112*/
			$k[$j++] = 0; /*4112*/
		} /*4112*/
		var _21 = $a(); /*4113*/
		$k[$j++] = _21; /*4115*/
		if ($1.includetext) { /*4115*/
			$k[$j++] = "txt"; /*4114*/
			$k[$j++] = $1.txt; /*4114*/
		} /*4114*/
		$k[$j++] = "opt"; /*4116*/
		$k[$j++] = $1.options; /*4116*/
		var _25 = $d(); /*4116*/
		$k[$j++] = _25; /*4119*/
		if (!$1.dontdraw) { /*4119*/
			$0.renlinear(); /*4119*/
		} /*4119*/
	};
	$0.code93ext = function() {
		var $1 = {}; /*4147*/
		$1.options = $k[--$j]; /*4149*/
		$1.barcode = $k[--$j]; /*4150*/
		$1.dontdraw = false; /*4152*/
		$1.includetext = false; /*4153*/
		$1.parse = false; /*4154*/
		$forall($1.options, function() { /*4165*/
			var _3 = $k[--$j]; /*4165*/
			$1[$k[--$j]] = _3; /*4165*/
		}); /*4165*/
		$1.barlen = $1.barcode.length; /*4188*/
		$1.extencs = $a
		$1.newcode = $s($1.barlen * 6); /*4210*/
		$1.newtext = $s($1.barlen * 6); /*4211*/
		$1.j = 0; /*4212*/
		$1.k = 0; /*4212*/
		for (var _D = 0, _C = $1.barlen - 1; _D <= _C; _D += 1) { /*4222*/
			$1.i = _D; /*4214*/
			$1.extchar = $get($1.extencs, $get($1.barcode, $1.i)); /*4215*/
			$1.extlen = $1.extchar.length; /*4216*/
			$puti($1.newcode, $1.j, $1.extchar); /*4217*/
			$put($1.newtext, $1.k, $get($1.barcode, $1.i)); /*4218*/
			if ($1.extlen != 1) { /*4219*/
				$puti($1.newtext, $1.k + 1, " "); /*4219*/
			} /*4219*/
			$1.j = $1.j + $1.extlen; /*4220*/
			var _Z = ($1.extlen == 1) ? 1 : 2; /*4221*/
			$1.k = $1.k + _Z; /*4221*/
		} /*4221*/
		$1.newcode = $geti($1.newcode, 0, $1.j); /*4223*/
		$1.newtext = $geti($1.newtext, 0, $1.k); /*4224*/
		$1.options.dontdraw = true; /*4227*/
		$1.options.parsefnc = true; /*4228*/
		$k[$j++] = "args"; /*4229*/
		$k[$j++] = $1.newcode; /*4229*/
		$k[$j++] = $1.options; /*4229*/
		$0.code93(); /*4229*/
		var _k = $k[--$j]; /*4229*/
		$1[$k[--$j]] = _k; /*4229*/
		if ($1.includetext) { /*4241*/
			$1.txt = $1.args.txt; /*4233*/
			for (var _r = 0, _q = $1.newtext.length - 1; _r <= _q; _r += 1) { /*4239*/
				$1.i = _r; /*4235*/
				$1.txtentry = $get($1.txt, $1.i); /*4236*/
				$put($1.txtentry, 0, $geti($1.newtext, $1.i, 1)); /*4237*/
				$put($1.txt, $1.i, $1.txtentry); /*4238*/
			} /*4238*/
			$1.args.txt = $1.txt; /*4240*/
		} /*4240*/
		$1.args.opt = $1.options; /*4242*/
		$k[$j++] = $1.args; /*4245*/
		if (!$1.dontdraw) { /*4245*/
			$0.renlinear(); /*4245*/
		} /*4245*/
	};
	$0.interleaved2of5 = function() {
		var $1 = {}; /*4272*/
		$1.options = $k[--$j]; /*4274*/
		$1.barcode = $k[--$j]; /*4275*/
		$1.dontdraw = false; /*4277*/
		$1.includecheck = false; /*4278*/
		$1.includetext = false; /*4279*/
		$1.includecheckintext = false; /*4280*/
		$1.textfont = "Courier"; /*4281*/
		$1.textsize = 10; /*4282*/
		$1.textyoffset = -8.5; /*4283*/
		$1.height = 1; /*4284*/
		$forall($1.options, function() { /*4295*/
			var _3 = $k[--$j]; /*4295*/
			$1[$k[--$j]] = _3; /*4295*/
		}); /*4295*/
		$1.textfont = "" + $1.textfont; /*4297*/
		$1.textsize = +$1.textsize; /*4298*/
		$1.textyoffset = +$1.textyoffset; /*4299*/
		$1.height = +$1.height; /*4300*/
		$forall($1.barcode, function() { /*4307*/
			var _A = $k[--$j]; /*4304*/
			if ((_A < 48) || (_A > 57)) { /*4306*/
				$k[$j++] = "bwipp.interleaved2of5badCharacter"; /*4305*/
				$k[$j++] = "Interleaved 2 of 5 must contain only digits"; /*4305*/
				$0.raiseerror(); /*4305*/
			} /*4305*/
		}); /*4305*/
		$1.barlen = $1.barcode.length; /*4309*/
		if (((($1.barlen % 2) == 0) && $1.includecheck) || ((($1.barlen % 2) != 0) && (!$1.includecheck))) { /*4320*/
			$1.pad = $s($1.barlen + 1); /*4315*/
			$put($1.pad, 0, 48); /*4316*/
			$puti($1.pad, 1, $1.barcode); /*4317*/
			$1.barcode = $1.pad; /*4318*/
			$1.barlen = $1.barlen + 1; /*4319*/
		} /*4319*/
		if ($1.includecheck) { /*4339*/
			$1.checksum = 0; /*4324*/
			for (var _Q = 0, _P = $1.barlen - 1; _Q <= _P; _Q += 1) { /*4332*/
				$1.i = _Q; /*4326*/
				if (($1.i % 2) == 0) { /*4330*/
					$1.checksum = $1.checksum + (($get($1.barcode, $1.i) - 48) * 3); /*4328*/
				} else { /*4330*/
					$1.checksum = $1.checksum + ($get($1.barcode, $1.i) - 48); /*4330*/
				} /*4330*/
			} /*4330*/
			$1.checksum = (10 - ($1.checksum % 10)) % 10; /*4333*/
			$1.pad = $s($1.barlen + 1); /*4334*/
			$puti($1.pad, 0, $1.barcode); /*4335*/
			$put($1.pad, $1.barlen, $1.checksum + 48); /*4336*/
			$1.barcode = $1.pad; /*4337*/
			$1.barlen = $1.barlen + 1; /*4338*/
		} /*4338*/
		$1.encs = $a(["11221", "21112", "12112", "22111", "11212", "21211", "12211", "11122", "21121", "12121", "1111", "2111"]); /*4346*/
		$1.barchars = "0123456789"; /*4349*/
		$1.sbs = $s(($1.barlen * 5) + 8); /*4350*/
		$1.txt = $a($1.barlen); /*4351*/
		$puti($1.sbs, 0, $get($1.encs, 10)); /*4354*/
		for (var _u = 0, _t = $1.barlen - 1; _u <= _t; _u += 2) { /*4388*/
			$1.i = _u; /*4357*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*4359*/
			$j--; /*4360*/
			$1.indx = $k[--$j].length; /*4361*/
			$j -= 2; /*4362*/
			$1.enca = $get($1.encs, $1.indx); /*4363*/
			$search($1.barchars, $geti($1.barcode, $1.i + 1, 1)); /*4365*/
			$j--; /*4366*/
			$1.indx = $k[--$j].length; /*4367*/
			$j -= 2; /*4368*/
			$1.encb = $get($1.encs, $1.indx); /*4369*/
			$1.intl = $s($1.enca.length * 2); /*4372*/
			for (var _1F = 0, _1E = $1.enca.length - 1; _1F <= _1E; _1F += 1) { /*4379*/
				$1.j = _1F; /*4374*/
				$1.achar = $get($1.enca, $1.j); /*4375*/
				$1.bchar = $get($1.encb, $1.j); /*4376*/
				$put($1.intl, $1.j * 2, $1.achar); /*4377*/
				$put($1.intl, ($1.j * 2) + 1, $1.bchar); /*4378*/
			} /*4378*/
			$puti($1.sbs, ($1.i * 5) + 4, $1.intl); /*4381*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ($1.i * 9) + 4, $1.textyoffset, $1.textfont, $1.textsize])); /*4382*/
			if (($1.includecheck && (!$1.includecheckintext)) && (($1.barlen - 2) == $1.i)) { /*4386*/
				$put($1.txt, $1.i + 1, $a([" ", (($1.i + 1) * 9) + 4, $1.textyoffset, $1.textfont, $1.textsize])); /*4384*/
			} else { /*4386*/
				$put($1.txt, $1.i + 1, $a([$geti($1.barcode, $1.i + 1, 1), (($1.i + 1) * 9) + 4, $1.textyoffset, $1.textfont, $1.textsize])); /*4386*/
			} /*4386*/
		} /*4386*/
		$puti($1.sbs, ($1.barlen * 5) + 4, $get($1.encs, 11)); /*4391*/
		$k[$j++] = Infinity; /*4404*/
		$k[$j++] = "ren"; /*4397*/
		$k[$j++] = $0.renlinear; /*4397*/
		$k[$j++] = "sbs"; /*4397*/
		$k[$j++] = Infinity; /*4397*/
		var _24 = $1.sbs; /*4396*/
		for (var _25 = 0, _26 = _24.length; _25 < _26; _25++) { /*4396*/
			$k[$j++] = $get(_24, _25) - 48; /*4396*/
		} /*4396*/
		var _28 = $a(); /*4397*/
		$k[$j++] = _28; /*4398*/
		$k[$j++] = "bhs"; /*4398*/
		$k[$j++] = Infinity; /*4398*/
		for (var _2A = 0, _2B = ~~(($1.sbs.length + 1) / 2); _2A < _2B; _2A++) { /*4397*/
			$k[$j++] = $1.height; /*4397*/
		} /*4397*/
		var _2D = $a(); /*4398*/
		$k[$j++] = _2D; /*4399*/
		$k[$j++] = "bbs"; /*4399*/
		$k[$j++] = Infinity; /*4399*/
		for (var _2F = 0, _2G = ~~(($1.sbs.length + 1) / 2); _2F < _2G; _2F++) { /*4398*/
			$k[$j++] = 0; /*4398*/
		} /*4398*/
		var _2H = $a(); /*4399*/
		$k[$j++] = _2H; /*4401*/
		if ($1.includetext) { /*4401*/
			$k[$j++] = "txt"; /*4400*/
			$k[$j++] = $1.txt; /*4400*/
		} /*4400*/
		$k[$j++] = "barratio"; /*4404*/
		$k[$j++] = 2; /*4404*/
		$k[$j++] = "spaceratio"; /*4404*/
		$k[$j++] = 2; /*4404*/
		$k[$j++] = "opt"; /*4404*/
		$k[$j++] = $1.options; /*4404*/
		var _2L = $d(); /*4404*/
		$k[$j++] = _2L; /*4407*/
		if (!$1.dontdraw) { /*4407*/
			$0.renlinear(); /*4407*/
		} /*4407*/
	};
	$0.itf14 = function() {
		var $1 = {}; /*4435*/
		$1.options = $k[--$j]; /*4437*/
		$1.barcode = $k[--$j]; /*4438*/
		$1.dontdraw = false; /*4440*/
		$1.includetext = false; /*4441*/
		$1.includecheckintext = true; /*4442*/
		$1.textfont = "Courier"; /*4443*/
		$1.textsize = 10; /*4444*/
		$1.textxoffset = 0; /*4445*/
		$1.textyoffset = 3; /*4446*/
		$1.height = 0.5; /*4447*/
		$1.showborder = true; /*4448*/
		$1.borderwidth = 4; /*4449*/
		$1.borderleft = 15; /*4450*/
		$1.borderright = 15; /*4451*/
		$forall($1.options, function() { /*4462*/
			var _3 = $k[--$j]; /*4462*/
			$1[$k[--$j]] = _3; /*4462*/
		}); /*4462*/
		$1.textfont = "" + $1.textfont; /*4464*/
		$1.textsize = +$1.textsize; /*4465*/
		$1.textxoffset = +$1.textxoffset; /*4466*/
		$1.textyoffset = +$1.textyoffset; /*4467*/
		$1.height = +$1.height; /*4468*/
		$1.borderwidth = +$1.borderwidth; /*4469*/
		$1.borderleft = +$1.borderleft; /*4470*/
		$1.borderright = +$1.borderright; /*4471*/
		$1.text = $1.barcode; /*4474*/
		var _E = $1.barcode; /*4475*/
		$k[$j++] = $s(_E.length); /*4476*/
		$k[$j++] = 0; /*4476*/
		$forall(_E, function() { /*4476*/
			var _G = $k[--$j]; /*4476*/
			$k[$j++] = _G; /*4476*/
			if (_G != 32) { /*4476*/
				var _H = $k[--$j]; /*4476*/
				var _I = $k[--$j]; /*4476*/
				var _J = $k[--$j]; /*4476*/
				$put(_J, _I, _H); /*4476*/
				$k[$j++] = _J; /*4476*/
				$k[$j++] = _I + 1; /*4476*/
			} else { /*4476*/
				$j--; /*4476*/
			} /*4476*/
		}); /*4476*/
		var _K = $k[--$j]; /*4477*/
		$1.barcode = $geti($k[--$j], 0, _K); /*4477*/
		$1.hasspace = $1.text.length != $1.barcode.length; /*4478*/
		if (($1.barcode.length != 13) && ($1.barcode.length != 14)) { /*4483*/
			$k[$j++] = "bwipp.itf14badLength"; /*4482*/
			$k[$j++] = "ITF-14 must be 13 or 14 digits"; /*4482*/
			$0.raiseerror(); /*4482*/
		} /*4482*/
		$forall($1.barcode, function() { /*4488*/
			var _S = $k[--$j]; /*4485*/
			if ((_S < 48) || (_S > 57)) { /*4487*/
				$k[$j++] = "bwipp.itf14badCharacter"; /*4486*/
				$k[$j++] = "ITF-14 must contain only digits"; /*4486*/
				$0.raiseerror(); /*4486*/
			} /*4486*/
		}); /*4486*/
		$1.checksum = 0; /*4491*/
		for (var _T = 0; _T <= 12; _T += 1) { /*4495*/
			$1.i = _T; /*4493*/
			$k[$j++] = "checksum"; /*4494*/
			$k[$j++] = $1.checksum; /*4494*/
			$k[$j++] = $get($1.barcode, $1.i) - 48; /*4494*/
			if (($1.i % 2) == 0) { /*4494*/
				var _Z = $k[--$j]; /*4494*/
				$k[$j++] = _Z * 3; /*4494*/
			} /*4494*/
			var _a = $k[--$j]; /*4494*/
			var _b = $k[--$j]; /*4494*/
			$1[$k[--$j]] = _b + _a; /*4494*/
		} /*4494*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*4496*/
		if ($1.barcode.length == 14) { /*4510*/
			if ($get($1.barcode, 13) != ($1.checksum + 48)) { /*4500*/
				$k[$j++] = "bwipp.itf14badCheckDigit"; /*4499*/
				$k[$j++] = "Incorrect ITF-14 check digit provided"; /*4499*/
				$0.raiseerror(); /*4499*/
			} /*4499*/
		} else { /*4510*/
			var _i = $s(14); /*4502*/
			$puti(_i, 0, $1.barcode); /*4503*/
			$put(_i, 13, $1.checksum + 48); /*4504*/
			$1.barcode = _i; /*4505*/
			var _n = $1.hasspace ? 2 : 1; /*4506*/
			var _o = $s($1.text.length + _n); /*4506*/
			$puti(_o, _o.length - 2, " "); /*4507*/
			$put(_o, _o.length - 1, $1.checksum + 48); /*4508*/
			$puti(_o, 0, $1.text); /*4509*/
			$1.text = _o; /*4510*/
		} /*4510*/
		$1.options.dontdraw = true; /*4514*/
		$1.options.showborder = $1.showborder; /*4515*/
		$1.options.borderwidth = $1.borderwidth; /*4516*/
		$1.options.borderleft = $1.borderleft; /*4517*/
		$1.options.borderright = $1.borderright; /*4518*/
		$1.options.height = $1.height; /*4519*/
		$1.options.textyoffset = $1.textyoffset; /*4520*/
		$k[$j++] = "args"; /*4521*/
		$k[$j++] = $1.barcode; /*4521*/
		$k[$j++] = $1.options; /*4521*/
		$0.interleaved2of5(); /*4521*/
		var _16 = $k[--$j]; /*4521*/
		$1[$k[--$j]] = _16; /*4521*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*4523*/
		$1.args.textxalign = "center"; /*4524*/
		$1.args.opt = $1.options; /*4525*/
		$k[$j++] = $1.args; /*4528*/
		if (!$1.dontdraw) { /*4528*/
			$0.renlinear(); /*4528*/
		} /*4528*/
	};
	$0.identcode = function() {
		var $1 = {}; /*4556*/
		$1.options = $k[--$j]; /*4558*/
		$1.barcode = $k[--$j]; /*4559*/
		$1.dontdraw = false; /*4561*/
		$1.includetext = false; /*4562*/
		$1.textfont = "Courier"; /*4563*/
		$1.textsize = 10; /*4564*/
		$1.textxoffset = 0; /*4565*/
		$1.textyoffset = -8.5; /*4566*/
		$1.height = 1; /*4567*/
		$forall($1.options, function() { /*4578*/
			var _3 = $k[--$j]; /*4578*/
			$1[$k[--$j]] = _3; /*4578*/
		}); /*4578*/
		$1.textfont = "" + $1.textfont; /*4580*/
		$1.textsize = +$1.textsize; /*4581*/
		$1.textxoffset = +$1.textxoffset; /*4582*/
		$1.textyoffset = +$1.textyoffset; /*4583*/
		$1.height = +$1.height; /*4584*/
		if (($1.barcode.length != 11) && ($1.barcode.length != 12)) { /*4589*/
			$k[$j++] = "bwipp.identcodeBadLength"; /*4588*/
			$k[$j++] = "Deutsche Post Identcode must be 11 or 12 digits"; /*4588*/
			$0.raiseerror(); /*4588*/
		} /*4588*/
		$forall($1.barcode, function() { /*4594*/
			var _D = $k[--$j]; /*4591*/
			if ((_D < 48) || (_D > 57)) { /*4593*/
				$k[$j++] = "bwipp.identcodeBadCharacter"; /*4592*/
				$k[$j++] = "Deutsche Post Identcode must contain only digits"; /*4592*/
				$0.raiseerror(); /*4592*/
			} /*4592*/
		}); /*4592*/
		$1.checksum = 0; /*4597*/
		for (var _E = 0; _E <= 10; _E += 1) { /*4601*/
			$1.i = _E; /*4599*/
			$k[$j++] = "checksum"; /*4600*/
			$k[$j++] = $1.checksum; /*4600*/
			$k[$j++] = $get($1.barcode, $1.i) - 48; /*4600*/
			if (($1.i % 2) == 0) { /*4600*/
				var _K = $k[--$j]; /*4600*/
				$k[$j++] = _K * 4; /*4600*/
			} else { /*4600*/
				var _L = $k[--$j]; /*4600*/
				$k[$j++] = _L * 9; /*4600*/
			} /*4600*/
			var _M = $k[--$j]; /*4600*/
			var _N = $k[--$j]; /*4600*/
			$1[$k[--$j]] = _N + _M; /*4600*/
		} /*4600*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*4602*/
		if ($1.barcode.length == 12) { /*4607*/
			if ($get($1.barcode, 11) != ($1.checksum + 48)) { /*4606*/
				$k[$j++] = "bwipp.identcodeBadCheckDigit"; /*4605*/
				$k[$j++] = "Incorrect Deutsche Post Identcode check digit provided"; /*4605*/
				$0.raiseerror(); /*4605*/
			} /*4605*/
		} /*4605*/
		var _U = $s(12); /*4608*/
		$puti(_U, 0, $1.barcode); /*4609*/
		$put(_U, 11, $1.checksum + 48); /*4610*/
		$1.barcode = _U; /*4611*/
		$1.text = $strcpy($s(16), "  .       .     "); /*4614*/
		$puti($1.text, 0, $geti($1.barcode, 0, 2)); /*4615*/
		$puti($1.text, 3, $geti($1.barcode, 2, 3)); /*4616*/
		$puti($1.text, 7, $geti($1.barcode, 5, 3)); /*4617*/
		$puti($1.text, 11, $geti($1.barcode, 8, 3)); /*4618*/
		$puti($1.text, 15, $geti($1.barcode, 11, 1)); /*4619*/
		$1.options.dontdraw = true; /*4622*/
		$1.options.includecheck = false; /*4623*/
		$k[$j++] = "args"; /*4624*/
		$k[$j++] = $1.barcode; /*4624*/
		$k[$j++] = $1.options; /*4624*/
		$0.interleaved2of5(); /*4624*/
		var _s = $k[--$j]; /*4624*/
		$1[$k[--$j]] = _s; /*4624*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*4626*/
		$1.args.textxalign = "center"; /*4627*/
		$1.args.opt = $1.options; /*4628*/
		$k[$j++] = $1.args; /*4631*/
		if (!$1.dontdraw) { /*4631*/
			$0.renlinear(); /*4631*/
		} /*4631*/
	};
	$0.leitcode = function() {
		var $1 = {}; /*4659*/
		$1.options = $k[--$j]; /*4661*/
		$1.barcode = $k[--$j]; /*4662*/
		$1.dontdraw = false; /*4664*/
		$1.includetext = false; /*4665*/
		$1.textfont = "Courier"; /*4666*/
		$1.textsize = 10; /*4667*/
		$1.textxoffset = 0; /*4668*/
		$1.textyoffset = -8.5; /*4669*/
		$1.height = 1; /*4670*/
		$forall($1.options, function() { /*4681*/
			var _3 = $k[--$j]; /*4681*/
			$1[$k[--$j]] = _3; /*4681*/
		}); /*4681*/
		$1.textfont = "" + $1.textfont; /*4683*/
		$1.textsize = +$1.textsize; /*4684*/
		$1.textxoffset = +$1.textxoffset; /*4685*/
		$1.textyoffset = +$1.textyoffset; /*4686*/
		$1.height = +$1.height; /*4687*/
		if (($1.barcode.length != 13) && ($1.barcode.length != 14)) { /*4692*/
			$k[$j++] = "bwipp.leitcodeBadLength"; /*4691*/
			$k[$j++] = "Deutsche Post Leitcode must be 13 or 14 digits"; /*4691*/
			$0.raiseerror(); /*4691*/
		} /*4691*/
		$forall($1.barcode, function() { /*4697*/
			var _D = $k[--$j]; /*4694*/
			if ((_D < 48) || (_D > 57)) { /*4696*/
				$k[$j++] = "bwipp.leitcodeBadCharacter"; /*4695*/
				$k[$j++] = "Deutsche Post Leitcode must contain only digits"; /*4695*/
				$0.raiseerror(); /*4695*/
			} /*4695*/
		}); /*4695*/
		$1.checksum = 0; /*4700*/
		for (var _E = 0; _E <= 12; _E += 1) { /*4704*/
			$1.i = _E; /*4702*/
			$k[$j++] = "checksum"; /*4703*/
			$k[$j++] = $1.checksum; /*4703*/
			$k[$j++] = $get($1.barcode, $1.i) - 48; /*4703*/
			if (($1.i % 2) == 0) { /*4703*/
				var _K = $k[--$j]; /*4703*/
				$k[$j++] = _K * 4; /*4703*/
			} else { /*4703*/
				var _L = $k[--$j]; /*4703*/
				$k[$j++] = _L * 9; /*4703*/
			} /*4703*/
			var _M = $k[--$j]; /*4703*/
			var _N = $k[--$j]; /*4703*/
			$1[$k[--$j]] = _N + _M; /*4703*/
		} /*4703*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*4705*/
		if ($1.barcode.length == 14) { /*4710*/
			if ($get($1.barcode, 13) != ($1.checksum + 48)) { /*4709*/
				$k[$j++] = "bwipp.leitcodeBadCheckDigit"; /*4708*/
				$k[$j++] = "Incorrect Deutsche Post Leitcode check digit provided"; /*4708*/
				$0.raiseerror(); /*4708*/
			} /*4708*/
		} /*4708*/
		var _U = $s(14); /*4711*/
		$puti(_U, 0, $1.barcode); /*4712*/
		$put(_U, 13, $1.checksum + 48); /*4713*/
		$1.barcode = _U; /*4714*/
		$1.text = $strcpy($s(18), "     .   .   .    "); /*4717*/
		$puti($1.text, 0, $geti($1.barcode, 0, 5)); /*4718*/
		$puti($1.text, 6, $geti($1.barcode, 5, 3)); /*4719*/
		$puti($1.text, 10, $geti($1.barcode, 8, 3)); /*4720*/
		$puti($1.text, 14, $geti($1.barcode, 11, 2)); /*4721*/
		$puti($1.text, 17, $geti($1.barcode, 13, 1)); /*4722*/
		$1.options.dontdraw = true; /*4725*/
		$1.options.includecheck = false; /*4726*/
		$k[$j++] = "args"; /*4727*/
		$k[$j++] = $1.barcode; /*4727*/
		$k[$j++] = $1.options; /*4727*/
		$0.interleaved2of5(); /*4727*/
		var _s = $k[--$j]; /*4727*/
		$1[$k[--$j]] = _s; /*4727*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*4729*/
		$1.args.textxalign = "center"; /*4730*/
		$1.args.opt = $1.options; /*4731*/
		$k[$j++] = $1.args; /*4734*/
		if (!$1.dontdraw) { /*4734*/
			$0.renlinear(); /*4734*/
		} /*4734*/
	};
	$0.databaromni = function() {
		var $1 = {}; /*4762*/
		$1.options = $k[--$j]; /*4764*/
		$1.barcode = $k[--$j]; /*4765*/
		$1.dontdraw = false; /*4767*/
		$1.height = 33 / 72; /*4768*/
		$1.linkage = false; /*4769*/
		$1.format = "omni"; /*4770*/
		$1.barxmult = 33; /*4771*/
		$forall($1.options, function() { /*4782*/
			var _3 = $k[--$j]; /*4782*/
			$1[$k[--$j]] = _3; /*4782*/
		}); /*4782*/
		if ($eq($1.format, "truncated")) { /*4784*/
			$1.height = 13 / 72; /*4784*/
		} /*4784*/
		$1.height = +$1.height; /*4785*/
		$1.barxmult = ~~$1.barxmult; /*4786*/
		if ($ne($geti($1.barcode, 0, 4), "(01)")) { /*4791*/
			$k[$j++] = "bwipp.databaromniBadAI"; /*4790*/
			$k[$j++] = "GS1 DataBar Omnidirectional must begin with (01) application identifier"; /*4790*/
			$0.raiseerror(); /*4790*/
		} /*4790*/
		if (($1.barcode.length != 17) && ($1.barcode.length != 18)) { /*4794*/
			$k[$j++] = "bwipp.databaromniBadLength"; /*4793*/
			$k[$j++] = "GS1 DataBar Omnidirectional must be 13 or 14 digits"; /*4793*/
			$0.raiseerror(); /*4793*/
		} /*4793*/
		$forall($geti($1.barcode, 4, $1.barcode.length - 4), function() { /*4799*/
			var _F = $k[--$j]; /*4796*/
			if ((_F < 48) || (_F > 57)) { /*4798*/
				$k[$j++] = "bwipp.databaromniBadCharacter"; /*4797*/
				$k[$j++] = "GS1 DataBar Omnidirectional must contain only digits"; /*4797*/
				$0.raiseerror(); /*4797*/
			} /*4797*/
		}); /*4797*/
		$1.checksum = 0; /*4802*/
		for (var _G = 0; _G <= 12; _G += 1) { /*4806*/
			$1.i = _G; /*4804*/
			$k[$j++] = "checksum"; /*4805*/
			$k[$j++] = $1.checksum; /*4805*/
			$k[$j++] = $get($1.barcode, $1.i + 4) - 48; /*4805*/
			if (($1.i % 2) == 0) { /*4805*/
				var _M = $k[--$j]; /*4805*/
				$k[$j++] = _M * 3; /*4805*/
			} /*4805*/
			var _N = $k[--$j]; /*4805*/
			var _O = $k[--$j]; /*4805*/
			$1[$k[--$j]] = _O + _N; /*4805*/
		} /*4805*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*4807*/
		if ($1.barcode.length == 18) { /*4812*/
			if ($get($1.barcode, 17) != ($1.checksum + 48)) { /*4811*/
				$k[$j++] = "bwipp.databaromniBadCheckDigit"; /*4810*/
				$k[$j++] = "Incorrect GS1 DataBar Omnidirectional check digit provided"; /*4810*/
				$0.raiseerror(); /*4810*/
			} /*4810*/
		} /*4810*/
		var _V = $s(18); /*4813*/
		$puti(_V, 0, $1.barcode); /*4814*/
		$put(_V, 17, $1.checksum + 48); /*4815*/
		$1.barcode = _V; /*4816*/
		$1.txt = $a($1.barcode.length); /*4819*/
		for (var _c = 0, _b = $1.barcode.length - 1; _c <= _b; _c += 1) { /*4823*/
			$1.i = _c; /*4821*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), 0, 0, "", 0])); /*4822*/
		} /*4822*/
		$1.ncr = function() {
			var _j = $k[--$j]; /*4826*/
			var _k = $k[--$j]; /*4826*/
			var _l = _k - _j; /*4826*/
			if (_j < (_k - _j)) { /*4826*/
				var _ = _l; /*4826*/
				_l = _j; /*4826*/
				_j = _; /*4826*/
			} /*4826*/
			$k[$j++] = _l; /*4833*/
			$k[$j++] = 1; /*4833*/
			$k[$j++] = 1; /*4833*/
			for (var _n = _k, _m = _j + 1; _n >= _m; _n -= 1) { /*4833*/
				var _o = $k[--$j]; /*4829*/
				var _p = $k[--$j]; /*4830*/
				var _q = $k[--$j]; /*4830*/
				$k[$j++] = _q; /*4832*/
				$k[$j++] = _p; /*4832*/
				$k[$j++] = _o * _n; /*4832*/
				if ($le(_p, _q)) { /*4832*/
					var _r = $k[--$j]; /*4831*/
					var _s = $k[--$j]; /*4831*/
					$k[$j++] = _s + 1; /*4831*/
					$k[$j++] = ~~(_r / _s); /*4831*/
				} /*4831*/
			} /*4831*/
			for (;;) { /*4837*/
				var _t = $k[--$j]; /*4835*/
				var _u = $k[--$j]; /*4835*/
				var _v = $k[--$j]; /*4835*/
				$k[$j++] = _v; /*4835*/
				$k[$j++] = _u; /*4835*/
				$k[$j++] = _t; /*4835*/
				if ($gt(_u, _v)) { /*4835*/
					break; /*4835*/
				} /*4835*/
				var _w = $k[--$j]; /*4836*/
				var _x = $k[--$j]; /*4836*/
				$k[$j++] = _x + 1; /*4836*/
				$k[$j++] = ~~(_w / _x); /*4836*/
			} /*4836*/
			var _y = $k[--$j]; /*4838*/
			var _z = $k[--$j]; /*4838*/
			var _10 = $k[--$j]; /*4838*/
			$k[$j++] = _y; /*4838*/
		}; /*4839*/
		$1.getRSSwidths = function() {
			$1.oe = $k[--$j]; /*4842*/
			$1.el = $k[--$j]; /*4843*/
			$1.mw = $k[--$j]; /*4844*/
			$1.nm = $k[--$j]; /*4845*/
			$1.val = $k[--$j]; /*4846*/
			$1.out = $a($1.el); /*4847*/
			$1.mask = 0; /*4848*/
			for (var _1A = 0, _19 = $1.el - 2; _1A <= _19; _1A += 1) { /*4875*/
				$1.bar = _1A; /*4850*/
				$1.ew = 1; /*4851*/
				var _1C = $1.bar; /*4852*/
				$1.mask = $1.mask | ((_1C < 0 ? 1 >>> -_1C : 1 << _1C)); /*4852*/
				for (;;) { /*4871*/
					$k[$j++] = "sval"; /*4853*/
					$k[$j++] = ($1.nm - $1.ew) - 1; /*4853*/
					$k[$j++] = ($1.el - $1.bar) - 2; /*4853*/
					$1.ncr(); /*4853*/
					var _1H = $k[--$j]; /*4853*/
					$1[$k[--$j]] = _1H; /*4853*/
					if (($1.oe && ($1.mask == 0)) && (((($1.nm - $1.ew) - ($1.el * 2)) + ($1.bar * 2)) >= -2)) { /*4856*/
						$k[$j++] = "sval"; /*4855*/
						$k[$j++] = $1.sval; /*4855*/
						$k[$j++] = (($1.nm - $1.ew) - $1.el) + $1.bar; /*4855*/
						$k[$j++] = ($1.el - $1.bar) - 2; /*4855*/
						$1.ncr(); /*4855*/
						var _1W = $k[--$j]; /*4855*/
						var _1X = $k[--$j]; /*4855*/
						$1[$k[--$j]] = _1X - _1W; /*4855*/
					} /*4855*/
					if (($1.el - $1.bar) > 2) { /*4865*/
						$1.lval = 0; /*4858*/
						for (var _1h = ((($1.nm - $1.ew) - $1.el) + $1.bar) + 2, _1g = $1.mw + 1; _1h >= _1g; _1h -= 1) { /*4862*/
							$k[$j++] = (($1.nm - _1h) - $1.ew) - 1; /*4860*/
							$k[$j++] = ($1.el - $1.bar) - 3; /*4860*/
							$1.ncr(); /*4860*/
							$1.lval = $k[--$j] + $1.lval; /*4861*/
						} /*4861*/
						$1.sval = $1.sval - ($1.lval * (($1.el - $1.bar) - 1)); /*4863*/
					} else { /*4865*/
						if (($1.nm - $1.ew) > $1.mw) { /*4865*/
							$1.sval = $1.sval - 1; /*4865*/
						} /*4865*/
					} /*4865*/
					$1.val = $1.val - $1.sval; /*4867*/
					if ($1.val < 0) { /*4868*/
						break; /*4868*/
					} /*4868*/
					$1.ew = $1.ew + 1; /*4869*/
					var _21 = $1.bar; /*4870*/
					$1.mask = $1.mask & (~((_21 < 0 ? 1 >>> -_21 : 1 << _21))); /*4870*/
				} /*4870*/
				$1.val = $1.val + $1.sval; /*4872*/
				$1.nm = $1.nm - $1.ew; /*4873*/
				$put($1.out, $1.bar, $1.ew); /*4874*/
			} /*4874*/
			$put($1.out, $1.el - 1, $1.nm); /*4876*/
			$k[$j++] = $1.out; /*4877*/
		}; /*4878*/
		$k[$j++] = Infinity; /*4883*/
		var _2E = $1.linkage ? 1 : 0; /*4881*/
		$k[$j++] = _2E; /*4882*/
		$forall($geti($1.barcode, 4, 13), function() { /*4882*/
			var _2H = $k[--$j]; /*4882*/
			$k[$j++] = _2H - 48; /*4882*/
		}); /*4882*/
		$1.binval = $a(); /*4883*/
		for (var _2J = 0; _2J <= 12; _2J += 1) { /*4889*/
			$1.i = _2J; /*4886*/
			var _2K = $1.binval; /*4887*/
			var _2L = $1.i; /*4887*/
			$put(_2K, _2L + 1, $get(_2K, _2L + 1) + (($get($1.binval, $1.i) % 4537077) * 10)); /*4887*/
			$put($1.binval, $1.i, ~~($get($1.binval, $1.i) / 4537077)); /*4888*/
		} /*4888*/
		$1.right = $get($1.binval, 13) % 4537077; /*4890*/
		var _2X = $1.binval; /*4891*/
		$put(_2X, 13, ~~($get(_2X, 13) / 4537077)); /*4891*/
		$1.left = 0; /*4893*/
		$1.i = true; /*4894*/
		for (var _2Z = 0; _2Z <= 13; _2Z += 1) { /*4904*/
			$1.j = _2Z; /*4896*/
			var _2c = $get($1.binval, $1.j); /*4897*/
			$k[$j++] = _2c; /*4903*/
			if ((_2c == 0) && $1.i) { /*4902*/
				$j--; /*4899*/
			} else { /*4902*/
				$1.i = false; /*4901*/
				$1.left = $1.left + ($k[--$j] * (~~Math.pow(10, 13 - $1.j))); /*4902*/
			} /*4902*/
		} /*4902*/
		$1.d1 = ~~($1.left / 1597); /*4906*/
		$1.d2 = $1.left % 1597; /*4907*/
		$1.d3 = ~~($1.right / 1597); /*4908*/
		$1.d4 = $1.right % 1597; /*4909*/
		$1.tab164 = $a([160, 0, 12, 4, 8, 1, 161, 1, 960, 161, 10, 6, 6, 3, 80, 10, 2014, 961, 8, 8, 4, 5, 31, 34, 2714, 2015, 6, 10, 3, 6, 10, 70, 2840, 2715, 4, 12, 1, 8, 1, 126]); /*4917*/
		$1.tab154 = $a([335, 0, 5, 10, 2, 7, 4, 84, 1035, 336, 7, 8, 4, 5, 20, 35, 1515, 1036, 9, 6, 6, 3, 48, 10, 1596, 1516, 11, 4, 8, 1, 81, 1]); /*4924*/
		$1.i = 0; /*4926*/
		for (;;) { /*4936*/
			if ($1.d1 <= $get($1.tab164, $1.i)) { /*4934*/
				$forall($geti($1.tab164, $1.i + 1, 7)); /*4928*/
				$1.d1te = $k[--$j]; /*4929*/
				$1.d1to = $k[--$j]; /*4929*/
				$1.d1mwe = $k[--$j]; /*4930*/
				$1.d1mwo = $k[--$j]; /*4930*/
				$1.d1ele = $k[--$j]; /*4931*/
				$1.d1elo = $k[--$j]; /*4931*/
				$1.d1gs = $k[--$j]; /*4932*/
				break; /*4933*/
			} /*4933*/
			$1.i = $1.i + 8; /*4935*/
		} /*4935*/
		$1.i = 0; /*4938*/
		for (;;) { /*4948*/
			if ($1.d2 <= $get($1.tab154, $1.i)) { /*4946*/
				$forall($geti($1.tab154, $1.i + 1, 7)); /*4940*/
				$1.d2te = $k[--$j]; /*4941*/
				$1.d2to = $k[--$j]; /*4941*/
				$1.d2mwe = $k[--$j]; /*4942*/
				$1.d2mwo = $k[--$j]; /*4942*/
				$1.d2ele = $k[--$j]; /*4943*/
				$1.d2elo = $k[--$j]; /*4943*/
				$1.d2gs = $k[--$j]; /*4944*/
				break; /*4945*/
			} /*4945*/
			$1.i = $1.i + 8; /*4947*/
		} /*4947*/
		$1.i = 0; /*4950*/
		for (;;) { /*4960*/
			if ($1.d3 <= $get($1.tab164, $1.i)) { /*4958*/
				$forall($geti($1.tab164, $1.i + 1, 7)); /*4952*/
				$1.d3te = $k[--$j]; /*4953*/
				$1.d3to = $k[--$j]; /*4953*/
				$1.d3mwe = $k[--$j]; /*4954*/
				$1.d3mwo = $k[--$j]; /*4954*/
				$1.d3ele = $k[--$j]; /*4955*/
				$1.d3elo = $k[--$j]; /*4955*/
				$1.d3gs = $k[--$j]; /*4956*/
				break; /*4957*/
			} /*4957*/
			$1.i = $1.i + 8; /*4959*/
		} /*4959*/
		$1.i = 0; /*4962*/
		for (;;) { /*4972*/
			if ($1.d4 <= $get($1.tab154, $1.i)) { /*4970*/
				$forall($geti($1.tab154, $1.i + 1, 7)); /*4964*/
				$1.d4te = $k[--$j]; /*4965*/
				$1.d4to = $k[--$j]; /*4965*/
				$1.d4mwe = $k[--$j]; /*4966*/
				$1.d4mwo = $k[--$j]; /*4966*/
				$1.d4ele = $k[--$j]; /*4967*/
				$1.d4elo = $k[--$j]; /*4967*/
				$1.d4gs = $k[--$j]; /*4968*/
				break; /*4969*/
			} /*4969*/
			$1.i = $1.i + 8; /*4971*/
		} /*4971*/
		$k[$j++] = "d1wo"; /*4974*/
		$k[$j++] = ~~(($1.d1 - $1.d1gs) / $1.d1te); /*4974*/
		$k[$j++] = $1.d1elo; /*4974*/
		$k[$j++] = $1.d1mwo; /*4974*/
		$k[$j++] = 4; /*4974*/
		$k[$j++] = false; /*4974*/
		$1.getRSSwidths(); /*4974*/
		var _3q = $k[--$j]; /*4974*/
		$1[$k[--$j]] = _3q; /*4974*/
		$k[$j++] = "d1we"; /*4975*/
		$k[$j++] = ($1.d1 - $1.d1gs) % $1.d1te; /*4975*/
		$k[$j++] = $1.d1ele; /*4975*/
		$k[$j++] = $1.d1mwe; /*4975*/
		$k[$j++] = 4; /*4975*/
		$k[$j++] = true; /*4975*/
		$1.getRSSwidths(); /*4975*/
		var _3x = $k[--$j]; /*4975*/
		$1[$k[--$j]] = _3x; /*4975*/
		$k[$j++] = "d2wo"; /*4976*/
		$k[$j++] = ($1.d2 - $1.d2gs) % $1.d2to; /*4976*/
		$k[$j++] = $1.d2elo; /*4976*/
		$k[$j++] = $1.d2mwo; /*4976*/
		$k[$j++] = 4; /*4976*/
		$k[$j++] = true; /*4976*/
		$1.getRSSwidths(); /*4976*/
		var _44 = $k[--$j]; /*4976*/
		$1[$k[--$j]] = _44; /*4976*/
		$k[$j++] = "d2we"; /*4977*/
		$k[$j++] = ~~(($1.d2 - $1.d2gs) / $1.d2to); /*4977*/
		$k[$j++] = $1.d2ele; /*4977*/
		$k[$j++] = $1.d2mwe; /*4977*/
		$k[$j++] = 4; /*4977*/
		$k[$j++] = false; /*4977*/
		$1.getRSSwidths(); /*4977*/
		var _4B = $k[--$j]; /*4977*/
		$1[$k[--$j]] = _4B; /*4977*/
		$k[$j++] = "d3wo"; /*4978*/
		$k[$j++] = ~~(($1.d3 - $1.d3gs) / $1.d3te); /*4978*/
		$k[$j++] = $1.d3elo; /*4978*/
		$k[$j++] = $1.d3mwo; /*4978*/
		$k[$j++] = 4; /*4978*/
		$k[$j++] = false; /*4978*/
		$1.getRSSwidths(); /*4978*/
		var _4I = $k[--$j]; /*4978*/
		$1[$k[--$j]] = _4I; /*4978*/
		$k[$j++] = "d3we"; /*4979*/
		$k[$j++] = ($1.d3 - $1.d3gs) % $1.d3te; /*4979*/
		$k[$j++] = $1.d3ele; /*4979*/
		$k[$j++] = $1.d3mwe; /*4979*/
		$k[$j++] = 4; /*4979*/
		$k[$j++] = true; /*4979*/
		$1.getRSSwidths(); /*4979*/
		var _4P = $k[--$j]; /*4979*/
		$1[$k[--$j]] = _4P; /*4979*/
		$k[$j++] = "d4wo"; /*4980*/
		$k[$j++] = ($1.d4 - $1.d4gs) % $1.d4to; /*4980*/
		$k[$j++] = $1.d4elo; /*4980*/
		$k[$j++] = $1.d4mwo; /*4980*/
		$k[$j++] = 4; /*4980*/
		$k[$j++] = true; /*4980*/
		$1.getRSSwidths(); /*4980*/
		var _4W = $k[--$j]; /*4980*/
		$1[$k[--$j]] = _4W; /*4980*/
		$k[$j++] = "d4we"; /*4981*/
		$k[$j++] = ~~(($1.d4 - $1.d4gs) / $1.d4to); /*4981*/
		$k[$j++] = $1.d4ele; /*4981*/
		$k[$j++] = $1.d4mwe; /*4981*/
		$k[$j++] = 4; /*4981*/
		$k[$j++] = false; /*4981*/
		$1.getRSSwidths(); /*4981*/
		var _4d = $k[--$j]; /*4981*/
		$1[$k[--$j]] = _4d; /*4981*/
		$1.d1w = $a(8); /*4983*/
		for (var _4g = 0; _4g <= 3; _4g += 1) { /*4988*/
			$1.i = _4g; /*4985*/
			$put($1.d1w, $1.i * 2, $get($1.d1wo, $1.i)); /*4986*/
			$put($1.d1w, ($1.i * 2) + 1, $get($1.d1we, $1.i)); /*4987*/
		} /*4987*/
		$1.d2w = $a(8); /*4990*/
		for (var _4s = 0; _4s <= 3; _4s += 1) { /*4995*/
			$1.i = _4s; /*4992*/
			$put($1.d2w, 7 - ($1.i * 2), $get($1.d2wo, $1.i)); /*4993*/
			$put($1.d2w, 6 - ($1.i * 2), $get($1.d2we, $1.i)); /*4994*/
		} /*4994*/
		$1.d3w = $a(8); /*4997*/
		for (var _54 = 0; _54 <= 3; _54 += 1) { /*5002*/
			$1.i = _54; /*4999*/
			$put($1.d3w, 7 - ($1.i * 2), $get($1.d3wo, $1.i)); /*5000*/
			$put($1.d3w, 6 - ($1.i * 2), $get($1.d3we, $1.i)); /*5001*/
		} /*5001*/
		$1.d4w = $a(8); /*5004*/
		for (var _5G = 0; _5G <= 3; _5G += 1) { /*5009*/
			$1.i = _5G; /*5006*/
			$put($1.d4w, $1.i * 2, $get($1.d4wo, $1.i)); /*5007*/
			$put($1.d4w, ($1.i * 2) + 1, $get($1.d4we, $1.i)); /*5008*/
		} /*5008*/
		$k[$j++] = Infinity; /*5016*/
		var _5R = $1.d1w; /*5012*/
		for (var _5S = 0, _5T = _5R.length; _5S < _5T; _5S++) { /*5012*/
			$k[$j++] = $get(_5R, _5S); /*5012*/
		} /*5012*/
		var _5V = $1.d2w; /*5013*/
		for (var _5W = 0, _5X = _5V.length; _5W < _5X; _5W++) { /*5013*/
			$k[$j++] = $get(_5V, _5W); /*5013*/
		} /*5013*/
		var _5Z = $1.d3w; /*5014*/
		for (var _5a = 0, _5b = _5Z.length; _5a < _5b; _5a++) { /*5014*/
			$k[$j++] = $get(_5Z, _5a); /*5014*/
		} /*5014*/
		var _5d = $1.d4w; /*5015*/
		for (var _5e = 0, _5f = _5d.length; _5e < _5f; _5e++) { /*5015*/
			$k[$j++] = $get(_5d, _5e); /*5015*/
		} /*5015*/
		$1.widths = $a(); /*5016*/
		$1.checkweights = $a([1, 3, 9, 27, 2, 6, 18, 54, 58, 72, 24, 8, 29, 36, 12, 4, 74, 51, 17, 32, 37, 65, 48, 16, 64, 34, 23, 69, 49, 68, 46, 59]); /*5023*/
		$1.checkwidths = $a([3, 8, 2, 1, 1, 3, 5, 5, 1, 1, 3, 3, 7, 1, 1, 3, 1, 9, 1, 1, 2, 7, 4, 1, 1, 2, 5, 6, 1, 1, 2, 3, 8, 1, 1, 1, 5, 7, 1, 1, 1, 3, 9, 1, 1]); /*5029*/
		$1.checksum = 0; /*5031*/
		for (var _5k = 0; _5k <= 31; _5k += 1) { /*5035*/
			$1.i = _5k; /*5033*/
			$1.checksum = $1.checksum + ($get($1.widths, $1.i) * $get($1.checkweights, $1.i)); /*5034*/
		} /*5034*/
		$1.checksum = $1.checksum % 79; /*5036*/
		if ($1.checksum >= 8) { /*5037*/
			$1.checksum = $1.checksum + 1; /*5037*/
		} /*5037*/
		if ($1.checksum >= 72) { /*5038*/
			$1.checksum = $1.checksum + 1; /*5038*/
		} /*5038*/
		$1.checklt = $geti($1.checkwidths, (~~($1.checksum / 9)) * 5, 5); /*5039*/
		$1.checkrtrev = $geti($1.checkwidths, ($1.checksum % 9) * 5, 5); /*5040*/
		$1.checkrt = $a(5); /*5041*/
		for (var _64 = 0; _64 <= 4; _64 += 1) { /*5045*/
			$1.i = _64; /*5043*/
			$put($1.checkrt, $1.i, $get($1.checkrtrev, 4 - $1.i)); /*5044*/
		} /*5044*/
		if ($eq($1.format, "omni") || $eq($1.format, "truncated")) { /*5164*/
			$k[$j++] = Infinity; /*5053*/
			var _6C = $1.d1w; /*5051*/
			$k[$j++] = 1; /*5051*/
			for (var _6D = 0, _6E = _6C.length; _6D < _6E; _6D++) { /*5051*/
				$k[$j++] = $get(_6C, _6D); /*5051*/
			} /*5051*/
			$forall($1.checklt); /*5051*/
			var _6H = $1.d2w; /*5051*/
			for (var _6I = 0, _6J = _6H.length; _6I < _6J; _6I++) { /*5051*/
				$k[$j++] = $get(_6H, _6I); /*5051*/
			} /*5051*/
			var _6L = $1.d4w; /*5052*/
			for (var _6M = 0, _6N = _6L.length; _6M < _6N; _6M++) { /*5052*/
				$k[$j++] = $get(_6L, _6M); /*5052*/
			} /*5052*/
			var _6P = $1.checkrt; /*5052*/
			for (var _6Q = 0, _6R = _6P.length; _6Q < _6R; _6Q++) { /*5052*/
				$k[$j++] = $get(_6P, _6Q); /*5052*/
			} /*5052*/
			var _6T = $1.d3w; /*5052*/
			for (var _6U = 0, _6V = _6T.length; _6U < _6V; _6U++) { /*5052*/
				$k[$j++] = $get(_6T, _6U); /*5052*/
			} /*5052*/
			$k[$j++] = 1; /*5052*/
			$k[$j++] = 1; /*5052*/
			$1.sbs = $a(); /*5053*/
			$k[$j++] = Infinity; /*5062*/
			$k[$j++] = "ren"; /*5059*/
			$k[$j++] = $0.renlinear; /*5059*/
			$k[$j++] = "sbs"; /*5059*/
			$k[$j++] = $1.sbs; /*5059*/
			$k[$j++] = "bhs"; /*5059*/
			$k[$j++] = Infinity; /*5059*/
			for (var _6a = 0, _6b = ~~(($1.sbs.length + 1) / 2); _6a < _6b; _6a++) { /*5058*/
				$k[$j++] = $1.height; /*5058*/
			} /*5058*/
			var _6d = $a(); /*5059*/
			$k[$j++] = _6d; /*5060*/
			$k[$j++] = "bbs"; /*5060*/
			$k[$j++] = Infinity; /*5060*/
			for (var _6f = 0, _6g = ~~(($1.sbs.length + 1) / 2); _6f < _6g; _6f++) { /*5059*/
				$k[$j++] = 0; /*5059*/
			} /*5059*/
			var _6h = $a(); /*5060*/
			$k[$j++] = _6h; /*5062*/
			$k[$j++] = "txt"; /*5062*/
			$k[$j++] = $1.txt; /*5062*/
			$k[$j++] = "textxalign"; /*5062*/
			$k[$j++] = "center"; /*5062*/
			$k[$j++] = "opt"; /*5062*/
			$k[$j++] = $1.options; /*5062*/
			var _6k = $d(); /*5062*/
			$k[$j++] = _6k; /*5065*/
			if (!$1.dontdraw) { /*5065*/
				$0.renlinear(); /*5065*/
			} /*5065*/
		} else { /*5164*/
			$k[$j++] = Infinity; /*5069*/
			var _6m = $1.d1w; /*5069*/
			$k[$j++] = 1; /*5069*/
			$k[$j++] = 1; /*5069*/
			for (var _6n = 0, _6o = _6m.length; _6n < _6o; _6n++) { /*5069*/
				$k[$j++] = $get(_6m, _6n); /*5069*/
			} /*5069*/
			$forall($1.checklt); /*5069*/
			var _6r = $1.d2w; /*5069*/
			for (var _6s = 0, _6t = _6r.length; _6s < _6t; _6s++) { /*5069*/
				$k[$j++] = $get(_6r, _6s); /*5069*/
			} /*5069*/
			$k[$j++] = 1; /*5069*/
			$k[$j++] = 1; /*5069*/
			$k[$j++] = 0; /*5069*/
			$1.top = $a(); /*5069*/
			$k[$j++] = Infinity; /*5070*/
			var _6w = $1.d4w; /*5070*/
			$k[$j++] = 1; /*5070*/
			$k[$j++] = 1; /*5070*/
			for (var _6x = 0, _6y = _6w.length; _6x < _6y; _6x++) { /*5070*/
				$k[$j++] = $get(_6w, _6x); /*5070*/
			} /*5070*/
			var _70 = $1.checkrt; /*5070*/
			for (var _71 = 0, _72 = _70.length; _71 < _72; _71++) { /*5070*/
				$k[$j++] = $get(_70, _71); /*5070*/
			} /*5070*/
			var _74 = $1.d3w; /*5070*/
			for (var _75 = 0, _76 = _74.length; _75 < _76; _75++) { /*5070*/
				$k[$j++] = $get(_74, _75); /*5070*/
			} /*5070*/
			$k[$j++] = 1; /*5070*/
			$k[$j++] = 1; /*5070*/
			$k[$j++] = 0; /*5070*/
			$1.bot = $a(); /*5070*/
			for (var _79 = 0; _79 <= 24; _79 += 2) { /*5075*/
				$1.i = _79; /*5072*/
				for (var _7D = 0, _7E = $get($1.top, $1.i); _7D < _7E; _7D++) { /*5073*/
					$k[$j++] = 0; /*5073*/
				} /*5073*/
				for (var _7I = 0, _7J = $get($1.top, $1.i + 1); _7I < _7J; _7I++) { /*5074*/
					$k[$j++] = 1; /*5074*/
				} /*5074*/
			} /*5074*/
			$astore($a(50)); /*5076*/
			$1.top = $k[--$j]; /*5076*/
			for (var _7M = 0; _7M <= 24; _7M += 2) { /*5081*/
				$1.i = _7M; /*5078*/
				for (var _7Q = 0, _7R = $get($1.bot, $1.i); _7Q < _7R; _7Q++) { /*5079*/
					$k[$j++] = 1; /*5079*/
				} /*5079*/
				for (var _7V = 0, _7W = $get($1.bot, $1.i + 1); _7V < _7W; _7V++) { /*5080*/
					$k[$j++] = 0; /*5080*/
				} /*5080*/
			} /*5080*/
			$astore($a(50)); /*5082*/
			$1.bot = $k[--$j]; /*5082*/
			if ($eq($1.format, "stacked")) { /*5101*/
				$k[$j++] = Infinity; /*5086*/
				for (var _7a = 0, _7b = 50; _7a < _7b; _7a++) { /*5086*/
					$k[$j++] = 0; /*5086*/
				} /*5086*/
				$1.sep = $a(); /*5086*/
				for (var _7d = 4; _7d <= 45; _7d += 1) { /*5094*/
					$1.i = _7d; /*5088*/
					if ($eq($get($1.top, $1.i), $get($1.bot, $1.i))) { /*5092*/
						$put($1.sep, $1.i, 1 - $get($1.top, $1.i)); /*5090*/
					} else { /*5092*/
						$put($1.sep, $1.i, 1 - $get($1.sep, $1.i - 1)); /*5092*/
					} /*5092*/
				} /*5092*/
				$k[$j++] = Infinity; /*5099*/
				for (var _7u = 0, _7v = 5; _7u < _7v; _7u++) { /*5096*/
					$aload($1.top); /*5096*/
				} /*5096*/
				$aload($1.sep); /*5097*/
				for (var _7y = 0, _7z = 7; _7y < _7z; _7y++) { /*5098*/
					$aload($1.bot); /*5098*/
				} /*5098*/
				$1.pixs = $a(); /*5099*/
				$1.pixy = ~~($1.pixs.length / 50); /*5100*/
			} /*5100*/
			if ($eq($1.format, "stackedomni")) { /*5151*/
				$k[$j++] = Infinity; /*5105*/
				$forall($1.top, function() { /*5105*/
					var _85 = $k[--$j]; /*5105*/
					$k[$j++] = 1 - _85; /*5105*/
				}); /*5105*/
				$1.sep1 = $a(); /*5105*/
				$puti($1.sep1, 0, $a([0, 0, 0, 0])); /*5106*/
				$puti($1.sep1, 46, $a([0, 0, 0, 0])); /*5107*/
				for (var _8B = 18; _8B <= 30; _8B += 1) { /*5120*/
					$1.i = _8B; /*5109*/
					if ($get($1.top, $1.i) == 0) { /*5117*/
						if ($get($1.top, $1.i - 1) == 1) { /*5114*/
							$k[$j++] = 1; /*5112*/
						} else { /*5114*/
							var _8L = ($get($1.sep1, $1.i - 1) == 0) ? 1 : 0; /*5114*/
							$k[$j++] = _8L; /*5114*/
						} /*5114*/
					} else { /*5117*/
						$k[$j++] = 0; /*5117*/
					} /*5117*/
					$put($1.sep1, $1.i, $k[--$j]); /*5119*/
				} /*5119*/
				$k[$j++] = Infinity; /*5121*/
				$k[$j++] = 0; /*5121*/
				$k[$j++] = 0; /*5121*/
				$k[$j++] = 0; /*5121*/
				$k[$j++] = 0; /*5121*/
				for (var _8P = 0, _8Q = 21; _8P < _8Q; _8P++) { /*5121*/
					$k[$j++] = 0; /*5121*/
					$k[$j++] = 1; /*5121*/
				} /*5121*/
				$k[$j++] = 0; /*5121*/
				$k[$j++] = 0; /*5121*/
				$k[$j++] = 0; /*5121*/
				$k[$j++] = 0; /*5121*/
				$1.sep2 = $a(); /*5121*/
				$k[$j++] = Infinity; /*5122*/
				$forall($1.bot, function() { /*5122*/
					var _8T = $k[--$j]; /*5122*/
					$k[$j++] = 1 - _8T; /*5122*/
				}); /*5122*/
				$1.sep3 = $a(); /*5122*/
				$puti($1.sep3, 0, $a([0, 0, 0, 0])); /*5123*/
				$puti($1.sep3, 46, $a([0, 0, 0, 0])); /*5124*/
				for (var _8Z = 19; _8Z <= 31; _8Z += 1) { /*5137*/
					$1.i = _8Z; /*5126*/
					if ($get($1.bot, $1.i) == 0) { /*5134*/
						if ($get($1.bot, $1.i - 1) == 1) { /*5131*/
							$k[$j++] = 1; /*5129*/
						} else { /*5131*/
							var _8j = ($get($1.sep3, $1.i - 1) == 0) ? 1 : 0; /*5131*/
							$k[$j++] = _8j; /*5131*/
						} /*5131*/
					} else { /*5134*/
						$k[$j++] = 0; /*5134*/
					} /*5134*/
					$put($1.sep3, $1.i, $k[--$j]); /*5136*/
				} /*5136*/
				$1.f3 = $a([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]); /*5138*/
				$k[$j++] = true; /*5139*/
				for (var _8o = 0; _8o <= 12; _8o += 1) { /*5139*/
					var _8t = $k[--$j]; /*5139*/
					$k[$j++] = _8t && $eq($get($1.bot, _8o + 19), $get($1.f3, _8o)); /*5139*/
				} /*5139*/
				if ($k[--$j]) { /*5142*/
					$puti($1.sep3, 19, $a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0])); /*5141*/
				} /*5141*/
				$k[$j++] = Infinity; /*5149*/
				for (var _8y = 0, _8z = $1.barxmult; _8y < _8z; _8y++) { /*5144*/
					$aload($1.top); /*5144*/
				} /*5144*/
				$aload($1.sep1); /*5145*/
				$aload($1.sep2); /*5146*/
				$aload($1.sep3); /*5147*/
				for (var _95 = 0, _96 = $1.barxmult; _95 < _96; _95++) { /*5148*/
					$aload($1.bot); /*5148*/
				} /*5148*/
				$1.pixs = $a(); /*5149*/
				$1.pixy = ~~($1.pixs.length / 50); /*5150*/
			} /*5150*/
			var _9E = {
				ren: $0.renmatrix,
				pixs: $1.pixs,
				pixx: 50,
				pixy: $1.pixy,
				height: $1.pixy / 72,
				width: 50 / 72,
				opt: $1.options
			}; /*5161*/
			$k[$j++] = _9E; /*5164*/
			if (!$1.dontdraw) { /*5164*/
				$0.renmatrix(); /*5164*/
			} /*5164*/
		} /*5164*/
	};
	$0.databarstacked = function() {
		var $1 = {}; /*5194*/
		$1.options = $k[--$j]; /*5196*/
		$1.barcode = $k[--$j]; /*5197*/
		$1.dontdraw = false; /*5199*/
		$forall($1.options, function() { /*5210*/
			var _3 = $k[--$j]; /*5210*/
			$1[$k[--$j]] = _3; /*5210*/
		}); /*5210*/
		if ($ne($geti($1.barcode, 0, 4), "(01)")) { /*5215*/
			$k[$j++] = "bwipp.databarstackedBadAI"; /*5214*/
			$k[$j++] = "GS1 DataBar Stacked must begin with (01) application identifier"; /*5214*/
			$0.raiseerror(); /*5214*/
		} /*5214*/
		if (($1.barcode.length != 17) && ($1.barcode.length != 18)) { /*5218*/
			$k[$j++] = "bwipp.databarstackedBadLength"; /*5217*/
			$k[$j++] = "GS1 DataBar Stacked must be 13 or 14 digits"; /*5217*/
			$0.raiseerror(); /*5217*/
		} /*5217*/
		$forall($geti($1.barcode, 4, $1.barcode.length - 4), function() { /*5223*/
			var _C = $k[--$j]; /*5220*/
			if ((_C < 48) || (_C > 57)) { /*5222*/
				$k[$j++] = "bwipp.databarstackedBadCharacter"; /*5221*/
				$k[$j++] = "GS1 DataBar Stacked must contain only digits"; /*5221*/
				$0.raiseerror(); /*5221*/
			} /*5221*/
		}); /*5221*/
		$1.checksum = 0; /*5226*/
		for (var _D = 0; _D <= 12; _D += 1) { /*5230*/
			$1.i = _D; /*5228*/
			$k[$j++] = "checksum"; /*5229*/
			$k[$j++] = $1.checksum; /*5229*/
			$k[$j++] = $get($1.barcode, $1.i + 4) - 48; /*5229*/
			if (($1.i % 2) == 0) { /*5229*/
				var _J = $k[--$j]; /*5229*/
				$k[$j++] = _J * 3; /*5229*/
			} /*5229*/
			var _K = $k[--$j]; /*5229*/
			var _L = $k[--$j]; /*5229*/
			$1[$k[--$j]] = _L + _K; /*5229*/
		} /*5229*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*5231*/
		if ($1.barcode.length == 18) { /*5236*/
			if ($get($1.barcode, 17) != ($1.checksum + 48)) { /*5235*/
				$k[$j++] = "bwipp.databarstackedBadCheckDigit"; /*5234*/
				$k[$j++] = "Incorrect GS1 DataBar Stacked check digit provided"; /*5234*/
				$0.raiseerror(); /*5234*/
			} /*5234*/
		} /*5234*/
		var _S = $s(18); /*5237*/
		$puti(_S, 0, $1.barcode); /*5238*/
		$put(_S, 17, $1.checksum + 48); /*5239*/
		$1.barcode = _S; /*5240*/
		$1.options.dontdraw = true; /*5243*/
		$1.options.format = "stacked"; /*5244*/
		$k[$j++] = "args"; /*5246*/
		$k[$j++] = $1.barcode; /*5246*/
		$k[$j++] = $1.options; /*5246*/
		$0.databaromni(); /*5246*/
		var _Z = $k[--$j]; /*5246*/
		$1[$k[--$j]] = _Z; /*5246*/
		$1.args.opt = $1.options; /*5248*/
		$k[$j++] = $1.args; /*5251*/
		if (!$1.dontdraw) { /*5251*/
			$0.renmatrix(); /*5251*/
		} /*5251*/
	};
	$0.databarstackedomni = function() {
		var $1 = {}; /*5279*/
		$1.options = $k[--$j]; /*5281*/
		$1.barcode = $k[--$j]; /*5282*/
		$1.dontdraw = false; /*5284*/
		$forall($1.options, function() { /*5295*/
			var _3 = $k[--$j]; /*5295*/
			$1[$k[--$j]] = _3; /*5295*/
		}); /*5295*/
		if ($ne($geti($1.barcode, 0, 4), "(01)")) { /*5300*/
			$k[$j++] = "bwipp.databarstackedomniBadAI"; /*5299*/
			$k[$j++] = "GS1 DataBar Stacked Omnidirectional must begin with (01) application identifier"; /*5299*/
			$0.raiseerror(); /*5299*/
		} /*5299*/
		if (($1.barcode.length != 17) && ($1.barcode.length != 18)) { /*5303*/
			$k[$j++] = "bwipp.databarstackedomniBadLength"; /*5302*/
			$k[$j++] = "GS1 DataBar Stacked Omnidirectional must be 13 or 14 digits"; /*5302*/
			$0.raiseerror(); /*5302*/
		} /*5302*/
		$forall($geti($1.barcode, 4, $1.barcode.length - 4), function() { /*5308*/
			var _C = $k[--$j]; /*5305*/
			if ((_C < 48) || (_C > 57)) { /*5307*/
				$k[$j++] = "bwipp.databarstackedomniBadCharacter"; /*5306*/
				$k[$j++] = "GS1 DataBar Stacked Omnidirectional must contain only digits"; /*5306*/
				$0.raiseerror(); /*5306*/
			} /*5306*/
		}); /*5306*/
		$1.checksum = 0; /*5311*/
		for (var _D = 0; _D <= 12; _D += 1) { /*5315*/
			$1.i = _D; /*5313*/
			$k[$j++] = "checksum"; /*5314*/
			$k[$j++] = $1.checksum; /*5314*/
			$k[$j++] = $get($1.barcode, $1.i + 4) - 48; /*5314*/
			if (($1.i % 2) == 0) { /*5314*/
				var _J = $k[--$j]; /*5314*/
				$k[$j++] = _J * 3; /*5314*/
			} /*5314*/
			var _K = $k[--$j]; /*5314*/
			var _L = $k[--$j]; /*5314*/
			$1[$k[--$j]] = _L + _K; /*5314*/
		} /*5314*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*5316*/
		if ($1.barcode.length == 18) { /*5321*/
			if ($get($1.barcode, 17) != ($1.checksum + 48)) { /*5320*/
				$k[$j++] = "bwipp.databarstackedomniBadCheckDigit"; /*5319*/
				$k[$j++] = "Incorrect GS1 DataBar Stacked Omnidirectional check digit provided"; /*5319*/
				$0.raiseerror(); /*5319*/
			} /*5319*/
		} /*5319*/
		var _S = $s(18); /*5322*/
		$puti(_S, 0, $1.barcode); /*5323*/
		$put(_S, 17, $1.checksum + 48); /*5324*/
		$1.barcode = _S; /*5325*/
		$1.options.dontdraw = true; /*5328*/
		$1.options.format = "stackedomni"; /*5329*/
		$k[$j++] = "args"; /*5331*/
		$k[$j++] = $1.barcode; /*5331*/
		$k[$j++] = $1.options; /*5331*/
		$0.databaromni(); /*5331*/
		var _Z = $k[--$j]; /*5331*/
		$1[$k[--$j]] = _Z; /*5331*/
		$1.args.opt = $1.options; /*5333*/
		$k[$j++] = $1.args; /*5336*/
		if (!$1.dontdraw) { /*5336*/
			$0.renmatrix(); /*5336*/
		} /*5336*/
	};
	$0.databartruncated = function() {
		var $1 = {}; /*5364*/
		$1.options = $k[--$j]; /*5366*/
		$1.barcode = $k[--$j]; /*5367*/
		$1.dontdraw = false; /*5369*/
		$forall($1.options, function() { /*5380*/
			var _3 = $k[--$j]; /*5380*/
			$1[$k[--$j]] = _3; /*5380*/
		}); /*5380*/
		if ($ne($geti($1.barcode, 0, 4), "(01)")) { /*5385*/
			$k[$j++] = "bwipp.databartruncatedBadAI"; /*5384*/
			$k[$j++] = "GS1 DataBar Truncated must begin with (01) application identifier"; /*5384*/
			$0.raiseerror(); /*5384*/
		} /*5384*/
		if (($1.barcode.length != 17) && ($1.barcode.length != 18)) { /*5388*/
			$k[$j++] = "bwipp.databartruncatedBadLength"; /*5387*/
			$k[$j++] = "GS1 DataBar Truncated must be 13 or 14 digits"; /*5387*/
			$0.raiseerror(); /*5387*/
		} /*5387*/
		$forall($geti($1.barcode, 4, $1.barcode.length - 4), function() { /*5393*/
			var _C = $k[--$j]; /*5390*/
			if ((_C < 48) || (_C > 57)) { /*5392*/
				$k[$j++] = "bwipp.databartruncatedBadCharacter"; /*5391*/
				$k[$j++] = "GS1 DataBar Truncated must contain only digits"; /*5391*/
				$0.raiseerror(); /*5391*/
			} /*5391*/
		}); /*5391*/
		$1.checksum = 0; /*5396*/
		for (var _D = 0; _D <= 12; _D += 1) { /*5400*/
			$1.i = _D; /*5398*/
			$k[$j++] = "checksum"; /*5399*/
			$k[$j++] = $1.checksum; /*5399*/
			$k[$j++] = $get($1.barcode, $1.i + 4) - 48; /*5399*/
			if (($1.i % 2) == 0) { /*5399*/
				var _J = $k[--$j]; /*5399*/
				$k[$j++] = _J * 3; /*5399*/
			} /*5399*/
			var _K = $k[--$j]; /*5399*/
			var _L = $k[--$j]; /*5399*/
			$1[$k[--$j]] = _L + _K; /*5399*/
		} /*5399*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*5401*/
		if ($1.barcode.length == 18) { /*5406*/
			if ($get($1.barcode, 17) != ($1.checksum + 48)) { /*5405*/
				$k[$j++] = "bwipp.databartruncatedBadCheckDigit"; /*5404*/
				$k[$j++] = "Incorrect GS1 DataBar Truncated check digit provided"; /*5404*/
				$0.raiseerror(); /*5404*/
			} /*5404*/
		} /*5404*/
		var _S = $s(18); /*5407*/
		$puti(_S, 0, $1.barcode); /*5408*/
		$put(_S, 17, $1.checksum + 48); /*5409*/
		$1.barcode = _S; /*5410*/
		$1.options.dontdraw = true; /*5413*/
		$1.options.format = "truncated"; /*5414*/
		$k[$j++] = "args"; /*5416*/
		$k[$j++] = $1.barcode; /*5416*/
		$k[$j++] = $1.options; /*5416*/
		$0.databaromni(); /*5416*/
		var _Z = $k[--$j]; /*5416*/
		$1[$k[--$j]] = _Z; /*5416*/
		$1.args.opt = $1.options; /*5418*/
		$k[$j++] = $1.args; /*5421*/
		if (!$1.dontdraw) { /*5421*/
			$0.renlinear(); /*5421*/
		} /*5421*/
	};
	$0.databarlimited = function() {
		var $1 = {}; /*5448*/
		$1.options = $k[--$j]; /*5450*/
		$1.barcode = $k[--$j]; /*5451*/
		$1.dontdraw = false; /*5453*/
		$1.height = 10 / 72; /*5454*/
		$1.linkage = false; /*5455*/
		$forall($1.options, function() { /*5466*/
			var _3 = $k[--$j]; /*5466*/
			$1[$k[--$j]] = _3; /*5466*/
		}); /*5466*/
		$1.height = +$1.height; /*5468*/
		if ($ne($geti($1.barcode, 0, 4), "(01)")) { /*5473*/
			$k[$j++] = "bwipp.databarlimitedBadAI"; /*5472*/
			$k[$j++] = "GS1 DataBar Limited must begin with (01) application identifier"; /*5472*/
			$0.raiseerror(); /*5472*/
		} /*5472*/
		if (($1.barcode.length != 17) && ($1.barcode.length != 18)) { /*5476*/
			$k[$j++] = "bwipp.databarlimitedBadLength"; /*5475*/
			$k[$j++] = "GS1 DataBar Limited must be 13 or 14 digits"; /*5475*/
			$0.raiseerror(); /*5475*/
		} /*5475*/
		var _B = $get($1.barcode, 4); /*5477*/
		if ((_B < 48) || (_B > 49)) { /*5479*/
			$k[$j++] = "bwipp.databarlimitedBadStartDigit"; /*5478*/
			$k[$j++] = "GS1 DataBar Limited must begin with 0 or 1"; /*5478*/
			$0.raiseerror(); /*5478*/
		} /*5478*/
		$forall($geti($1.barcode, 5, $1.barcode.length - 5), function() { /*5484*/
			var _F = $k[--$j]; /*5481*/
			if ((_F < 48) || (_F > 57)) { /*5483*/
				$k[$j++] = "bwipp.databarlimitedBadCharacter"; /*5482*/
				$k[$j++] = "GS1 DataBar Limited must contain only digits"; /*5482*/
				$0.raiseerror(); /*5482*/
			} /*5482*/
		}); /*5482*/
		$1.checksum = 0; /*5487*/
		for (var _G = 0; _G <= 12; _G += 1) { /*5491*/
			$1.i = _G; /*5489*/
			$k[$j++] = "checksum"; /*5490*/
			$k[$j++] = $1.checksum; /*5490*/
			$k[$j++] = $get($1.barcode, $1.i + 4) - 48; /*5490*/
			if (($1.i % 2) == 0) { /*5490*/
				var _M = $k[--$j]; /*5490*/
				$k[$j++] = _M * 3; /*5490*/
			} /*5490*/
			var _N = $k[--$j]; /*5490*/
			var _O = $k[--$j]; /*5490*/
			$1[$k[--$j]] = _O + _N; /*5490*/
		} /*5490*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*5492*/
		if ($1.barcode.length == 18) { /*5497*/
			if ($get($1.barcode, 17) != ($1.checksum + 48)) { /*5496*/
				$k[$j++] = "bwipp.databaromniBadCheckDigit"; /*5495*/
				$k[$j++] = "Incorrect GS1 DataBar Limited check digit provided"; /*5495*/
				$0.raiseerror(); /*5495*/
			} /*5495*/
		} /*5495*/
		var _V = $s(18); /*5498*/
		$puti(_V, 0, $1.barcode); /*5499*/
		$put(_V, 17, $1.checksum + 48); /*5500*/
		$1.barcode = _V; /*5501*/
		$k[$j++] = Infinity; /*5506*/
		$forall($geti($1.barcode, 4, 13), function() { /*5505*/
			var _a = $k[--$j]; /*5505*/
			$k[$j++] = _a - 48; /*5505*/
		}); /*5505*/
		$1.binval = $a(); /*5506*/
		if ($1.linkage) { /*5513*/
			$1.linkval = $a([2, 0, 1, 5, 1, 3, 3, 5, 3, 1, 0, 9, 6]); /*5508*/
			for (var _g = 0, _f = $1.binval.length - 1; _g <= _f; _g += 1) { /*5512*/
				$1.i = _g; /*5510*/
				$put($1.binval, $1.i, $get($1.binval, $1.i) + $get($1.linkval, $1.i)); /*5511*/
			} /*5511*/
		} /*5511*/
		$1.txt = $a($1.barcode.length); /*5516*/
		for (var _t = 0, _s = $1.barcode.length - 1; _t <= _s; _t += 1) { /*5520*/
			$1.i = _t; /*5518*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), 0, 0, "", 0])); /*5519*/
		} /*5519*/
		$1.ncr = function() {
			var _10 = $k[--$j]; /*5523*/
			var _11 = $k[--$j]; /*5523*/
			var _12 = _11 - _10; /*5523*/
			if (_10 < (_11 - _10)) { /*5523*/
				var _ = _12; /*5523*/
				_12 = _10; /*5523*/
				_10 = _; /*5523*/
			} /*5523*/
			$k[$j++] = _12; /*5530*/
			$k[$j++] = 1; /*5530*/
			$k[$j++] = 1; /*5530*/
			for (var _14 = _11, _13 = _10 + 1; _14 >= _13; _14 -= 1) { /*5530*/
				var _15 = $k[--$j]; /*5526*/
				var _16 = $k[--$j]; /*5527*/
				var _17 = $k[--$j]; /*5527*/
				$k[$j++] = _17; /*5529*/
				$k[$j++] = _16; /*5529*/
				$k[$j++] = _15 * _14; /*5529*/
				if ($le(_16, _17)) { /*5529*/
					var _18 = $k[--$j]; /*5528*/
					var _19 = $k[--$j]; /*5528*/
					$k[$j++] = _19 + 1; /*5528*/
					$k[$j++] = ~~(_18 / _19); /*5528*/
				} /*5528*/
			} /*5528*/
			for (;;) { /*5534*/
				var _1A = $k[--$j]; /*5532*/
				var _1B = $k[--$j]; /*5532*/
				var _1C = $k[--$j]; /*5532*/
				$k[$j++] = _1C; /*5532*/
				$k[$j++] = _1B; /*5532*/
				$k[$j++] = _1A; /*5532*/
				if ($gt(_1B, _1C)) { /*5532*/
					break; /*5532*/
				} /*5532*/
				var _1D = $k[--$j]; /*5533*/
				var _1E = $k[--$j]; /*5533*/
				$k[$j++] = _1E + 1; /*5533*/
				$k[$j++] = ~~(_1D / _1E); /*5533*/
			} /*5533*/
			var _1F = $k[--$j]; /*5535*/
			var _1G = $k[--$j]; /*5535*/
			var _1H = $k[--$j]; /*5535*/
			$k[$j++] = _1F; /*5535*/
		}; /*5536*/
		$1.getRSSwidths = function() {
			$1.oe = $k[--$j]; /*5539*/
			$1.el = $k[--$j]; /*5540*/
			$1.mw = $k[--$j]; /*5541*/
			$1.nm = $k[--$j]; /*5542*/
			$1.val = $k[--$j]; /*5543*/
			$1.out = $a($1.el); /*5544*/
			$1.mask = 0; /*5545*/
			for (var _1R = 0, _1Q = $1.el - 2; _1R <= _1Q; _1R += 1) { /*5572*/
				$1.bar = _1R; /*5547*/
				$1.ew = 1; /*5548*/
				var _1T = $1.bar; /*5549*/
				$1.mask = $1.mask | ((_1T < 0 ? 1 >>> -_1T : 1 << _1T)); /*5549*/
				for (;;) { /*5568*/
					$k[$j++] = "sval"; /*5550*/
					$k[$j++] = ($1.nm - $1.ew) - 1; /*5550*/
					$k[$j++] = ($1.el - $1.bar) - 2; /*5550*/
					$1.ncr(); /*5550*/
					var _1Y = $k[--$j]; /*5550*/
					$1[$k[--$j]] = _1Y; /*5550*/
					if (($1.oe && ($1.mask == 0)) && (((($1.nm - $1.ew) - ($1.el * 2)) + ($1.bar * 2)) >= -2)) { /*5553*/
						$k[$j++] = "sval"; /*5552*/
						$k[$j++] = $1.sval; /*5552*/
						$k[$j++] = (($1.nm - $1.ew) - $1.el) + $1.bar; /*5552*/
						$k[$j++] = ($1.el - $1.bar) - 2; /*5552*/
						$1.ncr(); /*5552*/
						var _1n = $k[--$j]; /*5552*/
						var _1o = $k[--$j]; /*5552*/
						$1[$k[--$j]] = _1o - _1n; /*5552*/
					} /*5552*/
					if (($1.el - $1.bar) > 2) { /*5562*/
						$1.lval = 0; /*5555*/
						for (var _1y = ((($1.nm - $1.ew) - $1.el) + $1.bar) + 2, _1x = $1.mw + 1; _1y >= _1x; _1y -= 1) { /*5559*/
							$k[$j++] = (($1.nm - _1y) - $1.ew) - 1; /*5557*/
							$k[$j++] = ($1.el - $1.bar) - 3; /*5557*/
							$1.ncr(); /*5557*/
							$1.lval = $k[--$j] + $1.lval; /*5558*/
						} /*5558*/
						$1.sval = $1.sval - ($1.lval * (($1.el - $1.bar) - 1)); /*5560*/
					} else { /*5562*/
						if (($1.nm - $1.ew) > $1.mw) { /*5562*/
							$1.sval = $1.sval - 1; /*5562*/
						} /*5562*/
					} /*5562*/
					$1.val = $1.val - $1.sval; /*5564*/
					if ($1.val < 0) { /*5565*/
						break; /*5565*/
					} /*5565*/
					$1.ew = $1.ew + 1; /*5566*/
					var _2I = $1.bar; /*5567*/
					$1.mask = $1.mask & (~((_2I < 0 ? 1 >>> -_2I : 1 << _2I))); /*5567*/
				} /*5567*/
				$1.val = $1.val + $1.sval; /*5569*/
				$1.nm = $1.nm - $1.ew; /*5570*/
				$put($1.out, $1.bar, $1.ew); /*5571*/
			} /*5571*/
			$put($1.out, $1.el - 1, $1.nm); /*5573*/
			$k[$j++] = $1.out; /*5574*/
		}; /*5575*/
		for (var _2U = 0; _2U <= 11; _2U += 1) { /*5581*/
			$1.i = _2U; /*5578*/
			var _2V = $1.binval; /*5579*/
			var _2W = $1.i; /*5579*/
			$put(_2V, _2W + 1, $get(_2V, _2W + 1) + (($get($1.binval, $1.i) % 2013571) * 10)); /*5579*/
			$put($1.binval, $1.i, ~~($get($1.binval, $1.i) / 2013571)); /*5580*/
		} /*5580*/
		$1.d2 = $get($1.binval, 12) % 2013571; /*5582*/
		var _2i = $1.binval; /*5583*/
		$put(_2i, 12, ~~($get(_2i, 12) / 2013571)); /*5583*/
		$1.d1 = 0; /*5585*/
		$1.i = true; /*5586*/
		for (var _2k = 0; _2k <= 12; _2k += 1) { /*5596*/
			$1.j = _2k; /*5588*/
			var _2n = $get($1.binval, $1.j); /*5589*/
			$k[$j++] = _2n; /*5595*/
			if ((_2n == 0) && $1.i) { /*5594*/
				$j--; /*5591*/
			} else { /*5594*/
				$1.i = false; /*5593*/
				$1.d1 = $1.d1 + ($k[--$j] * (~~Math.pow(10, 12 - $1.j))); /*5594*/
			} /*5594*/
		} /*5594*/
		$1.tab267 = $a([183063, 0, 17, 9, 6, 3, 6538, 28, 820063, 183064, 13, 13, 5, 4, 875, 728, 1000775, 820064, 9, 17, 3, 6, 28, 6454, 1491020, 1000776, 15, 11, 5, 4, 2415, 203, 1979844, 1491021, 11, 15, 4, 5, 203, 2408, 1996938, 1979845, 19, 7, 8, 1, 17094, 1, 2013570, 1996939, 7, 19, 1, 8, 1, 16632]); /*5606*/
		$1.i = 0; /*5608*/
		for (;;) { /*5618*/
			if ($1.d1 <= $get($1.tab267, $1.i)) { /*5616*/
				$forall($geti($1.tab267, $1.i + 1, 7)); /*5610*/
				$1.d1te = $k[--$j]; /*5611*/
				$1.d1to = $k[--$j]; /*5611*/
				$1.d1mwe = $k[--$j]; /*5612*/
				$1.d1mwo = $k[--$j]; /*5612*/
				$1.d1ele = $k[--$j]; /*5613*/
				$1.d1elo = $k[--$j]; /*5613*/
				$1.d1gs = $k[--$j]; /*5614*/
				break; /*5615*/
			} /*5615*/
			$1.i = $1.i + 8; /*5617*/
		} /*5617*/
		$1.i = 0; /*5620*/
		for (;;) { /*5630*/
			if ($1.d2 <= $get($1.tab267, $1.i)) { /*5628*/
				$forall($geti($1.tab267, $1.i + 1, 7)); /*5622*/
				$1.d2te = $k[--$j]; /*5623*/
				$1.d2to = $k[--$j]; /*5623*/
				$1.d2mwe = $k[--$j]; /*5624*/
				$1.d2mwo = $k[--$j]; /*5624*/
				$1.d2ele = $k[--$j]; /*5625*/
				$1.d2elo = $k[--$j]; /*5625*/
				$1.d2gs = $k[--$j]; /*5626*/
				break; /*5627*/
			} /*5627*/
			$1.i = $1.i + 8; /*5629*/
		} /*5629*/
		$k[$j++] = "d1wo"; /*5632*/
		$k[$j++] = ~~(($1.d1 - $1.d1gs) / $1.d1te); /*5632*/
		$k[$j++] = $1.d1elo; /*5632*/
		$k[$j++] = $1.d1mwo; /*5632*/
		$k[$j++] = 7; /*5632*/
		$k[$j++] = false; /*5632*/
		$1.getRSSwidths(); /*5632*/
		var _3S = $k[--$j]; /*5632*/
		$1[$k[--$j]] = _3S; /*5632*/
		$k[$j++] = "d1we"; /*5633*/
		$k[$j++] = ($1.d1 - $1.d1gs) % $1.d1te; /*5633*/
		$k[$j++] = $1.d1ele; /*5633*/
		$k[$j++] = $1.d1mwe; /*5633*/
		$k[$j++] = 7; /*5633*/
		$k[$j++] = true; /*5633*/
		$1.getRSSwidths(); /*5633*/
		var _3Z = $k[--$j]; /*5633*/
		$1[$k[--$j]] = _3Z; /*5633*/
		$k[$j++] = "d2wo"; /*5634*/
		$k[$j++] = ~~(($1.d2 - $1.d2gs) / $1.d2te); /*5634*/
		$k[$j++] = $1.d2elo; /*5634*/
		$k[$j++] = $1.d2mwo; /*5634*/
		$k[$j++] = 7; /*5634*/
		$k[$j++] = false; /*5634*/
		$1.getRSSwidths(); /*5634*/
		var _3g = $k[--$j]; /*5634*/
		$1[$k[--$j]] = _3g; /*5634*/
		$k[$j++] = "d2we"; /*5635*/
		$k[$j++] = ($1.d2 - $1.d2gs) % $1.d2te; /*5635*/
		$k[$j++] = $1.d2ele; /*5635*/
		$k[$j++] = $1.d2mwe; /*5635*/
		$k[$j++] = 7; /*5635*/
		$k[$j++] = true; /*5635*/
		$1.getRSSwidths(); /*5635*/
		var _3n = $k[--$j]; /*5635*/
		$1[$k[--$j]] = _3n; /*5635*/
		$1.d1w = $a(14); /*5637*/
		for (var _3q = 0; _3q <= 6; _3q += 1) { /*5642*/
			$1.i = _3q; /*5639*/
			$put($1.d1w, $1.i * 2, $get($1.d1wo, $1.i)); /*5640*/
			$put($1.d1w, ($1.i * 2) + 1, $get($1.d1we, $1.i)); /*5641*/
		} /*5641*/
		$1.d2w = $a(14); /*5644*/
		for (var _42 = 0; _42 <= 6; _42 += 1) { /*5649*/
			$1.i = _42; /*5646*/
			$put($1.d2w, $1.i * 2, $get($1.d2wo, $1.i)); /*5647*/
			$put($1.d2w, ($1.i * 2) + 1, $get($1.d2we, $1.i)); /*5648*/
		} /*5648*/
		$k[$j++] = Infinity; /*5654*/
		var _4D = $1.d1w; /*5652*/
		for (var _4E = 0, _4F = _4D.length; _4E < _4F; _4E++) { /*5652*/
			$k[$j++] = $get(_4D, _4E); /*5652*/
		} /*5652*/
		var _4H = $1.d2w; /*5653*/
		for (var _4I = 0, _4J = _4H.length; _4I < _4J; _4I++) { /*5653*/
			$k[$j++] = $get(_4H, _4I); /*5653*/
		} /*5653*/
		$1.widths = $a(); /*5654*/
		$1.checkweights = $a([1, 3, 9, 27, 81, 65, 17, 51, 64, 14, 42, 37, 22, 66, 20, 60, 2, 6, 18, 54, 73, 41, 34, 13, 39, 28, 84, 74]); /*5659*/
		$k[$j++] = Infinity; /*5675*/
		for (var _4N = 0; _4N <= 43; _4N += 1) { /*5662*/
			$k[$j++] = _4N; /*5662*/
		} /*5662*/
		$k[$j++] = 45; /*5664*/
		$k[$j++] = 52; /*5664*/
		$k[$j++] = 57; /*5664*/
		for (var _4O = 63; _4O <= 66; _4O += 1) { /*5664*/
			$k[$j++] = _4O; /*5664*/
		} /*5664*/
		for (var _4P = 73; _4P <= 79; _4P += 1) { /*5665*/
			$k[$j++] = _4P; /*5665*/
		} /*5665*/
		$k[$j++] = 82; /*5667*/
		for (var _4Q = 126; _4Q <= 130; _4Q += 1) { /*5667*/
			$k[$j++] = _4Q; /*5667*/
		} /*5667*/
		$k[$j++] = 132; /*5669*/
		for (var _4R = 141; _4R <= 146; _4R += 1) { /*5669*/
			$k[$j++] = _4R; /*5669*/
		} /*5669*/
		for (var _4S = 210; _4S <= 217; _4S += 1) { /*5670*/
			$k[$j++] = _4S; /*5670*/
		} /*5670*/
		$k[$j++] = 220; /*5672*/
		for (var _4T = 316; _4T <= 320; _4T += 1) { /*5672*/
			$k[$j++] = _4T; /*5672*/
		} /*5672*/
		$k[$j++] = 322; /*5674*/
		$k[$j++] = 323; /*5674*/
		$k[$j++] = 326; /*5674*/
		$k[$j++] = 337; /*5674*/
		$1.checkseq = $a(); /*5675*/
		$1.checksum = 0; /*5677*/
		for (var _4V = 0; _4V <= 27; _4V += 1) { /*5681*/
			$1.i = _4V; /*5679*/
			$1.checksum = $1.checksum + ($get($1.widths, $1.i) * $get($1.checkweights, $1.i)); /*5680*/
		} /*5680*/
		$1.checksum = $1.checksum % 89; /*5682*/
		$1.seq = $get($1.checkseq, $1.checksum); /*5683*/
		$k[$j++] = "swidths"; /*5684*/
		$k[$j++] = ~~($1.seq / 21); /*5684*/
		$k[$j++] = 8; /*5684*/
		$k[$j++] = 3; /*5684*/
		$k[$j++] = 6; /*5684*/
		$k[$j++] = false; /*5684*/
		$1.getRSSwidths(); /*5684*/
		var _4i = $k[--$j]; /*5684*/
		$1[$k[--$j]] = _4i; /*5684*/
		$k[$j++] = "bwidths"; /*5685*/
		$k[$j++] = $1.seq % 21; /*5685*/
		$k[$j++] = 8; /*5685*/
		$k[$j++] = 3; /*5685*/
		$k[$j++] = 6; /*5685*/
		$k[$j++] = false; /*5685*/
		$1.getRSSwidths(); /*5685*/
		var _4l = $k[--$j]; /*5685*/
		$1[$k[--$j]] = _4l; /*5685*/
		$1.checkwidths = $a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]); /*5687*/
		for (var _4o = 0; _4o <= 5; _4o += 1) { /*5692*/
			$1.i = _4o; /*5689*/
			$put($1.checkwidths, $1.i * 2, $get($1.swidths, $1.i)); /*5690*/
			$put($1.checkwidths, ($1.i * 2) + 1, $get($1.bwidths, $1.i)); /*5691*/
		} /*5691*/
		$k[$j++] = Infinity; /*5696*/
		var _4z = $1.d1w; /*5695*/
		$k[$j++] = 1; /*5695*/
		for (var _50 = 0, _51 = _4z.length; _50 < _51; _50++) { /*5695*/
			$k[$j++] = $get(_4z, _50); /*5695*/
		} /*5695*/
		var _53 = $1.checkwidths; /*5695*/
		for (var _54 = 0, _55 = _53.length; _54 < _55; _54++) { /*5695*/
			$k[$j++] = $get(_53, _54); /*5695*/
		} /*5695*/
		var _57 = $1.d2w; /*5695*/
		for (var _58 = 0, _59 = _57.length; _58 < _59; _58++) { /*5695*/
			$k[$j++] = $get(_57, _58); /*5695*/
		} /*5695*/
		$k[$j++] = 1; /*5695*/
		$k[$j++] = 1; /*5695*/
		$1.sbs = $a(); /*5696*/
		$k[$j++] = Infinity; /*5706*/
		$k[$j++] = "ren"; /*5703*/
		$k[$j++] = $0.renlinear; /*5703*/
		$k[$j++] = "sbs"; /*5703*/
		$k[$j++] = $1.sbs; /*5703*/
		$k[$j++] = "bhs"; /*5703*/
		$k[$j++] = Infinity; /*5703*/
		for (var _5E = 0, _5F = ~~(($1.sbs.length + 1) / 2); _5E < _5F; _5E++) { /*5702*/
			$k[$j++] = $1.height; /*5702*/
		} /*5702*/
		var _5H = $a(); /*5703*/
		$k[$j++] = _5H; /*5704*/
		$k[$j++] = "bbs"; /*5704*/
		$k[$j++] = Infinity; /*5704*/
		for (var _5J = 0, _5K = ~~(($1.sbs.length + 1) / 2); _5J < _5K; _5J++) { /*5703*/
			$k[$j++] = 0; /*5703*/
		} /*5703*/
		var _5L = $a(); /*5704*/
		$k[$j++] = _5L; /*5706*/
		$k[$j++] = "txt"; /*5706*/
		$k[$j++] = $1.txt; /*5706*/
		$k[$j++] = "textxalign"; /*5706*/
		$k[$j++] = "center"; /*5706*/
		$k[$j++] = "opt"; /*5706*/
		$k[$j++] = $1.options; /*5706*/
		var _5O = $d(); /*5706*/
		$k[$j++] = _5O; /*5709*/
		if (!$1.dontdraw) { /*5709*/
			$0.renlinear(); /*5709*/
		} /*5709*/
	};
	$0.databarexpanded = function() {
		var $1 = {}; /*5737*/
		$1.options = $k[--$j]; /*5739*/
		$1.barcode = $k[--$j]; /*5740*/
		$1.dontdraw = false; /*5742*/
		$1.height = 34 / 72; /*5743*/
		$1.format = "expanded"; /*5744*/
		$1.segments = -1; /*5745*/
		$1.linkage = false; /*5746*/
		$1.barxmult = 34; /*5747*/
		$forall($1.options, function() { /*5758*/
			var _3 = $k[--$j]; /*5758*/
			$1[$k[--$j]] = _3; /*5758*/
		}); /*5758*/
		$1.height = +$1.height; /*5760*/
		$1.segments = ~~$1.segments; /*5761*/
		$1.barxmult = ~~$1.barxmult; /*5762*/
		if ($1.segments == -1) { /*5766*/
			var _A = $eq($1.format, "expandedstacked") ? 4 : 22; /*5765*/
			$1.segments = _A; /*5765*/
		} /*5765*/
		$1.expand = function() {
			$1.in = $k[--$j]; /*5770*/
			$1.out = $s($1.in.length); /*5771*/
			$1.j = 0; /*5772*/
			$k[$j++] = $1.in; /*5786*/
			for (;;) { /*5786*/
				$search($k[--$j], "^"); /*5775*/
				if ($k[--$j]) { /*5784*/
					var _H = $k[--$j]; /*5776*/
					$puti($1.out, $1.j, _H); /*5776*/
					$1.j = (_H.length + $1.j) + 1; /*5777*/
					$j--; /*5778*/
					var _L = $k[--$j]; /*5779*/
					$put($1.out, $1.j - 1, ~~$z($geti(_L, 0, 3))); /*5779*/
					$k[$j++] = $geti(_L, 3, _L.length - 3); /*5780*/
				} else { /*5784*/
					var _Q = $k[--$j]; /*5782*/
					$puti($1.out, $1.j, _Q); /*5782*/
					$1.j = _Q.length + $1.j; /*5783*/
					$k[$j++] = $geti($1.out, 0, $1.j); /*5784*/
					break; /*5784*/
				} /*5784*/
			} /*5784*/
		}; /*5787*/
		$1.ais = $a([]); /*5790*/
		$1.aival = {}; /*5791*/
		var _Y = $1.barcode; /*5792*/
		$k[$j++] = $geti(_Y, 1, _Y.length - 1); /*5804*/
		for (;;) { /*5804*/
			var _a = $k[--$j]; /*5794*/
			$k[$j++] = _a; /*5794*/
			if ($eq(_a, "")) { /*5794*/
				break; /*5794*/
			} /*5794*/
			$search($k[--$j], ")"); /*5795*/
			$j--; /*5795*/
			var _c = $k[--$j]; /*5796*/
			var _d = $k[--$j]; /*5796*/
			var _e = $k[--$j]; /*5797*/
			$k[$j++] = _c; /*5797*/
			$search(_e, "("); /*5797*/
			if ($k[--$j]) { /*5800*/
				var _g = $k[--$j]; /*5798*/
				var _h = $k[--$j]; /*5798*/
				var _i = $k[--$j]; /*5798*/
				var _j = $k[--$j]; /*5798*/
				$k[$j++] = _i; /*5798*/
				$k[$j++] = _j; /*5798*/
				$k[$j++] = _g; /*5798*/
			} else { /*5800*/
				var _k = $k[--$j]; /*5800*/
				var _l = $k[--$j]; /*5800*/
				$k[$j++] = ""; /*5800*/
				$k[$j++] = _l; /*5800*/
				$k[$j++] = _k; /*5800*/
			} /*5800*/
			$k[$j++] = Infinity; /*5802*/
			$aload($1.ais); /*5802*/
			var _o = $k[$j - 1 - ($counttomark() + 2)]; /*5802*/
			$k[$j++] = _o; /*5802*/
			$1.ais = $a(); /*5802*/
			var _r = $k[--$j]; /*5803*/
			var _s = $k[--$j]; /*5803*/
			$k[$j++] = $1.aival; /*5803*/
			$k[$j++] = _s; /*5803*/
			$k[$j++] = _r; /*5803*/
			$1.expand(); /*5803*/
			var _t = $k[--$j]; /*5803*/
			var _u = $k[--$j]; /*5803*/
			$put($k[--$j], _u, _t); /*5803*/
		} /*5803*/
		$j--; /*5805*/
		for (;;) { /*5892*/
			if ($1.ais.length == 2) { /*5817*/
				if ($eq($get($1.ais, 0), "01") && $eq($get($1.ais, 1), "3103")) { /*5816*/
					if ($eq($geti($1.aival["01"], 0, 1), "9") && ((~~$z($1.aival["3103"])) <= 32767)) { /*5815*/
						$k[$j++] = "0100"; /*5814*/
						$k[$j++] = false; /*5814*/
						break; /*5814*/
					} /*5814*/
				} /*5814*/
			} /*5814*/
			if ($1.ais.length == 2) { /*5826*/
				if ($eq($get($1.ais, 0), "01") && $eq($get($1.ais, 1), "3202")) { /*5825*/
					if ($eq($geti($1.aival["01"], 0, 1), "9") && ((~~$z($1.aival["3202"])) <= 9999)) { /*5824*/
						$k[$j++] = "0101"; /*5823*/
						$k[$j++] = false; /*5823*/
						break; /*5823*/
					} /*5823*/
				} /*5823*/
			} /*5823*/
			if ($1.ais.length == 2) { /*5835*/
				if ($eq($get($1.ais, 0), "01") && $eq($get($1.ais, 1), "3203")) { /*5834*/
					if ($eq($geti($1.aival["01"], 0, 1), "9") && ((~~$z($1.aival["3203"])) <= 22767)) { /*5833*/
						$k[$j++] = "0101"; /*5832*/
						$k[$j++] = false; /*5832*/
						break; /*5832*/
					} /*5832*/
				} /*5832*/
			} /*5832*/
			var _1R = $1.ais.length; /*5838*/
			if ((_1R == 2) || (_1R == 3)) { /*5868*/
				$k[$j++] = "ai310x"; /*5839*/
				$k[$j++] = false; /*5839*/
				for (var _1S = 3100; _1S <= 3109; _1S += 1) { /*5839*/
					var _1X = $k[--$j]; /*5839*/
					$k[$j++] = _1X || $eq($cvrs($s(4), _1S, 10), $get($1.ais, 1)); /*5839*/
				} /*5839*/
				var _1Y = $k[--$j]; /*5839*/
				$1[$k[--$j]] = _1Y; /*5839*/
				$k[$j++] = "ai320x"; /*5840*/
				$k[$j++] = false; /*5840*/
				for (var _1a = 3200; _1a <= 3209; _1a += 1) { /*5840*/
					var _1f = $k[--$j]; /*5840*/
					$k[$j++] = _1f || $eq($cvrs($s(4), _1a, 10), $get($1.ais, 1)); /*5840*/
				} /*5840*/
				var _1g = $k[--$j]; /*5840*/
				$1[$k[--$j]] = _1g; /*5840*/
				if ($1.ais.length == 3) { /*5844*/
					var _1j = $a(["11", "13", "15", "17"]); /*5842*/
					$k[$j++] = "aibad"; /*5842*/
					$k[$j++] = true; /*5842*/
					for (var _1k = 0, _1l = _1j.length; _1k < _1l; _1k++) { /*5842*/
						var _1p = $k[--$j]; /*5842*/
						$k[$j++] = _1p && $ne($get(_1j, _1k), $get($1.ais, 2)); /*5842*/
					} /*5842*/
					var _1q = $k[--$j]; /*5842*/
					$1[$k[--$j]] = _1q; /*5842*/
				} else { /*5844*/
					$1.aibad = false; /*5844*/
				} /*5844*/
				if (($eq($get($1.ais, 0), "01") && ($1.ai310x || $1.ai320x)) && (!$1.aibad)) { /*5867*/
					if ($1.ais.length == 3) { /*5864*/
						if (($eq($geti($1.aival["01"], 0, 1), "9") && ((~~$z($get($1.aival, $get($1.ais, 1)))) <= 99999)) && ((~~$z($get($1.aival, $get($1.ais, 2)))) <= 999999)) { /*5859*/
							if ($1.ai310x && $eq($get($1.ais, 2), "11")) { /*5851*/
								$k[$j++] = "0111000"; /*5851*/
								$k[$j++] = false; /*5851*/
								break; /*5851*/
							} /*5851*/
							if ($1.ai320x && $eq($get($1.ais, 2), "11")) { /*5852*/
								$k[$j++] = "0111001"; /*5852*/
								$k[$j++] = false; /*5852*/
								break; /*5852*/
							} /*5852*/
							if ($1.ai310x && $eq($get($1.ais, 2), "13")) { /*5853*/
								$k[$j++] = "0111010"; /*5853*/
								$k[$j++] = false; /*5853*/
								break; /*5853*/
							} /*5853*/
							if ($1.ai320x && $eq($get($1.ais, 2), "13")) { /*5854*/
								$k[$j++] = "0111011"; /*5854*/
								$k[$j++] = false; /*5854*/
								break; /*5854*/
							} /*5854*/
							if ($1.ai310x && $eq($get($1.ais, 2), "15")) { /*5855*/
								$k[$j++] = "0111100"; /*5855*/
								$k[$j++] = false; /*5855*/
								break; /*5855*/
							} /*5855*/
							if ($1.ai320x && $eq($get($1.ais, 2), "15")) { /*5856*/
								$k[$j++] = "0111101"; /*5856*/
								$k[$j++] = false; /*5856*/
								break; /*5856*/
							} /*5856*/
							if ($1.ai310x && $eq($get($1.ais, 2), "17")) { /*5857*/
								$k[$j++] = "0111110"; /*5857*/
								$k[$j++] = false; /*5857*/
								break; /*5857*/
							} /*5857*/
							if ($1.ai320x && $eq($get($1.ais, 2), "17")) { /*5858*/
								$k[$j++] = "0111111"; /*5858*/
								$k[$j++] = false; /*5858*/
								break; /*5858*/
							} /*5858*/
						} /*5858*/
					} else { /*5864*/
						if ($eq($geti($1.aival["01"], 0, 1), "9") && ((~~$z($get($1.aival, $get($1.ais, 1)))) <= 99999)) { /*5865*/
							if ($1.ai310x) { /*5863*/
								$k[$j++] = "0111000"; /*5863*/
								$k[$j++] = false; /*5863*/
								break; /*5863*/
							} /*5863*/
							if ($1.ai320x) { /*5864*/
								$k[$j++] = "0111001"; /*5864*/
								$k[$j++] = false; /*5864*/
								break; /*5864*/
							} /*5864*/
						} /*5864*/
					} /*5864*/
				} /*5864*/
			} /*5864*/
			if ($1.ais.length >= 2) { /*5876*/
				$k[$j++] = "ai392x"; /*5872*/
				$k[$j++] = false; /*5872*/
				for (var _2h = 3920; _2h <= 3923; _2h += 1) { /*5872*/
					var _2m = $k[--$j]; /*5872*/
					$k[$j++] = _2m || $eq($cvrs($s(4), _2h, 10), $get($1.ais, 1)); /*5872*/
				} /*5872*/
				var _2n = $k[--$j]; /*5872*/
				$1[$k[--$j]] = _2n; /*5872*/
				if ($eq($get($1.ais, 0), "01") && $1.ai392x) { /*5875*/
					if ($eq($geti($1.aival["01"], 0, 1), "9")) { /*5874*/
						$k[$j++] = "01100"; /*5874*/
						$k[$j++] = true; /*5874*/
						break; /*5874*/
					} /*5874*/
				} /*5874*/
			} /*5874*/
			if ($1.ais.length >= 2) { /*5884*/
				$k[$j++] = "ai393x"; /*5880*/
				$k[$j++] = false; /*5880*/
				for (var _2w = 3930; _2w <= 3933; _2w += 1) { /*5880*/
					var _31 = $k[--$j]; /*5880*/
					$k[$j++] = _31 || $eq($cvrs($s(4), _2w, 10), $get($1.ais, 1)); /*5880*/
				} /*5880*/
				var _32 = $k[--$j]; /*5880*/
				$1[$k[--$j]] = _32; /*5880*/
				if ($eq($get($1.ais, 0), "01") && $1.ai393x) { /*5883*/
					if ($eq($geti($1.aival["01"], 0, 1), "9")) { /*5882*/
						$k[$j++] = "01101"; /*5882*/
						$k[$j++] = true; /*5882*/
						break; /*5882*/
					} /*5882*/
				} /*5882*/
			} /*5882*/
			if ($eq($get($1.ais, 0), "01")) { /*5887*/
				$k[$j++] = "1"; /*5887*/
				$k[$j++] = true; /*5887*/
				break; /*5887*/
			} /*5887*/
			$k[$j++] = "00"; /*5890*/
			$k[$j++] = true; /*5890*/
			break; /*5890*/
		} /*5890*/
		$1.gpfallow = $k[--$j]; /*5893*/
		$1.method = $k[--$j]; /*5894*/
		$1.conv12to40 = function() {
			var _3F = $strcpy($s(40), "0000000000000000000000000000000000000000"); /*5897*/
			var _3G = $k[--$j]; /*5898*/
			var _3K = $cvrs($s(10), ~~$z($geti(_3G, 0, 3)), 2); /*5898*/
			$puti($geti(_3F, 0, 10), 10 - _3K.length, _3K); /*5898*/
			var _3O = $cvrs($s(10), ~~$z($geti(_3G, 3, 3)), 2); /*5899*/
			$puti($geti(_3F, 10, 10), 10 - _3O.length, _3O); /*5899*/
			var _3S = $cvrs($s(10), ~~$z($geti(_3G, 6, 3)), 2); /*5900*/
			$puti($geti(_3F, 20, 10), 10 - _3S.length, _3S); /*5900*/
			var _3W = $cvrs($s(10), ~~$z($geti(_3G, 9, 3)), 2); /*5901*/
			$puti($geti(_3F, 30, 10), 10 - _3W.length, _3W); /*5901*/
			$k[$j++] = _3F; /*5902*/
		}; /*5903*/
		$1.conv13to44 = function() {
			var _3Y = $strcpy($s(44), "00000000000000000000000000000000000000000000"); /*5906*/
			var _3Z = $k[--$j]; /*5907*/
			var _3d = $cvrs($s(4), ~~$z($geti(_3Z, 0, 1)), 2); /*5907*/
			$puti($geti(_3Y, 0, 4), 4 - _3d.length, _3d); /*5907*/
			$k[$j++] = _3Y; /*5908*/
			$k[$j++] = _3Y; /*5908*/
			$k[$j++] = $geti(_3Z, 1, 12); /*5908*/
			$1.conv12to40(); /*5908*/
			var _3f = $k[--$j]; /*5908*/
			$puti($k[--$j], 4, _3f); /*5908*/
		}; /*5909*/
		$1.tobin = function() {
			var _3i = $s($k[--$j]); /*5912*/
			$k[$j++] = _3i; /*5912*/
			for (var _3k = 0, _3j = _3i.length - 1; _3k <= _3j; _3k += 1) { /*5912*/
				var _3l = $k[--$j]; /*5912*/
				$put(_3l, _3k, 48); /*5912*/
				$k[$j++] = _3l; /*5912*/
			} /*5912*/
			var _3m = $k[--$j]; /*5913*/
			var _3p = $cvrs($s(_3m.length), $k[--$j], 2); /*5913*/
			$puti(_3m, _3m.length - _3p.length, _3p); /*5913*/
			$k[$j++] = _3m; /*5913*/
		}; /*5914*/
		if ($eq($1.method, "00")) { /*5919*/
			$1.cdf = $a([]); /*5917*/
			$1.gpf = $a([]); /*5918*/
		} /*5918*/
		if ($eq($1.method, "1")) { /*5926*/
			$k[$j++] = "cdf"; /*5922*/
			$k[$j++] = $geti($1.aival["01"], 0, 13); /*5922*/
			$1.conv13to44(); /*5922*/
			var _3x = $k[--$j]; /*5922*/
			$1[$k[--$j]] = _3x; /*5922*/
			$k[$j++] = Infinity; /*5923*/
			var _3z = $1.cdf; /*5923*/
			for (var _40 = 0, _41 = _3z.length; _40 < _41; _40++) { /*5923*/
				$k[$j++] = $get(_3z, _40) - 48; /*5923*/
			} /*5923*/
			$1.cdf = $a(); /*5923*/
			$1.gpf = $a([]); /*5924*/
			$1.ais = $geti($1.ais, 1, $1.ais.length - 1); /*5925*/
		} /*5925*/
		if ($eq($1.method, "0100")) { /*5935*/
			$1.cdf = $s(55); /*5929*/
			$k[$j++] = $1.cdf; /*5930*/
			$k[$j++] = 0; /*5930*/
			$k[$j++] = $geti($1.aival["01"], 1, 12); /*5930*/
			$1.conv12to40(); /*5930*/
			var _4E = $k[--$j]; /*5930*/
			var _4F = $k[--$j]; /*5930*/
			$puti($k[--$j], _4F, _4E); /*5930*/
			$k[$j++] = $1.cdf; /*5931*/
			$k[$j++] = 40; /*5931*/
			$k[$j++] = ~~$z($1.aival["3103"]); /*5931*/
			$k[$j++] = 15; /*5931*/
			$1.tobin(); /*5931*/
			var _4K = $k[--$j]; /*5931*/
			var _4L = $k[--$j]; /*5931*/
			$puti($k[--$j], _4L, _4K); /*5931*/
			$k[$j++] = Infinity; /*5932*/
			var _4N = $1.cdf; /*5932*/
			for (var _4O = 0, _4P = _4N.length; _4O < _4P; _4O++) { /*5932*/
				$k[$j++] = $get(_4N, _4O) - 48; /*5932*/
			} /*5932*/
			$1.cdf = $a(); /*5932*/
			$1.gpf = $a([]); /*5933*/
			$1.ais = $a([]); /*5934*/
		} /*5934*/
		if ($eq($1.method, "0101")) { /*5949*/
			$1.cdf = $s(55); /*5938*/
			$k[$j++] = $1.cdf; /*5939*/
			$k[$j++] = 0; /*5939*/
			$k[$j++] = $geti($1.aival["01"], 1, 12); /*5939*/
			$1.conv12to40(); /*5939*/
			var _4a = $k[--$j]; /*5939*/
			var _4b = $k[--$j]; /*5939*/
			$puti($k[--$j], _4b, _4a); /*5939*/
			if ($eq($get($1.ais, 1), "3202")) { /*5943*/
				$k[$j++] = ~~$z($1.aival["3202"]); /*5941*/
				$k[$j++] = 15; /*5941*/
				$1.tobin(); /*5941*/
			} else { /*5943*/
				$k[$j++] = (~~$z($1.aival["3203"])) + 10000; /*5943*/
				$k[$j++] = 15; /*5943*/
				$1.tobin(); /*5943*/
			} /*5943*/
			$puti($1.cdf, 40, $k[--$j]); /*5945*/
			$k[$j++] = Infinity; /*5946*/
			var _4l = $1.cdf; /*5946*/
			for (var _4m = 0, _4n = _4l.length; _4m < _4n; _4m++) { /*5946*/
				$k[$j++] = $get(_4l, _4m) - 48; /*5946*/
			} /*5946*/
			$1.cdf = $a(); /*5946*/
			$1.gpf = $a([]); /*5947*/
			$1.ais = $a([]); /*5948*/
		} /*5948*/
		if ($1.method.length == 7) { /*5969*/
			$1.cdf = $s(76); /*5952*/
			$k[$j++] = $1.cdf; /*5953*/
			$k[$j++] = 0; /*5953*/
			$k[$j++] = $geti($1.aival["01"], 1, 12); /*5953*/
			$1.conv12to40(); /*5953*/
			var _4y = $k[--$j]; /*5953*/
			var _4z = $k[--$j]; /*5953*/
			$puti($k[--$j], _4z, _4y); /*5953*/
			var _51 = $s(6); /*5954*/
			$puti(_51, 0, $geti($get($1.ais, 1), 3, 1)); /*5954*/
			$puti(_51, 1, $geti($get($1.aival, $get($1.ais, 1)), 1, 5)); /*5955*/
			$k[$j++] = ~~$z(_51); /*5955*/
			$k[$j++] = 20; /*5955*/
			$1.tobin(); /*5955*/
			$puti($1.cdf, 40, $k[--$j]); /*5956*/
			if ($1.ais.length == 3) { /*5963*/
				var _5G = $get($1.aival, $get($1.ais, 2)); /*5958*/
				$k[$j++] = ((~~$z($geti(_5G, 0, 2))) * 384) + ((((~~$z($geti(_5G, 2, 2))) - 1) * 32) + (~~$z($geti(_5G, 4, 2)))); /*5961*/
			} else { /*5963*/
				$k[$j++] = 38400; /*5963*/
			} /*5963*/
			$k[$j++] = 16; /*5965*/
			$1.tobin(); /*5965*/
			$puti($1.cdf, 60, $k[--$j]); /*5965*/
			$k[$j++] = Infinity; /*5966*/
			var _5M = $1.cdf; /*5966*/
			for (var _5N = 0, _5O = _5M.length; _5N < _5O; _5N++) { /*5966*/
				$k[$j++] = $get(_5M, _5N) - 48; /*5966*/
			} /*5966*/
			$1.cdf = $a(); /*5966*/
			$1.gpf = $a([]); /*5967*/
			$1.ais = $a([]); /*5968*/
		} /*5968*/
		if ($eq($1.method, "01100")) { /*5978*/
			$1.cdf = $s(42); /*5972*/
			$k[$j++] = $1.cdf; /*5973*/
			$k[$j++] = 0; /*5973*/
			$k[$j++] = $geti($1.aival["01"], 1, 12); /*5973*/
			$1.conv12to40(); /*5973*/
			var _5Z = $k[--$j]; /*5973*/
			var _5a = $k[--$j]; /*5973*/
			$puti($k[--$j], _5a, _5Z); /*5973*/
			$k[$j++] = $1.cdf; /*5974*/
			$k[$j++] = 40; /*5974*/
			$k[$j++] = ~~$z($geti($get($1.ais, 1), 3, 1)); /*5974*/
			$k[$j++] = 2; /*5974*/
			$1.tobin(); /*5974*/
			var _5g = $k[--$j]; /*5974*/
			var _5h = $k[--$j]; /*5974*/
			$puti($k[--$j], _5h, _5g); /*5974*/
			$k[$j++] = Infinity; /*5975*/
			var _5j = $1.cdf; /*5975*/
			for (var _5k = 0, _5l = _5j.length; _5k < _5l; _5k++) { /*5975*/
				$k[$j++] = $get(_5j, _5k) - 48; /*5975*/
			} /*5975*/
			$1.cdf = $a(); /*5975*/
			$k[$j++] = Infinity; /*5976*/
			$forall($get($1.aival, $get($1.ais, 1))); /*5976*/
			$1.gpf = $a(); /*5976*/
			$1.ais = $geti($1.ais, 2, $1.ais.length - 2); /*5977*/
		} /*5977*/
		if ($eq($1.method, "01101")) { /*5988*/
			$1.cdf = $s(52); /*5981*/
			$k[$j++] = $1.cdf; /*5982*/
			$k[$j++] = 0; /*5982*/
			$k[$j++] = $geti($1.aival["01"], 1, 12); /*5982*/
			$1.conv12to40(); /*5982*/
			var _62 = $k[--$j]; /*5982*/
			var _63 = $k[--$j]; /*5982*/
			$puti($k[--$j], _63, _62); /*5982*/
			$k[$j++] = $1.cdf; /*5983*/
			$k[$j++] = 40; /*5983*/
			$k[$j++] = ~~$z($geti($get($1.ais, 1), 3, 1)); /*5983*/
			$k[$j++] = 2; /*5983*/
			$1.tobin(); /*5983*/
			var _69 = $k[--$j]; /*5983*/
			var _6A = $k[--$j]; /*5983*/
			$puti($k[--$j], _6A, _69); /*5983*/
			$k[$j++] = $1.cdf; /*5984*/
			$k[$j++] = 42; /*5984*/
			$k[$j++] = ~~$z($geti($get($1.aival, $get($1.ais, 1)), 0, 3)); /*5984*/
			$k[$j++] = 10; /*5984*/
			$1.tobin(); /*5984*/
			var _6I = $k[--$j]; /*5984*/
			var _6J = $k[--$j]; /*5984*/
			$puti($k[--$j], _6J, _6I); /*5984*/
			$k[$j++] = Infinity; /*5985*/
			var _6L = $1.cdf; /*5985*/
			for (var _6M = 0, _6N = _6L.length; _6M < _6N; _6M++) { /*5985*/
				$k[$j++] = $get(_6L, _6M) - 48; /*5985*/
			} /*5985*/
			$1.cdf = $a(); /*5985*/
			$k[$j++] = Infinity; /*5986*/
			var _6T = $get($1.aival, $get($1.ais, 1)); /*5986*/
			$forall($geti(_6T, 3, _6T.length - 3)); /*5986*/
			$1.gpf = $a(); /*5986*/
			$1.ais = $geti($1.ais, 2, $1.ais.length - 2); /*5987*/
		} /*5987*/
		if ($1.gpfallow) { /*5994*/
			$1.vlf = $a(2); /*5992*/
		} else { /*5994*/
			$1.vlf = $a([]); /*5994*/
		} /*5994*/
		$1.aifixed = {}; /*6000*/
		$k[$j++] = Infinity; /*6002*/
		for (var _6c = 0; _6c <= 4; _6c += 1) { /*6002*/
			$k[$j++] = _6c; /*6002*/
		} /*6002*/
		var _6d = $a(); /*6002*/
		for (var _6e = 0, _6f = _6d.length; _6e < _6f; _6e++) { /*6005*/
			var _6i = $strcpy($s(2), "00"); /*6004*/
			$put(_6i, 1, $get(_6d, _6e) + 48); /*6004*/
			$put($1.aifixed, _6i, _6i); /*6004*/
		} /*6004*/
		$k[$j++] = Infinity; /*6010*/
		for (var _6k = 11; _6k <= 20; _6k += 1) { /*6007*/
			$k[$j++] = _6k; /*6007*/
		} /*6007*/
		$k[$j++] = 23; /*6009*/
		for (var _6l = 31; _6l <= 36; _6l += 1) { /*6009*/
			$k[$j++] = _6l; /*6009*/
		} /*6009*/
		$k[$j++] = 41; /*6010*/
		var _6m = $a(); /*6010*/
		for (var _6n = 0, _6o = _6m.length; _6n < _6o; _6n++) { /*6013*/
			var _6r = $cvrs($s(2), $get(_6m, _6n), 10); /*6012*/
			$put($1.aifixed, _6r, _6r); /*6012*/
		} /*6012*/
		$1.fnc1 = -1; /*6015*/
		$1.lnumeric = -2; /*6015*/
		$1.lalphanumeric = -3; /*6015*/
		$1.liso646 = -4; /*6015*/
		$k[$j++] = "numeric"; /*6027*/
		$k[$j++] = Infinity; /*6027*/
		for (var _6t = 0; _6t <= 119; _6t += 1) { /*6026*/
			var _6v = $strcpy($s(2), "00"); /*6019*/
			var _6x = $cvrs($s(2), _6t, 11); /*6019*/
			$puti(_6v, 2 - _6x.length, _6x); /*6020*/
			$k[$j++] = _6t; /*6021*/
			$k[$j++] = _6v; /*6021*/
			if ($get(_6v, 0) == 65) { /*6021*/
				var _6z = $k[--$j]; /*6021*/
				$put(_6z, 0, 94); /*6021*/
				$k[$j++] = _6z; /*6021*/
			} /*6021*/
			var _70 = $k[--$j]; /*6022*/
			$k[$j++] = _70; /*6022*/
			if ($get(_70, 1) == 65) { /*6022*/
				var _72 = $k[--$j]; /*6022*/
				$put(_72, 1, 94); /*6022*/
				$k[$j++] = _72; /*6022*/
			} /*6022*/
			var _73 = $k[--$j]; /*6023*/
			var _76 = $strcpy($s(7), "0000000"); /*6024*/
			var _78 = $cvrs($s(7), $k[--$j] + 8, 2); /*6024*/
			$puti(_76, 7 - _78.length, _78); /*6025*/
			$k[$j++] = _73; /*6025*/
			$k[$j++] = _76; /*6025*/
		} /*6025*/
		$k[$j++] = $1.lalphanumeric; /*6027*/
		$k[$j++] = "0000"; /*6027*/
		var _7A = $d(); /*6027*/
		$1[$k[--$j]] = _7A; /*6028*/
		$k[$j++] = "alphanumeric"; /*6037*/
		$k[$j++] = Infinity; /*6037*/
		for (var _7C = 48; _7C <= 57; _7C += 1) { /*6031*/
			$k[$j++] = _7C; /*6031*/
			$k[$j++] = _7C - 43; /*6031*/
			$k[$j++] = 5; /*6031*/
			$1.tobin(); /*6031*/
		} /*6031*/
		$k[$j++] = $1.fnc1; /*6033*/
		$k[$j++] = "01111"; /*6033*/
		for (var _7E = 65; _7E <= 90; _7E += 1) { /*6033*/
			$k[$j++] = _7E; /*6033*/
			$k[$j++] = _7E - 33; /*6033*/
			$k[$j++] = 6; /*6033*/
			$1.tobin(); /*6033*/
		} /*6033*/
		$k[$j++] = 42; /*6035*/
		$k[$j++] = "111010"; /*6035*/
		for (var _7F = 44; _7F <= 47; _7F += 1) { /*6035*/
			$k[$j++] = _7F; /*6035*/
			$k[$j++] = _7F + 15; /*6035*/
			$k[$j++] = 6; /*6035*/
			$1.tobin(); /*6035*/
		} /*6035*/
		$k[$j++] = $1.lnumeric; /*6037*/
		$k[$j++] = "000"; /*6037*/
		$k[$j++] = $1.liso646; /*6037*/
		$k[$j++] = "00100"; /*6037*/
		var _7I = $d(); /*6037*/
		$1[$k[--$j]] = _7I; /*6038*/
		$k[$j++] = "iso646"; /*6052*/
		$k[$j++] = Infinity; /*6052*/
		for (var _7K = 48; _7K <= 57; _7K += 1) { /*6041*/
			$k[$j++] = _7K; /*6041*/
			$k[$j++] = _7K - 43; /*6041*/
			$k[$j++] = 5; /*6041*/
			$1.tobin(); /*6041*/
		} /*6041*/
		$k[$j++] = $1.fnc1; /*6043*/
		$k[$j++] = "01111"; /*6043*/
		for (var _7M = 65; _7M <= 90; _7M += 1) { /*6043*/
			$k[$j++] = _7M; /*6043*/
			$k[$j++] = _7M - 1; /*6043*/
			$k[$j++] = 7; /*6043*/
			$1.tobin(); /*6043*/
		} /*6043*/
		for (var _7N = 97; _7N <= 122; _7N += 1) { /*6044*/
			$k[$j++] = _7N; /*6044*/
			$k[$j++] = _7N - 7; /*6044*/
			$k[$j++] = 7; /*6044*/
			$1.tobin(); /*6044*/
		} /*6044*/
		$k[$j++] = 33; /*6047*/
		$k[$j++] = "11101000"; /*6047*/
		$k[$j++] = 34; /*6047*/
		$k[$j++] = "11101001"; /*6047*/
		for (var _7O = 37; _7O <= 47; _7O += 1) { /*6047*/
			$k[$j++] = _7O; /*6047*/
			$k[$j++] = _7O + 197; /*6047*/
			$k[$j++] = 8; /*6047*/
			$1.tobin(); /*6047*/
		} /*6047*/
		for (var _7P = 58; _7P <= 63; _7P += 1) { /*6048*/
			$k[$j++] = _7P; /*6048*/
			$k[$j++] = _7P + 187; /*6048*/
			$k[$j++] = 8; /*6048*/
			$1.tobin(); /*6048*/
		} /*6048*/
		$k[$j++] = 95; /*6052*/
		$k[$j++] = "11111011"; /*6052*/
		$k[$j++] = 32; /*6052*/
		$k[$j++] = "11111100"; /*6052*/
		$k[$j++] = $1.lnumeric; /*6052*/
		$k[$j++] = "000"; /*6052*/
		$k[$j++] = $1.lalphanumeric; /*6052*/
		$k[$j++] = "00100"; /*6052*/
		var _7S = $d(); /*6052*/
		$1[$k[--$j]] = _7S; /*6053*/
		for (var _7W = 0, _7V = $1.ais.length - 1; _7W <= _7V; _7W += 1) { /*6071*/
			$1.i = _7W; /*6057*/
			$1.ai = $get($1.ais, $1.i); /*6058*/
			$1.val = $get($1.aival, $1.ai); /*6059*/
			var _7g = $a(($1.gpf.length + $1.ai.length) + $1.val.length); /*6060*/
			$puti(_7g, 0, $1.gpf); /*6061*/
			$k[$j++] = _7g; /*6062*/
			$k[$j++] = _7g; /*6062*/
			$k[$j++] = $1.gpf.length; /*6062*/
			$k[$j++] = $1.ai; /*6062*/
			$k[$j++] = Infinity; /*6062*/
			var _7k = $k[--$j]; /*6062*/
			var _7l = $k[--$j]; /*6062*/
			$k[$j++] = _7k; /*6062*/
			$forall(_7l); /*6062*/
			var _7m = $a(); /*6062*/
			var _7n = $k[--$j]; /*6062*/
			$puti($k[--$j], _7n, _7m); /*6062*/
			var _7p = $k[--$j]; /*6063*/
			$k[$j++] = _7p; /*6063*/
			$k[$j++] = _7p; /*6063*/
			$k[$j++] = $1.gpf.length + $1.ai.length; /*6063*/
			$k[$j++] = $1.val; /*6063*/
			$k[$j++] = Infinity; /*6063*/
			var _7t = $k[--$j]; /*6063*/
			var _7u = $k[--$j]; /*6063*/
			$k[$j++] = _7t; /*6063*/
			$forall(_7u); /*6063*/
			var _7v = $a(); /*6063*/
			var _7w = $k[--$j]; /*6063*/
			$puti($k[--$j], _7w, _7v); /*6063*/
			$1.gpf = $k[--$j]; /*6064*/
			var _84 = $get($1.aifixed, $geti($1.ai, 0, 2)) !== undefined; /*6065*/
			if (($1.i != ($1.ais.length - 1)) && (!_84)) { /*6070*/
				var _86 = $a($1.gpf.length + 1); /*6066*/
				$puti(_86, 0, $1.gpf); /*6067*/
				$put(_86, $1.gpf.length, $1.fnc1); /*6068*/
				$1.gpf = _86; /*6069*/
			} /*6069*/
		} /*6069*/
		$1.rembits = function() {
			var _8A = $k[--$j]; /*6075*/
			var _8B = 48; /*6077*/
			var _8C = (~~Math.ceil(_8A / 12)) * 12; /*6077*/
			if (((~~Math.ceil(_8A / 12)) * 12) < 48) { /*6077*/
				var _ = _8B; /*6077*/
				_8B = _8C; /*6077*/
				_8C = _; /*6077*/
			} /*6077*/
			var _8D = ~~(_8C / 12); /*6078*/
			$k[$j++] = _8A; /*6082*/
			$k[$j++] = _8C; /*6082*/
			$k[$j++] = _8D; /*6082*/
			if ((_8D % $1.segments) == 1) { /*6081*/
				var _8F = $k[--$j]; /*6079*/
				var _8G = $k[--$j]; /*6079*/
				$k[$j++] = (_8F + 1) * 12; /*6079*/
			} else { /*6081*/
				$j--; /*6081*/
			} /*6081*/
			var _8H = $k[--$j]; /*6083*/
			var _8I = $k[--$j]; /*6083*/
			$k[$j++] = _8H - _8I; /*6083*/
		}; /*6084*/
		$1.encode = function() {
			var _8J = $k[--$j]; /*6087*/
			$k[$j++] = _8J; /*6087*/
			if ($ne(_8J, "raw")) { /*6087*/
				var _8K = $k[--$j]; /*6087*/
				var _8M = $get(_8K, $k[--$j]); /*6087*/
				$k[$j++] = _8M; /*6087*/
			} else { /*6087*/
				$j--; /*6087*/
			} /*6087*/
			$k[$j++] = Infinity; /*6088*/
			var _8N = $k[--$j]; /*6088*/
			var _8O = $k[--$j]; /*6088*/
			$k[$j++] = _8N; /*6088*/
			$forall(_8O, function() { /*6088*/
				var _8P = $k[--$j]; /*6088*/
				$k[$j++] = _8P - 48; /*6088*/
			}); /*6088*/
			var _8Q = $a(); /*6088*/
			$puti($1.gpfenc, $1.j, _8Q); /*6090*/
			$1.j = _8Q.length + $1.j; /*6091*/
		}; /*6092*/
		$k[$j++] = Infinity; /*6095*/
		for (var _8V = 0, _8W = $1.gpf.length; _8V < _8W; _8V++) { /*6095*/
			$k[$j++] = 0; /*6095*/
		} /*6095*/
		$k[$j++] = 0; /*6095*/
		$k[$j++] = -1; /*6095*/
		$1.numericruns = $a(); /*6095*/
		$k[$j++] = Infinity; /*6096*/
		for (var _8Z = 0, _8a = $1.gpf.length; _8Z < _8a; _8Z++) { /*6096*/
			$k[$j++] = 0; /*6096*/
		} /*6096*/
		$k[$j++] = 0; /*6096*/
		$1.alphanumericruns = $a(); /*6096*/
		$k[$j++] = Infinity; /*6097*/
		for (var _8d = 0, _8e = $1.gpf.length; _8d < _8e; _8d++) { /*6097*/
			$k[$j++] = 0; /*6097*/
		} /*6097*/
		$k[$j++] = 9999; /*6097*/
		$1.nextiso646only = $a(); /*6097*/
		for (var _8h = $1.gpf.length - 1; _8h >= 0; _8h -= 1) { /*6119*/
			$1.i = _8h; /*6099*/
			var _8m = $strcpy($s(2), "00"); /*6101*/
			var _8p = $get($1.gpf, $1.i); /*6102*/
			$k[$j++] = $get($1.gpf, $1.i); /*6102*/
			$k[$j++] = _8m; /*6102*/
			$k[$j++] = _8m; /*6102*/
			$k[$j++] = 0; /*6102*/
			$k[$j++] = _8p; /*6102*/
			if (_8p == $1.fnc1) { /*6102*/
				$j--; /*6102*/
				$k[$j++] = 94; /*6102*/
			} /*6102*/
			var _8r = $k[--$j]; /*6102*/
			var _8s = $k[--$j]; /*6102*/
			$put($k[--$j], _8s, _8r); /*6102*/
			if ($1.i < ($1.gpf.length - 1)) { /*6103*/
				var _8w = $k[--$j]; /*6103*/
				var _8z = $get($1.gpf, $1.i + 1); /*6103*/
				$k[$j++] = _8w; /*6103*/
				$k[$j++] = _8w; /*6103*/
				$k[$j++] = 1; /*6103*/
				$k[$j++] = _8z; /*6103*/
				if (_8z == $1.fnc1) { /*6103*/
					$j--; /*6103*/
					$k[$j++] = 94; /*6103*/
				} /*6103*/
				var _91 = $k[--$j]; /*6103*/
				var _92 = $k[--$j]; /*6103*/
				$put($k[--$j], _92, _91); /*6103*/
			} /*6103*/
			var _96 = $get($1.numeric, $k[--$j]) !== undefined; /*6104*/
			if (_96) { /*6107*/
				$put($1.numericruns, $1.i, $get($1.numericruns, $1.i + 2) + 2); /*6105*/
			} else { /*6107*/
				$put($1.numericruns, $1.i, 0); /*6107*/
			} /*6107*/
			var _9E = $k[--$j]; /*6109*/
			var _9G = $get($1.alphanumeric, _9E) !== undefined; /*6109*/
			$k[$j++] = _9E; /*6113*/
			if (_9G) { /*6112*/
				$put($1.alphanumericruns, $1.i, $get($1.alphanumericruns, $1.i + 1) + 1); /*6110*/
			} else { /*6112*/
				$put($1.alphanumericruns, $1.i, 0); /*6112*/
			} /*6112*/
			var _9O = $k[--$j]; /*6114*/
			var _9Q = $get($1.iso646, _9O) !== undefined; /*6114*/
			var _9S = $get($1.alphanumeric, _9O) !== undefined; /*6114*/
			if (_9Q && (!_9S)) { /*6117*/
				$put($1.nextiso646only, $1.i, 0); /*6115*/
			} else { /*6117*/
				$put($1.nextiso646only, $1.i, $get($1.nextiso646only, $1.i + 1) + 1); /*6117*/
			} /*6117*/
		} /*6117*/
		$1.gpfenc = $a(252); /*6122*/
		$1.i = 0; /*6123*/
		$1.j = 0; /*6123*/
		$1.mode = "numeric"; /*6123*/
		for (;;) { /*6213*/
			if ($1.i == $1.gpf.length) { /*6125*/
				break; /*6125*/
			} /*6125*/
			for (;;) { /*6212*/
				if ($eq($1.mode, "numeric")) { /*6161*/
					if ($1.i <= ($1.gpf.length - 2)) { /*6158*/
						var _9g = $s(2); /*6130*/
						var _9j = $get($1.gpf, $1.i); /*6131*/
						$k[$j++] = _9g; /*6131*/
						$k[$j++] = _9g; /*6131*/
						$k[$j++] = 0; /*6131*/
						$k[$j++] = _9j; /*6131*/
						if (_9j == $1.fnc1) { /*6131*/
							$j--; /*6131*/
							$k[$j++] = 94; /*6131*/
						} /*6131*/
						var _9l = $k[--$j]; /*6131*/
						var _9m = $k[--$j]; /*6131*/
						$put($k[--$j], _9m, _9l); /*6131*/
						var _9o = $k[--$j]; /*6132*/
						var _9r = $get($1.gpf, $1.i + 1); /*6132*/
						$k[$j++] = _9o; /*6132*/
						$k[$j++] = _9o; /*6132*/
						$k[$j++] = 1; /*6132*/
						$k[$j++] = _9r; /*6132*/
						if (_9r == $1.fnc1) { /*6132*/
							$j--; /*6132*/
							$k[$j++] = 94; /*6132*/
						} /*6132*/
						var _9t = $k[--$j]; /*6132*/
						var _9u = $k[--$j]; /*6132*/
						$put($k[--$j], _9u, _9t); /*6132*/
						var _9w = $k[--$j]; /*6133*/
						var _9y = $get($1.numeric, _9w) !== undefined; /*6133*/
						$k[$j++] = _9w; /*6137*/
						if (_9y) { /*6137*/
							$k[$j++] = $1.numeric; /*6134*/
							$1.encode(); /*6134*/
							$1.i = $1.i + 2; /*6135*/
							break; /*6136*/
						} /*6136*/
						$j--; /*6138*/
						$k[$j++] = $1.lalphanumeric; /*6139*/
						$k[$j++] = $1.numeric; /*6139*/
						$1.encode(); /*6139*/
						$1.mode = "alphanumeric"; /*6140*/
						break; /*6141*/
					} else { /*6158*/
						var _A5 = $get($1.gpf, $1.i); /*6143*/
						if ((_A5 < 48) || (_A5 > 57)) { /*6147*/
							$k[$j++] = $1.lalphanumeric; /*6144*/
							$k[$j++] = $1.numeric; /*6144*/
							$1.encode(); /*6144*/
							$1.mode = "alphanumeric"; /*6145*/
							break; /*6146*/
						} /*6146*/
						$k[$j++] = "rem"; /*6148*/
						$k[$j++] = ((((12 + 1) + $1.method.length) + $1.vlf.length) + $1.cdf.length) + $1.j; /*6148*/
						$1.rembits(); /*6148*/
						var _AC = $k[--$j]; /*6148*/
						$1[$k[--$j]] = _AC; /*6148*/
						if (($1.rem >= 4) && ($1.rem <= 6)) { /*6158*/
							var _AJ = $geti($strcpy($s(6), "000000"), 0, $1.rem); /*6150*/
							var _AO = $cvrs($s(4), $get($1.gpf, $1.i) - 47, 2); /*6151*/
							$puti(_AJ, 4 - _AO.length, _AO); /*6152*/
							$k[$j++] = _AJ; /*6152*/
							$k[$j++] = "raw"; /*6152*/
							$1.encode(); /*6152*/
							$1.i = $1.i + 1; /*6153*/
							break; /*6154*/
						} else { /*6158*/
							var _AQ = $s(2); /*6156*/
							$put(_AQ, 0, $get($1.gpf, $1.i)); /*6156*/
							$put(_AQ, 1, 94); /*6156*/
							$k[$j++] = _AQ; /*6156*/
							$k[$j++] = $1.numeric; /*6156*/
							$1.encode(); /*6156*/
							$1.i = $1.i + 1; /*6157*/
							break; /*6158*/
						} /*6158*/
					} /*6158*/
				} /*6158*/
				if ($eq($1.mode, "alphanumeric")) { /*6188*/
					if ($get($1.gpf, $1.i) == $1.fnc1) { /*6169*/
						$k[$j++] = $1.fnc1; /*6165*/
						$k[$j++] = $1.alphanumeric; /*6165*/
						$1.encode(); /*6165*/
						$1.mode = "numeric"; /*6166*/
						$1.i = $1.i + 1; /*6167*/
						break; /*6168*/
					} /*6168*/
					var _Ag = $get($1.gpf, $1.i); /*6170*/
					var _Ai = $get($1.iso646, _Ag) !== undefined; /*6170*/
					var _Ak = $get($1.alphanumeric, _Ag) !== undefined; /*6170*/
					if (_Ai && (!_Ak)) { /*6174*/
						$k[$j++] = $1.liso646; /*6171*/
						$k[$j++] = $1.alphanumeric; /*6171*/
						$1.encode(); /*6171*/
						$1.mode = "iso646"; /*6172*/
						break; /*6173*/
					} /*6173*/
					if ($get($1.numericruns, $1.i) >= 6) { /*6179*/
						$k[$j++] = $1.lnumeric; /*6176*/
						$k[$j++] = $1.alphanumeric; /*6176*/
						$1.encode(); /*6176*/
						$1.mode = "numeric"; /*6177*/
						break; /*6178*/
					} /*6178*/
					var _Au = $get($1.numericruns, $1.i); /*6180*/
					if ((_Au >= 4) && ((_Au + $1.i) == $1.gpf.length)) { /*6184*/
						$k[$j++] = $1.lnumeric; /*6181*/
						$k[$j++] = $1.alphanumeric; /*6181*/
						$1.encode(); /*6181*/
						$1.mode = "numeric"; /*6182*/
						break; /*6183*/
					} /*6183*/
					$k[$j++] = $get($1.gpf, $1.i); /*6185*/
					$k[$j++] = $1.alphanumeric; /*6185*/
					$1.encode(); /*6185*/
					$1.i = $1.i + 1; /*6186*/
					break; /*6187*/
				} /*6187*/
				if ($eq($1.mode, "iso646")) { /*6210*/
					if ($get($1.gpf, $1.i) == $1.fnc1) { /*6196*/
						$k[$j++] = $1.fnc1; /*6192*/
						$k[$j++] = $1.iso646; /*6192*/
						$1.encode(); /*6192*/
						$1.mode = "numeric"; /*6193*/
						$1.i = $1.i + 1; /*6194*/
						break; /*6195*/
					} /*6195*/
					if (($get($1.numericruns, $1.i) >= 4) && ($get($1.nextiso646only, $1.i) >= 10)) { /*6201*/
						$k[$j++] = $1.lnumeric; /*6198*/
						$k[$j++] = $1.iso646; /*6198*/
						$1.encode(); /*6198*/
						$1.mode = "numeric"; /*6199*/
						break; /*6200*/
					} /*6200*/
					if (($get($1.alphanumericruns, $1.i) >= 5) && ($get($1.nextiso646only, $1.i) >= 10)) { /*6206*/
						$k[$j++] = $1.lalphanumeric; /*6203*/
						$k[$j++] = $1.iso646; /*6203*/
						$1.encode(); /*6203*/
						$1.mode = "alphanumeric"; /*6204*/
						break; /*6205*/
					} /*6205*/
					$k[$j++] = $get($1.gpf, $1.i); /*6207*/
					$k[$j++] = $1.iso646; /*6207*/
					$1.encode(); /*6207*/
					$1.i = $1.i + 1; /*6208*/
					break; /*6209*/
				} /*6209*/
			} /*6209*/
		} /*6209*/
		$1.gpf = $geti($1.gpfenc, 0, $1.j); /*6214*/
		var _Be = ((((1 + 12) + $1.method.length) + $1.vlf.length) + $1.cdf.length) + $1.gpf.length; /*6218*/
		$k[$j++] = _Be; /*6218*/
		$k[$j++] = _Be; /*6218*/
		$1.rembits(); /*6218*/
		var _Bf = $k[--$j]; /*6218*/
		$1.pad = $a(_Bf); /*6218*/
		$k[$j++] = _Bf; /*6225*/
		if ($1.vlf.length != 0) { /*6224*/
			var _Bi = $k[--$j]; /*6220*/
			var _Bk = ~~(($k[--$j] + _Bi) / 12); /*6221*/
			$put($1.vlf, 0, _Bk % 2); /*6221*/
			var _Bm = (_Bk <= 14) ? 0 : 1; /*6222*/
			$put($1.vlf, 1, _Bm); /*6222*/
		} else { /*6224*/
			$j -= 2; /*6224*/
		} /*6224*/
		if ($1.pad.length > 0) { /*6234*/
			for (var _Br = 0, _Bq = $1.pad.length - 1; _Br <= _Bq; _Br += 5) { /*6230*/
				$1.i = _Br; /*6228*/
				var _Bs = $1.pad; /*6229*/
				var _Bt = $1.i; /*6229*/
				var _Bu = $a([0, 0, 1, 0, 0]); /*6229*/
				var _Bv = $1.pad; /*6229*/
				var _Bw = $1.i; /*6229*/
				var _Bx = 5; /*6229*/
				var _By = _Bv.length - _Bw; /*6229*/
				if ((_Bv.length - _Bw) > 5) { /*6229*/
					var _ = _Bx; /*6229*/
					_Bx = _By; /*6229*/
					_By = _; /*6229*/
				} /*6229*/
				$puti(_Bs, _Bt, $geti(_Bu, 0, _By)); /*6229*/
			} /*6229*/
			if ($eq($1.mode, "numeric")) { /*6233*/
				$k[$j++] = "pad"; /*6232*/
				$k[$j++] = Infinity; /*6232*/
				$k[$j++] = 0; /*6232*/
				$k[$j++] = 0; /*6232*/
				$k[$j++] = 0; /*6232*/
				$k[$j++] = 0; /*6232*/
				$aload($1.pad); /*6232*/
				var _C4 = $geti($a(), 0, $1.pad.length); /*6232*/
				$1[$k[--$j]] = _C4; /*6232*/
			} /*6232*/
		} /*6232*/
		$k[$j++] = Infinity; /*6244*/
		var _C7 = $1.linkage ? 1 : 0; /*6238*/
		$k[$j++] = _C7; /*6239*/
		$forall($1.method, function() { /*6239*/
			var _C9 = $k[--$j]; /*6239*/
			$k[$j++] = _C9 - 48; /*6239*/
		}); /*6239*/
		$aload($1.vlf); /*6240*/
		$aload($1.cdf); /*6241*/
		$aload($1.gpf); /*6242*/
		$aload($1.pad); /*6243*/
		$1.binval = $a(); /*6244*/
		$1.datalen = ~~($1.binval.length / 12); /*6245*/
		$1.ncr = function() {
			var _CG = $k[--$j]; /*6248*/
			var _CH = $k[--$j]; /*6248*/
			var _CI = _CH - _CG; /*6248*/
			if (_CG < (_CH - _CG)) { /*6248*/
				var _ = _CI; /*6248*/
				_CI = _CG; /*6248*/
				_CG = _; /*6248*/
			} /*6248*/
			$k[$j++] = _CI; /*6255*/
			$k[$j++] = 1; /*6255*/
			$k[$j++] = 1; /*6255*/
			for (var _CK = _CH, _CJ = _CG + 1; _CK >= _CJ; _CK -= 1) { /*6255*/
				var _CL = $k[--$j]; /*6251*/
				var _CM = $k[--$j]; /*6252*/
				var _CN = $k[--$j]; /*6252*/
				$k[$j++] = _CN; /*6254*/
				$k[$j++] = _CM; /*6254*/
				$k[$j++] = _CL * _CK; /*6254*/
				if ($le(_CM, _CN)) { /*6254*/
					var _CO = $k[--$j]; /*6253*/
					var _CP = $k[--$j]; /*6253*/
					$k[$j++] = _CP + 1; /*6253*/
					$k[$j++] = ~~(_CO / _CP); /*6253*/
				} /*6253*/
			} /*6253*/
			for (;;) { /*6259*/
				var _CQ = $k[--$j]; /*6257*/
				var _CR = $k[--$j]; /*6257*/
				var _CS = $k[--$j]; /*6257*/
				$k[$j++] = _CS; /*6257*/
				$k[$j++] = _CR; /*6257*/
				$k[$j++] = _CQ; /*6257*/
				if ($gt(_CR, _CS)) { /*6257*/
					break; /*6257*/
				} /*6257*/
				var _CT = $k[--$j]; /*6258*/
				var _CU = $k[--$j]; /*6258*/
				$k[$j++] = _CU + 1; /*6258*/
				$k[$j++] = ~~(_CT / _CU); /*6258*/
			} /*6258*/
			var _CV = $k[--$j]; /*6260*/
			var _CW = $k[--$j]; /*6260*/
			var _CX = $k[--$j]; /*6260*/
			$k[$j++] = _CV; /*6260*/
		}; /*6261*/
		$1.getRSSwidths = function() {
			$1.oe = $k[--$j]; /*6264*/
			$1.el = $k[--$j]; /*6265*/
			$1.mw = $k[--$j]; /*6266*/
			$1.nm = $k[--$j]; /*6267*/
			$1.val = $k[--$j]; /*6268*/
			$1.out = $a($1.el); /*6269*/
			$1.mask = 0; /*6270*/
			for (var _Ch = 0, _Cg = $1.el - 2; _Ch <= _Cg; _Ch += 1) { /*6297*/
				$1.bar = _Ch; /*6272*/
				$1.ew = 1; /*6273*/
				var _Cj = $1.bar; /*6274*/
				$1.mask = $1.mask | ((_Cj < 0 ? 1 >>> -_Cj : 1 << _Cj)); /*6274*/
				for (;;) { /*6293*/
					$k[$j++] = "sval"; /*6275*/
					$k[$j++] = ($1.nm - $1.ew) - 1; /*6275*/
					$k[$j++] = ($1.el - $1.bar) - 2; /*6275*/
					$1.ncr(); /*6275*/
					var _Co = $k[--$j]; /*6275*/
					$1[$k[--$j]] = _Co; /*6275*/
					if (($1.oe && ($1.mask == 0)) && (((($1.nm - $1.ew) - ($1.el * 2)) + ($1.bar * 2)) >= -2)) { /*6278*/
						$k[$j++] = "sval"; /*6277*/
						$k[$j++] = $1.sval; /*6277*/
						$k[$j++] = (($1.nm - $1.ew) - $1.el) + $1.bar; /*6277*/
						$k[$j++] = ($1.el - $1.bar) - 2; /*6277*/
						$1.ncr(); /*6277*/
						var _D3 = $k[--$j]; /*6277*/
						var _D4 = $k[--$j]; /*6277*/
						$1[$k[--$j]] = _D4 - _D3; /*6277*/
					} /*6277*/
					if (($1.el - $1.bar) > 2) { /*6287*/
						$1.lval = 0; /*6280*/
						for (var _DE = ((($1.nm - $1.ew) - $1.el) + $1.bar) + 2, _DD = $1.mw + 1; _DE >= _DD; _DE -= 1) { /*6284*/
							$k[$j++] = (($1.nm - _DE) - $1.ew) - 1; /*6282*/
							$k[$j++] = ($1.el - $1.bar) - 3; /*6282*/
							$1.ncr(); /*6282*/
							$1.lval = $k[--$j] + $1.lval; /*6283*/
						} /*6283*/
						$1.sval = $1.sval - ($1.lval * (($1.el - $1.bar) - 1)); /*6285*/
					} else { /*6287*/
						if (($1.nm - $1.ew) > $1.mw) { /*6287*/
							$1.sval = $1.sval - 1; /*6287*/
						} /*6287*/
					} /*6287*/
					$1.val = $1.val - $1.sval; /*6289*/
					if ($1.val < 0) { /*6290*/
						break; /*6290*/
					} /*6290*/
					$1.ew = $1.ew + 1; /*6291*/
					var _DY = $1.bar; /*6292*/
					$1.mask = $1.mask & (~((_DY < 0 ? 1 >>> -_DY : 1 << _DY))); /*6292*/
				} /*6292*/
				$1.val = $1.val + $1.sval; /*6294*/
				$1.nm = $1.nm - $1.ew; /*6295*/
				$put($1.out, $1.bar, $1.ew); /*6296*/
			} /*6296*/
			$put($1.out, $1.el - 1, $1.nm); /*6298*/
			$k[$j++] = $1.out; /*6299*/
		}; /*6300*/
		$1.tab174 = $a([347, 0, 12, 5, 7, 2, 87, 4, 1387, 348, 10, 7, 5, 4, 52, 20, 2947, 1388, 8, 9, 4, 5, 30, 52, 3987, 2948, 6, 11, 3, 6, 10, 104, 4191, 3988, 4, 13, 1, 8, 1, 204]); /*6308*/
		$1.dxw = $a($1.datalen); /*6310*/
		for (var _Dp = 0, _Do = $1.datalen - 1; _Dp <= _Do; _Dp += 1) { /*6351*/
			$1.x = _Dp; /*6314*/
			$1.d = $geti($1.binval, $1.x * 12, 12); /*6316*/
			$k[$j++] = "d"; /*6317*/
			$k[$j++] = 0; /*6317*/
			for (var _Dt = 0; _Dt <= 11; _Dt += 1) { /*6317*/
				$1.j = _Dt; /*6317*/
				var _Dy = $k[--$j]; /*6317*/
				$k[$j++] = _Dy + ((~~Math.pow(2, 11 - $1.j)) * $get($1.d, $1.j)); /*6317*/
			} /*6317*/
			var _Dz = $k[--$j]; /*6317*/
			$1[$k[--$j]] = _Dz; /*6317*/
			$1.j = 0; /*6319*/
			for (;;) { /*6329*/
				if ($le($1.d, $get($1.tab174, $1.j))) { /*6327*/
					$forall($geti($1.tab174, $1.j + 1, 7)); /*6321*/
					$1.dte = $k[--$j]; /*6322*/
					$1.dto = $k[--$j]; /*6322*/
					$1.dmwe = $k[--$j]; /*6323*/
					$1.dmwo = $k[--$j]; /*6323*/
					$1.dele = $k[--$j]; /*6324*/
					$1.delo = $k[--$j]; /*6324*/
					$1.dgs = $k[--$j]; /*6325*/
					break; /*6326*/
				} /*6326*/
				$1.j = $1.j + 8; /*6328*/
			} /*6328*/
			$k[$j++] = "dwo"; /*6331*/
			$k[$j++] = ~~(($1.d - $1.dgs) / $1.dte); /*6331*/
			$k[$j++] = $1.delo; /*6331*/
			$k[$j++] = $1.dmwo; /*6331*/
			$k[$j++] = 4; /*6331*/
			$k[$j++] = true; /*6331*/
			$1.getRSSwidths(); /*6331*/
			var _EL = $k[--$j]; /*6331*/
			$1[$k[--$j]] = _EL; /*6331*/
			$k[$j++] = "dwe"; /*6332*/
			$k[$j++] = ($1.d - $1.dgs) % $1.dte; /*6332*/
			$k[$j++] = $1.dele; /*6332*/
			$k[$j++] = $1.dmwe; /*6332*/
			$k[$j++] = 4; /*6332*/
			$k[$j++] = false; /*6332*/
			$1.getRSSwidths(); /*6332*/
			var _ES = $k[--$j]; /*6332*/
			$1[$k[--$j]] = _ES; /*6332*/
			$1.dw = $a(8); /*6334*/
			if (($1.x % 2) == 0) { /*6345*/
				for (var _EW = 0; _EW <= 3; _EW += 1) { /*6340*/
					$1.j = _EW; /*6337*/
					$put($1.dw, 7 - ($1.j * 2), $get($1.dwo, $1.j)); /*6338*/
					$put($1.dw, 6 - ($1.j * 2), $get($1.dwe, $1.j)); /*6339*/
				} /*6339*/
			} else { /*6345*/
				for (var _Eh = 0; _Eh <= 3; _Eh += 1) { /*6346*/
					$1.j = _Eh; /*6343*/
					$put($1.dw, $1.j * 2, $get($1.dwo, $1.j)); /*6344*/
					$put($1.dw, ($1.j * 2) + 1, $get($1.dwe, $1.j)); /*6345*/
				} /*6345*/
			} /*6345*/
			$put($1.dxw, $1.x, $1.dw); /*6349*/
		} /*6349*/
		$1.finderwidths = $a([1, 8, 4, 1, 1, 1, 1, 4, 8, 1, 3, 6, 4, 1, 1, 1, 1, 4, 6, 3, 3, 4, 6, 1, 1, 1, 1, 6, 4, 3, 3, 2, 8, 1, 1, 1, 1, 8, 2, 3, 2, 6, 5, 1, 1, 1, 1, 5, 6, 2, 2, 2, 9, 1, 1, 1, 1, 9, 2, 2]); /*6360*/
		$1.finderseq = $a([$a([0, 1]), $a([0, 3, 2]), $a([0, 5, 2, 7]), $a([0, 9, 2, 7, 4]), $a([0, 9, 2, 7, 6, 11]), $a([0, 9, 2, 7, 8, 11, 10]), $a([0, 1, 2, 3, 4, 5, 6, 7]), $a([0, 1, 2, 3, 4, 5, 6, 9, 8]), $a([0, 1, 2, 3, 4, 5, 6, 9, 10, 11]), $a([0, 1, 2, 3, 4, 7, 6, 9, 8, 11, 10])]); /*6373*/
		$1.seq = $get($1.finderseq, ~~(($1.datalen - 2) / 2)); /*6375*/
		$1.fxw = $a($1.seq.length); /*6376*/
		for (var _FE = 0, _FD = $1.seq.length - 1; _FE <= _FD; _FE += 1) { /*6380*/
			$1.x = _FE; /*6378*/
			$put($1.fxw, $1.x, $geti($1.finderwidths, $get($1.seq, $1.x) * 5, 5)); /*6379*/
		} /*6379*/
		$1.checkweights = $a([-1, -1, -1, -1, -1, -1, -1, -1, 77, 96, 32, 81, 27, 9, 3, 1, 20, 60, 180, 118, 143, 7, 21, 63, 205, 209, 140, 117, 39, 13, 145, 189, 193, 157, 49, 147, 19, 57, 171, 91, 132, 44, 85, 169, 197, 136, 186, 62, 185, 133, 188, 142, 4, 12, 36, 108, 50, 87, 29, 80, 97, 173, 128, 113, 150, 28, 84, 41, 123, 158, 52, 156, 166, 196, 206, 139, 187, 203, 138, 46, 76, 17, 51, 153, 37, 111, 122, 155, 146, 119, 110, 107, 106, 176, 129, 43, 16, 48, 144, 10, 30, 90, 59, 177, 164, 125, 112, 178, 200, 137, 116, 109, 70, 210, 208, 202, 184, 130, 179, 115, 190, 204, 68, 93, 31, 151, 191, 134, 148, 22, 66, 198, 172, 94, 71, 2, 40, 154, 192, 64, 162, 54, 18, 6, 120, 149, 25, 75, 14, 42, 126, 167, 175, 199, 207, 69, 23, 78, 26, 79, 103, 98, 83, 38, 114, 131, 182, 124, 159, 53, 88, 170, 127, 183, 61, 161, 55, 165, 73, 8, 24, 72, 5, 15, 89, 100, 174, 58, 160, 194, 135, 45]); /*6407*/
		$k[$j++] = "checkweightseq"; /*6411*/
		$k[$j++] = Infinity; /*6411*/
		$forall($1.seq, function() { /*6410*/
			$aload($geti($1.checkweights, $k[--$j] * 16, 16)); /*6410*/
		}); /*6410*/
		var _FR = $a(); /*6411*/
		$1[$k[--$j]] = $geti(_FR, 8, _FR.length - 8); /*6411*/
		$k[$j++] = Infinity; /*6415*/
		var _FU = $1.dxw; /*6414*/
		for (var _FV = 0, _FW = _FU.length; _FV < _FW; _FV++) { /*6414*/
			$forall($get(_FU, _FV)); /*6414*/
		} /*6414*/
		$1.widths = $a(); /*6415*/
		$1.checksum = 0; /*6417*/
		for (var _Fb = 0, _Fa = $1.widths.length - 1; _Fb <= _Fa; _Fb += 1) { /*6421*/
			$1.i = _Fb; /*6419*/
			$1.checksum = $1.checksum + ($get($1.widths, $1.i) * $get($1.checkweightseq, $1.i)); /*6420*/
		} /*6420*/
		$1.checksum = ($1.checksum % 211) + (($1.datalen - 3) * 211); /*6422*/
		$1.i = 0; /*6424*/
		for (;;) { /*6434*/
			if ($1.checksum <= $get($1.tab174, $1.i)) { /*6432*/
				$forall($geti($1.tab174, $1.i + 1, 7)); /*6426*/
				$1.cte = $k[--$j]; /*6427*/
				$1.cto = $k[--$j]; /*6427*/
				$1.cmwe = $k[--$j]; /*6428*/
				$1.cmwo = $k[--$j]; /*6428*/
				$1.cele = $k[--$j]; /*6429*/
				$1.celo = $k[--$j]; /*6429*/
				$1.cgs = $k[--$j]; /*6430*/
				break; /*6431*/
			} /*6431*/
			$1.i = $1.i + 8; /*6433*/
		} /*6433*/
		$k[$j++] = "cwo"; /*6436*/
		$k[$j++] = ~~(($1.checksum - $1.cgs) / $1.cte); /*6436*/
		$k[$j++] = $1.celo; /*6436*/
		$k[$j++] = $1.cmwo; /*6436*/
		$k[$j++] = 4; /*6436*/
		$k[$j++] = true; /*6436*/
		$1.getRSSwidths(); /*6436*/
		var _G5 = $k[--$j]; /*6436*/
		$1[$k[--$j]] = _G5; /*6436*/
		$k[$j++] = "cwe"; /*6437*/
		$k[$j++] = ($1.checksum - $1.cgs) % $1.cte; /*6437*/
		$k[$j++] = $1.cele; /*6437*/
		$k[$j++] = $1.cmwe; /*6437*/
		$k[$j++] = 4; /*6437*/
		$k[$j++] = false; /*6437*/
		$1.getRSSwidths(); /*6437*/
		var _GC = $k[--$j]; /*6437*/
		$1[$k[--$j]] = _GC; /*6437*/
		$1.cw = $a(8); /*6439*/
		for (var _GF = 0; _GF <= 3; _GF += 1) { /*6444*/
			$1.i = _GF; /*6441*/
			$put($1.cw, $1.i * 2, $get($1.cwo, $1.i)); /*6442*/
			$put($1.cw, ($1.i * 2) + 1, $get($1.cwe, $1.i)); /*6443*/
		} /*6443*/
		var _GQ = $a(22); /*6446*/
		$put(_GQ, 0, $1.cw); /*6447*/
		$puti(_GQ, 1, $1.dxw); /*6447*/
		$1.dxw = $geti(_GQ, 0, $1.datalen + 1); /*6448*/
		$1.datalen = $1.dxw.length; /*6449*/
		$1.rows = $a(~~Math.ceil($1.datalen / $1.segments)); /*6452*/
		$1.numrows = $1.rows.length; /*6453*/
		for (var _Gc = 0, _Gb = $1.numrows - 1; _Gc <= _Gb; _Gc += 1) { /*6468*/
			$1.r = _Gc; /*6455*/
			$k[$j++] = Infinity; /*6456*/
			if ((($1.segments % 4) != 0) && (($1.r % 2) == 1)) { /*6457*/
				$k[$j++] = 0; /*6457*/
			} /*6457*/
			$k[$j++] = 1; /*6465*/
			$k[$j++] = 1; /*6465*/
			for (var _Gh = 0, _Gg = $1.segments - 1; _Gh <= _Gg; _Gh += 1) { /*6465*/
				$1.pos = _Gh + ($1.r * $1.segments); /*6460*/
				if ($1.pos < $1.datalen) { /*6464*/
					$forall($get($1.dxw, $1.pos)); /*6462*/
					if (($1.pos % 2) == 0) { /*6463*/
						$forall($get($1.fxw, ~~($1.pos / 2))); /*6463*/
					} /*6463*/
				} /*6463*/
			} /*6463*/
			var _Gt = $counttomark() + 2; /*6467*/
			$k[$j++] = 1; /*6467*/
			$k[$j++] = 1; /*6467*/
			$astore($a(_Gt)); /*6467*/
			$put($1.rows, $1.r, $k[--$j]); /*6467*/
			$j--; /*6467*/
		} /*6467*/
		if ($ne($1.format, "expandedstacked")) { /*6592*/
			var _H0 = $get($1.rows, 0); /*6473*/
			$1.sbs = $geti(_H0, 1, _H0.length - 1); /*6473*/
			$k[$j++] = Infinity; /*6483*/
			$k[$j++] = 1; /*6481*/
			for (var _H4 = 0, _H3 = $1.datalen - 1; _H4 <= _H3; _H4 += 1) { /*6481*/
				$1.i = _H4; /*6478*/
				$forall($get($1.dxw, $1.i)); /*6479*/
				if (($1.i % 2) == 0) { /*6480*/
					$forall($get($1.fxw, ~~($1.i / 2))); /*6480*/
				} /*6480*/
			} /*6480*/
			$k[$j++] = 1; /*6482*/
			$k[$j++] = 1; /*6482*/
			$1.sbs = $a(); /*6483*/
			$k[$j++] = Infinity; /*6490*/
			$k[$j++] = "ren"; /*6489*/
			$k[$j++] = $0.renlinear; /*6489*/
			$k[$j++] = "sbs"; /*6489*/
			$k[$j++] = $1.sbs; /*6489*/
			$k[$j++] = "bhs"; /*6489*/
			$k[$j++] = Infinity; /*6489*/
			for (var _HF = 0, _HG = ~~(($1.sbs.length + 1) / 2); _HF < _HG; _HF++) { /*6488*/
				$k[$j++] = $1.height; /*6488*/
			} /*6488*/
			var _HI = $a(); /*6489*/
			$k[$j++] = _HI; /*6490*/
			$k[$j++] = "bbs"; /*6490*/
			$k[$j++] = Infinity; /*6490*/
			for (var _HK = 0, _HL = ~~(($1.sbs.length + 1) / 2); _HK < _HL; _HK++) { /*6489*/
				$k[$j++] = 0; /*6489*/
			} /*6489*/
			var _HM = $a(); /*6490*/
			$k[$j++] = _HM; /*6490*/
			$k[$j++] = "opt"; /*6490*/
			$k[$j++] = $1.options; /*6490*/
			var _HO = $d(); /*6490*/
			$k[$j++] = _HO; /*6493*/
			if (!$1.dontdraw) { /*6493*/
				$0.renlinear(); /*6493*/
			} /*6493*/
		} else { /*6592*/
			$1.seps = $a($1.numrows); /*6497*/
			for (var _HU = 0, _HT = $1.numrows - 1; _HU <= _HT; _HU += 1) { /*6553*/
				$1.r = _HU; /*6500*/
				$1.row = $get($1.rows, $1.r); /*6501*/
				$k[$j++] = Infinity; /*6504*/
				for (var _Ha = 0, _HZ = $1.row.length - 1; _Ha <= _HZ; _Ha += 2) { /*6509*/
					$1.i = _Ha; /*6506*/
					for (var _He = 0, _Hf = $get($1.row, $1.i); _He < _Hf; _He++) { /*6507*/
						$k[$j++] = 0; /*6507*/
					} /*6507*/
					if ($1.i < ($1.row.length - 1)) { /*6508*/
						for (var _Hl = 0, _Hm = $get($1.row, $1.i + 1); _Hl < _Hm; _Hl++) { /*6508*/
							$k[$j++] = 1; /*6508*/
						} /*6508*/
					} /*6508*/
				} /*6508*/
				$astore($a($counttomark())); /*6510*/
				$1.row = $k[--$j]; /*6510*/
				$j--; /*6510*/
				$k[$j++] = Infinity; /*6513*/
				$forall($1.row, function() { /*6513*/
					var _Hr = $k[--$j]; /*6513*/
					$k[$j++] = 1 - _Hr; /*6513*/
				}); /*6513*/
				$1.sep = $a(); /*6513*/
				$puti($1.sep, 0, $a([0, 0, 0, 0])); /*6514*/
				$puti($1.sep, $1.row.length - 4, $a([0, 0, 0, 0])); /*6515*/
				$k[$j++] = Infinity; /*6519*/
				for (var _I0 = 19, _Hz = $1.row.length - 13; _I0 <= _Hz; _I0 += 98) { /*6517*/
					$k[$j++] = _I0; /*6517*/
				} /*6517*/
				for (var _I3 = 68, _I2 = $1.row.length - 13; _I3 <= _I2; _I3 += 98) { /*6518*/
					$k[$j++] = _I3; /*6518*/
				} /*6518*/
				$1.finderpos = $a(); /*6519*/
				var _I5 = $1.finderpos; /*6520*/
				for (var _I6 = 0, _I7 = _I5.length; _I6 < _I7; _I6++) { /*6534*/
					var _I8 = $get(_I5, _I6); /*6534*/
					for (var _IA = _I8, _I9 = _I8 + 14; _IA <= _I9; _IA += 1) { /*6533*/
						$1.i = _IA; /*6522*/
						if ($get($1.row, $1.i) == 0) { /*6530*/
							if ($get($1.row, $1.i - 1) == 1) { /*6527*/
								$k[$j++] = 1; /*6525*/
							} else { /*6527*/
								var _IK = ($get($1.sep, $1.i - 1) == 0) ? 1 : 0; /*6527*/
								$k[$j++] = _IK; /*6527*/
							} /*6527*/
						} else { /*6530*/
							$k[$j++] = 0; /*6530*/
						} /*6530*/
						$put($1.sep, $1.i, $k[--$j]); /*6532*/
					} /*6532*/
				} /*6532*/
				if ((($1.segments % 4) == 0) && (($1.r % 2) == 1)) { /*6548*/
					if (($get($1.rows, $1.r).length != $get($1.rows, 0).length) && (($1.finderpos.length % 2) == 1)) { /*6546*/
						$k[$j++] = Infinity; /*6540*/
						$k[$j++] = 0; /*6540*/
						$aload($1.row); /*6540*/
						$1.row = $a(); /*6540*/
						$k[$j++] = Infinity; /*6541*/
						$k[$j++] = 0; /*6541*/
						$aload($1.sep); /*6541*/
						$1.sep = $a(); /*6541*/
					} else { /*6546*/
						for (var _Ib = $1.row.length - 1; _Ib >= 0; _Ib -= 1) { /*6543*/
							$k[$j++] = $get($1.row, _Ib); /*6543*/
						} /*6543*/
						$astore($1.row); /*6544*/
						$j--; /*6544*/
						for (var _Ig = $1.sep.length - 1; _Ig >= 0; _Ig -= 1) { /*6545*/
							$k[$j++] = $get($1.sep, _Ig); /*6545*/
						} /*6545*/
						$astore($1.sep); /*6546*/
						$j--; /*6546*/
					} /*6546*/
				} /*6546*/
				$put($1.rows, $1.r, $1.row); /*6550*/
				$put($1.seps, $1.r, $1.sep); /*6551*/
			} /*6551*/
			$1.pixx = $get($1.rows, 0).length; /*6556*/
			$k[$j++] = Infinity; /*6557*/
			for (var _It = 0, _Iu = $1.pixx; _It < _Iu; _It++) { /*6557*/
				$k[$j++] = 0; /*6557*/
			} /*6557*/
			var _Iv = $a(); /*6557*/
			$puti(_Iv, 0, $get($1.rows, $1.numrows - 1)); /*6557*/
			$put($1.rows, $1.numrows - 1, _Iv); /*6558*/
			$k[$j++] = Infinity; /*6559*/
			for (var _J2 = 0, _J3 = $1.pixx; _J2 < _J3; _J2++) { /*6559*/
				$k[$j++] = 0; /*6559*/
			} /*6559*/
			var _J4 = $a(); /*6559*/
			$puti(_J4, 0, $get($1.seps, $1.numrows - 1)); /*6559*/
			$put($1.seps, $1.numrows - 1, _J4); /*6560*/
			$k[$j++] = "sep"; /*6563*/
			$k[$j++] = Infinity; /*6563*/
			for (var _JB = 0, _JC = (~~($1.pixx / 2)) + 1; _JB < _JC; _JB++) { /*6563*/
				$k[$j++] = 0; /*6563*/
				$k[$j++] = 1; /*6563*/
			} /*6563*/
			var _JF = $geti($a(), 0, $1.pixx); /*6563*/
			$1[$k[--$j]] = _JF; /*6563*/
			$puti($1.sep, 0, $a([0, 0, 0, 0])); /*6564*/
			$puti($1.sep, $1.pixx - 4, $a([0, 0, 0, 0])); /*6565*/
			$k[$j++] = Infinity; /*6580*/
			for (var _JO = 0, _JN = $1.numrows - 1; _JO <= _JN; _JO += 1) { /*6579*/
				$1.r = _JO; /*6570*/
				if ($1.r != 0) { /*6573*/
					$aload($get($1.seps, $1.r)); /*6572*/
				} /*6572*/
				for (var _JU = 0, _JV = $1.barxmult; _JU < _JV; _JU++) { /*6574*/
					$aload($get($1.rows, $1.r)); /*6574*/
				} /*6574*/
				if ($1.r != ($1.numrows - 1)) { /*6578*/
					$aload($get($1.seps, $1.r)); /*6576*/
					$aload($1.sep); /*6577*/
				} /*6577*/
			} /*6577*/
			$1.pixs = $a(); /*6580*/
			var _Jo = {
				ren: $0.renmatrix,
				pixs: $1.pixs,
				pixx: $1.pixx,
				pixy: ~~($1.pixs.length / $1.pixx),
				height: (~~($1.pixs.length / $1.pixx)) / 72,
				width: $1.pixx / 72,
				opt: $1.options
			}; /*6589*/
			$k[$j++] = _Jo; /*6592*/
			if (!$1.dontdraw) { /*6592*/
				$0.renmatrix(); /*6592*/
			} /*6592*/
		} /*6592*/
	};
	$0.databarexpandedstacked = function() {
		var $1 = {}; /*6622*/
		$1.options = $k[--$j]; /*6624*/
		$1.barcode = $k[--$j]; /*6625*/
		$1.dontdraw = false; /*6627*/
		$forall($1.options, function() { /*6638*/
			var _3 = $k[--$j]; /*6638*/
			$1[$k[--$j]] = _3; /*6638*/
		}); /*6638*/
		$1.options.dontdraw = true; /*6641*/
		$1.options.format = "expandedstacked"; /*6642*/
		$k[$j++] = "args"; /*6644*/
		$k[$j++] = $1.barcode; /*6644*/
		$k[$j++] = $1.options; /*6644*/
		$0.databarexpanded(); /*6644*/
		var _9 = $k[--$j]; /*6644*/
		$1[$k[--$j]] = _9; /*6644*/
		$1.args.opt = $1.options; /*6646*/
		$k[$j++] = $1.args; /*6649*/
		if (!$1.dontdraw) { /*6649*/
			$0.renmatrix(); /*6649*/
		} /*6649*/
	};
	$0.pharmacode = function() {
		var $1 = {}; /*6676*/
		$1.options = $k[--$j]; /*6678*/
		$1.barcode = $k[--$j]; /*6679*/
		$1.dontdraw = false; /*6681*/
		$1.height = (8 * 2.835) / 72; /*6682*/
		$1.nwidth = 0.5 * 2.835; /*6683*/
		$1.wwidth = 1.5 * 2.835; /*6684*/
		$1.swidth = 1 * 2.835; /*6685*/
		$forall($1.options, function() { /*6696*/
			var _3 = $k[--$j]; /*6696*/
			$1[$k[--$j]] = _3; /*6696*/
		}); /*6696*/
		$1.height = +$1.height; /*6698*/
		$1.nwidth = +$1.nwidth; /*6699*/
		$1.wwidth = +$1.wwidth; /*6700*/
		$1.swidth = +$1.swidth; /*6701*/
		if (($1.barcode.length < 1) || ($1.barcode.length > 6)) { /*6706*/
			$k[$j++] = "bwipp.pharmacodeBadLength"; /*6705*/
			$k[$j++] = "Pharmacode must be 1 to 6 digits"; /*6705*/
			$0.raiseerror(); /*6705*/
		} /*6705*/
		$forall($1.barcode, function() { /*6711*/
			var _C = $k[--$j]; /*6708*/
			if ((_C < 48) || (_C > 57)) { /*6710*/
				$k[$j++] = "bwipp.pharmacodeBadCharacter"; /*6709*/
				$k[$j++] = "Pharmacode must contain only digits"; /*6709*/
				$0.raiseerror(); /*6709*/
			} /*6709*/
		}); /*6709*/
		var _E = ~~$z($1.barcode); /*6712*/
		if ((_E < 3) || (_E > 131070)) { /*6714*/
			$k[$j++] = "bwipp.pharmacodeBadValue"; /*6713*/
			$k[$j++] = "Pharmacode value must be between 3 and 131070"; /*6713*/
			$0.raiseerror(); /*6713*/
		} /*6713*/
		$1.txt = $a($1.barcode.length); /*6717*/
		for (var _J = 0, _I = $1.barcode.length - 1; _J <= _I; _J += 1) { /*6721*/
			$1.i = _J; /*6719*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), 0, 0, "", 0])); /*6720*/
		} /*6720*/
		$1.barcode = $cvrs($s(17), (~~$z($1.barcode)) + 1, 2); /*6724*/
		$1.barcode = $geti($1.barcode, 1, $1.barcode.length - 1); /*6725*/
		$1.barlen = $1.barcode.length; /*6727*/
		$1.sbs = $a($1.barlen * 2); /*6728*/
		for (var _b = 0, _a = $1.barlen - 1; _b <= _a; _b += 1) { /*6739*/
			$1.i = _b; /*6731*/
			$1.enc = $geti($1.barcode, $1.i, 1); /*6732*/
			if ($eq($1.enc, "0")) { /*6736*/
				$put($1.sbs, $1.i * 2, $1.nwidth); /*6734*/
			} else { /*6736*/
				$put($1.sbs, $1.i * 2, $1.wwidth); /*6736*/
			} /*6736*/
			$put($1.sbs, ($1.i * 2) + 1, $1.swidth); /*6738*/
		} /*6738*/
		$k[$j++] = Infinity; /*6749*/
		$k[$j++] = "ren"; /*6746*/
		$k[$j++] = $0.renlinear; /*6746*/
		$k[$j++] = "sbs"; /*6746*/
		$k[$j++] = $1.sbs; /*6746*/
		$k[$j++] = "bhs"; /*6746*/
		$k[$j++] = Infinity; /*6746*/
		for (var _r = 0, _s = ~~(($1.sbs.length + 1) / 2); _r < _s; _r++) { /*6745*/
			$k[$j++] = $1.height; /*6745*/
		} /*6745*/
		var _u = $a(); /*6746*/
		$k[$j++] = _u; /*6747*/
		$k[$j++] = "bbs"; /*6747*/
		$k[$j++] = Infinity; /*6747*/
		for (var _w = 0, _x = ~~(($1.sbs.length + 1) / 2); _w < _x; _w++) { /*6746*/
			$k[$j++] = 0; /*6746*/
		} /*6746*/
		var _y = $a(); /*6747*/
		$k[$j++] = _y; /*6749*/
		$k[$j++] = "txt"; /*6749*/
		$k[$j++] = $1.txt; /*6749*/
		$k[$j++] = "textxalign"; /*6749*/
		$k[$j++] = "center"; /*6749*/
		$k[$j++] = "opt"; /*6749*/
		$k[$j++] = $1.options; /*6749*/
		var _11 = $d(); /*6749*/
		$k[$j++] = _11; /*6752*/
		if (!$1.dontdraw) { /*6752*/
			$0.renlinear(); /*6752*/
		} /*6752*/
	};
	$0.pharmacode2 = function() {
		var $1 = {}; /*6779*/
		$1.options = $k[--$j]; /*6781*/
		$1.barcode = $k[--$j]; /*6782*/
		$1.dontdraw = false; /*6784*/
		$1.includetext = false; /*6785*/
		$1.height = 4; /*6786*/
		$forall($1.options, function() { /*6797*/
			var _3 = $k[--$j]; /*6797*/
			$1[$k[--$j]] = _3; /*6797*/
		}); /*6797*/
		$1.height = +$1.height; /*6799*/
		if (($1.barcode.length < 1) || ($1.barcode.length > 8)) { /*6804*/
			$k[$j++] = "bwipp.pharmacode2BadLength"; /*6803*/
			$k[$j++] = "Two-track Pharmacode must be 1 to 6 digits"; /*6803*/
			$0.raiseerror(); /*6803*/
		} /*6803*/
		$forall($1.barcode, function() { /*6809*/
			var _9 = $k[--$j]; /*6806*/
			if ((_9 < 48) || (_9 > 57)) { /*6808*/
				$k[$j++] = "bwipp.pharmacode2badCharacter"; /*6807*/
				$k[$j++] = "Two-track Pharmacode must contain only digits"; /*6807*/
				$0.raiseerror(); /*6807*/
			} /*6807*/
		}); /*6807*/
		var _B = ~~$z($1.barcode); /*6810*/
		if ((_B < 4) || (_B > 64570080)) { /*6812*/
			$k[$j++] = "bwipp.pharmacode2badValue"; /*6811*/
			$k[$j++] = "Two-track Pharmacode value must be between 4 and 64570080"; /*6811*/
			$0.raiseerror(); /*6811*/
		} /*6811*/
		$1.txt = $a($1.barcode.length); /*6815*/
		for (var _G = 0, _F = $1.barcode.length - 1; _G <= _F; _G += 1) { /*6819*/
			$1.i = _G; /*6817*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), 0, 0, "", 0])); /*6818*/
		} /*6818*/
		$1.encstr = $s(16); /*6821*/
		$1.bhs = $a(16); /*6822*/
		$1.bbs = $a(16); /*6823*/
		$1.sbs = $a(32); /*6824*/
		$1.bar = (1 / 25.4) * $1.height; /*6825*/
		$1.spc = (1 / 25.4) * 72; /*6826*/
		$1.i = 15; /*6829*/
		$1.val = ~~$z($1.barcode); /*6830*/
		for (;;) { /*6837*/
			if ($1.val == 0) { /*6832*/
				break; /*6832*/
			} /*6832*/
			var _V = $1.val % 3; /*6833*/
			$1.val = ~~(($1.val - $get($a([3, 1, 2]), _V)) / 3); /*6834*/
			$put($1.encstr, $1.i, $get($a([2, 0, 1]), _V)); /*6835*/
			$1.i = $1.i - 1; /*6836*/
		} /*6836*/
		$1.encstr = $geti($1.encstr, $1.i + 1, 15 - $1.i); /*6838*/
		for (var _k = 0, _j = $1.encstr.length - 1; _k <= _j; _k += 1) { /*6846*/
			$1.i = _k; /*6842*/
			var _n = $get($1.encstr, $1.i); /*6843*/
			$put($1.bhs, $1.i, $1.bar * $get($a([1, 1, 2]), _n)); /*6844*/
			$put($1.bbs, $1.i, $get($a([0, $1.bar, 0]), _n)); /*6845*/
		} /*6845*/
		$k[$j++] = Infinity; /*6857*/
		$k[$j++] = "ren"; /*6854*/
		$k[$j++] = $0.renlinear; /*6854*/
		$k[$j++] = "bhs"; /*6854*/
		$k[$j++] = $1.bhs; /*6854*/
		$k[$j++] = "bbs"; /*6854*/
		$k[$j++] = $1.bbs; /*6854*/
		$k[$j++] = "sbs"; /*6854*/
		$k[$j++] = Infinity; /*6854*/
		for (var _11 = 0, _12 = $1.encstr.length * 2; _11 < _12; _11++) { /*6853*/
			$k[$j++] = $1.spc; /*6853*/
		} /*6853*/
		var _14 = $a(); /*6854*/
		$k[$j++] = _14; /*6857*/
		$k[$j++] = "txt"; /*6857*/
		$k[$j++] = $1.txt; /*6857*/
		$k[$j++] = "textxalign"; /*6857*/
		$k[$j++] = "center"; /*6857*/
		$k[$j++] = "textyoffset"; /*6857*/
		$k[$j++] = 4; /*6857*/
		$k[$j++] = "opt"; /*6857*/
		$k[$j++] = $1.options; /*6857*/
		var _17 = $d(); /*6857*/
		$k[$j++] = _17; /*6860*/
		if (!$1.dontdraw) { /*6860*/
			$0.renlinear(); /*6860*/
		} /*6860*/
	};
	$0.code2of5 = function() {
		var $1 = {}; /*6887*/
		$1.options = $k[--$j]; /*6889*/
		$1.barcode = $k[--$j]; /*6890*/
		$1.dontdraw = false; /*6892*/
		$1.includecheck = false; /*6893*/
		$1.validatecheck = false; /*6894*/
		$1.includetext = false; /*6895*/
		$1.includecheckintext = false; /*6896*/
		$1.textfont = "Courier"; /*6897*/
		$1.textsize = 10; /*6898*/
		$1.textyoffset = -8.5; /*6899*/
		$1.height = 1; /*6900*/
		$1.version = "industrial"; /*6901*/
		$forall($1.options, function() { /*6912*/
			var _3 = $k[--$j]; /*6912*/
			$1[$k[--$j]] = _3; /*6912*/
		}); /*6912*/
		$1.textfont = "" + $1.textfont; /*6914*/
		$1.textsize = +$1.textsize; /*6915*/
		$1.textyoffset = +$1.textyoffset; /*6916*/
		$1.height = +$1.height; /*6917*/
		$forall($1.barcode, function() { /*6924*/
			var _A = $k[--$j]; /*6921*/
			if ((_A < 48) || (_A > 57)) { /*6923*/
				$k[$j++] = "bwipp.code2of5badCharacter"; /*6922*/
				$k[$j++] = "Code 25 must contain only digits"; /*6922*/
				$0.raiseerror(); /*6922*/
			} /*6922*/
		}); /*6922*/
		$k[$j++] = "barlen"; /*6926*/
		$k[$j++] = $1.barcode.length; /*6926*/
		if ($1.validatecheck) { /*6926*/
			var _D = $k[--$j]; /*6926*/
			$k[$j++] = _D - 1; /*6926*/
		} /*6926*/
		var _E = $k[--$j]; /*6926*/
		$1[$k[--$j]] = _E; /*6926*/
		$1.checksum = 0; /*6928*/
		for (var _I = 0, _H = $1.barlen - 1; _I <= _H; _I += 1) { /*6932*/
			$1.i = _I; /*6930*/
			$k[$j++] = "checksum"; /*6931*/
			$k[$j++] = $1.checksum; /*6931*/
			$k[$j++] = $get($1.barcode, $1.i) - 48; /*6931*/
			if ((($1.barlen - $1.i) % 2) != 0) { /*6931*/
				var _P = $k[--$j]; /*6931*/
				$k[$j++] = _P * 3; /*6931*/
			} /*6931*/
			var _Q = $k[--$j]; /*6931*/
			var _R = $k[--$j]; /*6931*/
			$1[$k[--$j]] = _R + _Q; /*6931*/
		} /*6931*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*6933*/
		if ($1.validatecheck) { /*6940*/
			if ($get($1.barcode, $1.barlen) != ($1.checksum + 48)) { /*6937*/
				$k[$j++] = "bwipp.code2of5badCheckDigit"; /*6936*/
				$k[$j++] = "Incorrect Code 25 check digit provided"; /*6936*/
				$0.raiseerror(); /*6936*/
			} /*6936*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*6938*/
			$1.includecheck = true; /*6939*/
		} /*6939*/
		var _h = {
			industrial: $a(["1111313111", "3111111131", "1131111131", "3131111111", "1111311131", "3111311111", "1131311111", "1111113131", "3111113111", "1131113111", "313111", "31113"]),
			iata: $a(["1111313111", "3111111131", "1131111131", "3131111111", "1111311131", "3111311111", "1131311111", "1111113131", "3111113111", "1131113111", "1111", "311"]),
			matrix: $a(["113311", "311131", "131131", "331111", "113131", "313111", "133111", "111331", "311311", "131311", "311111", "31111"]),
			coop: $a(["331111", "111331", "113131", "113311", "131131", "131311", "133111", "311131", "311311", "313111", "3131", "133"]),
			datalogic: $a(["113311", "311131", "131131", "331111", "113131", "313111", "133111", "111331", "311311", "131311", "1111", "311"])
		}; /*6964*/
		$1.versions = _h; /*6966*/
		var _k = $get($1.versions, $1.version) !== undefined; /*6967*/
		if (!_k) { /*6969*/
			$k[$j++] = "bwipp.code2of5badVersion"; /*6968*/
			$k[$j++] = "Unrecognised Code 25 version"; /*6968*/
			$0.raiseerror(); /*6968*/
		} /*6968*/
		$1.encs = $get($1.versions, $1.version); /*6970*/
		$1.cs = $get($1.encs, 0).length; /*6972*/
		$k[$j++] = "cw"; /*6973*/
		$k[$j++] = 0; /*6973*/
		$forall($get($1.encs, 0), function() { /*6973*/
			var _s = $k[--$j]; /*6973*/
			var _t = $k[--$j]; /*6973*/
			$k[$j++] = _t + (_s - 48); /*6973*/
		}); /*6973*/
		var _u = $k[--$j]; /*6973*/
		$1[$k[--$j]] = _u; /*6973*/
		var _w = $1.encs; /*6974*/
		$1.ss = $get(_w, _w.length - 2).length; /*6974*/
		var _y = $1.encs; /*6975*/
		$k[$j++] = "sw"; /*6975*/
		$k[$j++] = 0; /*6975*/
		$forall($get(_y, _y.length - 2), function() { /*6975*/
			var _10 = $k[--$j]; /*6975*/
			var _11 = $k[--$j]; /*6975*/
			$k[$j++] = _11 + (_10 - 48); /*6975*/
		}); /*6975*/
		var _12 = $k[--$j]; /*6975*/
		$1[$k[--$j]] = _12; /*6975*/
		$1.barchars = "0123456789"; /*6978*/
		$k[$j++] = "sbs"; /*6980*/
		$k[$j++] = $1.barlen; /*6980*/
		if ($1.includecheck) { /*6980*/
			var _16 = $k[--$j]; /*6980*/
			$k[$j++] = _16 + 1; /*6980*/
		} /*6980*/
		var _1B = $s((($k[--$j] * $1.cs) + $1.ss) + $1.ss); /*6980*/
		$1[$k[--$j]] = _1B; /*6980*/
		$k[$j++] = "txt"; /*6981*/
		$k[$j++] = $1.barlen; /*6981*/
		if ($1.includecheck) { /*6981*/
			var _1F = $k[--$j]; /*6981*/
			$k[$j++] = _1F + 1; /*6981*/
		} /*6981*/
		var _1H = $a($k[--$j]); /*6981*/
		$1[$k[--$j]] = _1H; /*6981*/
		$puti($1.sbs, 0, $get($1.encs, 10)); /*6984*/
		for (var _1O = 0, _1N = $1.barlen - 1; _1O <= _1N; _1O += 1) { /*6995*/
			$1.i = _1O; /*6986*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*6988*/
			$j--; /*6989*/
			$1.indx = $k[--$j].length; /*6990*/
			$j -= 2; /*6991*/
			$1.enc = $get($1.encs, $1.indx); /*6992*/
			$puti($1.sbs, ($1.i * $1.cs) + $1.ss, $1.enc); /*6993*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ($1.i * $1.cw) + $1.sw, $1.textyoffset, $1.textfont, $1.textsize])); /*6994*/
		} /*6994*/
		if ($1.includecheck) { /*7007*/
			$puti($1.sbs, ($1.barlen * $1.cs) + $1.ss, $get($1.encs, $1.checksum)); /*6999*/
			$puti($1.sbs, (($1.barlen * $1.cs) + $1.cs) + $1.ss, $get($1.encs, 11)); /*7000*/
			if ($1.includecheckintext) { /*7004*/
				$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum, 1), ($1.barlen * $1.cw) + $1.sw, $1.textyoffset, $1.textfont, $1.textsize])); /*7002*/
			} else { /*7004*/
				$put($1.txt, $1.barlen, $a([" ", ($1.barlen * $1.cw) + $1.sw, $1.textyoffset, $1.textfont, $1.textsize])); /*7004*/
			} /*7004*/
		} else { /*7007*/
			$puti($1.sbs, ($1.barlen * $1.cs) + $1.ss, $get($1.encs, 11)); /*7007*/
		} /*7007*/
		$k[$j++] = Infinity; /*7019*/
		$k[$j++] = "ren"; /*7014*/
		$k[$j++] = $0.renlinear; /*7014*/
		$k[$j++] = "sbs"; /*7014*/
		$k[$j++] = Infinity; /*7014*/
		$forall($1.sbs, function() { /*7013*/
			var _2W = $k[--$j]; /*7013*/
			$k[$j++] = _2W - 48; /*7013*/
		}); /*7013*/
		var _2X = $a(); /*7014*/
		$k[$j++] = _2X; /*7015*/
		$k[$j++] = "bhs"; /*7015*/
		$k[$j++] = Infinity; /*7015*/
		for (var _2Z = 0, _2a = ~~(($1.sbs.length + 1) / 2); _2Z < _2a; _2Z++) { /*7014*/
			$k[$j++] = $1.height; /*7014*/
		} /*7014*/
		var _2c = $a(); /*7015*/
		$k[$j++] = _2c; /*7016*/
		$k[$j++] = "bbs"; /*7016*/
		$k[$j++] = Infinity; /*7016*/
		for (var _2e = 0, _2f = ~~(($1.sbs.length + 1) / 2); _2e < _2f; _2e++) { /*7015*/
			$k[$j++] = 0; /*7015*/
		} /*7015*/
		var _2g = $a(); /*7016*/
		$k[$j++] = _2g; /*7018*/
		if ($1.includetext) { /*7018*/
			$k[$j++] = "txt"; /*7017*/
			$k[$j++] = $1.txt; /*7017*/
		} /*7017*/
		$k[$j++] = "opt"; /*7019*/
		$k[$j++] = $1.options; /*7019*/
		var _2k = $d(); /*7019*/
		$k[$j++] = _2k; /*7022*/
		if (!$1.dontdraw) { /*7022*/
			$0.renlinear(); /*7022*/
		} /*7022*/
	};
	$0.industrial2of5 = function() {
		var $1 = {}; /*7050*/
		$1.options = $k[--$j]; /*7052*/
		$1.barcode = $k[--$j]; /*7053*/
		$1.dontdraw = false; /*7055*/
		$1.includetext = false; /*7056*/
		$1.textfont = "Courier"; /*7057*/
		$1.textsize = 10; /*7058*/
		$1.textxoffset = 0; /*7059*/
		$1.textyoffset = -8.5; /*7060*/
		$1.height = 1; /*7061*/
		$forall($1.options, function() { /*7072*/
			var _3 = $k[--$j]; /*7072*/
			$1[$k[--$j]] = _3; /*7072*/
		}); /*7072*/
		$1.textfont = "" + $1.textfont; /*7074*/
		$1.textsize = +$1.textsize; /*7075*/
		$1.textxoffset = +$1.textxoffset; /*7076*/
		$1.textyoffset = +$1.textyoffset; /*7077*/
		$1.height = +$1.height; /*7078*/
		$1.options.dontdraw = true; /*7081*/
		$1.options.version = "industrial"; /*7082*/
		$k[$j++] = "args"; /*7084*/
		$k[$j++] = $1.barcode; /*7084*/
		$k[$j++] = $1.options; /*7084*/
		$0.code2of5(); /*7084*/
		var _E = $k[--$j]; /*7084*/
		$1[$k[--$j]] = _E; /*7084*/
		$1.args.opt = $1.options; /*7086*/
		$k[$j++] = $1.args; /*7089*/
		if (!$1.dontdraw) { /*7089*/
			$0.renlinear(); /*7089*/
		} /*7089*/
	};
	$0.iata2of5 = function() {
		var $1 = {}; /*7117*/
		$1.options = $k[--$j]; /*7119*/
		$1.barcode = $k[--$j]; /*7120*/
		$1.dontdraw = false; /*7122*/
		$1.includetext = false; /*7123*/
		$1.textfont = "Courier"; /*7124*/
		$1.textsize = 10; /*7125*/
		$1.textxoffset = 0; /*7126*/
		$1.textyoffset = -8.5; /*7127*/
		$1.height = 1; /*7128*/
		$forall($1.options, function() { /*7139*/
			var _3 = $k[--$j]; /*7139*/
			$1[$k[--$j]] = _3; /*7139*/
		}); /*7139*/
		$1.textfont = "" + $1.textfont; /*7141*/
		$1.textsize = +$1.textsize; /*7142*/
		$1.textxoffset = +$1.textxoffset; /*7143*/
		$1.textyoffset = +$1.textyoffset; /*7144*/
		$1.height = +$1.height; /*7145*/
		$1.options.dontdraw = true; /*7148*/
		$1.options.version = "iata"; /*7149*/
		$k[$j++] = "args"; /*7151*/
		$k[$j++] = $1.barcode; /*7151*/
		$k[$j++] = $1.options; /*7151*/
		$0.code2of5(); /*7151*/
		var _E = $k[--$j]; /*7151*/
		$1[$k[--$j]] = _E; /*7151*/
		$1.args.opt = $1.options; /*7153*/
		$k[$j++] = $1.args; /*7156*/
		if (!$1.dontdraw) { /*7156*/
			$0.renlinear(); /*7156*/
		} /*7156*/
	};
	$0.matrix2of5 = function() {
		var $1 = {}; /*7184*/
		$1.options = $k[--$j]; /*7186*/
		$1.barcode = $k[--$j]; /*7187*/
		$1.dontdraw = false; /*7189*/
		$1.includetext = false; /*7190*/
		$1.textfont = "Courier"; /*7191*/
		$1.textsize = 10; /*7192*/
		$1.textxoffset = 0; /*7193*/
		$1.textyoffset = -8.5; /*7194*/
		$1.height = 1; /*7195*/
		$forall($1.options, function() { /*7206*/
			var _3 = $k[--$j]; /*7206*/
			$1[$k[--$j]] = _3; /*7206*/
		}); /*7206*/
		$1.textfont = "" + $1.textfont; /*7208*/
		$1.textsize = +$1.textsize; /*7209*/
		$1.textxoffset = +$1.textxoffset; /*7210*/
		$1.textyoffset = +$1.textyoffset; /*7211*/
		$1.height = +$1.height; /*7212*/
		$1.options.dontdraw = true; /*7215*/
		$1.options.version = "matrix"; /*7216*/
		$k[$j++] = "args"; /*7218*/
		$k[$j++] = $1.barcode; /*7218*/
		$k[$j++] = $1.options; /*7218*/
		$0.code2of5(); /*7218*/
		var _E = $k[--$j]; /*7218*/
		$1[$k[--$j]] = _E; /*7218*/
		$1.args.opt = $1.options; /*7220*/
		$k[$j++] = $1.args; /*7223*/
		if (!$1.dontdraw) { /*7223*/
			$0.renlinear(); /*7223*/
		} /*7223*/
	};
	$0.coop2of5 = function() {
		var $1 = {}; /*7251*/
		$1.options = $k[--$j]; /*7253*/
		$1.barcode = $k[--$j]; /*7254*/
		$1.dontdraw = false; /*7256*/
		$1.includetext = false; /*7257*/
		$1.textfont = "Courier"; /*7258*/
		$1.textsize = 10; /*7259*/
		$1.textxoffset = 0; /*7260*/
		$1.textyoffset = -8.5; /*7261*/
		$1.height = 1; /*7262*/
		$forall($1.options, function() { /*7273*/
			var _3 = $k[--$j]; /*7273*/
			$1[$k[--$j]] = _3; /*7273*/
		}); /*7273*/
		$1.textfont = "" + $1.textfont; /*7275*/
		$1.textsize = +$1.textsize; /*7276*/
		$1.textxoffset = +$1.textxoffset; /*7277*/
		$1.textyoffset = +$1.textyoffset; /*7278*/
		$1.height = +$1.height; /*7279*/
		$1.options.dontdraw = true; /*7282*/
		$1.options.version = "coop"; /*7283*/
		$k[$j++] = "args"; /*7285*/
		$k[$j++] = $1.barcode; /*7285*/
		$k[$j++] = $1.options; /*7285*/
		$0.code2of5(); /*7285*/
		var _E = $k[--$j]; /*7285*/
		$1[$k[--$j]] = _E; /*7285*/
		$1.args.opt = $1.options; /*7287*/
		$k[$j++] = $1.args; /*7290*/
		if (!$1.dontdraw) { /*7290*/
			$0.renlinear(); /*7290*/
		} /*7290*/
	};
	$0.datalogic2of5 = function() {
		var $1 = {}; /*7318*/
		$1.options = $k[--$j]; /*7320*/
		$1.barcode = $k[--$j]; /*7321*/
		$1.dontdraw = false; /*7323*/
		$1.includetext = false; /*7324*/
		$1.textfont = "Courier"; /*7325*/
		$1.textsize = 10; /*7326*/
		$1.textxoffset = 0; /*7327*/
		$1.textyoffset = -8.5; /*7328*/
		$1.height = 1; /*7329*/
		$forall($1.options, function() { /*7340*/
			var _3 = $k[--$j]; /*7340*/
			$1[$k[--$j]] = _3; /*7340*/
		}); /*7340*/
		$1.textfont = "" + $1.textfont; /*7342*/
		$1.textsize = +$1.textsize; /*7343*/
		$1.textxoffset = +$1.textxoffset; /*7344*/
		$1.textyoffset = +$1.textyoffset; /*7345*/
		$1.height = +$1.height; /*7346*/
		$1.options.dontdraw = true; /*7349*/
		$1.options.version = "datalogic"; /*7350*/
		$k[$j++] = "args"; /*7352*/
		$k[$j++] = $1.barcode; /*7352*/
		$k[$j++] = $1.options; /*7352*/
		$0.code2of5(); /*7352*/
		var _E = $k[--$j]; /*7352*/
		$1[$k[--$j]] = _E; /*7352*/
		$1.args.opt = $1.options; /*7354*/
		$k[$j++] = $1.args; /*7357*/
		if (!$1.dontdraw) { /*7357*/
			$0.renlinear(); /*7357*/
		} /*7357*/
	};
	$0.code11 = function() {
		var $1 = {}; /*7384*/
		$1.options = $k[--$j]; /*7386*/
		$1.barcode = $k[--$j]; /*7387*/
		$1.dontdraw = false; /*7389*/
		$1.includecheck = false; /*7390*/
		$1.validatecheck = false; /*7391*/
		$1.includetext = false; /*7392*/
		$1.includecheckintext = false; /*7393*/
		$1.textfont = "Courier"; /*7394*/
		$1.textsize = 10; /*7395*/
		$1.textyoffset = -8.5; /*7396*/
		$1.height = 1; /*7397*/
		$forall($1.options, function() { /*7408*/
			var _3 = $k[--$j]; /*7408*/
			$1[$k[--$j]] = _3; /*7408*/
		}); /*7408*/
		$1.textfont = "" + $1.textfont; /*7410*/
		$1.textsize = +$1.textsize; /*7411*/
		$1.textyoffset = +$1.textyoffset; /*7412*/
		$1.height = +$1.height; /*7413*/
		$1.encs = $a(["111131", "311131", "131131", "331111", "113131", "313111", "133111", "111331", "311311", "311111", "113111", "113311"]); /*7420*/
		$1.barchars = "0123456789-"; /*7423*/
		$1.charvals = {}; /*7424*/
		for (var _A = 0; _A <= 10; _A += 1) { /*7425*/
			$put($1.charvals, $geti($1.barchars, _A, 1), _A); /*7425*/
		} /*7425*/
		for (var _G = 0, _F = $1.barcode.length - 1; _G <= _F; _G += 1) { /*7432*/
			var _K = $get($1.charvals, $geti($1.barcode, _G, 1)) !== undefined; /*7429*/
			if (!_K) { /*7431*/
				$k[$j++] = "bwipp.code11badCharacter"; /*7430*/
				$k[$j++] = "Code 11 must contain only digits and dashes"; /*7430*/
				$0.raiseerror(); /*7430*/
			} /*7430*/
		} /*7430*/
		$1.barlen = $1.barcode.length; /*7434*/
		if ($1.validatecheck) { /*7440*/
			if ($1.barlen == 11) { /*7438*/
				$k[$j++] = "bwipp.code11badLength"; /*7437*/
				$k[$j++] = "Code 11 cannot be 11 characters using check digits"; /*7437*/
				$0.raiseerror(); /*7437*/
			} /*7437*/
			var _Q = ($1.barlen <= 10) ? 1 : 2; /*7439*/
			$1.barlen = $1.barlen - _Q; /*7439*/
		} /*7439*/
		$k[$j++] = "numchecks"; /*7442*/
		if ($1.includecheck || $1.validatecheck) { /*7442*/
			var _U = ($1.barlen >= 10) ? 2 : 1; /*7442*/
			$k[$j++] = _U; /*7442*/
		} else { /*7442*/
			$k[$j++] = 0; /*7442*/
		} /*7442*/
		var _V = $k[--$j]; /*7442*/
		$1[$k[--$j]] = _V; /*7442*/
		$1.checksum1 = 0; /*7443*/
		$1.checksum2 = 0; /*7443*/
		for (var _Z = 0, _Y = $1.barlen - 1; _Z <= _Y; _Z += 1) { /*7449*/
			$1.i = _Z; /*7445*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*7446*/
			$1.checksum1 = $1.checksum1 + ((((($1.barlen - $1.i) - 1) % 10) + 1) * $1.indx); /*7447*/
			$1.checksum2 = $1.checksum2 + (((($1.barlen - $1.i) % 9) + 1) * $1.indx); /*7448*/
		} /*7448*/
		$1.checksum1 = $1.checksum1 % 11; /*7450*/
		$1.checksum2 = ($1.checksum2 + $1.checksum1) % 11; /*7451*/
		if ($1.validatecheck) { /*7465*/
			if ($1.numchecks == 1) { /*7460*/
				if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum1)) { /*7456*/
					$k[$j++] = "bwipp.code11badCheckDigit"; /*7455*/
					$k[$j++] = "Incorrect Code 11 check digit provided"; /*7455*/
					$0.raiseerror(); /*7455*/
				} /*7455*/
			} else { /*7460*/
				if (($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum1)) || ($get($1.barcode, $1.barlen + 1) != $get($1.barchars, $1.checksum2))) { /*7461*/
					$k[$j++] = "bwipp.code11badCheckDigits"; /*7460*/
					$k[$j++] = "Incorrect Code 11 check digits provided"; /*7460*/
					$0.raiseerror(); /*7460*/
				} /*7460*/
			} /*7460*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*7463*/
			$1.includecheck = true; /*7464*/
		} /*7464*/
		$1.sbs = $s((($1.barlen + $1.numchecks) * 6) + 12); /*7467*/
		$1.txt = $a($1.barlen + $1.numchecks); /*7468*/
		$puti($1.sbs, 0, $get($1.encs, 11)); /*7471*/
		$1.xpos = 8; /*7473*/
		for (var _1O = 0, _1N = $1.barlen - 1; _1O <= _1N; _1O += 1) { /*7483*/
			$1.i = _1O; /*7475*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*7476*/
			$1.enc = $get($1.encs, $1.indx); /*7477*/
			$puti($1.sbs, ($1.i * 6) + 6, $1.enc); /*7478*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7479*/
			for (var _1k = 0; _1k <= 5; _1k += 1) { /*7482*/
				$1.xpos = ($get($1.enc, _1k) - 48) + $1.xpos; /*7481*/
			} /*7481*/
		} /*7481*/
		if ($1.includecheck) { /*7512*/
			if ($1.barlen >= 10) { /*7509*/
				$puti($1.sbs, ($1.barlen * 6) + 6, $get($1.encs, $1.checksum1)); /*7488*/
				$puti($1.sbs, ($1.barlen * 6) + 12, $get($1.encs, $1.checksum2)); /*7489*/
				if ($1.includecheckintext) { /*7499*/
					$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum1, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7491*/
					$1.enc = $get($1.encs, $1.checksum1); /*7492*/
					for (var _2E = 0; _2E <= 5; _2E += 1) { /*7495*/
						$1.xpos = ($get($1.enc, _2E) - 48) + $1.xpos; /*7494*/
					} /*7494*/
					$put($1.txt, $1.barlen + 1, $a([$geti($1.barchars, $1.checksum2, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7496*/
				} else { /*7499*/
					$put($1.txt, $1.barlen, $a(["", $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7498*/
					$put($1.txt, $1.barlen + 1, $a(["", $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7499*/
				} /*7499*/
				$puti($1.sbs, ($1.barlen * 6) + 18, $get($1.encs, 11)); /*7501*/
			} else { /*7509*/
				$puti($1.sbs, ($1.barlen * 6) + 6, $get($1.encs, $1.checksum1)); /*7503*/
				if ($1.includecheckintext) { /*7507*/
					$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum1, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7505*/
				} else { /*7507*/
					$put($1.txt, $1.barlen, $a(["", $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7507*/
				} /*7507*/
				$puti($1.sbs, ($1.barlen * 6) + 12, $get($1.encs, 11)); /*7509*/
			} /*7509*/
		} else { /*7512*/
			$puti($1.sbs, ($1.barlen * 6) + 6, $get($1.encs, 11)); /*7512*/
		} /*7512*/
		$k[$j++] = Infinity; /*7524*/
		$k[$j++] = "ren"; /*7519*/
		$k[$j++] = $0.renlinear; /*7519*/
		$k[$j++] = "sbs"; /*7519*/
		$k[$j++] = Infinity; /*7519*/
		var _3F = $1.sbs; /*7518*/
		for (var _3G = 0, _3H = _3F.length; _3G < _3H; _3G++) { /*7518*/
			$k[$j++] = $get(_3F, _3G) - 48; /*7518*/
		} /*7518*/
		var _3J = $a(); /*7519*/
		$k[$j++] = _3J; /*7520*/
		$k[$j++] = "bhs"; /*7520*/
		$k[$j++] = Infinity; /*7520*/
		for (var _3L = 0, _3M = ~~(($1.sbs.length + 1) / 2); _3L < _3M; _3L++) { /*7519*/
			$k[$j++] = $1.height; /*7519*/
		} /*7519*/
		var _3O = $a(); /*7520*/
		$k[$j++] = _3O; /*7521*/
		$k[$j++] = "bbs"; /*7521*/
		$k[$j++] = Infinity; /*7521*/
		for (var _3Q = 0, _3R = ~~(($1.sbs.length + 1) / 2); _3Q < _3R; _3Q++) { /*7520*/
			$k[$j++] = 0; /*7520*/
		} /*7520*/
		var _3S = $a(); /*7521*/
		$k[$j++] = _3S; /*7523*/
		if ($1.includetext) { /*7523*/
			$k[$j++] = "txt"; /*7522*/
			$k[$j++] = $1.txt; /*7522*/
		} /*7522*/
		$k[$j++] = "opt"; /*7524*/
		$k[$j++] = $1.options; /*7524*/
		var _3W = $d(); /*7524*/
		$k[$j++] = _3W; /*7527*/
		if (!$1.dontdraw) { /*7527*/
			$0.renlinear(); /*7527*/
		} /*7527*/
	};
	$0.bc412 = function() {
		var $1 = {}; /*7554*/
		$1.options = $k[--$j]; /*7556*/
		$1.barcode = $k[--$j]; /*7557*/
		$1.dontdraw = false; /*7559*/
		$1.includecheck = false; /*7560*/
		$1.validatecheck = false; /*7561*/
		$1.includetext = false; /*7562*/
		$1.includecheckintext = false; /*7563*/
		$1.includestartstop = false; /*7564*/
		$1.semi = false; /*7565*/
		$1.textfont = "Courier"; /*7566*/
		$1.textsize = 10; /*7567*/
		$1.textyoffset = -8.5; /*7568*/
		$1.height = 1; /*7569*/
		$forall($1.options, function() { /*7580*/
			var _3 = $k[--$j]; /*7580*/
			$1[$k[--$j]] = _3; /*7580*/
		}); /*7580*/
		$1.textfont = "" + $1.textfont; /*7582*/
		$1.textsize = +$1.textsize; /*7583*/
		$1.textyoffset = +$1.textyoffset; /*7584*/
		$1.height = +$1.height; /*7585*/
		if ($1.semi) { /*7590*/
			$1.includecheck = true; /*7588*/
			$1.includestartstop = true; /*7589*/
		} /*7589*/
		$1.barchars = "0R9GLVHA8EZ4NTS1J2Q6C7DYKBUIX3FWP5M"; /*7593*/
		$1.charvals = {}; /*7594*/
		for (var _A = 0; _A <= 34; _A += 1) { /*7595*/
			$put($1.charvals, $geti($1.barchars, _A, 1), _A); /*7595*/
		} /*7595*/
		for (var _G = 0, _F = $1.barcode.length - 1; _G <= _F; _G += 1) { /*7602*/
			var _K = $get($1.charvals, $geti($1.barcode, _G, 1)) !== undefined; /*7599*/
			if (!_K) { /*7601*/
				$k[$j++] = "bwipp.bc412badCharacter"; /*7600*/
				$k[$j++] = "BC412 must contain only digits and capital letters except O"; /*7600*/
				$0.raiseerror(); /*7600*/
			} /*7600*/
		} /*7600*/
		$k[$j++] = "barlen"; /*7604*/
		$k[$j++] = $1.barcode.length; /*7604*/
		if ($1.validatecheck) { /*7604*/
			var _N = $k[--$j]; /*7604*/
			$k[$j++] = _N - 1; /*7604*/
		} /*7604*/
		var _O = $k[--$j]; /*7604*/
		$1[$k[--$j]] = _O; /*7604*/
		$1.checksum = 0; /*7606*/
		for (var _S = 0, _R = $1.barlen - 1; _S <= _R; _S += 1) { /*7610*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _S, 1)) + $1.checksum; /*7609*/
		} /*7609*/
		$1.checksum = $1.checksum % 35; /*7611*/
		if ($1.validatecheck) { /*7618*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*7615*/
				$k[$j++] = "bwipp.bc412badCheckDigit"; /*7614*/
				$k[$j++] = "Incorrect BC412 check digit provided"; /*7614*/
				$0.raiseerror(); /*7614*/
			} /*7614*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*7616*/
			$1.includecheck = true; /*7617*/
		} /*7617*/
		$1.encs = $a(["11111115", "13111212", "11131113", "12111213", "12121311", "13131111", "12111312", "11131212", "11121411", "11151111", "15111111", "11111511", "12131211", "13121112", "13111212", "11111214", "12121113", "11111313", "13111113", "11121213", "11141112", "11121312", "11141211", "14121111", "12121212", "11131311", "13121211", "12111411", "14111211", "11111412", "12111114", "14111112", "12141111", "11121114", "12131112", "12", "111"]); /*7630*/
		$1.sbs = $s((($1.barlen + 1) * 8) + 5); /*7632*/
		if ($1.includecheck) { /*7636*/
			$1.txt = $a($1.barlen + 1); /*7634*/
		} else { /*7636*/
			$1.txt = $a($1.barlen); /*7636*/
		} /*7636*/
		if ($1.includestartstop) { /*7646*/
			$puti($1.sbs, 0, $get($1.encs, 35)); /*7641*/
			$1.pos = 2; /*7642*/
			$1.txtpos = 3; /*7643*/
		} else { /*7646*/
			$1.pos = 0; /*7645*/
			$1.txtpos = 0; /*7646*/
		} /*7646*/
		for (var _x = 0, _w = $1.barlen - 1; _x <= _w; _x += 1) { /*7655*/
			$1.i = _x; /*7650*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*7651*/
			$puti($1.sbs, $1.pos, $get($1.encs, $1.indx)); /*7652*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ($1.i * 12) + $1.txtpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7653*/
			$1.pos = $1.pos + 8; /*7654*/
		} /*7654*/
		if ($1.includecheck) { /*7666*/
			$puti($1.sbs, $1.pos, $get($1.encs, $1.checksum)); /*7659*/
			if ($1.includecheckintext) { /*7663*/
				$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum, 1), ($1.barlen * 12) + $1.txtpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7661*/
			} else { /*7663*/
				$put($1.txt, $1.barlen, $a(["", ($1.barlen * 12) + $1.txtpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7663*/
			} /*7663*/
			$1.pos = $1.pos + 8; /*7665*/
		} /*7665*/
		if ($1.includestartstop) { /*7672*/
			$puti($1.sbs, $1.pos, $get($1.encs, 36)); /*7670*/
			$1.pos = $1.pos + 2; /*7671*/
		} /*7671*/
		$1.sbs = $geti($1.sbs, 0, $1.pos); /*7675*/
		$k[$j++] = Infinity; /*7684*/
		$k[$j++] = "ren"; /*7679*/
		$k[$j++] = $0.renlinear; /*7679*/
		$k[$j++] = "sbs"; /*7679*/
		$k[$j++] = Infinity; /*7679*/
		$forall($1.sbs, function() { /*7678*/
			var _1v = $k[--$j]; /*7678*/
			$k[$j++] = _1v - 48; /*7678*/
		}); /*7678*/
		var _1w = $a(); /*7679*/
		$k[$j++] = _1w; /*7680*/
		$k[$j++] = "bhs"; /*7680*/
		$k[$j++] = Infinity; /*7680*/
		for (var _1y = 0, _1z = ~~(($1.sbs.length + 1) / 2); _1y < _1z; _1y++) { /*7679*/
			$k[$j++] = $1.height; /*7679*/
		} /*7679*/
		var _21 = $a(); /*7680*/
		$k[$j++] = _21; /*7681*/
		$k[$j++] = "bbs"; /*7681*/
		$k[$j++] = Infinity; /*7681*/
		for (var _23 = 0, _24 = ~~(($1.sbs.length + 1) / 2); _23 < _24; _23++) { /*7680*/
			$k[$j++] = 0; /*7680*/
		} /*7680*/
		var _25 = $a(); /*7681*/
		$k[$j++] = _25; /*7683*/
		if ($1.includetext) { /*7683*/
			$k[$j++] = "txt"; /*7682*/
			$k[$j++] = $1.txt; /*7682*/
		} /*7682*/
		$k[$j++] = "opt"; /*7684*/
		$k[$j++] = $1.options; /*7684*/
		var _29 = $d(); /*7684*/
		$k[$j++] = _29; /*7687*/
		if (!$1.dontdraw) { /*7687*/
			$0.renlinear(); /*7687*/
		} /*7687*/
	};
	$0.rationalizedCodabar = function() {
		var $1 = {}; /*7714*/
		$1.options = $k[--$j]; /*7716*/
		$1.barcode = $k[--$j]; /*7717*/
		$1.dontdraw = false; /*7719*/
		$1.altstartstop = false; /*7720*/
		$1.includecheck = false; /*7721*/
		$1.validatecheck = false; /*7722*/
		$1.includetext = false; /*7723*/
		$1.includecheckintext = false; /*7724*/
		$1.textfont = "Courier"; /*7725*/
		$1.textsize = 10; /*7726*/
		$1.textyoffset = -8.5; /*7727*/
		$1.height = 1; /*7728*/
		$forall($1.options, function() { /*7739*/
			var _3 = $k[--$j]; /*7739*/
			$1[$k[--$j]] = _3; /*7739*/
		}); /*7739*/
		$1.textfont = "" + $1.textfont; /*7741*/
		$1.textsize = +$1.textsize; /*7742*/
		$1.textyoffset = +$1.textyoffset; /*7743*/
		$1.height = +$1.height; /*7744*/
		$1.encs = $a(["11111331", "11113311", "11131131", "33111111", "11311311", "31111311", "13111131", "13113111", "13311111", "31131111", "11133111", "11331111", "31113131", "31311131", "31313111", "11313131", "11331311", "13131131", "11131331", "11133311"]); /*7752*/
		if ($1.altstartstop) { /*7758*/
			$1.barchars = "0123456789-$:/.+TN*E"; /*7756*/
		} else { /*7758*/
			$1.barchars = "0123456789-$:/.+ABCD"; /*7758*/
		} /*7758*/
		$1.charvals = {}; /*7760*/
		for (var _B = 0; _B <= 19; _B += 1) { /*7761*/
			$put($1.charvals, $geti($1.barchars, _B, 1), _B); /*7761*/
		} /*7761*/
		$1.bodyvals = {}; /*7762*/
		for (var _F = 0; _F <= 15; _F += 1) { /*7763*/
			$put($1.bodyvals, $geti($1.barchars, _F, 1), _F); /*7763*/
		} /*7763*/
		$1.ssvals = {}; /*7764*/
		for (var _J = 16; _J <= 19; _J += 1) { /*7765*/
			$put($1.ssvals, $geti($1.barchars, _J, 1), _J); /*7765*/
		} /*7765*/
		var _Q = $get($1.ssvals, $geti($1.barcode, 0, 1)) !== undefined; /*7768*/
		var _V = $get($1.ssvals, $geti($1.barcode, $1.barcode.length - 1, 1)) !== undefined; /*7769*/
		if ((!_Q) || (!_V)) { /*7775*/
			if ($1.altstartstop) { /*7773*/
				$k[$j++] = "bwipp.rationalizedCodabarBadAltStartStop"; /*7771*/
				$k[$j++] = "Codabar start and stop characters must be one of E N T or *"; /*7771*/
				$0.raiseerror(); /*7771*/
			} else { /*7773*/
				$k[$j++] = "bwipp.rationalizedCodabarBadStartStop"; /*7773*/
				$k[$j++] = "Codabar start and stop characters must be one of A B C or D"; /*7773*/
				$0.raiseerror(); /*7773*/
			} /*7773*/
		} /*7773*/
		for (var _Z = 1, _Y = $1.barcode.length - 2; _Z <= _Y; _Z += 1) { /*7780*/
			var _d = $get($1.bodyvals, $geti($1.barcode, _Z, 1)) !== undefined; /*7777*/
			if (!_d) { /*7779*/
				$k[$j++] = "bwipp.rationalizedCodabarBadCharacter"; /*7778*/
				$k[$j++] = "Codabar body must contain only digits and symbols - $ : / . +"; /*7778*/
				$0.raiseerror(); /*7778*/
			} /*7778*/
		} /*7778*/
		$k[$j++] = "barlen"; /*7782*/
		$k[$j++] = $1.barcode.length; /*7782*/
		if ($1.validatecheck) { /*7782*/
			var _g = $k[--$j]; /*7782*/
			$k[$j++] = _g - 1; /*7782*/
		} /*7782*/
		var _h = $k[--$j]; /*7782*/
		$1[$k[--$j]] = _h; /*7782*/
		$1.checksum = 0; /*7784*/
		for (var _l = 0, _k = $1.barlen - 2; _l <= _k; _l += 1) { /*7788*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _l, 1)) + $1.checksum; /*7787*/
		} /*7787*/
		$1.checksum = $get($1.charvals, $geti($1.barcode, $1.barcode.length - 1, 1)) + $1.checksum; /*7790*/
		$1.checksum = (16 - ($1.checksum % 16)) % 16; /*7791*/
		if ($1.validatecheck) { /*7801*/
			if ($get($1.barcode, $1.barlen - 1) != $get($1.barchars, $1.checksum)) { /*7795*/
				$k[$j++] = "bwipp.rationalizedCodabarBadCheckDigit"; /*7794*/
				$k[$j++] = "Incorrect Codabar check digit provided"; /*7794*/
				$0.raiseerror(); /*7794*/
			} /*7794*/
			var _16 = $s($1.barlen); /*7796*/
			$puti(_16, 0, $geti($1.barcode, 0, $1.barlen - 1)); /*7797*/
			$puti(_16, $1.barlen - 1, $geti($1.barcode, $1.barlen, 1)); /*7798*/
			$1.barcode = _16; /*7799*/
			$1.includecheck = true; /*7800*/
		} /*7800*/
		$k[$j++] = "sbs"; /*7803*/
		$k[$j++] = $1.barlen; /*7803*/
		if ($1.includecheck) { /*7803*/
			var _1G = $k[--$j]; /*7803*/
			$k[$j++] = _1G + 1; /*7803*/
		} /*7803*/
		var _1I = $s($k[--$j] * 8); /*7803*/
		$1[$k[--$j]] = _1I; /*7803*/
		$k[$j++] = "txt"; /*7804*/
		$k[$j++] = $1.barlen; /*7804*/
		if ($1.includecheck) { /*7804*/
			var _1M = $k[--$j]; /*7804*/
			$k[$j++] = _1M + 1; /*7804*/
		} /*7804*/
		var _1O = $a($k[--$j]); /*7804*/
		$1[$k[--$j]] = _1O; /*7804*/
		$1.xpos = 0; /*7806*/
		for (var _1S = 0, _1R = $1.barlen - 2; _1S <= _1R; _1S += 1) { /*7816*/
			$1.i = _1S; /*7808*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*7809*/
			$1.enc = $get($1.encs, $1.indx); /*7810*/
			$puti($1.sbs, $1.i * 8, $1.enc); /*7811*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7812*/
			for (var _1o = 0; _1o <= 7; _1o += 1) { /*7815*/
				$1.xpos = ($get($1.enc, _1o) - 48) + $1.xpos; /*7814*/
			} /*7814*/
		} /*7814*/
		if ($1.includecheck) { /*7840*/
			$puti($1.sbs, ($1.barlen * 8) - 8, $get($1.encs, $1.checksum)); /*7821*/
			if ($1.includecheckintext) { /*7825*/
				$put($1.txt, $1.barlen - 1, $a([$geti($1.barchars, $1.checksum, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7823*/
			} else { /*7825*/
				$put($1.txt, $1.barlen - 1, $a([" ", $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7825*/
			} /*7825*/
			for (var _2G = 0; _2G <= 7; _2G += 1) { /*7829*/
				$1.xpos = ($get($get($1.encs, $1.checksum), _2G) - 48) + $1.xpos; /*7828*/
			} /*7828*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.barlen - 1, 1)); /*7831*/
			$1.enc = $get($1.encs, $1.indx); /*7832*/
			$puti($1.sbs, $1.barlen * 8, $1.enc); /*7833*/
			$put($1.txt, $1.barlen, $a([$geti($1.barcode, $1.barlen - 1, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7834*/
		} else { /*7840*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.barlen - 1, 1)); /*7837*/
			$1.enc = $get($1.encs, $1.indx); /*7838*/
			$puti($1.sbs, ($1.barlen * 8) - 8, $1.enc); /*7839*/
			$put($1.txt, $1.barlen - 1, $a([$geti($1.barcode, $1.barlen - 1, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7840*/
		} /*7840*/
		$k[$j++] = Infinity; /*7852*/
		$k[$j++] = "ren"; /*7847*/
		$k[$j++] = $0.renlinear; /*7847*/
		$k[$j++] = "sbs"; /*7847*/
		$k[$j++] = Infinity; /*7847*/
		$forall($1.sbs, function() { /*7846*/
			var _33 = $k[--$j]; /*7846*/
			$k[$j++] = _33 - 48; /*7846*/
		}); /*7846*/
		var _34 = $a(); /*7847*/
		$k[$j++] = _34; /*7848*/
		$k[$j++] = "bhs"; /*7848*/
		$k[$j++] = Infinity; /*7848*/
		for (var _36 = 0, _37 = ~~(($1.sbs.length + 1) / 2); _36 < _37; _36++) { /*7847*/
			$k[$j++] = $1.height; /*7847*/
		} /*7847*/
		var _39 = $a(); /*7848*/
		$k[$j++] = _39; /*7849*/
		$k[$j++] = "bbs"; /*7849*/
		$k[$j++] = Infinity; /*7849*/
		for (var _3B = 0, _3C = ~~(($1.sbs.length + 1) / 2); _3B < _3C; _3B++) { /*7848*/
			$k[$j++] = 0; /*7848*/
		} /*7848*/
		var _3D = $a(); /*7849*/
		$k[$j++] = _3D; /*7851*/
		if ($1.includetext) { /*7851*/
			$k[$j++] = "txt"; /*7850*/
			$k[$j++] = $1.txt; /*7850*/
		} /*7850*/
		$k[$j++] = "opt"; /*7852*/
		$k[$j++] = $1.options; /*7852*/
		var _3H = $d(); /*7852*/
		$k[$j++] = _3H; /*7855*/
		if (!$1.dontdraw) { /*7855*/
			$0.renlinear(); /*7855*/
		} /*7855*/
	};
	$0.onecode = function() {
		var $1 = {}; /*7882*/
		$1.options = $k[--$j]; /*7884*/
		$1.barcode = $k[--$j]; /*7885*/
		$1.dontdraw = false; /*7887*/
		$1.height = 0.15; /*7888*/
		$forall($1.options, function() { /*7899*/
			var _3 = $k[--$j]; /*7899*/
			$1[$k[--$j]] = _3; /*7899*/
		}); /*7899*/
		$1.height = +$1.height; /*7901*/
		$1.barlen = $1.barcode.length; /*7903*/
		$k[$j++] = "txtdict"; /*7912*/
		$k[$j++] = Infinity; /*7912*/
		var _9 = $eq($geti($1.barcode, 5, 1), "9") ? 14 : 11; /*7909*/
		$k[$j++] = 2; /*7912*/
		$k[$j++] = 2; /*7912*/
		$k[$j++] = 5; /*7912*/
		$k[$j++] = 5; /*7912*/
		$k[$j++] = _9; /*7912*/
		$k[$j++] = _9; /*7912*/
		$k[$j++] = 20; /*7912*/
		$k[$j++] = 20; /*7912*/
		$k[$j++] = 25; /*7912*/
		$k[$j++] = 25; /*7912*/
		$k[$j++] = 29; /*7912*/
		$k[$j++] = 29; /*7912*/
		var _A = $d(); /*7912*/
		$1[$k[--$j]] = _A; /*7913*/
		$1.txt = $a($1.barlen + 6); /*7914*/
		$1.spacecnt = 0; /*7915*/
		for (var _G = 0, _F = $1.barlen - 1; _G <= _F; _G += 1) { /*7923*/
			$1.i = _G; /*7917*/
			var _J = $get($1.txtdict, $1.i) !== undefined; /*7918*/
			if (_J) { /*7921*/
				$put($1.txt, $1.i + $1.spacecnt, $a([" ", 0, 0, "", 0])); /*7919*/
				$1.spacecnt = $1.spacecnt + 1; /*7920*/
			} /*7920*/
			$put($1.txt, $1.i + $1.spacecnt, $a([$geti($1.barcode, $1.i, 1), 0, 0, "", 0])); /*7922*/
		} /*7922*/
		$1.txt = $geti($1.txt, 0, $1.barcode.length + $1.spacecnt); /*7924*/
		$1.normalize = function() {
			$1.base = $k[--$j]; /*7927*/
			$1.num = $k[--$j]; /*7928*/
			for (var _d = $1.num.length - 1; _d >= 1; _d -= 1) { /*7933*/
				$1.i = _d; /*7930*/
				var _e = $1.num; /*7931*/
				var _f = $1.i; /*7931*/
				$put(_e, _f - 1, $get(_e, _f - 1) + (~~($get($1.num, $1.i) / $1.base))); /*7931*/
				$put($1.num, $1.i, $get($1.num, $1.i) % $1.base); /*7932*/
			} /*7932*/
			for (;;) { /*7939*/
				if ($lt($get($1.num, 0), $1.base)) { /*7935*/
					break; /*7935*/
				} /*7935*/
				$k[$j++] = Infinity; /*7936*/
				$k[$j++] = 0; /*7936*/
				$forall($1.num); /*7936*/
				$1.num = $a(); /*7936*/
				$put($1.num, 0, $get($1.num, 0) + (~~($get($1.num, 1) / $1.base))); /*7937*/
				$put($1.num, 1, $get($1.num, 1) % $1.base); /*7938*/
			} /*7938*/
			$k[$j++] = Infinity; /*7941*/
			$1.i = true; /*7941*/
			var _16 = $1.num; /*7941*/
			for (var _17 = 0, _18 = _16.length; _17 < _18; _17++) { /*7941*/
				var _19 = $get(_16, _17); /*7941*/
				$k[$j++] = _19; /*7941*/
				if ((_19 == 0) && $1.i) { /*7941*/
					$j--; /*7941*/
				} else { /*7941*/
					$1.i = false; /*7941*/
				} /*7941*/
			} /*7941*/
			$1.num = $a(); /*7941*/
			if ($1.num.length == 0) { /*7942*/
				$1.num = $a([0]); /*7942*/
			} /*7942*/
			$k[$j++] = $1.num; /*7943*/
		}; /*7944*/
		$1.bigadd = function() {
			var _1F = $k[--$j]; /*7947*/
			var _1G = $k[--$j]; /*7947*/
			$1.offset = Math.abs(_1F.length - _1G.length); /*7948*/
			if (_1F.length < _1G.length) { /*7949*/
				var _ = _1F; /*7949*/
				_1F = _1G; /*7949*/
				_1G = _; /*7949*/
			} /*7949*/
			$1.a = _1F; /*7950*/
			$1.b = _1G; /*7950*/
			for (var _1J = 0, _1I = $1.b.length - 1; _1J <= _1I; _1J += 1) { /*7953*/
				var _1K = $1.a; /*7952*/
				var _1L = $1.offset; /*7952*/
				$put(_1K, _1J + _1L, $get(_1K, _1J + _1L) + $get($1.b, _1J)); /*7952*/
			} /*7952*/
			$k[$j++] = $1.a; /*7954*/
		}; /*7955*/
		if ($1.barlen == 20) { /*7958*/
			$k[$j++] = $a([0]); /*7958*/
		} /*7958*/
		if ($1.barlen == 25) { /*7959*/
			$k[$j++] = $a([1]); /*7959*/
		} /*7959*/
		if ($1.barlen == 29) { /*7960*/
			$k[$j++] = $a([1, 0, 0, 0, 0, 1]); /*7960*/
		} /*7960*/
		if ($1.barlen == 31) { /*7961*/
			$k[$j++] = $a([1, 0, 0, 0, 1, 0, 0, 0, 0, 1]); /*7961*/
		} /*7961*/
		var _1Y = $k[--$j]; /*7962*/
		$k[$j++] = "binval"; /*7962*/
		$k[$j++] = _1Y; /*7962*/
		$k[$j++] = Infinity; /*7962*/
		$forall($geti($1.barcode, 20, $1.barlen - 20), function() { /*7962*/
			var _1c = $k[--$j]; /*7962*/
			$k[$j++] = _1c - 48; /*7962*/
		}); /*7962*/
		var _1d = $a(); /*7962*/
		$k[$j++] = _1d; /*7962*/
		$1.bigadd(); /*7962*/
		var _1e = $k[--$j]; /*7962*/
		$1[$k[--$j]] = _1e; /*7962*/
		$k[$j++] = Infinity; /*7963*/
		var _1g = $1.binval; /*7963*/
		for (var _1h = 0, _1i = _1g.length; _1h < _1i; _1h++) { /*7963*/
			$k[$j++] = $get(_1g, _1h); /*7963*/
		} /*7963*/
		$k[$j++] = $get($1.barcode, 0) - 48; /*7963*/
		$1.binval = $a(); /*7963*/
		$k[$j++] = "binval"; /*7964*/
		$k[$j++] = Infinity; /*7964*/
		var _1n = $1.binval; /*7964*/
		for (var _1o = 0, _1p = _1n.length; _1o < _1p; _1o++) { /*7964*/
			$k[$j++] = $get(_1n, _1o) * 5; /*7964*/
		} /*7964*/
		var _1r = $a(); /*7964*/
		$k[$j++] = _1r; /*7964*/
		$k[$j++] = $a([$get($1.barcode, 1) - 48]); /*7964*/
		$1.bigadd(); /*7964*/
		$k[$j++] = 10; /*7964*/
		$1.normalize(); /*7964*/
		var _1v = $k[--$j]; /*7964*/
		$1[$k[--$j]] = _1v; /*7964*/
		$k[$j++] = Infinity; /*7965*/
		var _1x = $1.binval; /*7965*/
		for (var _1y = 0, _1z = _1x.length; _1y < _1z; _1y++) { /*7965*/
			$k[$j++] = $get(_1x, _1y); /*7965*/
		} /*7965*/
		$forall($geti($1.barcode, 2, 18), function() { /*7965*/
			var _23 = $k[--$j]; /*7965*/
			$k[$j++] = _23 - 48; /*7965*/
		}); /*7965*/
		$1.binval = $a(); /*7965*/
		$1.bytes = $a(13); /*7968*/
		$k[$j++] = Infinity; /*7969*/
		var _26 = $1.binval; /*7969*/
		for (var _27 = 0, _28 = _26.length; _27 < _28; _27++) { /*7969*/
			$k[$j++] = $get(_26, _27); /*7969*/
		} /*7969*/
		$1.bintmp = $a(); /*7969*/
		for (var _2B = 12; _2B >= 0; _2B -= 1) { /*7979*/
			$1.i = _2B; /*7971*/
			for (var _2E = 0, _2D = $1.bintmp.length - 2; _2E <= _2D; _2E += 1) { /*7976*/
				$1.j = _2E; /*7973*/
				var _2F = $1.bintmp; /*7974*/
				var _2G = $1.j; /*7974*/
				$put(_2F, _2G + 1, $get(_2F, _2G + 1) + (($get($1.bintmp, $1.j) % 256) * 10)); /*7974*/
				$put($1.bintmp, $1.j, ~~($get($1.bintmp, $1.j) / 256)); /*7975*/
			} /*7975*/
			$put($1.bytes, $1.i, $get($1.bintmp, $1.bintmp.length - 1) % 256); /*7977*/
			var _2V = $1.bintmp; /*7978*/
			var _2W = $1.bintmp; /*7978*/
			$put(_2V, _2W.length - 1, ~~($get(_2V, _2W.length - 1) / 256)); /*7978*/
		} /*7978*/
		$1.fcs = 2047; /*7982*/
		$1.dat = $get($1.bytes, 0) << 5; /*7983*/
		for (var _2a = 0, _2b = 6; _2a < _2b; _2a++) { /*7992*/
			if ((($1.fcs ^ $1.dat) & 1024) != 0) { /*7988*/
				$1.fcs = ($1.fcs << 1) ^ 3893; /*7986*/
			} else { /*7988*/
				$1.fcs = $1.fcs << 1; /*7988*/
			} /*7988*/
			$1.fcs = $1.fcs & 2047; /*7990*/
			$1.dat = $1.dat << 1; /*7991*/
		} /*7991*/
		for (var _2i = 1; _2i <= 12; _2i += 1) { /*8004*/
			$1.dat = $get($1.bytes, _2i) << 3; /*7994*/
			for (var _2l = 0, _2m = 8; _2l < _2m; _2l++) { /*8003*/
				if ((($1.fcs ^ $1.dat) & 1024) != 0) { /*7999*/
					$1.fcs = ($1.fcs << 1) ^ 3893; /*7997*/
				} else { /*7999*/
					$1.fcs = $1.fcs << 1; /*7999*/
				} /*7999*/
				$1.fcs = $1.fcs & 2047; /*8001*/
				$1.dat = $1.dat << 1; /*8002*/
			} /*8002*/
		} /*8002*/
		$1.codewords = $a(10); /*8007*/
		for (var _2u = 9; _2u >= 0; _2u -= 1) { /*8022*/
			$1.i = _2u; /*8009*/
			if ($1.i == 9) { /*8013*/
				$1.b = 636; /*8011*/
			} else { /*8013*/
				$1.b = 1365; /*8013*/
			} /*8013*/
			for (var _2y = 0, _2x = $1.binval.length - 2; _2y <= _2x; _2y += 1) { /*8019*/
				$1.j = _2y; /*8016*/
				var _2z = $1.binval; /*8017*/
				var _30 = $1.j; /*8017*/
				$put(_2z, _30 + 1, $get(_2z, _30 + 1) + (($get($1.binval, $1.j) % $1.b) * 10)); /*8017*/
				$put($1.binval, $1.j, ~~($get($1.binval, $1.j) / $1.b)); /*8018*/
			} /*8018*/
			$put($1.codewords, $1.i, $get($1.binval, $1.binval.length - 1) % $1.b); /*8020*/
			var _3I = $1.binval; /*8021*/
			var _3J = $1.binval; /*8021*/
			$put(_3I, _3J.length - 1, ~~($get(_3I, _3J.length - 1) / $1.b)); /*8021*/
		} /*8021*/
		$put($1.codewords, 9, $get($1.codewords, 9) * 2); /*8025*/
		if (($1.fcs & 1024) != 0) { /*8028*/
			$put($1.codewords, 0, $get($1.codewords, 0) + 659); /*8027*/
		} /*8027*/
		$1.tab513 = $a([31, 7936, 47, 7808, 55, 7552, 59, 7040, 61, 6016, 62, 3968, 79, 7744, 87, 7488, 91, 6976, 93, 5952, 94, 3904, 103, 7360, 107, 6848, 109, 5824, 110, 3776, 115, 6592, 117, 5568, 118, 3520, 121, 5056, 122, 3008, 124, 1984, 143, 7712, 151, 7456, 155, 6944, 157, 5920, 158, 3872, 167, 7328, 171, 6816, 173, 5792, 174, 3744, 179, 6560, 181, 5536, 182, 3488, 185, 5024, 186, 2976, 188, 1952, 199, 7264, 203, 6752, 205, 5728, 206, 3680, 211, 6496, 213, 5472, 214, 3424, 217, 4960, 218, 2912, 220, 1888, 227, 6368, 229, 5344, 230, 3296, 233, 4832, 234, 2784, 236, 1760, 241, 4576, 242, 2528, 244, 1504, 248, 992, 271, 7696, 279, 7440, 283, 6928, 285, 5904, 286, 3856, 295, 7312, 299, 6800, 301, 5776, 302, 3728, 307, 6544, 309, 5520, 310, 3472, 313, 5008, 314, 2960, 316, 1936, 327, 7248, 331, 6736, 333, 5712, 334, 3664, 339, 6480, 341, 5456, 342, 3408, 345, 4944, 346, 2896, 348, 1872, 355, 6352, 357, 5328, 358, 3280, 361, 4816, 362, 2768, 364, 1744, 369, 4560, 370, 2512, 372, 1488, 376, 976, 391, 7216, 395, 6704, 397, 5680, 398, 3632, 403, 6448, 405, 5424, 406, 3376, 409, 4912, 410, 2864, 412, 1840, 419, 6320, 421, 5296, 422, 3248, 425, 4784, 426, 2736, 428, 1712, 433, 4528, 434, 2480, 436, 1456, 440, 944, 451, 6256, 453, 5232, 454, 3184, 457, 4720, 458, 2672, 460, 1648, 465, 4464, 466, 2416, 468, 1392, 472, 880, 481, 4336, 482, 2288, 484, 1264, 488, 752, 527, 7688, 535, 7432, 539, 6920, 541, 5896, 542, 3848, 551, 7304, 555, 6792, 557, 5768, 558, 3720, 563, 6536, 565, 5512, 566, 3464, 569, 5000, 570, 2952, 572, 1928, 583, 7240, 587, 6728, 589, 5704, 590, 3656, 595, 6472, 597, 5448, 598, 3400, 601, 4936, 602, 2888, 604, 1864, 611, 6344, 613, 5320, 614, 3272, 617, 4808, 618, 2760, 620, 1736, 625, 4552, 626, 2504, 628, 1480, 632, 968, 647, 7208, 651, 6696, 653, 5672, 654, 3624, 659, 6440, 661, 5416, 662, 3368, 665, 4904, 666, 2856, 668, 1832, 675, 6312, 677, 5288, 678, 3240, 681, 4776, 682, 2728, 684, 1704, 689, 4520, 690, 2472, 692, 1448, 696, 936, 707, 6248, 709, 5224, 710, 3176, 713, 4712, 714, 2664, 716, 1640, 721, 4456, 722, 2408, 724, 1384, 728, 872, 737, 4328, 738, 2280, 740, 1256, 775, 7192, 779, 6680, 781, 5656, 782, 3608, 787, 6424, 789, 5400, 790, 3352, 793, 4888, 794, 2840, 796, 1816, 803, 6296, 805, 5272, 806, 3224, 809, 4760, 810, 2712, 812, 1688, 817, 4504, 818, 2456, 820, 1432, 824, 920, 835, 6232, 837, 5208, 838, 3160, 841, 4696, 842, 2648, 844, 1624, 849, 4440, 850, 2392, 852, 1368, 865, 4312, 866, 2264, 868, 1240, 899, 6200, 901, 5176, 902, 3128, 905, 4664, 906, 2616, 908, 1592, 913, 4408, 914, 2360, 916, 1336, 929, 4280, 930, 2232, 932, 1208, 961, 4216, 962, 2168, 964, 1144, 1039, 7684, 1047, 7428, 1051, 6916, 1053, 5892, 1054, 3844, 1063, 7300, 1067, 6788, 1069, 5764, 1070, 3716, 1075, 6532, 1077, 5508, 1078, 3460, 1081, 4996, 1082, 2948, 1084, 1924, 1095, 7236, 1099, 6724, 1101, 5700, 1102, 3652, 1107, 6468, 1109, 5444, 1110, 3396, 1113, 4932, 1114, 2884, 1116, 1860, 1123, 6340, 1125, 5316, 1126, 3268, 1129, 4804, 1130, 2756, 1132, 1732, 1137, 4548, 1138, 2500, 1140, 1476, 1159, 7204, 1163, 6692, 1165, 5668, 1166, 3620, 1171, 6436, 1173, 5412, 1174, 3364, 1177, 4900, 1178, 2852, 1180, 1828, 1187, 6308, 1189, 5284, 1190, 3236, 1193, 4772, 1194, 2724, 1196, 1700, 1201, 4516, 1202, 2468, 1204, 1444, 1219, 6244, 1221, 5220, 1222, 3172, 1225, 4708, 1226, 2660, 1228, 1636, 1233, 4452, 1234, 2404, 1236, 1380, 1249, 4324, 1250, 2276, 1287, 7188, 1291, 6676, 1293, 5652, 1294, 3604, 1299, 6420, 1301, 5396, 1302, 3348, 1305, 4884, 1306, 2836, 1308, 1812, 1315, 6292, 1317, 5268, 1318, 3220, 1321, 4756, 1322, 2708, 1324, 1684, 1329, 4500, 1330, 2452, 1332, 1428, 1347, 6228, 1349, 5204, 1350, 3156, 1353, 4692, 1354, 2644, 1356, 1620, 1361, 4436, 1362, 2388, 1377, 4308, 1378, 2260, 1411, 6196, 1413, 5172, 1414, 3124, 1417, 4660, 1418, 2612, 1420, 1588, 1425, 4404, 1426, 2356, 1441, 4276, 1442, 2228, 1473, 4212, 1474, 2164, 1543, 7180, 1547, 6668, 1549, 5644, 1550, 3596, 1555, 6412, 1557, 5388, 1558, 3340, 1561, 4876, 1562, 2828, 1564, 1804, 1571, 6284, 1573, 5260, 1574, 3212, 1577, 4748, 1578, 2700, 1580, 1676, 1585, 4492, 1586, 2444, 1603, 6220, 1605, 5196, 1606, 3148, 1609, 4684, 1610, 2636, 1617, 4428, 1618, 2380, 1633, 4300, 1634, 2252, 1667, 6188, 1669, 5164, 1670, 3116, 1673, 4652, 1674, 2604, 1681, 4396, 1682, 2348, 1697, 4268, 1698, 2220, 1729, 4204, 1730, 2156, 1795, 6172, 1797, 5148, 1798, 3100, 1801, 4636, 1802, 2588, 1809, 4380, 1810, 2332, 1825, 4252, 1826, 2204, 1857, 4188, 1858, 2140, 1921, 4156, 1922, 2108, 2063, 7682, 2071, 7426, 2075, 6914, 2077, 5890, 2078, 3842, 2087, 7298, 2091, 6786, 2093, 5762, 2094, 3714, 2099, 6530, 2101, 5506, 2102, 3458, 2105, 4994, 2106, 2946, 2119, 7234, 2123, 6722, 2125, 5698, 2126, 3650, 2131, 6466, 2133, 5442, 2134, 3394, 2137, 4930, 2138, 2882, 2147, 6338, 2149, 5314, 2150, 3266, 2153, 4802, 2154, 2754, 2161, 4546, 2162, 2498, 2183, 7202, 2187, 6690, 2189, 5666, 2190, 3618, 2195, 6434, 2197, 5410, 2198, 3362, 2201, 4898, 2202, 2850, 2211, 6306, 2213, 5282, 2214, 3234, 2217, 4770, 2218, 2722, 2225, 4514, 2226, 2466, 2243, 6242, 2245, 5218, 2246, 3170, 2249, 4706, 2250, 2658, 2257, 4450, 2258, 2402, 2273, 4322, 2311, 7186, 2315, 6674, 2317, 5650, 2318, 3602, 2323, 6418, 2325, 5394, 2326, 3346, 2329, 4882, 2330, 2834, 2339, 6290, 2341, 5266, 2342, 3218, 2345, 4754, 2346, 2706, 2353, 4498, 2354, 2450, 2371, 6226, 2373, 5202, 2374, 3154, 2377, 4690, 2378, 2642, 2385, 4434, 2401, 4306, 2435, 6194, 2437, 5170, 2438, 3122, 2441, 4658, 2442, 2610, 2449, 4402, 2465, 4274, 2497, 4210, 2567, 7178, 2571, 6666, 2573, 5642, 2574, 3594, 2579, 6410, 2581, 5386, 2582, 3338, 2585, 4874, 2586, 2826, 2595, 6282, 2597, 5258, 2598, 3210, 2601, 4746, 2602, 2698, 2609, 4490, 2627, 6218, 2629, 5194, 2630, 3146, 2633, 4682, 2641, 4426, 2657, 4298, 2691, 6186, 2693, 5162, 2694, 3114, 2697, 4650, 2705, 4394, 2721, 4266, 2753, 4202, 2819, 6170, 2821, 5146, 2822, 3098, 2825, 4634, 2833, 4378, 2849, 4250, 2881, 4186, 2945, 4154, 3079, 7174, 3083, 6662, 3085, 5638, 3086, 3590, 3091, 6406, 3093, 5382, 3094, 3334, 3097, 4870, 3107, 6278, 3109, 5254, 3110, 3206, 3113, 4742, 3121, 4486, 3139, 6214, 3141, 5190, 3145, 4678, 3153, 4422, 3169, 4294, 3203, 6182, 3205, 5158, 3209, 4646, 3217, 4390, 3233, 4262, 3265, 4198, 3331, 6166, 3333, 5142, 3337, 4630, 3345, 4374, 3361, 4246, 3393, 4182, 3457, 4150, 3587, 6158, 3589, 5134, 3593, 4622, 3601, 4366, 3617, 4238, 3649, 4174, 3713, 4142, 3841, 4126, 4111, 7681, 4119, 7425, 4123, 6913, 4125, 5889, 4135, 7297, 4139, 6785, 4141, 5761, 4147, 6529, 4149, 5505, 4153, 4993, 4167, 7233, 4171, 6721, 4173, 5697, 4179, 6465, 4181, 5441, 4185, 4929, 4195, 6337, 4197, 5313, 4201, 4801, 4209, 4545, 4231, 7201, 4235, 6689, 4237, 5665, 4243, 6433, 4245, 5409, 4249, 4897, 4259, 6305, 4261, 5281, 4265, 4769, 4273, 4513, 4291, 6241, 4293, 5217, 4297, 4705, 4305, 4449, 4359, 7185, 4363, 6673, 4365, 5649, 4371, 6417, 4373, 5393, 4377, 4881, 4387, 6289, 4389, 5265, 4393, 4753, 4401, 4497, 4419, 6225, 4421, 5201, 4425, 4689, 4483, 6193, 4485, 5169, 4489, 4657, 4615, 7177, 4619, 6665, 4621, 5641, 4627, 6409, 4629, 5385, 4633, 4873, 4643, 6281, 4645, 5257, 4649, 4745, 4675, 6217, 4677, 5193, 4739, 6185, 4741, 5161, 4867, 6169, 4869, 5145, 5127, 7173, 5131, 6661, 5133, 5637, 5139, 6405, 5141, 5381, 5155, 6277, 5157, 5253, 5187, 6213, 5251, 6181, 5379, 6165, 5635, 6157, 6151, 7171, 6155, 6659, 6163, 6403, 6179, 6275, 6211, 5189, 4681, 4433, 4321, 3142, 2634, 2386, 2274, 1612, 1364, 1252, 856, 744, 496]); /*8118*/
		$1.tab213 = $a([3, 6144, 5, 5120, 6, 3072, 9, 4608, 10, 2560, 12, 1536, 17, 4352, 18, 2304, 20, 1280, 24, 768, 33, 4224, 34, 2176, 36, 1152, 40, 640, 48, 384, 65, 4160, 66, 2112, 68, 1088, 72, 576, 80, 320, 96, 192, 129, 4128, 130, 2080, 132, 1056, 136, 544, 144, 288, 257, 4112, 258, 2064, 260, 1040, 264, 528, 513, 4104, 514, 2056, 516, 1032, 1025, 4100, 1026, 2052, 2049, 4098, 4097, 2050, 1028, 520, 272, 160]); /*8127*/
		$1.chars = $a(10); /*8129*/
		for (var _3W = 0; _3W <= 9; _3W += 1) { /*8138*/
			$1.i = _3W; /*8131*/
			var _3Z = $get($1.codewords, $1.i); /*8132*/
			$k[$j++] = _3Z; /*8136*/
			if (_3Z <= 1286) { /*8135*/
				var _3c = $get($1.tab513, $k[--$j]); /*8133*/
				$k[$j++] = _3c; /*8133*/
			} else { /*8135*/
				var _3f = $get($1.tab213, $k[--$j] - 1287); /*8135*/
				$k[$j++] = _3f; /*8135*/
			} /*8135*/
			$put($1.chars, $1.i, $k[--$j]); /*8137*/
		} /*8137*/
		for (var _3j = 9; _3j >= 0; _3j -= 1) { /*8145*/
			$1.i = _3j; /*8141*/
			if (((~~Math.pow(2, $1.i)) & $1.fcs) != 0) { /*8144*/
				$put($1.chars, $1.i, $get($1.chars, $1.i) ^ 8191); /*8143*/
			} /*8143*/
		} /*8143*/
		$1.barmap = $a([7, 2, 4, 3, 1, 10, 0, 0, 9, 12, 2, 8, 5, 5, 6, 11, 8, 9, 3, 1, 0, 1, 5, 12, 2, 5, 1, 8, 4, 4, 9, 11, 6, 3, 8, 10, 3, 9, 7, 6, 5, 11, 1, 4, 8, 5, 2, 12, 9, 10, 0, 2, 7, 1, 6, 7, 3, 6, 4, 9, 0, 3, 8, 6, 6, 4, 2, 7, 1, 1, 9, 9, 7, 10, 5, 2, 4, 0, 3, 8, 6, 2, 0, 4, 8, 11, 1, 0, 9, 8, 3, 12, 2, 6, 7, 7, 5, 1, 4, 10, 1, 12, 6, 9, 7, 3, 8, 0, 5, 8, 9, 7, 4, 6, 2, 10, 3, 4, 0, 5, 8, 4, 5, 7, 7, 11, 1, 9, 6, 0, 9, 6, 0, 6, 4, 8, 2, 1, 3, 2, 5, 9, 8, 12, 4, 11, 6, 1, 9, 5, 7, 4, 3, 3, 1, 2, 0, 7, 2, 0, 1, 3, 4, 1, 6, 10, 3, 5, 8, 7, 9, 4, 2, 11, 5, 6, 0, 8, 7, 12, 4, 2, 8, 1, 5, 10, 3, 0, 9, 3, 0, 9, 6, 5, 2, 4, 7, 8, 1, 7, 5, 0, 4, 5, 2, 3, 0, 10, 6, 12, 9, 2, 3, 11, 1, 6, 8, 8, 7, 9, 5, 4, 0, 11, 1, 5, 2, 2, 9, 1, 4, 12, 8, 3, 6, 6, 7, 0, 3, 7, 4, 7, 7, 5, 0, 12, 1, 11, 2, 9, 9, 0, 6, 8, 5, 3, 3, 10, 8, 2]); /*8162*/
		$1.bbs = $a(65); /*8164*/
		$1.bhs = $a(65); /*8165*/
		for (var _3u = 0; _3u <= 64; _3u += 1) { /*8186*/
			$1.i = _3u; /*8167*/
			$1.dec = ($get($1.chars, $get($1.barmap, $1.i * 4)) & (~~Math.pow(2, $get($1.barmap, ($1.i * 4) + 1)))) != 0; /*8168*/
			$1.asc = ($get($1.chars, $get($1.barmap, ($1.i * 4) + 2)) & (~~Math.pow(2, $get($1.barmap, ($1.i * 4) + 3)))) != 0; /*8169*/
			if ((!$1.dec) && (!$1.asc)) { /*8173*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*8171*/
				$put($1.bhs, $1.i, (2 * $1.height) / 8); /*8172*/
			} /*8172*/
			if ((!$1.dec) && $1.asc) { /*8177*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*8175*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*8176*/
			} /*8176*/
			if ($1.dec && (!$1.asc)) { /*8181*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*8179*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*8180*/
			} /*8180*/
			if ($1.dec && $1.asc) { /*8185*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*8183*/
				$put($1.bhs, $1.i, (8 * $1.height) / 8); /*8184*/
			} /*8184*/
		} /*8184*/
		$k[$j++] = Infinity; /*8199*/
		$k[$j++] = "ren"; /*8194*/
		$k[$j++] = $0.renlinear; /*8194*/
		$k[$j++] = "bbs"; /*8194*/
		$k[$j++] = $1.bbs; /*8194*/
		$k[$j++] = "bhs"; /*8194*/
		$k[$j++] = $1.bhs; /*8194*/
		$k[$j++] = "sbs"; /*8194*/
		$k[$j++] = Infinity; /*8194*/
		for (var _4k = 0, _4l = $1.bhs.length - 1; _4k < _4l; _4k++) { /*8193*/
			$k[$j++] = 1.44; /*8193*/
			$k[$j++] = 1.872; /*8193*/
		} /*8193*/
		$k[$j++] = 1.44; /*8193*/
		var _4m = $a(); /*8194*/
		$k[$j++] = _4m; /*8199*/
		$k[$j++] = "txt"; /*8199*/
		$k[$j++] = $1.txt; /*8199*/
		$k[$j++] = "textxalign"; /*8199*/
		$k[$j++] = "left"; /*8199*/
		$k[$j++] = "textfont"; /*8199*/
		$k[$j++] = "Helvetica"; /*8199*/
		$k[$j++] = "textyoffset"; /*8199*/
		$k[$j++] = 1; /*8199*/
		$k[$j++] = "textxoffset"; /*8199*/
		$k[$j++] = -0.3; /*8199*/
		$k[$j++] = "opt"; /*8199*/
		$k[$j++] = $1.options; /*8199*/
		var _4p = $d(); /*8199*/
		$k[$j++] = _4p; /*8202*/
		if (!$1.dontdraw) { /*8202*/
			$0.renlinear(); /*8202*/
		} /*8202*/
	};
	$0.postnet = function() {
		var $1 = {}; /*8229*/
		$1.options = $k[--$j]; /*8231*/
		$1.barcode = $k[--$j]; /*8232*/
		$1.dontdraw = false; /*8234*/
		$1.includetext = false; /*8235*/
		$1.validatecheck = false; /*8236*/
		$1.includecheckintext = false; /*8237*/
		$1.textfont = "Courier"; /*8238*/
		$1.textsize = 10; /*8239*/
		$1.textyoffset = -8.5; /*8240*/
		$1.height = 0.125; /*8241*/
		$forall($1.options, function() { /*8252*/
			var _3 = $k[--$j]; /*8252*/
			$1[$k[--$j]] = _3; /*8252*/
		}); /*8252*/
		$1.textfont = "" + $1.textfont; /*8254*/
		$1.textsize = +$1.textsize; /*8255*/
		$1.textyoffset = +$1.textyoffset; /*8256*/
		$1.height = +$1.height; /*8257*/
		$k[$j++] = "barlen"; /*8259*/
		$k[$j++] = $1.barcode.length; /*8259*/
		if ($1.validatecheck) { /*8259*/
			var _B = $k[--$j]; /*8259*/
			$k[$j++] = _B - 1; /*8259*/
		} /*8259*/
		var _C = $k[--$j]; /*8259*/
		$1[$k[--$j]] = _C; /*8259*/
		if ((($1.barlen != 5) && ($1.barlen != 9)) && ($1.barlen != 11)) { /*8264*/
			$k[$j++] = "bwipp.postnetBadLength"; /*8263*/
			$k[$j++] = "USPS POSTNET must be 5, 9 or 11 digits excluding check digit"; /*8263*/
			$0.raiseerror(); /*8263*/
		} /*8263*/
		$forall($1.barcode, function() { /*8269*/
			var _I = $k[--$j]; /*8266*/
			if ((_I < 48) || (_I > 57)) { /*8268*/
				$k[$j++] = "bwipp.postnetBadCharacter"; /*8267*/
				$k[$j++] = "USPS POSTNET must contain only digits"; /*8267*/
				$0.raiseerror(); /*8267*/
			} /*8267*/
		}); /*8267*/
		$1.barchars = "0123456789"; /*8272*/
		$1.checksum = 0; /*8274*/
		for (var _L = 0, _K = $1.barlen - 1; _L <= _K; _L += 1) { /*8278*/
			$1.i = _L; /*8276*/
			$1.checksum = $1.checksum + ($get($1.barcode, $1.i) - 48); /*8277*/
		} /*8277*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*8279*/
		if ($1.validatecheck) { /*8285*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*8283*/
				$k[$j++] = "bwipp.postnetBadCheckDigit"; /*8282*/
				$k[$j++] = "Incorrect USPS POSTNET check digit provided"; /*8282*/
				$0.raiseerror(); /*8282*/
			} /*8282*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*8284*/
		} /*8284*/
		$1.encs = $a(["55222", "22255", "22525", "22552", "25225", "25252", "25522", "52225", "52252", "52522", "5", "5"]); /*8292*/
		$1.bhs = $a(($1.barlen * 5) + 7); /*8294*/
		$1.txt = $a($1.barlen + 1); /*8295*/
		$1.enc = $get($1.encs, 10); /*8298*/
		$1.heights = $a($1.enc.length); /*8299*/
		for (var _m = 0, _l = $1.enc.length - 1; _m <= _l; _m += 1) { /*8303*/
			$1.j = _m; /*8301*/
			$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8302*/
		} /*8302*/
		$puti($1.bhs, 0, $1.heights); /*8304*/
		for (var _x = 0, _w = $1.barlen - 1; _x <= _w; _x += 1) { /*8316*/
			$1.i = _x; /*8307*/
			$1.enc = $get($1.encs, $get($1.barcode, $1.i) - 48); /*8308*/
			$1.heights = $a($1.enc.length); /*8309*/
			for (var _17 = 0, _16 = $1.enc.length - 1; _17 <= _16; _17 += 1) { /*8313*/
				$1.j = _17; /*8311*/
				$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8312*/
			} /*8312*/
			$puti($1.bhs, ($1.i * 5) + 1, $1.heights); /*8314*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), (($1.i * 5) + 1) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8315*/
		} /*8315*/
		$1.enc = $get($1.encs, $1.checksum); /*8319*/
		$1.heights = $a($1.enc.length); /*8320*/
		for (var _1Y = 0, _1X = $1.enc.length - 1; _1Y <= _1X; _1Y += 1) { /*8324*/
			$1.j = _1Y; /*8322*/
			$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8323*/
		} /*8323*/
		$puti($1.bhs, ($1.barlen * 5) + 1, $1.heights); /*8325*/
		if ($1.includecheckintext) { /*8330*/
			$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum, 1), (($1.barlen * 5) + 1) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8328*/
		} else { /*8330*/
			$put($1.txt, $1.barlen, $a([" ", ((($1.barlen * 5) + 1) * 72) / 25, $1.textyoffset, $1.textfont, $1.textsize])); /*8330*/
		} /*8330*/
		$1.enc = $get($1.encs, 11); /*8334*/
		$1.heights = $a($1.enc.length); /*8335*/
		for (var _26 = 0, _25 = $1.enc.length - 1; _26 <= _25; _26 += 1) { /*8339*/
			$1.j = _26; /*8337*/
			$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8338*/
		} /*8338*/
		$puti($1.bhs, ($1.barlen * 5) + 6, $1.heights); /*8340*/
		$k[$j++] = Infinity; /*8351*/
		$k[$j++] = "ren"; /*8347*/
		$k[$j++] = $0.renlinear; /*8347*/
		$k[$j++] = "bhs"; /*8347*/
		$k[$j++] = $1.bhs; /*8347*/
		$k[$j++] = "bbs"; /*8347*/
		$k[$j++] = Infinity; /*8347*/
		for (var _2I = 0, _2J = $1.bhs.length; _2I < _2J; _2I++) { /*8346*/
			$k[$j++] = 0; /*8346*/
		} /*8346*/
		var _2K = $a(); /*8347*/
		$k[$j++] = _2K; /*8348*/
		$k[$j++] = "sbs"; /*8348*/
		$k[$j++] = Infinity; /*8348*/
		for (var _2M = 0, _2N = $1.bhs.length - 1; _2M < _2N; _2M++) { /*8347*/
			$k[$j++] = 1.44; /*8347*/
			$k[$j++] = 1.872; /*8347*/
		} /*8347*/
		$k[$j++] = 1.44; /*8347*/
		var _2O = $a(); /*8348*/
		$k[$j++] = _2O; /*8350*/
		if ($1.includetext) { /*8350*/
			$k[$j++] = "txt"; /*8349*/
			$k[$j++] = $1.txt; /*8349*/
		} /*8349*/
		$k[$j++] = "opt"; /*8351*/
		$k[$j++] = $1.options; /*8351*/
		var _2S = $d(); /*8351*/
		$k[$j++] = _2S; /*8354*/
		if (!$1.dontdraw) { /*8354*/
			$0.renlinear(); /*8354*/
		} /*8354*/
	};
	$0.planet = function() {
		var $1 = {}; /*8381*/
		$1.options = $k[--$j]; /*8383*/
		$1.barcode = $k[--$j]; /*8384*/
		$1.dontdraw = false; /*8386*/
		$1.includetext = false; /*8387*/
		$1.validatecheck = false; /*8388*/
		$1.includecheckintext = false; /*8389*/
		$1.textfont = "Courier"; /*8390*/
		$1.textsize = 10; /*8391*/
		$1.textyoffset = -8.5; /*8392*/
		$1.height = 0.125; /*8393*/
		$forall($1.options, function() { /*8404*/
			var _3 = $k[--$j]; /*8404*/
			$1[$k[--$j]] = _3; /*8404*/
		}); /*8404*/
		$1.textfont = "" + $1.textfont; /*8406*/
		$1.textsize = +$1.textsize; /*8407*/
		$1.textyoffset = +$1.textyoffset; /*8408*/
		$1.height = +$1.height; /*8409*/
		$k[$j++] = "barlen"; /*8411*/
		$k[$j++] = $1.barcode.length; /*8411*/
		if ($1.validatecheck) { /*8411*/
			var _B = $k[--$j]; /*8411*/
			$k[$j++] = _B - 1; /*8411*/
		} /*8411*/
		var _C = $k[--$j]; /*8411*/
		$1[$k[--$j]] = _C; /*8411*/
		if (($1.barlen != 11) && ($1.barlen != 13)) { /*8416*/
			$k[$j++] = "bwipp.planetBadLength"; /*8415*/
			$k[$j++] = "USPS PLANET must be 11 or 13 digits excluding check digit"; /*8415*/
			$0.raiseerror(); /*8415*/
		} /*8415*/
		$forall($1.barcode, function() { /*8421*/
			var _H = $k[--$j]; /*8418*/
			if ((_H < 48) || (_H > 57)) { /*8420*/
				$k[$j++] = "bwipp.planetBadCharacter"; /*8419*/
				$k[$j++] = "USPS PLANET must contain only digits"; /*8419*/
				$0.raiseerror(); /*8419*/
			} /*8419*/
		}); /*8419*/
		$1.barchars = "0123456789"; /*8424*/
		$1.checksum = 0; /*8427*/
		for (var _K = 0, _J = $1.barlen - 1; _K <= _J; _K += 1) { /*8431*/
			$1.i = _K; /*8429*/
			$1.checksum = $1.checksum + ($get($1.barcode, $1.i) - 48); /*8430*/
		} /*8430*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*8432*/
		if ($1.validatecheck) { /*8438*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*8436*/
				$k[$j++] = "bwipp.planetBadCheckDigit"; /*8435*/
				$k[$j++] = "Incorrect USPS PLANET check digit provided"; /*8435*/
				$0.raiseerror(); /*8435*/
			} /*8435*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*8437*/
		} /*8437*/
		$1.encs = $a(["22555", "55522", "55252", "55225", "52552", "52525", "52255", "25552", "25525", "25255", "5", "5"]); /*8445*/
		$1.bhs = $a(($1.barlen * 5) + 7); /*8447*/
		$1.txt = $a($1.barlen + 1); /*8448*/
		$1.enc = $get($1.encs, 10); /*8451*/
		$1.heights = $a($1.enc.length); /*8452*/
		for (var _l = 0, _k = $1.enc.length - 1; _l <= _k; _l += 1) { /*8456*/
			$1.j = _l; /*8454*/
			$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8455*/
		} /*8455*/
		$puti($1.bhs, 0, $1.heights); /*8457*/
		for (var _w = 0, _v = $1.barlen - 1; _w <= _v; _w += 1) { /*8469*/
			$1.i = _w; /*8460*/
			$1.enc = $get($1.encs, $get($1.barcode, $1.i) - 48); /*8461*/
			$1.heights = $a($1.enc.length); /*8462*/
			for (var _16 = 0, _15 = $1.enc.length - 1; _16 <= _15; _16 += 1) { /*8466*/
				$1.j = _16; /*8464*/
				$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8465*/
			} /*8465*/
			$puti($1.bhs, ($1.i * 5) + 1, $1.heights); /*8467*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), (($1.i * 5) + 1) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8468*/
		} /*8468*/
		$1.enc = $get($1.encs, $1.checksum); /*8472*/
		$1.heights = $a($1.enc.length); /*8473*/
		for (var _1X = 0, _1W = $1.enc.length - 1; _1X <= _1W; _1X += 1) { /*8477*/
			$1.j = _1X; /*8475*/
			$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8476*/
		} /*8476*/
		$puti($1.bhs, ($1.barlen * 5) + 1, $1.heights); /*8478*/
		if ($1.includecheckintext) { /*8483*/
			$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum, 1), (($1.barlen * 5) + 1) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8481*/
		} else { /*8483*/
			$put($1.txt, $1.barlen, $a([" ", ((($1.barlen * 5) + 1) * 72) / 25, $1.textyoffset, $1.textfont, $1.textsize])); /*8483*/
		} /*8483*/
		$1.enc = $get($1.encs, 11); /*8487*/
		$1.heights = $a($1.enc.length); /*8488*/
		for (var _25 = 0, _24 = $1.enc.length - 1; _25 <= _24; _25 += 1) { /*8492*/
			$1.j = _25; /*8490*/
			$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8491*/
		} /*8491*/
		$puti($1.bhs, ($1.barlen * 5) + 6, $1.heights); /*8493*/
		$k[$j++] = Infinity; /*8504*/
		$k[$j++] = "ren"; /*8500*/
		$k[$j++] = $0.renlinear; /*8500*/
		$k[$j++] = "bhs"; /*8500*/
		$k[$j++] = $1.bhs; /*8500*/
		$k[$j++] = "bbs"; /*8500*/
		$k[$j++] = Infinity; /*8500*/
		for (var _2H = 0, _2I = $1.bhs.length; _2H < _2I; _2H++) { /*8499*/
			$k[$j++] = 0; /*8499*/
		} /*8499*/
		var _2J = $a(); /*8500*/
		$k[$j++] = _2J; /*8501*/
		$k[$j++] = "sbs"; /*8501*/
		$k[$j++] = Infinity; /*8501*/
		for (var _2L = 0, _2M = $1.bhs.length - 1; _2L < _2M; _2L++) { /*8500*/
			$k[$j++] = 1.44; /*8500*/
			$k[$j++] = 1.872; /*8500*/
		} /*8500*/
		$k[$j++] = 1.44; /*8500*/
		var _2N = $a(); /*8501*/
		$k[$j++] = _2N; /*8503*/
		if ($1.includetext) { /*8503*/
			$k[$j++] = "txt"; /*8502*/
			$k[$j++] = $1.txt; /*8502*/
		} /*8502*/
		$k[$j++] = "opt"; /*8504*/
		$k[$j++] = $1.options; /*8504*/
		var _2R = $d(); /*8504*/
		$k[$j++] = _2R; /*8507*/
		if (!$1.dontdraw) { /*8507*/
			$0.renlinear(); /*8507*/
		} /*8507*/
	};
	$0.royalmail = function() {
		var $1 = {}; /*8534*/
		$1.options = $k[--$j]; /*8536*/
		$1.barcode = $k[--$j]; /*8537*/
		$1.dontdraw = false; /*8539*/
		$1.includetext = false; /*8540*/
		$1.validatecheck = false; /*8541*/
		$1.includecheckintext = false; /*8542*/
		$1.textfont = "Courier"; /*8543*/
		$1.textsize = 10; /*8544*/
		$1.textyoffset = -8.5; /*8545*/
		$1.height = 0.175; /*8546*/
		$forall($1.options, function() { /*8557*/
			var _3 = $k[--$j]; /*8557*/
			$1[$k[--$j]] = _3; /*8557*/
		}); /*8557*/
		$1.textfont = "" + $1.textfont; /*8559*/
		$1.textsize = +$1.textsize; /*8560*/
		$1.textyoffset = +$1.textyoffset; /*8561*/
		$1.height = +$1.height; /*8562*/
		$1.barchars = "ZUVWXY501234B6789AHCDEFGNIJKLMTOPQRS"; /*8565*/
		$1.charvals = {}; /*8566*/
		for (var _9 = 0; _9 <= 35; _9 += 1) { /*8567*/
			$put($1.charvals, $geti($1.barchars, _9, 1), _9); /*8567*/
		} /*8567*/
		for (var _F = 0, _E = $1.barcode.length - 1; _F <= _E; _F += 1) { /*8574*/
			var _J = $get($1.charvals, $geti($1.barcode, _F, 1)) !== undefined; /*8571*/
			if (!_J) { /*8573*/
				$k[$j++] = "bwipp.royalmailBadCharacter"; /*8572*/
				$k[$j++] = "RM4SCC must contain only capital letters and digits"; /*8572*/
				$0.raiseerror(); /*8572*/
			} /*8572*/
		} /*8572*/
		$k[$j++] = "barlen"; /*8576*/
		$k[$j++] = $1.barcode.length; /*8576*/
		if ($1.validatecheck) { /*8576*/
			var _M = $k[--$j]; /*8576*/
			$k[$j++] = _M - 1; /*8576*/
		} /*8576*/
		var _N = $k[--$j]; /*8576*/
		$1[$k[--$j]] = _N; /*8576*/
		$1.checksumrow = 0; /*8578*/
		$1.checksumcol = 0; /*8579*/
		for (var _R = 0, _Q = $1.barlen - 1; _R <= _Q; _R += 1) { /*8585*/
			$1.i = _R; /*8581*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*8582*/
			$1.checksumrow = $1.checksumrow + (~~($1.indx / 6)); /*8583*/
			$1.checksumcol = $1.checksumcol + ($1.indx % 6); /*8584*/
		} /*8584*/
		$1.checksum = (($1.checksumrow % 6) * 6) + ($1.checksumcol % 6); /*8586*/
		if ($1.validatecheck) { /*8592*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*8590*/
				$k[$j++] = "bwipp.royalmailBadCheckDigit"; /*8589*/
				$k[$j++] = "Incorrect RM4SCC check digit provided"; /*8589*/
				$0.raiseerror(); /*8589*/
			} /*8589*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*8591*/
		} /*8591*/
		$1.encs = $a(["3300", "2211", "2301", "2310", "3201", "3210", "1122", "0033", "0123", "0132", "1023", "1032", "1302", "0213", "0303", "0312", "1203", "1212", "1320", "0231", "0321", "0330", "1221", "1230", "3102", "2013", "2103", "2112", "3003", "3012", "3120", "2031", "2121", "2130", "3021", "3030", "2", "3"]); /*8603*/
		$1.encstr = $s(($1.barlen * 4) + 6); /*8605*/
		$1.txt = $a($1.barlen + 1); /*8606*/
		$puti($1.encstr, 0, $get($1.encs, 36)); /*8609*/
		for (var _x = 0, _w = $1.barlen - 1; _x <= _w; _x += 1) { /*8616*/
			$1.i = _x; /*8612*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*8613*/
			$puti($1.encstr, ($1.i * 4) + 1, $get($1.encs, $1.indx)); /*8614*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), (($1.i * 4) + 1) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8615*/
		} /*8615*/
		$puti($1.encstr, ($1.barlen * 4) + 1, $get($1.encs, $1.checksum)); /*8619*/
		if ($1.includecheckintext) { /*8623*/
			$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum, 1), (($1.barlen * 4) + 1) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8621*/
		} else { /*8623*/
			$put($1.txt, $1.barlen, $a([" ", (($1.barlen * 4) + 1) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8623*/
		} /*8623*/
		$puti($1.encstr, ($1.barlen * 4) + 5, $get($1.encs, 37)); /*8627*/
		$1.bbs = $a($1.encstr.length); /*8629*/
		$1.bhs = $a($1.encstr.length); /*8630*/
		for (var _1p = 0, _1o = $1.encstr.length - 1; _1p <= _1o; _1p += 1) { /*8650*/
			$1.i = _1p; /*8632*/
			$1.enc = $geti($1.encstr, $1.i, 1); /*8633*/
			if ($eq($1.enc, "0")) { /*8637*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*8635*/
				$put($1.bhs, $1.i, (2 * $1.height) / 8); /*8636*/
			} /*8636*/
			if ($eq($1.enc, "1")) { /*8641*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*8639*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*8640*/
			} /*8640*/
			if ($eq($1.enc, "2")) { /*8645*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*8643*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*8644*/
			} /*8644*/
			if ($eq($1.enc, "3")) { /*8649*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*8647*/
				$put($1.bhs, $1.i, (8 * $1.height) / 8); /*8648*/
			} /*8648*/
		} /*8648*/
		$k[$j++] = Infinity; /*8661*/
		$k[$j++] = "ren"; /*8658*/
		$k[$j++] = $0.renlinear; /*8658*/
		$k[$j++] = "bbs"; /*8658*/
		$k[$j++] = $1.bbs; /*8658*/
		$k[$j++] = "bhs"; /*8658*/
		$k[$j++] = $1.bhs; /*8658*/
		$k[$j++] = "sbs"; /*8658*/
		$k[$j++] = Infinity; /*8658*/
		for (var _2O = 0, _2P = $1.bhs.length - 1; _2O < _2P; _2O++) { /*8657*/
			$k[$j++] = 1.44; /*8657*/
			$k[$j++] = 1.872; /*8657*/
		} /*8657*/
		$k[$j++] = 1.44; /*8657*/
		var _2Q = $a(); /*8658*/
		$k[$j++] = _2Q; /*8660*/
		if ($1.includetext) { /*8660*/
			$k[$j++] = "txt"; /*8659*/
			$k[$j++] = $1.txt; /*8659*/
		} /*8659*/
		$k[$j++] = "opt"; /*8661*/
		$k[$j++] = $1.options; /*8661*/
		var _2U = $d(); /*8661*/
		$k[$j++] = _2U; /*8664*/
		if (!$1.dontdraw) { /*8664*/
			$0.renlinear(); /*8664*/
		} /*8664*/
	};
	$0.auspost = function() {
		var $1 = {}; /*8691*/
		$1.options = $k[--$j]; /*8693*/
		$1.barcode = $k[--$j]; /*8694*/
		$1.dontdraw = false; /*8696*/
		$1.includetext = false; /*8697*/
		$1.textfont = "Courier"; /*8698*/
		$1.textsize = 10; /*8699*/
		$1.textyoffset = -8.5; /*8700*/
		$1.height = 0.175; /*8701*/
		$1.custinfoenc = "character"; /*8702*/
		$forall($1.options, function() { /*8713*/
			var _3 = $k[--$j]; /*8713*/
			$1[$k[--$j]] = _3; /*8713*/
		}); /*8713*/
		$1.textfont = "" + $1.textfont; /*8715*/
		$1.textsize = +$1.textsize; /*8716*/
		$1.textyoffset = +$1.textyoffset; /*8717*/
		$1.height = +$1.height; /*8718*/
		$1.encs = $a(["000", "001", "002", "010", "011", "012", "020", "021", "022", "100", "101", "102", "110", "111", "112", "120", "121", "122", "200", "201", "202", "210", "211", "212", "220", "221", "222", "300", "301", "302", "310", "311", "312", "320", "321", "322", "023", "030", "031", "032", "033", "103", "113", "123", "130", "131", "132", "133", "203", "213", "223", "230", "231", "232", "233", "303", "313", "323", "330", "331", "332", "333", "003", "013", "00", "01", "02", "10", "11", "12", "20", "21", "22", "30", "13", "3"]); /*8732*/
		$1.barchars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz #"; /*8735*/
		$1.barlen = $1.barcode.length; /*8737*/
		if ($eq($geti($1.barcode, 0, 2), "11")) { /*8738*/
			$k[$j++] = 37; /*8738*/
		} /*8738*/
		if ($eq($geti($1.barcode, 0, 2), "45")) { /*8739*/
			$k[$j++] = 37; /*8739*/
		} /*8739*/
		if ($eq($geti($1.barcode, 0, 2), "59")) { /*8740*/
			$k[$j++] = 52; /*8740*/
		} /*8740*/
		if ($eq($geti($1.barcode, 0, 2), "62")) { /*8741*/
			$k[$j++] = 67; /*8741*/
		} /*8741*/
		$1.encstr = $s($k[--$j]); /*8742*/
		$1.txt = $a($1.barlen - 2); /*8743*/
		$puti($1.encstr, 0, $get($1.encs, 74)); /*8746*/
		for (var _Q = 0; _Q <= 1; _Q += 1) { /*8753*/
			$1.i = _Q; /*8750*/
			$puti($1.encstr, ($1.i * 2) + 2, $get($1.encs, (~~$z($geti($1.barcode, $1.i, 1))) + 64)); /*8752*/
		} /*8752*/
		for (var _Y = 2; _Y <= 9; _Y += 1) { /*8761*/
			$1.i = _Y; /*8757*/
			$puti($1.encstr, ($1.i * 2) + 2, $get($1.encs, (~~$z($geti($1.barcode, $1.i, 1))) + 64)); /*8759*/
			$put($1.txt, $1.i - 2, $a([$geti($1.barcode, $1.i, 1), ((($1.i - 2) * 2) + 6) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8760*/
		} /*8760*/
		if ($eq($1.custinfoenc, "numeric")) { /*8783*/
			for (var _t = 0, _s = $1.barlen - 11; _t <= _s; _t += 1) { /*8770*/
				$1.i = _t; /*8766*/
				$puti($1.encstr, ($1.i * 2) + 22, $get($1.encs, (~~$z($geti($1.barcode, $1.i + 10, 1))) + 64)); /*8768*/
				$put($1.txt, $1.i + 8, $a([$geti($1.barcode, $1.i + 10, 1), (($1.i * 2) + 22) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8769*/
			} /*8769*/
			$1.ciflen = ($1.barlen - 10) * 2; /*8771*/
		} else { /*8783*/
			for (var _1E = 0, _1D = $1.barlen - 11; _1E <= _1D; _1E += 1) { /*8782*/
				$1.i = _1E; /*8774*/
				$search($1.barchars, $geti($1.barcode, $1.i + 10, 1)); /*8775*/
				$j--; /*8776*/
				$1.indx = $k[--$j].length; /*8777*/
				$j -= 2; /*8778*/
				$1.enc = $get($1.encs, $1.indx); /*8779*/
				$puti($1.encstr, ($1.i * 3) + 22, $1.enc); /*8780*/
				$put($1.txt, $1.i + 8, $a([$geti($1.barcode, $1.i + 10, 1), (($1.i * 3) + 22) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8781*/
			} /*8781*/
			$1.ciflen = ($1.barlen - 10) * 3; /*8783*/
		} /*8783*/
		for (var _1e = 22 + $1.ciflen, _1d = $1.encstr.length - 14; _1e <= _1d; _1e += 1) { /*8789*/
			$puti($1.encstr, _1e, $get($1.encs, 75)); /*8788*/
		} /*8788*/
		$1.rstable = $a(64 * 64); /*8792*/
		$k[$j++] = $1.rstable; /*8793*/
		$k[$j++] = 0; /*8793*/
		$k[$j++] = Infinity; /*8793*/
		for (var _1k = 0, _1l = 64; _1k < _1l; _1k++) { /*8793*/
			$k[$j++] = 0; /*8793*/
		} /*8793*/
		var _1m = $a(); /*8793*/
		var _1n = $k[--$j]; /*8793*/
		$puti($k[--$j], _1n, _1m); /*8793*/
		$k[$j++] = $1.rstable; /*8794*/
		$k[$j++] = 64; /*8794*/
		$k[$j++] = Infinity; /*8794*/
		for (var _1q = 0; _1q <= 63; _1q += 1) { /*8794*/
			$k[$j++] = _1q; /*8794*/
		} /*8794*/
		var _1r = $a(); /*8794*/
		var _1s = $k[--$j]; /*8794*/
		$puti($k[--$j], _1s, _1r); /*8794*/
		$1.prev = 1; /*8795*/
		for (var _1u = 0, _1v = 64; _1u < _1v; _1u++) { /*8810*/
			$1.next = $1.prev << 1; /*8797*/
			if (($1.next & 64) != 0) { /*8800*/
				$1.next = $1.next ^ 67; /*8799*/
			} /*8799*/
			for (var _1z = 0; _1z <= 63; _1z += 1) { /*8808*/
				$1.j = _1z; /*8802*/
				$1.nextcell = function() {
					$k[$j++] = $1.rstable; /*8803*/
					$k[$j++] = (64 * $1.next) + $1.j; /*8803*/
				}; /*8803*/
				$1.nextcell(); /*8804*/
				var _27 = $k[--$j]; /*8804*/
				$put($k[--$j], _27, $get($1.rstable, (64 * $1.prev) + $1.j) << 1); /*8804*/
				$1.nextcell(); /*8805*/
				var _29 = $k[--$j]; /*8805*/
				if (($get($k[--$j], _29) & 64) != 0) { /*8807*/
					$1.nextcell(); /*8806*/
					$1.nextcell(); /*8806*/
					var _2C = $k[--$j]; /*8806*/
					var _2E = $get($k[--$j], _2C); /*8806*/
					var _2F = $k[--$j]; /*8806*/
					$put($k[--$j], _2F, _2E ^ 67); /*8806*/
				} /*8806*/
			} /*8806*/
			$1.prev = $1.next; /*8809*/
		} /*8809*/
		$1.rscodes = $a((~~(($1.encstr.length - 16) / 3)) + 4); /*8813*/
		$k[$j++] = $1.rscodes; /*8814*/
		$k[$j++] = 0; /*8814*/
		$k[$j++] = Infinity; /*8814*/
		for (var _2L = 0, _2M = 4; _2L < _2M; _2L++) { /*8814*/
			$k[$j++] = 0; /*8814*/
		} /*8814*/
		var _2N = $a(); /*8814*/
		var _2O = $k[--$j]; /*8814*/
		$puti($k[--$j], _2O, _2N); /*8814*/
		for (var _2S = 2, _2R = $1.encstr.length - 16; _2S <= _2R; _2S += 3) { /*8822*/
			$1.i = _2S; /*8816*/
			$put($1.rscodes, ($1.rscodes.length - (~~(($1.i - 2) / 3))) - 1, (((~~$z($geti($1.encstr, $1.i, 1))) * 16) + ((~~$z($geti($1.encstr, $1.i + 1, 1))) * 4)) + (~~$z($geti($1.encstr, $1.i + 2, 1)))); /*8821*/
		} /*8821*/
		for (var _2g = $1.rscodes.length - 5; _2g >= 0; _2g -= 1) { /*8831*/
			$1.i = _2g; /*8824*/
			for (var _2h = 0; _2h <= 4; _2h += 1) { /*8830*/
				$1.j = _2h; /*8826*/
				$put($1.rscodes, $1.i + $1.j, $xo($get($1.rscodes, $1.i + $1.j), $get($1.rstable, (64 * $get($a([48, 17, 29, 30, 1]), $1.j)) + $get($1.rscodes, $1.i + 4)))); /*8829*/
			} /*8829*/
		} /*8829*/
		$1.checkcode = $strcpy($s(12), "000000000000"); /*8832*/
		for (var _2z = 0; _2z <= 3; _2z += 1) { /*8837*/
			$1.i = _2z; /*8834*/
			$1.enc = $cvrs($s(3), $get($1.rscodes, 3 - $1.i), 4); /*8835*/
			$puti($1.checkcode, ($1.i * 3) + (3 - $1.enc.length), $1.enc); /*8836*/
		} /*8836*/
		$puti($1.encstr, $1.encstr.length - 14, $1.checkcode); /*8840*/
		$puti($1.encstr, $1.encstr.length - 2, $get($1.encs, 74)); /*8841*/
		$1.bbs = $a($1.encstr.length); /*8843*/
		$1.bhs = $a($1.encstr.length); /*8844*/
		for (var _3M = 0, _3L = $1.encstr.length - 1; _3M <= _3L; _3M += 1) { /*8864*/
			$1.i = _3M; /*8846*/
			$1.enc = $geti($1.encstr, $1.i, 1); /*8847*/
			if ($eq($1.enc, "0")) { /*8851*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*8849*/
				$put($1.bhs, $1.i, (8 * $1.height) / 8); /*8850*/
			} /*8850*/
			if ($eq($1.enc, "1")) { /*8855*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*8853*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*8854*/
			} /*8854*/
			if ($eq($1.enc, "2")) { /*8859*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*8857*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*8858*/
			} /*8858*/
			if ($eq($1.enc, "3")) { /*8863*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*8861*/
				$put($1.bhs, $1.i, (2 * $1.height) / 8); /*8862*/
			} /*8862*/
		} /*8862*/
		$k[$j++] = Infinity; /*8875*/
		$k[$j++] = "ren"; /*8872*/
		$k[$j++] = $0.renlinear; /*8872*/
		$k[$j++] = "bbs"; /*8872*/
		$k[$j++] = $1.bbs; /*8872*/
		$k[$j++] = "bhs"; /*8872*/
		$k[$j++] = $1.bhs; /*8872*/
		$k[$j++] = "sbs"; /*8872*/
		$k[$j++] = Infinity; /*8872*/
		for (var _3v = 0, _3w = $1.bhs.length - 1; _3v < _3w; _3v++) { /*8871*/
			$k[$j++] = 1.44; /*8871*/
			$k[$j++] = 1.872; /*8871*/
		} /*8871*/
		$k[$j++] = 1.44; /*8871*/
		var _3x = $a(); /*8872*/
		$k[$j++] = _3x; /*8874*/
		if ($1.includetext) { /*8874*/
			$k[$j++] = "txt"; /*8873*/
			$k[$j++] = $1.txt; /*8873*/
		} /*8873*/
		$k[$j++] = "opt"; /*8875*/
		$k[$j++] = $1.options; /*8875*/
		var _41 = $d(); /*8875*/
		$k[$j++] = _41; /*8878*/
		if (!$1.dontdraw) { /*8878*/
			$0.renlinear(); /*8878*/
		} /*8878*/
	};
	$0.kix = function() {
		var $1 = {}; /*8905*/
		$1.options = $k[--$j]; /*8907*/
		$1.barcode = $k[--$j]; /*8908*/
		$1.dontdraw = false; /*8910*/
		$1.includetext = false; /*8911*/
		$1.textfont = "Courier"; /*8912*/
		$1.textsize = 10; /*8913*/
		$1.textyoffset = -8.5; /*8914*/
		$1.height = 0.175; /*8915*/
		$forall($1.options, function() { /*8926*/
			var _3 = $k[--$j]; /*8926*/
			$1[$k[--$j]] = _3; /*8926*/
		}); /*8926*/
		$1.textfont = "" + $1.textfont; /*8928*/
		$1.textsize = +$1.textsize; /*8929*/
		$1.textyoffset = +$1.textyoffset; /*8930*/
		$1.height = +$1.height; /*8931*/
		$1.encs = $a(["0033", "0123", "0132", "1023", "1032", "1122", "0213", "0303", "0312", "1203", "1212", "1302", "0231", "0321", "0330", "1221", "1230", "1320", "2013", "2103", "2112", "3003", "3012", "3102", "2031", "2121", "2130", "3021", "3030", "3120", "2211", "2301", "2310", "3201", "3210", "3300"]); /*8941*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"; /*8944*/
		$1.charvals = {}; /*8945*/
		for (var _A = 0; _A <= 35; _A += 1) { /*8946*/
			$put($1.charvals, $geti($1.barchars, _A, 1), _A); /*8946*/
		} /*8946*/
		for (var _G = 0, _F = $1.barcode.length - 1; _G <= _F; _G += 1) { /*8953*/
			var _K = $get($1.charvals, $geti($1.barcode, _G, 1)) !== undefined; /*8950*/
			if (!_K) { /*8952*/
				$k[$j++] = "bwipp.kixBadCharacter"; /*8951*/
				$k[$j++] = "KIX must contain only capital letters and digits"; /*8951*/
				$0.raiseerror(); /*8951*/
			} /*8951*/
		} /*8951*/
		$1.barlen = $1.barcode.length; /*8955*/
		$1.encstr = $s($1.barlen * 4); /*8956*/
		$1.txt = $a($1.barlen); /*8957*/
		for (var _S = 0, _R = $1.barlen - 1; _S <= _R; _S += 1) { /*8964*/
			$1.i = _S; /*8960*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*8961*/
			$puti($1.encstr, $1.i * 4, $get($1.encs, $1.indx)); /*8962*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ($1.i * 4) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8963*/
		} /*8963*/
		$1.bbs = $a($1.encstr.length); /*8966*/
		$1.bhs = $a($1.encstr.length); /*8967*/
		for (var _t = 0, _s = $1.encstr.length - 1; _t <= _s; _t += 1) { /*8987*/
			$1.i = _t; /*8969*/
			$1.enc = $geti($1.encstr, $1.i, 1); /*8970*/
			if ($eq($1.enc, "0")) { /*8974*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*8972*/
				$put($1.bhs, $1.i, (2 * $1.height) / 8); /*8973*/
			} /*8973*/
			if ($eq($1.enc, "1")) { /*8978*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*8976*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*8977*/
			} /*8977*/
			if ($eq($1.enc, "2")) { /*8982*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*8980*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*8981*/
			} /*8981*/
			if ($eq($1.enc, "3")) { /*8986*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*8984*/
				$put($1.bhs, $1.i, (8 * $1.height) / 8); /*8985*/
			} /*8985*/
		} /*8985*/
		$k[$j++] = Infinity; /*8998*/
		$k[$j++] = "ren"; /*8995*/
		$k[$j++] = $0.renlinear; /*8995*/
		$k[$j++] = "bbs"; /*8995*/
		$k[$j++] = $1.bbs; /*8995*/
		$k[$j++] = "bhs"; /*8995*/
		$k[$j++] = $1.bhs; /*8995*/
		$k[$j++] = "sbs"; /*8995*/
		$k[$j++] = Infinity; /*8995*/
		for (var _1S = 0, _1T = $1.bhs.length - 1; _1S < _1T; _1S++) { /*8994*/
			$k[$j++] = 1.44; /*8994*/
			$k[$j++] = 1.872; /*8994*/
		} /*8994*/
		$k[$j++] = 1.44; /*8994*/
		var _1U = $a(); /*8995*/
		$k[$j++] = _1U; /*8997*/
		if ($1.includetext) { /*8997*/
			$k[$j++] = "txt"; /*8996*/
			$k[$j++] = $1.txt; /*8996*/
		} /*8996*/
		$k[$j++] = "opt"; /*8998*/
		$k[$j++] = $1.options; /*8998*/
		var _1Y = $d(); /*8998*/
		$k[$j++] = _1Y; /*9001*/
		if (!$1.dontdraw) { /*9001*/
			$0.renlinear(); /*9001*/
		} /*9001*/
	};
	$0.japanpost = function() {
		var $1 = {}; /*9028*/
		$1.options = $k[--$j]; /*9030*/
		$1.barcode = $k[--$j]; /*9031*/
		$1.dontdraw = false; /*9033*/
		$1.includetext = false; /*9034*/
		$1.includecheckintext = false; /*9035*/
		$1.textfont = "Courier"; /*9036*/
		$1.textsize = 10; /*9037*/
		$1.textyoffset = -8.5; /*9038*/
		$1.height = 0.175; /*9039*/
		$forall($1.options, function() { /*9050*/
			var _3 = $k[--$j]; /*9050*/
			$1[$k[--$j]] = _3; /*9050*/
		}); /*9050*/
		$1.textfont = "" + $1.textfont; /*9052*/
		$1.textsize = +$1.textsize; /*9053*/
		$1.textyoffset = +$1.textyoffset; /*9054*/
		$1.height = +$1.height; /*9055*/
		$1.encs = $a(["300", "330", "312", "132", "321", "303", "123", "231", "213", "033", "030", "120", "102", "210", "012", "201", "021", "003", "333", "31", "13"]); /*9063*/
		$1.barchars = "0123456789-ABCDEFGHIJKLMNOPQRSTUVWXYZ"; /*9066*/
		$1.barlen = $1.barcode.length; /*9067*/
		$1.encstr = $s(((20 + 1) * 3) + 4); /*9069*/
		$1.digits = $a(20); /*9070*/
		$1.txt = $a($1.barlen + 1); /*9071*/
		$puti($1.encstr, 0, $get($1.encs, 19)); /*9074*/
		$1.checksum = 0; /*9076*/
		$1.j = 0; /*9077*/
		$1.i = 0; /*9077*/
		for (var _K = 0, _J = $1.barlen - 1; _K <= _J; _K += 1) { /*9111*/
			$1.i = _K; /*9079*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*9080*/
			$j--; /*9081*/
			$1.indx = $k[--$j].length; /*9082*/
			$j -= 2; /*9083*/
			if (($1.indx >= 11) && ($1.indx < 37)) { /*9094*/
				if ($1.j > 18) { /*9085*/
					break; /*9085*/
				} /*9085*/
				$1.digit = (~~(($1.indx - 1) / 10)) + 10; /*9089*/
				$puti($1.encstr, ($1.j * 3) + 2, $get($1.encs, $1.digit)); /*9090*/
				$1.checksum = $1.checksum + $1.digit; /*9091*/
				$put($1.digits, $1.j, $1.digit); /*9092*/
				$1.j = $1.j + 1; /*9093*/
			} /*9093*/
			if ($1.j > 19) { /*9095*/
				break; /*9095*/
			} /*9095*/
			$1.digit = 0; /*9096*/
			if ($1.indx == 37) { /*9099*/
				$1.digit = 14; /*9098*/
			} /*9098*/
			if (($1.indx >= 11) && ($1.indx < 37)) { /*9102*/
				$1.digit = ($1.indx - 1) % 10; /*9101*/
			} /*9101*/
			if ($1.indx < 11) { /*9105*/
				$1.digit = $1.indx; /*9104*/
			} /*9104*/
			$puti($1.encstr, ($1.j * 3) + 2, $get($1.encs, $1.digit)); /*9106*/
			$1.checksum = $1.checksum + $1.digit; /*9107*/
			$put($1.digits, $1.j, $1.digit); /*9108*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), (($1.j * 3) + 2) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*9109*/
			$1.j = $1.j + 1; /*9110*/
		} /*9110*/
		for (var _19 = $1.j, _18 = 20 - 1; _19 <= _18; _19 += 1) { /*9119*/
			$1.k = _19; /*9115*/
			$puti($1.encstr, ($1.k * 3) + 2, $get($1.encs, 14)); /*9116*/
			$1.checksum = $1.checksum + 14; /*9117*/
			$put($1.digits, $1.k, 14); /*9118*/
		} /*9118*/
		$1.checksum = 19 - ($1.checksum % 19); /*9122*/
		$puti($1.encstr, 2 + (20 * 3), $get($1.encs, $1.checksum)); /*9123*/
		$puti($1.encstr, 2 + (21 * 3), $get($1.encs, 20)); /*9126*/
		$1.checkdigit = " "; /*9127*/
		if ($1.includecheckintext) { /*9130*/
			$1.checkdigit = $geti($1.barchars, $1.checksum, 1); /*9129*/
		} /*9129*/
		$put($1.txt, $1.i + 1, $a([$1.checkdigit, ((20 * 3) + 2) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*9131*/
		$puti($1.encstr, ((20 + 1) * 3) + 2, $get($1.encs, 20)); /*9134*/
		$1.bbs = $a((21 * 3) + 4); /*9136*/
		$1.bhs = $a($1.bbs.length); /*9137*/
		for (var _1i = 0, _1h = $1.bbs.length - 1; _1i <= _1h; _1i += 1) { /*9161*/
			$1.i = _1i; /*9139*/
			$1.enc = $geti($1.encstr, $1.i, 1); /*9140*/
			$1.bunit = 0; /*9141*/
			$1.hunit = 0; /*9142*/
			if ($eq($1.enc, "0")) { /*9146*/
				$1.bunit = 3; /*9144*/
				$1.hunit = 2; /*9145*/
			} /*9145*/
			if ($eq($1.enc, "1")) { /*9150*/
				$1.bunit = 0; /*9148*/
				$1.hunit = 5; /*9149*/
			} /*9149*/
			if ($eq($1.enc, "2")) { /*9154*/
				$1.bunit = 3; /*9152*/
				$1.hunit = 5; /*9153*/
			} /*9153*/
			if ($eq($1.enc, "3")) { /*9158*/
				$1.bunit = 0; /*9156*/
				$1.hunit = 8; /*9157*/
			} /*9157*/
			$put($1.bbs, $1.i, ($1.bunit * $1.height) / 8); /*9159*/
			$put($1.bhs, $1.i, ($1.hunit * $1.height) / 8); /*9160*/
		} /*9160*/
		$k[$j++] = Infinity; /*9172*/
		$k[$j++] = "ren"; /*9169*/
		$k[$j++] = $0.renlinear; /*9169*/
		$k[$j++] = "bbs"; /*9169*/
		$k[$j++] = $1.bbs; /*9169*/
		$k[$j++] = "bhs"; /*9169*/
		$k[$j++] = $1.bhs; /*9169*/
		$k[$j++] = "sbs"; /*9169*/
		$k[$j++] = Infinity; /*9169*/
		for (var _21 = 0, _22 = $1.bhs.length - 1; _21 < _22; _21++) { /*9168*/
			$k[$j++] = 1.44; /*9168*/
			$k[$j++] = 1.872; /*9168*/
		} /*9168*/
		$k[$j++] = 1.44; /*9168*/
		var _23 = $a(); /*9169*/
		$k[$j++] = _23; /*9171*/
		if ($1.includetext) { /*9171*/
			$k[$j++] = "txt"; /*9170*/
			$k[$j++] = $1.txt; /*9170*/
		} /*9170*/
		$k[$j++] = "opt"; /*9172*/
		$k[$j++] = $1.options; /*9172*/
		var _27 = $d(); /*9172*/
		$k[$j++] = _27; /*9175*/
		if (!$1.dontdraw) { /*9175*/
			$0.renlinear(); /*9175*/
		} /*9175*/
	};
	$0.msi = function() {
		var $1 = {}; /*9202*/
		$1.options = $k[--$j]; /*9204*/
		$1.barcode = $k[--$j]; /*9205*/
		$1.dontdraw = false; /*9207*/
		$1.includecheck = false; /*9208*/
		$1.includetext = false; /*9209*/
		$1.includecheckintext = false; /*9210*/
		$1.checktype = "mod10"; /*9211*/
		$1.badmod11 = false; /*9212*/
		$1.textfont = "Courier"; /*9213*/
		$1.textsize = 10; /*9214*/
		$1.textyoffset = -8.5; /*9215*/
		$1.height = 1; /*9216*/
		$forall($1.options, function() { /*9227*/
			var _3 = $k[--$j]; /*9227*/
			$1[$k[--$j]] = _3; /*9227*/
		}); /*9227*/
		$1.textfont = "" + $1.textfont; /*9229*/
		$1.textsize = +$1.textsize; /*9230*/
		$1.textyoffset = +$1.textyoffset; /*9231*/
		$1.height = +$1.height; /*9232*/
		$1.encs = $a(["12121212", "12121221", "12122112", "12122121", "12211212", "12211221", "12212112", "12212121", "21121212", "21121221", "21", "121"]); /*9239*/
		$1.barchars = "0123456789"; /*9242*/
		$1.barlen = $1.barcode.length; /*9244*/
		$1.txtlen = $1.barlen; /*9245*/
		$1.mod10 = function() {
			$1.code = $k[--$j]; /*9248*/
			$k[$j++] = 0; /*9249*/
			$k[$j++] = 0; /*9249*/
			$forall($1.code, function() { /*9249*/
				var _E = $k[--$j]; /*9249*/
				var _F = $k[--$j]; /*9249*/
				var _G = $k[--$j]; /*9249*/
				$k[$j++] = (_E - 48) + (_F * 10); /*9249*/
				$k[$j++] = _G; /*9249*/
			}); /*9249*/
			$j--; /*9249*/
			var _H = $k[--$j]; /*9249*/
			$k[$j++] = _H * 2; /*9250*/
			$k[$j++] = 0; /*9250*/
			for (;;) { /*9250*/
				var _I = $k[--$j]; /*9250*/
				var _J = $k[--$j]; /*9250*/
				var _K = ~~(_J / 10); /*9250*/
				$k[$j++] = _I + (_J % 10); /*9250*/
				$k[$j++] = _K; /*9250*/
				if (_K == 0) { /*9250*/
					$j--; /*9250*/
					break; /*9250*/
				} /*9250*/
				var _L = $k[--$j]; /*9250*/
				var _M = $k[--$j]; /*9250*/
				$k[$j++] = _L; /*9250*/
				$k[$j++] = _M; /*9250*/
			} /*9250*/
			$k[$j++] = 0; /*9251*/
			$k[$j++] = 0; /*9251*/
			$forall($1.code, function() { /*9251*/
				var _O = $k[--$j]; /*9251*/
				var _P = $k[--$j]; /*9251*/
				var _Q = $k[--$j]; /*9251*/
				$k[$j++] = _P + (_O - 48); /*9251*/
				$k[$j++] = _Q; /*9251*/
			}); /*9251*/
			var _R = $k[--$j]; /*9251*/
			var _S = $k[--$j]; /*9251*/
			var _V = $s($1.code.length + 1); /*9253*/
			$puti(_V, 0, $1.code); /*9253*/
			$put(_V, $1.code.length, ((10 - (($k[--$j] + _R) % 10)) % 10) + 48); /*9253*/
			$k[$j++] = _V; /*9253*/
		}; /*9254*/
		$1.mod11 = function() {
			$1.code = $k[--$j]; /*9257*/
			$k[$j++] = $1.code.length - 1; /*9258*/
			$forall($1.code, function() { /*9258*/
				var _b = $k[--$j]; /*9258*/
				var _c = $k[--$j]; /*9258*/
				$k[$j++] = _b - 48; /*9258*/
				$k[$j++] = (_c % 6) + 2; /*9258*/
				$k[$j++] = _c - 1; /*9258*/
			}); /*9258*/
			$j--; /*9258*/
			$k[$j++] = 0; /*9259*/
			for (var _e = 0, _f = $1.code.length; _e < _f; _e++) { /*9259*/
				var _g = $k[--$j]; /*9259*/
				var _h = $k[--$j]; /*9259*/
				var _i = $k[--$j]; /*9259*/
				$k[$j++] = _g + (_i * _h); /*9259*/
			} /*9259*/
			var _k = (11 - ($k[--$j] % 11)) % 11; /*9261*/
			$k[$j++] = _k; /*9265*/
			if ((_k == 10) && $1.badmod11) { /*9264*/
				$j--; /*9262*/
				var _n = $s($1.code.length + 2); /*9262*/
				$puti(_n, 0, $1.code); /*9262*/
				$puti(_n, $1.code.length, "10"); /*9262*/
				$k[$j++] = _n; /*9262*/
			} else { /*9264*/
				var _r = $s($1.code.length + 1); /*9264*/
				$puti(_r, 0, $1.code); /*9264*/
				$put(_r, $1.code.length, $k[--$j] + 48); /*9264*/
				$k[$j++] = _r; /*9264*/
			} /*9264*/
		}; /*9266*/
		$1.ncrmod11 = function() {
			$1.code = $k[--$j]; /*9269*/
			$k[$j++] = $1.code.length - 1; /*9270*/
			$forall($1.code, function() { /*9270*/
				var _y = $k[--$j]; /*9270*/
				var _z = $k[--$j]; /*9270*/
				$k[$j++] = _y - 48; /*9270*/
				$k[$j++] = (_z % 8) + 2; /*9270*/
				$k[$j++] = _z - 1; /*9270*/
			}); /*9270*/
			$j--; /*9270*/
			$k[$j++] = 0; /*9271*/
			for (var _11 = 0, _12 = $1.code.length; _11 < _12; _11++) { /*9271*/
				var _13 = $k[--$j]; /*9271*/
				var _14 = $k[--$j]; /*9271*/
				var _15 = $k[--$j]; /*9271*/
				$k[$j++] = _13 + (_15 * _14); /*9271*/
			} /*9271*/
			var _17 = (11 - ($k[--$j] % 11)) % 11; /*9273*/
			$k[$j++] = _17; /*9277*/
			if ((_17 == 10) && $1.badmod11) { /*9276*/
				$j--; /*9274*/
				var _1A = $s($1.code.length + 2); /*9274*/
				$puti(_1A, 0, $1.code); /*9274*/
				$puti(_1A, $1.code.length, "10"); /*9274*/
				$k[$j++] = _1A; /*9274*/
			} else { /*9276*/
				var _1E = $s($1.code.length + 1); /*9276*/
				$puti(_1E, 0, $1.code); /*9276*/
				$put(_1E, $1.code.length, $k[--$j] + 48); /*9276*/
				$k[$j++] = _1E; /*9276*/
			} /*9276*/
		}; /*9278*/
		if ($1.includecheck) { /*9291*/
			if ($eq($1.checktype, "mod10")) { /*9282*/
				$k[$j++] = $1.barcode; /*9282*/
				$1.mod10(); /*9282*/
			} /*9282*/
			if ($eq($1.checktype, "mod1010")) { /*9283*/
				$k[$j++] = $1.barcode; /*9283*/
				$1.mod10(); /*9283*/
				$1.mod10(); /*9283*/
			} /*9283*/
			if ($eq($1.checktype, "mod11")) { /*9284*/
				$k[$j++] = $1.barcode; /*9284*/
				$1.mod11(); /*9284*/
			} /*9284*/
			if ($eq($1.checktype, "ncrmod11")) { /*9285*/
				$k[$j++] = $1.barcode; /*9285*/
				$1.ncrmod11(); /*9285*/
			} /*9285*/
			if ($eq($1.checktype, "mod1110")) { /*9286*/
				$k[$j++] = $1.barcode; /*9286*/
				$1.mod11(); /*9286*/
				$1.mod10(); /*9286*/
			} /*9286*/
			if ($eq($1.checktype, "ncrmod1110")) { /*9287*/
				$k[$j++] = $1.barcode; /*9287*/
				$1.ncrmod11(); /*9287*/
				$1.mod10(); /*9287*/
			} /*9287*/
			$1.barcode = $k[--$j]; /*9288*/
			$1.barlen = $1.barcode.length; /*9289*/
			if ($1.includecheckintext) { /*9290*/
				$1.txtlen = $1.barlen; /*9290*/
			} /*9290*/
		} /*9290*/
		$1.sbs = $s(($1.barlen * 8) + 5); /*9293*/
		$1.txt = $a($1.barlen); /*9294*/
		$puti($1.sbs, 0, $get($1.encs, 10)); /*9297*/
		for (var _1i = 0, _1h = $1.barlen - 1; _1i <= _1h; _1i += 1) { /*9309*/
			$1.i = _1i; /*9300*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*9302*/
			$j--; /*9303*/
			$1.indx = $k[--$j].length; /*9304*/
			$j -= 2; /*9305*/
			$1.enc = $get($1.encs, $1.indx); /*9306*/
			$puti($1.sbs, ($1.i * 8) + 2, $1.enc); /*9307*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ($1.i * 12) + 3, $1.textyoffset, $1.textfont, $1.textsize])); /*9308*/
		} /*9308*/
		$puti($1.sbs, ($1.barlen * 8) + 2, $get($1.encs, 11)); /*9312*/
		$k[$j++] = Infinity; /*9323*/
		$k[$j++] = "ren"; /*9318*/
		$k[$j++] = $0.renlinear; /*9318*/
		$k[$j++] = "sbs"; /*9318*/
		$k[$j++] = Infinity; /*9318*/
		var _28 = $1.sbs; /*9317*/
		for (var _29 = 0, _2A = _28.length; _29 < _2A; _29++) { /*9317*/
			$k[$j++] = $get(_28, _29) - 48; /*9317*/
		} /*9317*/
		var _2C = $a(); /*9318*/
		$k[$j++] = _2C; /*9319*/
		$k[$j++] = "bhs"; /*9319*/
		$k[$j++] = Infinity; /*9319*/
		for (var _2E = 0, _2F = ~~(($1.sbs.length + 1) / 2); _2E < _2F; _2E++) { /*9318*/
			$k[$j++] = $1.height; /*9318*/
		} /*9318*/
		var _2H = $a(); /*9319*/
		$k[$j++] = _2H; /*9320*/
		$k[$j++] = "bbs"; /*9320*/
		$k[$j++] = Infinity; /*9320*/
		for (var _2J = 0, _2K = ~~(($1.sbs.length + 1) / 2); _2J < _2K; _2J++) { /*9319*/
			$k[$j++] = 0; /*9319*/
		} /*9319*/
		var _2L = $a(); /*9320*/
		$k[$j++] = _2L; /*9322*/
		if ($1.includetext) { /*9322*/
			$k[$j++] = "txt"; /*9321*/
			$k[$j++] = $geti($1.txt, 0, $1.txtlen); /*9321*/
		} /*9321*/
		$k[$j++] = "opt"; /*9323*/
		$k[$j++] = $1.options; /*9323*/
		var _2R = $d(); /*9323*/
		$k[$j++] = _2R; /*9326*/
		if (!$1.dontdraw) { /*9326*/
			$0.renlinear(); /*9326*/
		} /*9326*/
	};
	$0.plessey = function() {
		var $1 = {}; /*9353*/
		$1.options = $k[--$j]; /*9355*/
		$1.barcode = $k[--$j]; /*9356*/
		$1.dontdraw = false; /*9358*/
		$1.includetext = false; /*9359*/
		$1.validatecheck = false; /*9360*/
		$1.includecheckintext = false; /*9361*/
		$1.unidirectional = false; /*9362*/
		$1.textfont = "Courier"; /*9363*/
		$1.textsize = 10; /*9364*/
		$1.textyoffset = -8.5; /*9365*/
		$1.height = 1; /*9366*/
		$forall($1.options, function() { /*9377*/
			var _3 = $k[--$j]; /*9377*/
			$1[$k[--$j]] = _3; /*9377*/
		}); /*9377*/
		$1.textfont = "" + $1.textfont; /*9379*/
		$1.textsize = +$1.textsize; /*9380*/
		$1.textyoffset = +$1.textyoffset; /*9381*/
		$1.height = +$1.height; /*9382*/
		$1.barchars = "0123456789ABCDEF"; /*9385*/
		$1.charvals = {}; /*9386*/
		for (var _9 = 0; _9 <= 15; _9 += 1) { /*9387*/
			$put($1.charvals, $geti($1.barchars, _9, 1), _9); /*9387*/
		} /*9387*/
		for (var _F = 0, _E = $1.barcode.length - 1; _F <= _E; _F += 1) { /*9394*/
			var _J = $get($1.charvals, $geti($1.barcode, _F, 1)) !== undefined; /*9391*/
			if (!_J) { /*9393*/
				$k[$j++] = "bwipp.plesseyBadCharacter"; /*9392*/
				$k[$j++] = "Plessey must contain only digits and letters A B C D E F"; /*9392*/
				$0.raiseerror(); /*9392*/
			} /*9392*/
		} /*9392*/
		$k[$j++] = "barlen"; /*9396*/
		$k[$j++] = $1.barcode.length; /*9396*/
		if ($1.validatecheck) { /*9396*/
			var _M = $k[--$j]; /*9396*/
			$k[$j++] = _M - 2; /*9396*/
		} /*9396*/
		var _N = $k[--$j]; /*9396*/
		$1[$k[--$j]] = _N; /*9396*/
		$1.checkbits = $a(($1.barlen * 4) + 8); /*9399*/
		$puti($1.checkbits, $1.barlen * 4, $a([0, 0, 0, 0, 0, 0, 0, 0])); /*9400*/
		for (var _W = 0, _V = $1.barlen - 1; _W <= _V; _W += 1) { /*9410*/
			$1.i = _W; /*9402*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*9403*/
			$puti($1.checkbits, $1.i * 4, $a([$1.indx & 1, ($1.indx >>> 1) & 1, ($1.indx >>> 2) & 1, $1.indx >>> 3])); /*9409*/
		} /*9409*/
		$1.checksalt = $a([1, 1, 1, 1, 0, 1, 0, 0, 1]); /*9411*/
		for (var _m = 0, _l = ($1.barlen * 4) - 1; _m <= _l; _m += 1) { /*9420*/
			$1.i = _m; /*9413*/
			if ($get($1.checkbits, $1.i) == 1) { /*9419*/
				for (var _q = 0; _q <= 8; _q += 1) { /*9418*/
					$1.j = _q; /*9416*/
					$put($1.checkbits, $1.i + $1.j, $xo($get($1.checkbits, $1.i + $1.j), $get($1.checksalt, $1.j))); /*9417*/
				} /*9417*/
			} /*9417*/
		} /*9417*/
		$1.checkval = 0; /*9421*/
		for (var _11 = 0; _11 <= 7; _11 += 1) { /*9425*/
			$1.i = _11; /*9423*/
			$1.checkval = $1.checkval + ((~~Math.pow(2, $1.i)) * $get($1.checkbits, ($1.barlen * 4) + $1.i)); /*9424*/
		} /*9424*/
		$1.checksum1 = $1.checkval & 15; /*9426*/
		$1.checksum2 = $1.checkval >>> 4; /*9427*/
		if ($1.validatecheck) { /*9434*/
			if (($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum1)) || ($get($1.barcode, $1.barlen + 1) != $get($1.barchars, $1.checksum2))) { /*9432*/
				$k[$j++] = "bwipp.plesseyBadCheckDigits"; /*9431*/
				$k[$j++] = "Incorrect Plessey check digits provided"; /*9431*/
				$0.raiseerror(); /*9431*/
			} /*9431*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*9433*/
		} /*9433*/
		$1.encs = $a(["14141414", "32141414", "14321414", "32321414", "14143214", "32143214", "14323214", "32323214", "14141432", "32141432", "14321432", "32321432", "14143232", "32143232", "14323232", "32323232", "32321432", "541412323", "323"]); /*9443*/
		var _1T = $1.unidirectional ? 27 : 33; /*9445*/
		$1.sbs = $s(($1.barlen * 8) + _1T); /*9445*/
		$1.txt = $a($1.barlen + 2); /*9446*/
		$puti($1.sbs, 0, $get($1.encs, 16)); /*9449*/
		for (var _1c = 0, _1b = $1.barlen - 1; _1c <= _1b; _1c += 1) { /*9456*/
			$1.i = _1c; /*9452*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*9453*/
			$puti($1.sbs, ($1.i * 8) + 8, $get($1.encs, $1.indx)); /*9454*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ($1.i * 20) + 20, $1.textyoffset, $1.textfont, $1.textsize])); /*9455*/
		} /*9455*/
		$puti($1.sbs, ($1.barlen * 8) + 8, $get($1.encs, $1.checksum1)); /*9459*/
		$puti($1.sbs, ($1.barlen * 8) + 16, $get($1.encs, $1.checksum2)); /*9460*/
		if ($1.includecheckintext) { /*9466*/
			$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum1, 1), ($1.barlen * 20) + 20, $1.textyoffset, $1.textfont, $1.textsize])); /*9462*/
			$put($1.txt, $1.barlen + 1, $a([$geti($1.barchars, $1.checksum2, 1), (($1.barlen + 1) * 20) + 20, $1.textyoffset, $1.textfont, $1.textsize])); /*9463*/
		} else { /*9466*/
			$put($1.txt, $1.barlen, $a([" ", ($1.barlen * 20) + 20, $1.textyoffset, $1.textfont, $1.textsize])); /*9465*/
			$put($1.txt, $1.barlen + 1, $a([" ", (($1.barlen + 1) * 20) + 20, $1.textyoffset, $1.textfont, $1.textsize])); /*9466*/
		} /*9466*/
		var _2k = $1.unidirectional ? 18 : 17; /*9470*/
		$puti($1.sbs, ($1.barlen * 8) + 24, $get($1.encs, _2k)); /*9470*/
		$k[$j++] = Infinity; /*9481*/
		$k[$j++] = "ren"; /*9476*/
		$k[$j++] = $0.renlinear; /*9476*/
		$k[$j++] = "sbs"; /*9476*/
		$k[$j++] = Infinity; /*9476*/
		var _2m = $1.sbs; /*9475*/
		for (var _2n = 0, _2o = _2m.length; _2n < _2o; _2n++) { /*9475*/
			$k[$j++] = $get(_2m, _2n) - 48; /*9475*/
		} /*9475*/
		var _2q = $a(); /*9476*/
		$k[$j++] = _2q; /*9477*/
		$k[$j++] = "bhs"; /*9477*/
		$k[$j++] = Infinity; /*9477*/
		for (var _2s = 0, _2t = ~~(($1.sbs.length + 1) / 2); _2s < _2t; _2s++) { /*9476*/
			$k[$j++] = $1.height; /*9476*/
		} /*9476*/
		var _2v = $a(); /*9477*/
		$k[$j++] = _2v; /*9478*/
		$k[$j++] = "bbs"; /*9478*/
		$k[$j++] = Infinity; /*9478*/
		for (var _2x = 0, _2y = ~~(($1.sbs.length + 1) / 2); _2x < _2y; _2x++) { /*9477*/
			$k[$j++] = 0; /*9477*/
		} /*9477*/
		var _2z = $a(); /*9478*/
		$k[$j++] = _2z; /*9480*/
		if ($1.includetext) { /*9480*/
			$k[$j++] = "txt"; /*9479*/
			$k[$j++] = $1.txt; /*9479*/
		} /*9479*/
		$k[$j++] = "opt"; /*9481*/
		$k[$j++] = $1.options; /*9481*/
		var _33 = $d(); /*9481*/
		$k[$j++] = _33; /*9484*/
		if (!$1.dontdraw) { /*9484*/
			$0.renlinear(); /*9484*/
		} /*9484*/
	};
	$0.telepen = function() {
		var $1 = {}; /*9511*/
		$1.options = $k[--$j]; /*9513*/
		$1.barcode = $k[--$j]; /*9514*/
		$1.numeric = false; /*9516*/
		$1.dontdraw = false; /*9517*/
		$1.includetext = false; /*9518*/
		$1.textfont = "Courier"; /*9519*/
		$1.textsize = 10; /*9520*/
		$1.textyoffset = -8.5; /*9521*/
		$1.height = 1; /*9522*/
		$1.parse = false; /*9523*/
		$forall($1.options, function() { /*9534*/
			var _3 = $k[--$j]; /*9534*/
			$1[$k[--$j]] = _3; /*9534*/
		}); /*9534*/
		$1.textfont = "" + $1.textfont; /*9536*/
		$1.textsize = +$1.textsize; /*9537*/
		$1.textyoffset = +$1.textyoffset; /*9538*/
		$1.height = +$1.height; /*9539*/
		$1.encs = $a(["31313131", "1131313111", "33313111", "1111313131", "3111313111", "11333131", "13133131", "111111313111", "31333111", "1131113131", "33113131", "1111333111", "3111113131", "1113133111", "1311133111", "111111113131", "3131113111", "11313331", "333331", "111131113111", "31113331", "1133113111", "1313113111", "1111113331", "31131331", "113111113111", "3311113111", "1111131331", "311111113111", "1113111331", "1311111331", "11111111113111", "31313311", "1131311131", "33311131", "1111313311", "3111311131", "11333311", "13133311", "111111311131", "31331131", "1131113311", "33113311", "1111331131", "3111113311", "1113131131", "1311131131", "111111113311", "3131111131", "1131131311", "33131311", "111131111131", "3111131311", "1133111131", "1313111131", "111111131311", "3113111311", "113111111131", "3311111131", "111113111311", "311111111131", "111311111311", "131111111311", "11111111111131", "3131311111", "11313133", "333133", "111131311111", "31113133", "1133311111", "1313311111", "1111113133", "313333", "113111311111", "3311311111", "11113333", "311111311111", "11131333", "13111333", "11111111311111", "31311133", "1131331111", "33331111", "1111311133", "3111331111", "11331133", "13131133", "111111331111", "3113131111", "1131111133", "33111133", "111113131111", "3111111133", "111311131111", "131111131111", "111111111133", "31311313", "113131111111", "3331111111", "1111311313", "311131111111", "11331313", "13131313", "11111131111111", "3133111111", "1131111313", "33111313", "111133111111", "3111111313", "111313111111", "131113111111", "111111111313", "313111111111", "1131131113", "33131113", "11113111111111", "3111131113", "113311111111", "131311111111", "111111131113", "3113111113", "11311111111111", "331111111111", "111113111113", "31111111111111", "111311111113", "131111111113", "1111111111111111"]); /*9596*/
		$1.barlen = $1.barcode.length; /*9598*/
		$1.sbs = $s(($1.barlen * 16) + 48); /*9599*/
		$1.txt = $a($1.barlen); /*9600*/
		$1.enc = $get($1.encs, 95); /*9603*/
		$puti($1.sbs, 0, $1.enc); /*9604*/
		$1.l = $1.enc.length; /*9605*/
		$1.checksum = 0; /*9607*/
		$1.i = 0; /*9608*/
		$1.j = 0; /*9608*/
		for (;;) { /*9640*/
			if ($1.i == $1.barlen) { /*9610*/
				break; /*9610*/
			} /*9610*/
			if ($1.numeric) { /*9633*/
				if ($get($1.barcode, $1.i) > 16) { /*9624*/
					$1.np = $geti($1.barcode, $1.i, 2); /*9613*/
					if ($eq($geti($1.np, 1, 1), "X")) { /*9617*/
						$1.indx = (~~$z($geti($1.np, 0, 1))) + 17; /*9615*/
					} else { /*9617*/
						$1.indx = (~~$z($1.np)) + 27; /*9617*/
					} /*9617*/
					$put($1.txt, $1.j, $a([$1.np, ($1.j * 16) + 16, $1.textyoffset, $1.textfont, $1.textsize])); /*9619*/
					$1.i = $1.i + 2; /*9620*/
				} else { /*9624*/
					$1.indx = $get($1.barcode, $1.i); /*9622*/
					$put($1.txt, $1.j, $a([" ", ($1.j * 16) + 16, $1.textyoffset, $1.textfont, $1.textsize])); /*9623*/
					$1.i = $1.i + 1; /*9624*/
				} /*9624*/
			} else { /*9633*/
				$1.indx = $get($1.barcode, $1.i); /*9627*/
				if (($1.indx >= 32) && ($1.indx <= 126)) { /*9631*/
					$put($1.txt, $1.j, $a([$geti($1.barcode, $1.i, 1), ($1.j * 16) + 16, $1.textyoffset, $1.textfont, $1.textsize])); /*9629*/
				} else { /*9631*/
					$put($1.txt, $1.j, $a([" ", ($1.j * 16) + 16, $1.textyoffset, $1.textfont, $1.textsize])); /*9631*/
				} /*9631*/
				$1.i = $1.i + 1; /*9633*/
			} /*9633*/
			$1.checksum = $1.checksum + $1.indx; /*9635*/
			$1.enc = $get($1.encs, $1.indx); /*9636*/
			$puti($1.sbs, $1.l, $1.enc); /*9637*/
			$1.l = $1.l + $1.enc.length; /*9638*/
			$1.j = $1.j + 1; /*9639*/
		} /*9639*/
		$1.checksum = (127 - ($1.checksum % 127)) % 127; /*9643*/
		$1.enc = $get($1.encs, $1.checksum); /*9644*/
		$puti($1.sbs, $1.l, $1.enc); /*9645*/
		$1.l = $1.l + $1.enc.length; /*9646*/
		$1.enc = $get($1.encs, 122); /*9649*/
		$puti($1.sbs, $1.l, $1.enc); /*9650*/
		$1.l = $1.l + $1.enc.length; /*9651*/
		$1.sbs = $geti($1.sbs, 0, $1.l); /*9654*/
		$1.txt = $geti($1.txt, 0, $1.j); /*9655*/
		$k[$j++] = Infinity; /*9666*/
		$k[$j++] = "ren"; /*9661*/
		$k[$j++] = $0.renlinear; /*9661*/
		$k[$j++] = "sbs"; /*9661*/
		$k[$j++] = Infinity; /*9661*/
		$forall($1.sbs, function() { /*9660*/
			var _1n = $k[--$j]; /*9660*/
			$k[$j++] = _1n - 48; /*9660*/
		}); /*9660*/
		var _1o = $a(); /*9661*/
		$k[$j++] = _1o; /*9662*/
		$k[$j++] = "bhs"; /*9662*/
		$k[$j++] = Infinity; /*9662*/
		for (var _1q = 0, _1r = ~~(($1.sbs.length + 1) / 2); _1q < _1r; _1q++) { /*9661*/
			$k[$j++] = $1.height; /*9661*/
		} /*9661*/
		var _1t = $a(); /*9662*/
		$k[$j++] = _1t; /*9663*/
		$k[$j++] = "bbs"; /*9663*/
		$k[$j++] = Infinity; /*9663*/
		for (var _1v = 0, _1w = ~~(($1.sbs.length + 1) / 2); _1v < _1w; _1v++) { /*9662*/
			$k[$j++] = 0; /*9662*/
		} /*9662*/
		var _1x = $a(); /*9663*/
		$k[$j++] = _1x; /*9665*/
		if ($1.includetext) { /*9665*/
			$k[$j++] = "txt"; /*9664*/
			$k[$j++] = $1.txt; /*9664*/
		} /*9664*/
		$k[$j++] = "opt"; /*9666*/
		$k[$j++] = $1.options; /*9666*/
		var _21 = $d(); /*9666*/
		$k[$j++] = _21; /*9669*/
		if (!$1.dontdraw) { /*9669*/
			$0.renlinear(); /*9669*/
		} /*9669*/
	};
	$0.telepennumeric = function() {
		var $1 = {}; /*9697*/
		$1.options = $k[--$j]; /*9699*/
		$1.barcode = $k[--$j]; /*9700*/
		$1.dontdraw = false; /*9702*/
		$1.includetext = false; /*9703*/
		$1.textfont = "Courier"; /*9704*/
		$1.textsize = 10; /*9705*/
		$1.textxoffset = 0; /*9706*/
		$1.textyoffset = -8.5; /*9707*/
		$1.height = 1; /*9708*/
		$forall($1.options, function() { /*9719*/
			var _3 = $k[--$j]; /*9719*/
			$1[$k[--$j]] = _3; /*9719*/
		}); /*9719*/
		$1.textfont = "" + $1.textfont; /*9721*/
		$1.textsize = +$1.textsize; /*9722*/
		$1.textxoffset = +$1.textxoffset; /*9723*/
		$1.textyoffset = +$1.textyoffset; /*9724*/
		$1.height = +$1.height; /*9725*/
		$1.options.dontdraw = true; /*9728*/
		$1.options.numeric = true; /*9729*/
		$k[$j++] = "args"; /*9731*/
		$k[$j++] = $1.barcode; /*9731*/
		$k[$j++] = $1.options; /*9731*/
		$0.telepen(); /*9731*/
		var _E = $k[--$j]; /*9731*/
		$1[$k[--$j]] = _E; /*9731*/
		$1.args.opt = $1.options; /*9733*/
		$k[$j++] = $1.args; /*9736*/
		if (!$1.dontdraw) { /*9736*/
			$0.renlinear(); /*9736*/
		} /*9736*/
	};
	$0.posicode = function() {
		var $1 = {}; /*9763*/
		$1.options = $k[--$j]; /*9765*/
		$1.barcode = $k[--$j]; /*9766*/
		$1.dontdraw = false; /*9768*/
		$1.includetext = false; /*9769*/
		$1.textfont = "Courier"; /*9770*/
		$1.textsize = 10; /*9771*/
		$1.textxoffset = 0; /*9772*/
		$1.textyoffset = -8.5; /*9773*/
		$1.height = 1; /*9774*/
		$1.encoding = "auto"; /*9775*/
		$1.version = "a"; /*9776*/
		$1.checkoffset = 0; /*9777*/
		$1.raw = false; /*9778*/
		$1.parse = false; /*9779*/
		$1.parsefnc = false; /*9780*/
		$forall($1.options, function() { /*9791*/
			var _3 = $k[--$j]; /*9791*/
			$1[$k[--$j]] = _3; /*9791*/
		}); /*9791*/
		$1.textfont = "" + $1.textfont; /*9793*/
		$1.textsize = +$1.textsize; /*9794*/
		$1.textxoffset = +$1.textxoffset; /*9795*/
		$1.textyoffset = +$1.textyoffset; /*9796*/
		$1.encoding = "" + $1.encoding; /*9797*/
		$1.version = "" + $1.version; /*9798*/
		$1.checkoffset = ~~$1.checkoffset; /*9799*/
		$1.height = +$1.height; /*9800*/
		$1.barlen = $1.barcode.length; /*9823*/
		$1.la0 = -1; /*9826*/
		$1.la1 = -2; /*9826*/
		$1.la2 = -3; /*9826*/
		$1.sf0 = -4; /*9827*/
		$1.sf1 = -5; /*9827*/
		$1.sf2 = -6; /*9827*/
		$1.fn1 = -7; /*9828*/
		$1.fn2 = -8; /*9828*/
		$1.fn3 = -9; /*9828*/
		$1.fn4 = -10; /*9828*/
		var _1m = {
			normal: $a([$a(["0", "^", "'"]), $a(["1", ";", 27]), $a(["2", "<", 28]), $a(["3", "=", 29]), $a(["4", ">", 30]), $a(["5", "?", 31]), $a(["6", "@", "!"]), $a(["7", "[", "\""]), $a(["8", 92, "#"]), $a(["9", "]", "&"]), $a(["A", "a", 1]), $a(["B", "b", 2]), $a(["C", "c", 3]), $a(["D", "d", 4]), $a(["E", "e", 5]), $a(["F", "f", 6]), $a(["G", "g", 7]), $a(["H", "h", 8]), $a(["I", "i", 9]), $a(["J", "j", 10]), $a(["K", "k", 11]), $a(["L", "l", 12]), $a(["M", "m", 13]), $a(["N", "n", 14]), $a(["O", "o", 15]), $a(["P", "p", 16]), $a(["Q", "q", 17]), $a(["R", "r", 18]), $a(["S", "s", 19]), $a(["T", "t", 20]), $a(["U", "u", 21]), $a(["V", "v", 22]), $a(["W", "w", 23]), $a(["X", "x", 24]), $a(["Y", "y", 25]), $a(["Z", "z", 26]), $a(["-", "_", 40]), $a([".", "`", 41]), $a([" ", 127, 0]), $a(["$", "{", "*"]), $a(["/", "|", ","]), $a(["+", "}", ":"]), $a(["%", "~", $1.fn1]), $a([$1.la1, $1.la0, $1.fn2]), $a([$1.sf1, $1.sf0, $1.fn3]), $a([$1.sf2, $1.sf2, $1.fn4])]),
			limited: $a([$a(["0", -98, -98]), $a(["1", -98, -98]), $a(["2", -98, -98]), $a(["3", -98, -98]), $a(["4", -98, -98]), $a(["5", -98, -98]), $a(["6", -98, -98]), $a(["7", -98, -98]), $a(["8", -98, -98]), $a(["9", -98, -98]), $a(["A", -98, -98]), $a(["B", -98, -98]), $a(["C", -98, -98]), $a(["D", -98, -98]), $a(["E", -98, -98]), $a(["F", -98, -98]), $a(["G", -98, -98]), $a(["H", -98, -98]), $a(["I", -98, -98]), $a(["J", -98, -98]), $a(["K", -98, -98]), $a(["L", -98, -98]), $a(["M", -98, -98]), $a(["N", -98, -98]), $a(["O", -98, -98]), $a(["P", -98, -98]), $a(["Q", -98, -98]), $a(["R", -98, -98]), $a(["S", -98, -98]), $a(["T", -98, -98]), $a(["U", -98, -98]), $a(["V", -98, -98]), $a(["W", -98, -98]), $a(["X", -98, -98]), $a(["Y", -98, -98]), $a(["Z", -98, -98]), $a(["-", -98, -98]), $a([".", -98, -98])])
		}; /*9866*/
		$k[$j++] = _1m; /*9869*/
		if ($eq($1.version, "a") || $eq($1.version, "b")) { /*9869*/
			$k[$j++] = "normal"; /*9869*/
		} else { /*9869*/
			$k[$j++] = "limited"; /*9869*/
		} /*9869*/
		var _1p = $k[--$j]; /*9869*/
		$1.charmaps = $get($k[--$j], _1p); /*9870*/
		var _1s = $1.charmaps; /*9874*/
		var _1t = $1.charmaps; /*9874*/
		var _1u = $1.charmaps; /*9874*/
		$1.charvals = $a([{}, {}, {}]); /*9875*/
		for (var _1y = 0, _1x = $1.charmaps.length - 1; _1y <= _1x; _1y += 1) { /*9884*/
			$1.i = _1y; /*9877*/
			$1.encs = $get($1.charmaps, $1.i); /*9878*/
			for (var _22 = 0; _22 <= 2; _22 += 1) { /*9883*/
				$1.j = _22; /*9880*/
				var _25 = $get($1.encs, $1.j); /*9881*/
				$k[$j++] = _25; /*9881*/
				if ($eq($type(_25), "stringtype")) { /*9881*/
					var _28 = $get($k[--$j], 0); /*9881*/
					$k[$j++] = _28; /*9881*/
				} /*9881*/
				$put($get($1.charvals, $1.j), $k[--$j], $1.i); /*9882*/
			} /*9882*/
		} /*9882*/
		$1.set0 = $get($1.charvals, 0); /*9885*/
		$1.set1 = $get($1.charvals, 1); /*9886*/
		$1.set2 = $get($1.charvals, 2); /*9887*/
		if ($1.raw) { /*9889*/
			$1.encoding = "raw"; /*9889*/
		} /*9889*/
		if ($eq($1.encoding, "raw")) { /*9903*/
			$1.cws = $a($1.barlen); /*9892*/
			$1.i = 0; /*9893*/
			$1.j = 0; /*9893*/
			for (;;) { /*9900*/
				if ($1.i == $1.barlen) { /*9895*/
					break; /*9895*/
				} /*9895*/
				$1.cw = ~~$z($geti($1.barcode, $1.i + 1, 3)); /*9896*/
				$put($1.cws, $1.j, $1.cw); /*9897*/
				$1.i = $1.i + 4; /*9898*/
				$1.j = $1.j + 1; /*9899*/
			} /*9899*/
			$1.cws = $geti($1.cws, 0, $1.j); /*9901*/
			$1.text = ""; /*9902*/
		} /*9902*/
		if ($eq($1.encoding, "auto")) { /*10031*/
			var _2f = {
				FNC1: $1.fn1,
				FNC2: $1.fn2,
				FNC3: $1.fn3
			}; /*9910*/
			$1.fncvals = _2f; /*9912*/
			$1.msg = $a($1.barlen); /*9915*/
			$1.text = $s($1.barlen); /*9916*/
			$1.i = 0; /*9917*/
			$1.j = 0; /*9917*/
			for (;;) { /*9933*/
				if ($1.i == $1.barlen) { /*9918*/
					break; /*9918*/
				} /*9918*/
				$1.char = $get($1.barcode, $1.i); /*9919*/
				$put($1.text, $1.j, $1.char); /*9920*/
				if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*9929*/
					if ($get($1.barcode, $1.i + 1) != 94) { /*9927*/
						$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*9923*/
						$puti($1.text, $1.j, " "); /*9924*/
						$1.i = $1.i + 4; /*9925*/
					} else { /*9927*/
						$1.i = $1.i + 1; /*9927*/
					} /*9927*/
				} /*9927*/
				$put($1.msg, $1.j, $1.char); /*9930*/
				$1.i = $1.i + 1; /*9931*/
				$1.j = $1.j + 1; /*9932*/
			} /*9932*/
			$1.msg = $geti($1.msg, 0, $1.j); /*9934*/
			$1.msglen = $1.msg.length; /*9935*/
			$1.text = $geti($1.text, 0, $1.j); /*9936*/
			$k[$j++] = Infinity; /*9939*/
			for (var _3L = 0, _3M = $1.msglen; _3L < _3M; _3L++) { /*9939*/
				$k[$j++] = 0; /*9939*/
			} /*9939*/
			$k[$j++] = 0; /*9939*/
			$1.numSA = $a(); /*9939*/
			$k[$j++] = Infinity; /*9940*/
			for (var _3P = 0, _3Q = $1.msglen; _3P < _3Q; _3P++) { /*9940*/
				$k[$j++] = 0; /*9940*/
			} /*9940*/
			$k[$j++] = 0; /*9940*/
			$1.numEA = $a(); /*9940*/
			for (var _3T = $1.msglen - 1; _3T >= 0; _3T -= 1) { /*9950*/
				$1.i = _3T; /*9942*/
				if ($get($1.msg, $1.i) >= 0) { /*9949*/
					if ($get($1.msg, $1.i) >= 128) { /*9947*/
						$put($1.numEA, $1.i, $get($1.numEA, $1.i + 1) + 1); /*9945*/
					} else { /*9947*/
						$put($1.numSA, $1.i, $get($1.numSA, $1.i + 1) + 1); /*9947*/
					} /*9947*/
				} /*9947*/
			} /*9947*/
			$1.ea = false; /*9953*/
			$1.msgtmp = $a([]); /*9953*/
			for (var _3n = 0, _3m = $1.msglen - 1; _3n <= _3m; _3n += 1) { /*9968*/
				$1.i = _3n; /*9955*/
				$1.c = $get($1.msg, $1.i); /*9956*/
				if ((!$xo($1.ea, $1.c < 128)) && ($1.c >= 0)) { /*9966*/
					if ($1.ea) { /*9958*/
						$k[$j++] = $1.numSA; /*9958*/
					} else { /*9958*/
						$k[$j++] = $1.numEA; /*9958*/
					} /*9958*/
					var _3z = $get($k[--$j], $1.i); /*9958*/
					var _42 = ((_3z + $1.i) == $1.msglen) ? 3 : 5; /*9959*/
					if (_3z < _42) { /*9964*/
						$k[$j++] = Infinity; /*9961*/
						$aload($1.msgtmp); /*9961*/
						$k[$j++] = $1.fn4; /*9961*/
						$1.msgtmp = $a(); /*9961*/
					} else { /*9964*/
						$k[$j++] = Infinity; /*9963*/
						$aload($1.msgtmp); /*9963*/
						$k[$j++] = $1.fn4; /*9963*/
						$k[$j++] = $1.fn4; /*9963*/
						$1.msgtmp = $a(); /*9963*/
						$1.ea = !$1.ea; /*9964*/
					} /*9964*/
				} /*9964*/
				$k[$j++] = Infinity; /*9967*/
				$aload($1.msgtmp); /*9967*/
				if ($1.c >= 0) { /*9967*/
					$k[$j++] = $1.c & 127; /*9967*/
				} else { /*9967*/
					$k[$j++] = $1.c; /*9967*/
				} /*9967*/
				$1.msgtmp = $a(); /*9967*/
			} /*9967*/
			$1.msg = $1.msgtmp; /*9969*/
			$1.msglen = $1.msg.length; /*9970*/
			$1.enc = function() {
				var _4I = $k[--$j]; /*9974*/
				$put($1.cws, $1.j, $get(_4I, $k[--$j])); /*9974*/
				$1.j = $1.j + 1; /*9975*/
			}; /*9976*/
			$1.cws = $a($1.msglen * 2); /*9978*/
			$1.i = 0; /*9979*/
			$1.j = 0; /*9979*/
			$1.cset = "set0"; /*9979*/
			for (;;) { /*10029*/
				if ($1.i == $1.msglen) { /*9981*/
					break; /*9981*/
				} /*9981*/
				for (;;) { /*10027*/
					$1.char1 = $get($1.msg, $1.i); /*9986*/
					$k[$j++] = "char2"; /*9987*/
					if (($1.i + 1) < $1.msglen) { /*9987*/
						$k[$j++] = $get($1.msg, $1.i + 1); /*9987*/
					} else { /*9987*/
						$k[$j++] = -99; /*9987*/
					} /*9987*/
					var _4a = $k[--$j]; /*9987*/
					$1[$k[--$j]] = _4a; /*9987*/
					var _4f = $get($1[$1.cset], $1.char1) !== undefined; /*9990*/
					if (_4f) { /*9994*/
						$k[$j++] = $1.char1; /*9991*/
						$k[$j++] = $1[$1.cset]; /*9991*/
						$1.enc(); /*9991*/
						$1.i = $1.i + 1; /*9992*/
						break; /*9993*/
					} /*9993*/
					var _4m = $get($1.set2, $1.char1) !== undefined; /*9997*/
					if (_4m) { /*10002*/
						$k[$j++] = $1.sf2; /*9998*/
						$k[$j++] = $1[$1.cset]; /*9998*/
						$1.enc(); /*9998*/
						$k[$j++] = $1.char1; /*9999*/
						$k[$j++] = $1.set2; /*9999*/
						$1.enc(); /*9999*/
						$1.i = $1.i + 1; /*10000*/
						break; /*10001*/
					} /*10001*/
					var _4w = $get($1[$1.cset], $1.char2) !== undefined; /*10005*/
					if (!_4w) { /*10023*/
						if ($eq($1.cset, "set0")) { /*10011*/
							$k[$j++] = $1.la1; /*10007*/
							$k[$j++] = $1[$1.cset]; /*10007*/
							$1.enc(); /*10007*/
							$1.cset = "set1"; /*10008*/
						} else { /*10011*/
							$k[$j++] = $1.la0; /*10010*/
							$k[$j++] = $1[$1.cset]; /*10010*/
							$1.enc(); /*10010*/
							$1.cset = "set0"; /*10011*/
						} /*10011*/
						break; /*10013*/
					} else { /*10023*/
						if ($eq($1.cset, "set0")) { /*10020*/
							$k[$j++] = $1.sf1; /*10016*/
							$k[$j++] = $1[$1.cset]; /*10016*/
							$1.enc(); /*10016*/
							$k[$j++] = $1.char1; /*10017*/
							$k[$j++] = $1.set1; /*10017*/
							$1.enc(); /*10017*/
						} else { /*10020*/
							$k[$j++] = $1.sf0; /*10019*/
							$k[$j++] = $1[$1.cset]; /*10019*/
							$1.enc(); /*10019*/
							$k[$j++] = $1.char1; /*10020*/
							$k[$j++] = $1.set0; /*10020*/
							$1.enc(); /*10020*/
						} /*10020*/
						$1.i = $1.i + 1; /*10022*/
						break; /*10023*/
					} /*10023*/
					break; /*10026*/
				} /*10026*/
			} /*10026*/
			$1.cws = $geti($1.cws, 0, $1.j); /*10030*/
		} /*10030*/
		var _5N = {
			a: $a(["141112", "131212", "121312", "111412", "131113", "121213", "111313", "121114", "111214", "111115", "181111", "171211", "161311", "151411", "141511", "131611", "121711", "111811", "171112", "161212", "151312", "141412", "131512", "121612", "111712", "161113", "151213", "141313", "131413", "121513", "111613", "151114", "141214", "131314", "121414", "111514", "141115", "131215", "121315", "111415", "131116", "121216", "111316", "121117", "111217", "111118", "1<111112", "111111111;1"]),
			b: $a(["151213", "141313", "131413", "121513", "141214", "131314", "121414", "131215", "121315", "121216", "191212", "181312", "171412", "161512", "151612", "141712", "131812", "121912", "181213", "171313", "161413", "151513", "141613", "131713", "121813", "171214", "161314", "151414", "141514", "131614", "121714", "161215", "151315", "141415", "131515", "121615", "151216", "141316", "131416", "121516", "141217", "131317", "121417", "131218", "121318", "121219", "1<121312", "121212121<1"]),
			limiteda: $a(["111411", "111312", "111213", "111114", "121311", "121212", "121113", "141111", "131211", "131112", "171111", "161211", "151311", "141411", "131511", "121611", "111711", "161112", "151212", "141312", "131412", "121512", "111612", "151113", "141213", "131313", "121413", "111513", "141114", "131214", "121314", "111414", "131115", "121215", "111315", "121116", "111216", "111117", "151111", "1"]),
			limitedb: $a(["121512", "121413", "121314", "121215", "131412", "131313", "131214", "151212", "141312", "141213", "181212", "171312", "161412", "151512", "141612", "131712", "121812", "171213", "161313", "151413", "141513", "131613", "121713", "161214", "151314", "141414", "131514", "121614", "151215", "141315", "131415", "121515", "141216", "131316", "121416", "131217", "121317", "121218", "141212", "1"])
		}; /*10077*/
		$1.encs = $get(_5N, $1.version); /*10080*/
		$1.c2w = $a([$a([495, 330, 210, 126, 70, 35, 15, 5]), $a([165, 120, 84, 56, 35, 20, 10, 4]), $a([45, 36, 28, 21, 15, 10, 6, 3]), $a([9, 8, 7, 6, 5, 4, 3, 2]), $a([1, 1, 1, 1, 1, 1, 1, 1])]); /*10088*/
		$1.v = 0; /*10089*/
		$forall($1.cws, function() { /*10099*/
			$1.cw = $k[--$j]; /*10091*/
			for (var _5Y = 0, _5Z = 6; _5Y < _5Z; _5Y++) { /*10098*/
				if ((($1.cw ^ $1.v) & 1) != 0) { /*10095*/
					$1.v = $1.v ^ 7682; /*10094*/
				} /*10094*/
				$1.v = $1.v >>> 1; /*10096*/
				$1.cw = $1.cw >>> 1; /*10097*/
			} /*10097*/
		}); /*10097*/
		$1.v = $1.v + $1.checkoffset; /*10100*/
		if ($eq($1.version, "limiteda") || $eq($1.version, "limitedb")) { /*10108*/
			$1.v = $1.v & 1023; /*10103*/
			if (($1.v > 824) && ($1.v < 853)) { /*10106*/
				$1.v = $1.v + 292; /*10105*/
			} /*10105*/
		} else { /*10108*/
			$1.v = ($1.v & 1023) + 45; /*10108*/
		} /*10108*/
		$1.d = $a([2, 2, 2, 2, 2, 2]); /*10111*/
		$1.r = 0; /*10112*/
		$1.c = 0; /*10112*/
		$1.w = 0; /*10112*/
		$1.sum = 0; /*10112*/
		for (;;) { /*10131*/
			if ($1.sum == $1.v) { /*10114*/
				break; /*10114*/
			} /*10114*/
			$1.t = $1.sum + $get($get($1.c2w, $1.r), $1.c); /*10115*/
			if ($1.t == $1.v) { /*10120*/
				$1.w = $1.w + 1; /*10117*/
				$put($1.d, $1.r, $1.w + 2); /*10118*/
				$1.sum = $1.t; /*10119*/
			} /*10119*/
			if ($1.t > $1.v) { /*10125*/
				$put($1.d, $1.r, $1.w + 2); /*10122*/
				$1.r = $1.r + 1; /*10123*/
				$1.w = 0; /*10124*/
			} /*10124*/
			if ($1.t < $1.v) { /*10130*/
				$1.c = $1.c + 1; /*10127*/
				$1.w = $1.w + 1; /*10128*/
				$1.sum = $1.t; /*10129*/
			} /*10129*/
		} /*10129*/
		$k[$j++] = 20; /*10132*/
		for (var _6F = 0; _6F <= 4; _6F += 1) { /*10132*/
			var _6I = $k[--$j]; /*10132*/
			$k[$j++] = _6I - $get($1.d, _6F); /*10132*/
		} /*10132*/
		$put($1.d, 5, $k[--$j]); /*10133*/
		if ($eq($1.version, "b") || $eq($1.version, "limitedb")) { /*10136*/
			$k[$j++] = Infinity; /*10135*/
			var _6N = $1.d; /*10135*/
			for (var _6O = 0, _6P = _6N.length; _6O < _6P; _6O++) { /*10135*/
				$k[$j++] = $get(_6N, _6O) + 1; /*10135*/
			} /*10135*/
			$1.d = $a(); /*10135*/
		} /*10135*/
		$1.cbs = $strcpy($s(12), "111111111111"); /*10137*/
		for (var _6U = 5; _6U >= 0; _6U -= 1) { /*10141*/
			$1.i = _6U; /*10139*/
			$put($1.cbs, ((5 - $1.i) * 2) + 1, $get($1.d, $1.i) + 47); /*10140*/
		} /*10140*/
		$1.sbs = $s(($1.cws.length * 6) + 31); /*10144*/
		var _6e = $get($1.encs, $1.encs.length - 2); /*10145*/
		$puti($1.sbs, 0, _6e); /*10146*/
		$1.j = _6e.length; /*10147*/
		for (var _6i = 0, _6h = $1.cws.length - 1; _6i <= _6h; _6i += 1) { /*10152*/
			$1.i = _6i; /*10149*/
			$puti($1.sbs, $1.j, $get($1.encs, $get($1.cws, $1.i))); /*10150*/
			$1.j = $1.j + 6; /*10151*/
		} /*10151*/
		$puti($1.sbs, $1.j, $1.cbs); /*10153*/
		$1.j = $1.j + 12; /*10154*/
		var _6x = $get($1.encs, $1.encs.length - 1); /*10155*/
		$puti($1.sbs, $1.j, _6x); /*10156*/
		$1.j = _6x.length + $1.j; /*10157*/
		$1.sbs = $geti($1.sbs, 0, $1.j); /*10158*/
		$k[$j++] = Infinity; /*10168*/
		$k[$j++] = "ren"; /*10164*/
		$k[$j++] = $0.renlinear; /*10164*/
		$k[$j++] = "sbs"; /*10164*/
		$k[$j++] = Infinity; /*10164*/
		$forall($1.sbs, function() { /*10163*/
			var _75 = $k[--$j]; /*10163*/
			$k[$j++] = _75 - 48; /*10163*/
		}); /*10163*/
		var _76 = $a(); /*10164*/
		$k[$j++] = _76; /*10165*/
		$k[$j++] = "bhs"; /*10165*/
		$k[$j++] = Infinity; /*10165*/
		for (var _78 = 0, _79 = ~~(($1.sbs.length + 1) / 2); _78 < _79; _78++) { /*10164*/
			$k[$j++] = $1.height; /*10164*/
		} /*10164*/
		var _7B = $a(); /*10165*/
		$k[$j++] = _7B; /*10166*/
		$k[$j++] = "bbs"; /*10166*/
		$k[$j++] = Infinity; /*10166*/
		for (var _7D = 0, _7E = ~~(($1.sbs.length + 1) / 2); _7D < _7E; _7D++) { /*10165*/
			$k[$j++] = 0; /*10165*/
		} /*10165*/
		var _7F = $a(); /*10166*/
		$k[$j++] = _7F; /*10168*/
		$k[$j++] = "txt"; /*10168*/
		$k[$j++] = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*10168*/
		$k[$j++] = "textxalign"; /*10168*/
		$k[$j++] = "center"; /*10168*/
		$k[$j++] = "opt"; /*10168*/
		$k[$j++] = $1.options; /*10168*/
		var _7O = $d(); /*10168*/
		$k[$j++] = _7O; /*10171*/
		if (!$1.dontdraw) { /*10171*/
			$0.renlinear(); /*10171*/
		} /*10171*/
	};
	$0.codablockf = function() {
		var $1 = {}; /*10198*/
		$1.options = $k[--$j]; /*10200*/
		$1.barcode = $k[--$j]; /*10201*/
		$1.dontdraw = false; /*10203*/
		$1.rows = -1; /*10204*/
		$1.columns = 8; /*10205*/
		$1.rowheight = 10; /*10206*/
		$1.sepheight = 1; /*10207*/
		$1.encoding = "auto"; /*10208*/
		$1.parse = false; /*10209*/
		$1.parsefnc = false; /*10210*/
		$forall($1.options, function() { /*10221*/
			var _3 = $k[--$j]; /*10221*/
			$1[$k[--$j]] = _3; /*10221*/
		}); /*10221*/
		$1.rows = ~~$1.rows; /*10223*/
		$1.columns = ~~$1.columns; /*10224*/
		$1.rowheight = ~~$1.rowheight; /*10225*/
		$1.sepheight = ~~$1.sepheight; /*10226*/
		if ((($1.columns >= 4) && ($1.columns <= 62)) && ((($1.rows >= 2) && ($1.rows <= 44)) || ($1.rows == -1))) { /*10229*/
			$1.c = $1.columns; /*10229*/
		} /*10229*/
		$1.barlen = $1.barcode.length; /*10252*/
		$1.swa = -1; /*10255*/
		$1.swb = -2; /*10255*/
		$1.swc = -3; /*10255*/
		$1.sft = -4; /*10255*/
		$1.fn1 = -5; /*10256*/
		$1.fn2 = -6; /*10256*/
		$1.fn3 = -7; /*10256*/
		$1.fn4 = -8; /*10256*/
		$1.sta = -9; /*10257*/
		$1.stp = -10; /*10257*/
		$1.charmaps = $a([$a([32, 32, "00"]), $a(["!", "!", "01"]), $a(["\"", "\"", "02"]), $a(["#", "#", "03"]), $a(["$", "$", "04"]), $a(["%", "%", "05"]), $a(["&", "&", "06"]), $a(["'", "'", "07"]), $a([40, 40, "08"]), $a([41, 41, "09"]), $a(["*", "*", "10"]), $a(["+", "+", "11"]), $a([",", ",", "12"]), $a(["-", "-", "13"]), $a([".", ".", "14"]), $a(["/", "/", "15"]), $a(["0", "0", "16"]), $a(["1", "1", "17"]), $a(["2", "2", "18"]), $a(["3", "3", "19"]), $a(["4", "4", "20"]), $a(["5", "5", "21"]), $a(["6", "6", "22"]), $a(["7", "7", "23"]), $a(["8", "8", "24"]), $a(["9", "9", "25"]), $a([":", ":", "26"]), $a([";", ";", "27"]), $a(["<", "<", "28"]), $a(["=", "=", "29"]), $a([">", ">", "30"]), $a(["?", "?", "31"]), $a(["@", "@", "32"]), $a(["A", "A", "33"]), $a(["B", "B", "34"]), $a(["C", "C", "35"]), $a(["D", "D", "36"]), $a(["E", "E", "37"]), $a(["F", "F", "38"]), $a(["G", "G", "39"]), $a(["H", "H", "40"]), $a(["I", "I", "41"]), $a(["J", "J", "42"]), $a(["K", "K", "43"]), $a(["L", "L", "44"]), $a(["M", "M", "45"]), $a(["N", "N", "46"]), $a(["O", "O", "47"]), $a(["P", "P", "48"]), $a(["Q", "Q", "49"]), $a(["R", "R", "50"]), $a(["S", "S", "51"]), $a(["T", "T", "52"]), $a(["U", "U", "53"]), $a(["V", "V", "54"]), $a(["W", "W", "55"]), $a(["X", "X", "56"]), $a(["Y", "Y", "57"]), $a(["Z", "Z", "58"]), $a(["[", "[", "59"]), $a([92, 92, "60"]), $a(["]", "]", "61"]), $a(["^", "^", "62"]), $a(["_", "_", "63"]), $a([0, "`", "64"]), $a([1, "a", "65"]), $a([2, "b", "66"]), $a([3, "c", "67"]), $a([4, "d", "68"]), $a([5, "e", "69"]), $a([6, "f", "70"]), $a([7, "g", "71"]), $a([8, "h", "72"]), $a([9, "i", "73"]), $a([10, "j", "74"]), $a([11, "k", "75"]), $a([12, "l", "76"]), $a([13, "m", "77"]), $a([14, "n", "78"]), $a([15, "o", "79"]), $a([16, "p", "80"]), $a([17, "q", "81"]), $a([18, "r", "82"]), $a([19, "s", "83"]), $a([20, "t", "84"]), $a([21, "u", "85"]), $a([22, "v", "86"]), $a([23, "w", "87"]), $a([24, "x", "88"]), $a([25, "y", "89"]), $a([26, "z", "90"]), $a([27, "{", "91"]), $a([28, "|", "92"]), $a([29, "}", "93"]), $a([30, "~", "94"]), $a([31, 127, "95"]), $a([$1.fn3, $1.fn3, "96"]), $a([$1.fn2, $1.fn2, "97"]), $a([$1.sft, $1.sft, "98"]), $a([$1.swc, $1.swc, "99"]), $a([$1.swb, $1.fn4, $1.swb]), $a([$1.fn4, $1.swa, $1.swa]), $a([$1.fn1, $1.fn1, $1.fn1]), $a([$1.sta, $1.sta, $1.sta]), $a([$1.stp, $1.stp, $1.stp])]); /*10297*/
		$1.charvals = $a([{}, {}, {}]); /*10300*/
		for (var _2O = 0, _2N = $1.charmaps.length - 1; _2O <= _2N; _2O += 1) { /*10309*/
			$1.i = _2O; /*10302*/
			$1.encs = $get($1.charmaps, $1.i); /*10303*/
			for (var _2S = 0; _2S <= 2; _2S += 1) { /*10308*/
				$1.j = _2S; /*10305*/
				var _2V = $get($1.encs, $1.j); /*10306*/
				$k[$j++] = _2V; /*10306*/
				if ($eq($type(_2V), "stringtype")) { /*10306*/
					var _2Y = $get($k[--$j], 0); /*10306*/
					$k[$j++] = _2Y; /*10306*/
				} /*10306*/
				$put($get($1.charvals, $1.j), $k[--$j], $1.i); /*10307*/
			} /*10307*/
		} /*10307*/
		$1.seta = $get($1.charvals, 0); /*10310*/
		$1.setb = $get($1.charvals, 1); /*10311*/
		$1.setc = $get($1.charvals, 2); /*10312*/
		var _2m = {
			FNC1: $1.fn1,
			FNC3: $1.fn3
		}; /*10317*/
		$1.fncvals = _2m; /*10319*/
		$1.msg = $a($1.barlen); /*10320*/
		$1.i = 0; /*10321*/
		$1.j = 0; /*10321*/
		for (;;) { /*10335*/
			if ($1.i == $1.barlen) { /*10322*/
				break; /*10322*/
			} /*10322*/
			$1.char = $get($1.barcode, $1.i); /*10323*/
			if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*10331*/
				if ($get($1.barcode, $1.i + 1) != 94) { /*10329*/
					$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*10326*/
					$1.i = $1.i + 4; /*10327*/
				} else { /*10329*/
					$1.i = $1.i + 1; /*10329*/
				} /*10329*/
			} /*10329*/
			$put($1.msg, $1.j, $1.char); /*10332*/
			$1.i = $1.i + 1; /*10333*/
			$1.j = $1.j + 1; /*10334*/
		} /*10334*/
		$1.msg = $geti($1.msg, 0, $1.j); /*10336*/
		$1.msglen = $1.msg.length; /*10337*/
		$1.msgtmp = $a([]); /*10340*/
		$forall($1.msg, function() { /*10344*/
			$1.char = $k[--$j]; /*10342*/
			$k[$j++] = Infinity; /*10343*/
			$aload($1.msgtmp); /*10343*/
			if ($1.char < 128) { /*10343*/
				$k[$j++] = $1.char; /*10343*/
			} else { /*10343*/
				$k[$j++] = $1.fn4; /*10343*/
				$k[$j++] = $1.char & 127; /*10343*/
			} /*10343*/
			$1.msgtmp = $a(); /*10343*/
		}); /*10343*/
		$1.msg = $1.msgtmp; /*10345*/
		$1.msglen = $1.msg.length; /*10346*/
		$1.numsscr = function() {
			$1.n = 0; /*10350*/
			$1.s = 0; /*10350*/
			$1.p = $k[--$j]; /*10351*/
			for (;;) { /*10362*/
				if ($1.p >= $1.msglen) { /*10352*/
					break; /*10352*/
				} /*10352*/
				var _3X = $get($1.msg, $1.p); /*10353*/
				var _3Z = $get($1.setc, _3X) !== undefined; /*10354*/
				$k[$j++] = _3X; /*10354*/
				if (!_3Z) { /*10354*/
					$j--; /*10354*/
					break; /*10354*/
				} /*10354*/
				if ($k[--$j] == $1.fn1) { /*10358*/
					if (($1.s % 2) == 0) { /*10357*/
						$1.s = $1.s + 1; /*10357*/
					} else { /*10357*/
						break; /*10357*/
					} /*10357*/
				} /*10357*/
				$1.n = $1.n + 1; /*10359*/
				$1.s = $1.s + 1; /*10360*/
				$1.p = $1.p + 1; /*10361*/
			} /*10361*/
			$k[$j++] = $1.n; /*10363*/
			$k[$j++] = $1.s; /*10363*/
		}; /*10364*/
		$1.enca = function() {
			$put($1.cws, $1.j, $get($1.seta, $k[--$j])); /*10368*/
			$1.j = $1.j + 1; /*10369*/
		}; /*10370*/
		$1.encb = function() {
			$put($1.cws, $1.j, $get($1.setb, $k[--$j])); /*10372*/
			$1.j = $1.j + 1; /*10373*/
		}; /*10374*/
		$1.encc = function() {
			var _3v = $k[--$j]; /*10376*/
			$k[$j++] = _3v; /*10380*/
			if ($ne($type(_3v), "arraytype")) { /*10379*/
				var _3z = $get($1.setc, $k[--$j]); /*10377*/
				$k[$j++] = _3z; /*10377*/
			} else { /*10379*/
				$aload($k[--$j]); /*10379*/
				var _41 = $k[--$j]; /*10379*/
				var _42 = $k[--$j]; /*10379*/
				$k[$j++] = (_41 - 48) + ((_42 - 48) * 10); /*10379*/
			} /*10379*/
			$put($1.cws, $1.j, $k[--$j]); /*10381*/
			$1.j = $1.j + 1; /*10382*/
		}; /*10383*/
		$1.anotb = function() {
			var _47 = $k[--$j]; /*10386*/
			var _49 = $get($1.seta, _47) !== undefined; /*10386*/
			var _4B = $get($1.setb, _47) !== undefined; /*10386*/
			$k[$j++] = _49 && (!_4B); /*10386*/
		}; /*10386*/
		$1.bnota = function() {
			var _4C = $k[--$j]; /*10387*/
			var _4E = $get($1.setb, _4C) !== undefined; /*10387*/
			var _4G = $get($1.seta, _4C) !== undefined; /*10387*/
			$k[$j++] = _4E && (!_4G); /*10387*/
		}; /*10387*/
		$k[$j++] = Infinity; /*10390*/
		for (var _4I = 0, _4J = $1.msg.length; _4I < _4J; _4I++) { /*10390*/
			$k[$j++] = 0; /*10390*/
		} /*10390*/
		$k[$j++] = 9999; /*10390*/
		$1.nextanotb = $a(); /*10390*/
		$k[$j++] = Infinity; /*10391*/
		for (var _4M = 0, _4N = $1.msg.length; _4M < _4N; _4M++) { /*10391*/
			$k[$j++] = 0; /*10391*/
		} /*10391*/
		$k[$j++] = 9999; /*10391*/
		$1.nextbnota = $a(); /*10391*/
		for (var _4Q = $1.msg.length - 1; _4Q >= 0; _4Q -= 1) { /*10404*/
			$1.i = _4Q; /*10393*/
			$k[$j++] = $get($1.msg, $1.i); /*10394*/
			$1.anotb(); /*10394*/
			if ($k[--$j]) { /*10397*/
				$put($1.nextanotb, $1.i, 0); /*10395*/
			} else { /*10397*/
				$put($1.nextanotb, $1.i, $get($1.nextanotb, $1.i + 1) + 1); /*10397*/
			} /*10397*/
			$k[$j++] = $get($1.msg, $1.i); /*10399*/
			$1.bnota(); /*10399*/
			if ($k[--$j]) { /*10402*/
				$put($1.nextbnota, $1.i, 0); /*10400*/
			} else { /*10402*/
				$put($1.nextbnota, $1.i, $get($1.nextbnota, $1.i + 1) + 1); /*10402*/
			} /*10402*/
		} /*10402*/
		$1.abeforeb = function() {
			var _4n = $k[--$j]; /*10407*/
			$k[$j++] = $lt($get($1.nextanotb, _4n), $get($1.nextbnota, _4n)); /*10407*/
		}; /*10407*/
		$1.bbeforea = function() {
			var _4s = $k[--$j]; /*10408*/
			$k[$j++] = $lt($get($1.nextbnota, _4s), $get($1.nextanotb, _4s)); /*10408*/
		}; /*10408*/
		$1.padrow = function() {
			for (var _4y = 0, _4z = $k[--$j]; _4y < _4z; _4y++) { /*10418*/
				for (;;) { /*10417*/
					if ($eq($1.cset, "seta")) { /*10414*/
						$k[$j++] = $1.swc; /*10414*/
						$1.enca(); /*10414*/
						$1.cset = "setc"; /*10414*/
						break; /*10414*/
					} /*10414*/
					if ($eq($1.cset, "setb")) { /*10415*/
						$k[$j++] = $1.swc; /*10415*/
						$1.encb(); /*10415*/
						$1.cset = "setc"; /*10415*/
						break; /*10415*/
					} /*10415*/
					if ($eq($1.cset, "setc")) { /*10416*/
						$k[$j++] = $1.swb; /*10416*/
						$1.encc(); /*10416*/
						$1.cset = "setb"; /*10416*/
						break; /*10416*/
					} /*10416*/
				} /*10416*/
			} /*10416*/
		}; /*10419*/
		$k[$j++] = "cws"; /*10422*/
		$k[$j++] = $1.c + 5; /*10422*/
		if ($1.rows != -1) { /*10422*/
			$k[$j++] = $1.rows; /*10422*/
		} else { /*10422*/
			$k[$j++] = 44; /*10422*/
		} /*10422*/
		var _59 = $k[--$j]; /*10422*/
		var _5B = $a($k[--$j] * _59); /*10422*/
		$1[$k[--$j]] = _5B; /*10422*/
		$1.i = 0; /*10424*/
		$1.j = 0; /*10424*/
		$1.r = 1; /*10424*/
		$1.lastrow = false; /*10425*/
		for (;;) { /*10593*/
			if ($1.lastrow) { /*10427*/
				break; /*10427*/
			} /*10427*/
			$k[$j++] = $1.sta; /*10430*/
			$1.enca(); /*10430*/
			if ($1.i < $1.msglen) { /*10431*/
				$k[$j++] = $1.i; /*10431*/
				$1.numsscr(); /*10431*/
			} else { /*10431*/
				$k[$j++] = -1; /*10431*/
				$k[$j++] = -1; /*10431*/
			} /*10431*/
			$1.nums = $k[--$j]; /*10431*/
			$1.nchars = $k[--$j]; /*10431*/
			for (;;) { /*10451*/
				if ($1.msglen == 0) { /*10437*/
					$k[$j++] = $1.swb; /*10434*/
					$1.enca(); /*10434*/
					$1.cset = "setb"; /*10435*/
					break; /*10436*/
				} /*10436*/
				if ($1.nums >= 2) { /*10442*/
					$k[$j++] = $1.swc; /*10439*/
					$1.enca(); /*10439*/
					$1.cset = "setc"; /*10440*/
					break; /*10441*/
				} /*10441*/
				$k[$j++] = $1.i; /*10443*/
				$1.abeforeb(); /*10443*/
				if ($k[--$j]) { /*10447*/
					$k[$j++] = $1.sft; /*10444*/
					$1.enca(); /*10444*/
					$1.cset = "seta"; /*10445*/
					break; /*10446*/
				} /*10446*/
				$k[$j++] = $1.swb; /*10448*/
				$1.enca(); /*10448*/
				$1.cset = "setb"; /*10449*/
				break; /*10450*/
			} /*10450*/
			$1.j = $1.j + 1; /*10452*/
			$1.endofrow = false; /*10455*/
			for (;;) { /*10578*/
				$1.rem = ($1.c + 3) - ($1.j % ($1.c + 5)); /*10456*/
				if (($1.i == $1.msglen) || $1.endofrow) { /*10458*/
					break; /*10458*/
				} /*10458*/
				$k[$j++] = $1.i; /*10460*/
				$1.numsscr(); /*10460*/
				$1.nums = $k[--$j]; /*10460*/
				$1.nchars = $k[--$j]; /*10460*/
				for (;;) { /*10576*/
					if ((($eq($1.cset, "seta") || $eq($1.cset, "setb")) && ($1.nums >= 4)) && ($get($1.msg, $1.i) != $1.fn1)) { /*10498*/
						if ((($1.nums % 2) == 0) && ($1.rem >= 3)) { /*10480*/
							$k[$j++] = $1.swc; /*10468*/
							if ($eq($1.cset, "seta")) { /*10468*/
								$1.enca(); /*10468*/
							} else { /*10468*/
								$1.encb(); /*10468*/
							} /*10468*/
							$1.cset = "setc"; /*10469*/
							for (var _5n = 0, _5o = 2; _5n < _5o; _5n++) { /*10478*/
								if ($get($1.msg, $1.i) == $1.fn1) { /*10476*/
									$k[$j++] = $1.fn1; /*10472*/
									$1.encc(); /*10472*/
									$1.i = $1.i + 1; /*10473*/
								} else { /*10476*/
									$k[$j++] = $geti($1.msg, $1.i, 2); /*10475*/
									$1.encc(); /*10475*/
									$1.i = $1.i + 2; /*10476*/
								} /*10476*/
							} /*10476*/
							break; /*10479*/
						} /*10479*/
						if ((($1.nums % 2) != 0) && ($1.rem >= 4)) { /*10497*/
							$k[$j++] = $get($1.msg, $1.i); /*10483*/
							if ($eq($1.cset, "seta")) { /*10483*/
								$1.enca(); /*10483*/
							} else { /*10483*/
								$1.encb(); /*10483*/
							} /*10483*/
							$1.i = $1.i + 1; /*10484*/
							$k[$j++] = $1.swc; /*10485*/
							if ($eq($1.cset, "seta")) { /*10485*/
								$1.enca(); /*10485*/
							} else { /*10485*/
								$1.encb(); /*10485*/
							} /*10485*/
							$1.cset = "setc"; /*10486*/
							for (var _68 = 0, _69 = 2; _68 < _69; _68++) { /*10495*/
								if ($get($1.msg, $1.i) == $1.fn1) { /*10493*/
									$k[$j++] = $1.fn1; /*10489*/
									$1.encc(); /*10489*/
									$1.i = $1.i + 1; /*10490*/
								} else { /*10493*/
									$k[$j++] = $geti($1.msg, $1.i, 2); /*10492*/
									$1.encc(); /*10492*/
									$1.i = $1.i + 2; /*10493*/
								} /*10493*/
							} /*10493*/
							break; /*10496*/
						} /*10496*/
					} /*10496*/
					$k[$j++] = $eq($1.cset, "setb"); /*10499*/
					$k[$j++] = $get($1.msg, $1.i); /*10499*/
					$1.anotb(); /*10499*/
					var _6O = $k[--$j]; /*10499*/
					if (($k[--$j] && _6O) && ($1.rem >= 2)) { /*10514*/
						if ($1.i < ($1.msglen - 1)) { /*10508*/
							$k[$j++] = $1.i + 1; /*10502*/
							$1.bbeforea(); /*10502*/
							if ($k[--$j]) { /*10507*/
								$k[$j++] = $1.sft; /*10503*/
								$1.encb(); /*10503*/
								$k[$j++] = $get($1.msg, $1.i); /*10504*/
								$1.enca(); /*10504*/
								$1.i = $1.i + 1; /*10505*/
								break; /*10506*/
							} /*10506*/
						} /*10506*/
						$k[$j++] = $1.swa; /*10509*/
						$1.encb(); /*10509*/
						$1.cset = "seta"; /*10510*/
						$k[$j++] = $get($1.msg, $1.i); /*10511*/
						$1.enca(); /*10511*/
						$1.i = $1.i + 1; /*10512*/
						break; /*10513*/
					} /*10513*/
					$k[$j++] = $eq($1.cset, "seta"); /*10515*/
					$k[$j++] = $get($1.msg, $1.i); /*10515*/
					$1.bnota(); /*10515*/
					var _6j = $k[--$j]; /*10515*/
					if (($k[--$j] && _6j) && ($1.rem >= 2)) { /*10530*/
						if ($1.i < ($1.msglen - 1)) { /*10524*/
							$k[$j++] = $1.i + 1; /*10518*/
							$1.abeforeb(); /*10518*/
							if ($k[--$j]) { /*10523*/
								$k[$j++] = $1.sft; /*10519*/
								$1.enca(); /*10519*/
								$k[$j++] = $get($1.msg, $1.i); /*10520*/
								$1.encb(); /*10520*/
								$1.i = $1.i + 1; /*10521*/
								break; /*10522*/
							} /*10522*/
						} /*10522*/
						$k[$j++] = $1.swb; /*10525*/
						$1.enca(); /*10525*/
						$1.cset = "setb"; /*10526*/
						$k[$j++] = $get($1.msg, $1.i); /*10527*/
						$1.encb(); /*10527*/
						$1.i = $1.i + 1; /*10528*/
						break; /*10529*/
					} /*10529*/
					if (($eq($1.cset, "setc") && ($1.nums < 2)) && ($1.rem >= 2)) { /*10545*/
						$k[$j++] = $1.i; /*10533*/
						$1.abeforeb(); /*10533*/
						if ($k[--$j]) { /*10539*/
							$k[$j++] = $1.swa; /*10534*/
							$1.encc(); /*10534*/
							$1.cset = "seta"; /*10535*/
							$k[$j++] = $get($1.msg, $1.i); /*10536*/
							$1.enca(); /*10536*/
							$1.i = $1.i + 1; /*10537*/
							break; /*10538*/
						} /*10538*/
						$k[$j++] = $1.swb; /*10540*/
						$1.encc(); /*10540*/
						$1.cset = "setb"; /*10541*/
						$k[$j++] = $get($1.msg, $1.i); /*10542*/
						$1.encb(); /*10542*/
						$1.i = $1.i + 1; /*10543*/
						break; /*10544*/
					} /*10544*/
					var _7K = $get($1.seta, $get($1.msg, $1.i)) !== undefined; /*10548*/
					if (($eq($1.cset, "seta") && _7K) && ($1.rem >= 1)) { /*10553*/
						$k[$j++] = $get($1.msg, $1.i); /*10550*/
						$1.enca(); /*10550*/
						$1.i = $1.i + 1; /*10551*/
						break; /*10552*/
					} /*10552*/
					var _7V = $get($1.setb, $get($1.msg, $1.i)) !== undefined; /*10554*/
					if (($eq($1.cset, "setb") && _7V) && ($1.rem >= 1)) { /*10559*/
						$k[$j++] = $get($1.msg, $1.i); /*10556*/
						$1.encb(); /*10556*/
						$1.i = $1.i + 1; /*10557*/
						break; /*10558*/
					} /*10558*/
					if (($eq($1.cset, "setc") && ($1.nums >= 2)) && ($1.rem >= 1)) { /*10570*/
						if ($get($1.msg, $1.i) == $1.fn1) { /*10567*/
							$k[$j++] = $1.fn1; /*10563*/
							$1.encc(); /*10563*/
							$1.i = $1.i + 1; /*10564*/
						} else { /*10567*/
							$k[$j++] = $geti($1.msg, $1.i, 2); /*10566*/
							$1.encc(); /*10566*/
							$1.i = $1.i + 2; /*10567*/
						} /*10567*/
						break; /*10569*/
					} /*10569*/
					$1.endofrow = true; /*10573*/
					break; /*10574*/
				} /*10574*/
			} /*10574*/
			if ((((($1.r == $1.rows) || ($1.rows == -1)) && ($1.r > 1)) && ($1.i == $1.msglen)) && ($1.rem >= 2)) { /*10590*/
				$k[$j++] = $1.rem - 2; /*10582*/
				$1.padrow(); /*10582*/
				$1.j = $1.j + 3; /*10583*/
				$k[$j++] = $1.stp; /*10584*/
				$1.enca(); /*10584*/
				$1.lastrow = true; /*10585*/
			} else { /*10590*/
				$k[$j++] = $1.rem; /*10587*/
				$1.padrow(); /*10587*/
				$1.j = $1.j + 1; /*10588*/
				$k[$j++] = $1.stp; /*10589*/
				$1.enca(); /*10589*/
				$1.r = $1.r + 1; /*10590*/
			} /*10590*/
		} /*10590*/
		$1.cws = $geti($1.cws, 0, $1.j); /*10594*/
		$k[$j++] = Infinity; /*10601*/
		for (var _85 = 64; _85 <= 95; _85 += 1) { /*10598*/
			$k[$j++] = _85; /*10598*/
		} /*10598*/
		for (var _86 = 0; _86 <= 15; _86 += 1) { /*10599*/
			$k[$j++] = _86; /*10599*/
		} /*10599*/
		for (var _87 = 26; _87 <= 63; _87 += 1) { /*10600*/
			$k[$j++] = _87; /*10600*/
		} /*10600*/
		$1.abmap = $a(); /*10601*/
		$k[$j++] = Infinity; /*10602*/
		for (var _89 = 0; _89 <= 85; _89 += 1) { /*10602*/
			$k[$j++] = _89; /*10602*/
		} /*10602*/
		$1.cmap = $a(); /*10602*/
		$1.chkmsg = $a($1.msglen); /*10605*/
		$1.j = 0; /*10606*/
		for (var _8F = 0, _8E = $1.msglen - 1; _8F <= _8E; _8F += 1) { /*10612*/
			$1.i = _8F; /*10608*/
			$1.char = $get($1.msg, $1.i); /*10609*/
			if ($1.char >= 0) { /*10610*/
				$put($1.chkmsg, $1.j, $1.char); /*10610*/
				$1.j = $1.j + 1; /*10610*/
			} /*10610*/
			if (($1.char == $1.fn1) && ($1.i != 0)) { /*10611*/
				$put($1.chkmsg, $1.j, 29); /*10611*/
				$1.j = $1.j + 1; /*10611*/
			} /*10611*/
		} /*10611*/
		$1.t1 = 0; /*10613*/
		$1.t2 = 0; /*10613*/
		$1.k1 = 0; /*10613*/
		$1.k2 = 0; /*10613*/
		for (var _8W = 0, _8V = $1.j - 1; _8W <= _8V; _8W += 1) { /*10620*/
			$1.i = _8W; /*10615*/
			$1.t1 = ($get($1.chkmsg, $1.i) * $1.i) % 86; /*10616*/
			$1.t2 = ($1.t1 + $get($1.chkmsg, $1.i)) % 86; /*10617*/
			$1.k1 = ($1.k1 + $1.t2) % 86; /*10618*/
			$1.k2 = ($1.k2 + $1.t1) % 86; /*10619*/
		} /*10619*/
		$k[$j++] = $1.cws; /*10621*/
		$k[$j++] = $1.cws.length - 4; /*10621*/
		if ($ne($1.cset, "setc")) { /*10621*/
			$k[$j++] = $1.abmap; /*10621*/
		} else { /*10621*/
			$k[$j++] = $1.cmap; /*10621*/
		} /*10621*/
		var _8q = $get($k[--$j], $1.k1); /*10621*/
		var _8r = $k[--$j]; /*10621*/
		$put($k[--$j], _8r, _8q); /*10621*/
		$k[$j++] = $1.cws; /*10622*/
		$k[$j++] = $1.cws.length - 3; /*10622*/
		if ($ne($1.cset, "setc")) { /*10622*/
			$k[$j++] = $1.abmap; /*10622*/
		} else { /*10622*/
			$k[$j++] = $1.cmap; /*10622*/
		} /*10622*/
		var _90 = $get($k[--$j], $1.k2); /*10622*/
		var _91 = $k[--$j]; /*10622*/
		$put($k[--$j], _91, _90); /*10622*/
		var _93 = $1.cws; /*10625*/
		$k[$j++] = _93; /*10625*/
		$k[$j++] = 2; /*10625*/
		if ($get(_93, 2 - 1) != 99) { /*10625*/
			$k[$j++] = $1.abmap; /*10625*/
		} else { /*10625*/
			$k[$j++] = $1.cmap; /*10625*/
		} /*10625*/
		var _99 = $get($k[--$j], $1.r - 2); /*10625*/
		var _9A = $k[--$j]; /*10625*/
		$put($k[--$j], _9A, _99); /*10625*/
		for (var _9E = 1, _9D = $1.r - 1; _9E <= _9D; _9E += 1) { /*10629*/
			$1.i = _9E; /*10627*/
			var _9F = $1.cws; /*10628*/
			var _9G = $1.i; /*10628*/
			var _9H = $1.c; /*10628*/
			$k[$j++] = _9F; /*10628*/
			$k[$j++] = (_9G * (_9H + 5)) + 2; /*10628*/
			if ($get(_9F, ((_9G * (_9H + 5)) + 2) - 1) != 99) { /*10628*/
				$k[$j++] = $1.abmap; /*10628*/
			} else { /*10628*/
				$k[$j++] = $1.cmap; /*10628*/
			} /*10628*/
			var _9N = $get($k[--$j], $1.i + 42); /*10628*/
			var _9O = $k[--$j]; /*10628*/
			$put($k[--$j], _9O, _9N); /*10628*/
		} /*10628*/
		for (var _9S = 0, _9R = $1.r - 1; _9S <= _9R; _9S += 1) { /*10640*/
			$1.rcws = $geti($1.cws, _9S * ($1.c + 5), $1.c + 4); /*10633*/
			$1.csum = $get($1.rcws, 0); /*10634*/
			for (var _9b = 1, _9a = $1.rcws.length - 2; _9b <= _9a; _9b += 1) { /*10638*/
				$1.i = _9b; /*10636*/
				$1.csum = $1.csum + ($get($1.rcws, $1.i) * $1.i); /*10637*/
			} /*10637*/
			$put($1.rcws, $1.rcws.length - 1, $1.csum % 103); /*10639*/
		} /*10639*/
		$1.encs = $a(["212222", "222122", "222221", "121223", "121322", "131222", "122213", "122312", "132212", "221213", "221312", "231212", "112232", "122132", "122231", "113222", "123122", "123221", "223211", "221132", "221231", "213212", "223112", "312131", "311222", "321122", "321221", "312212", "322112", "322211", "212123", "212321", "232121", "111323", "131123", "131321", "112313", "132113", "132311", "211313", "231113", "231311", "112133", "112331", "132131", "113123", "113321", "133121", "313121", "211331", "231131", "213113", "213311", "213131", "311123", "311321", "331121", "312113", "312311", "332111", "314111", "221411", "431111", "111224", "111422", "121124", "121421", "141122", "141221", "112214", "112412", "122114", "122411", "142112", "142211", "241211", "221114", "413111", "241112", "134111", "111242", "121142", "121241", "114212", "124112", "124211", "411212", "421112", "421211", "212141", "214121", "412121", "111143", "111341", "131141", "114113", "114311", "411113", "411311", "113141", "114131", "311141", "411131", "211412", "2331112"]); /*10659*/
		$1.rowbits = $a($1.r); /*10662*/
		for (var _9p = 0, _9o = $1.r - 1; _9p <= _9o; _9p += 1) { /*10674*/
			$1.i = _9p; /*10664*/
			$k[$j++] = Infinity; /*10669*/
			$forall($geti($1.cws, $1.i * ($1.c + 5), $1.c + 5), function() { /*10668*/
				$forall($get($1.encs, $k[--$j]), function() { /*10667*/
					var _9y = $k[--$j]; /*10667*/
					$k[$j++] = _9y - 48; /*10667*/
				}); /*10667*/
			}); /*10667*/
			$1.sbs = $a(); /*10669*/
			$k[$j++] = Infinity; /*10670*/
			var _A0 = $1.sbs; /*10671*/
			$k[$j++] = 0; /*10671*/
			for (var _A1 = 0, _A2 = _A0.length; _A1 < _A2; _A1++) { /*10671*/
				var _A4 = $k[--$j]; /*10671*/
				var _A5 = (_A4 == 1) ? 0 : 1; /*10671*/
				$k[$j++] = _A4; /*10671*/
				for (var _A6 = 0, _A7 = $get(_A0, _A1); _A6 < _A7; _A6++) { /*10671*/
					$k[$j++] = _A5 /*10671*/
				} /*10671*/
			} /*10671*/
			$astore($a($counttomark() - 1)); /*10672*/
			var _AA = $k[--$j]; /*10672*/
			var _AB = $k[--$j]; /*10672*/
			var _AC = $k[--$j]; /*10672*/
			$put($1.rowbits, $1.i, _AA); /*10673*/
		} /*10673*/
		$1.symwid = ($1.c * 11) + 57; /*10677*/
		$k[$j++] = Infinity; /*10691*/
		for (var _AI = 0, _AJ = $1.symwid * $1.sepheight; _AI < _AJ; _AI++) { /*10679*/
			$k[$j++] = 1; /*10679*/
		} /*10679*/
		for (var _AM = 0, _AL = $1.r - 2; _AM <= _AL; _AM += 1) { /*10688*/
			$1.i = _AM; /*10681*/
			for (var _AO = 0, _AP = $1.rowheight; _AO < _AP; _AO++) { /*10682*/
				$aload($get($1.rowbits, $1.i)); /*10682*/
			} /*10682*/
			for (var _AU = 0, _AV = $1.sepheight; _AU < _AV; _AU++) { /*10687*/
				$k[$j++] = 1; /*10685*/
				$k[$j++] = 1; /*10685*/
				$k[$j++] = 0; /*10685*/
				$k[$j++] = 1; /*10685*/
				$k[$j++] = 0; /*10685*/
				$k[$j++] = 0; /*10685*/
				$k[$j++] = 0; /*10685*/
				$k[$j++] = 0; /*10685*/
				$k[$j++] = 1; /*10685*/
				$k[$j++] = 0; /*10685*/
				$k[$j++] = 0; /*10685*/
				for (var _AX = 0, _AY = $1.symwid - 24; _AX < _AY; _AX++) { /*10685*/
					$k[$j++] = 1; /*10685*/
				} /*10685*/
				$k[$j++] = 1; /*10686*/
				$k[$j++] = 1; /*10686*/
				$k[$j++] = 0; /*10686*/
				$k[$j++] = 0; /*10686*/
				$k[$j++] = 0; /*10686*/
				$k[$j++] = 1; /*10686*/
				$k[$j++] = 1; /*10686*/
				$k[$j++] = 1; /*10686*/
				$k[$j++] = 0; /*10686*/
				$k[$j++] = 1; /*10686*/
				$k[$j++] = 0; /*10686*/
				$k[$j++] = 1; /*10686*/
				$k[$j++] = 1; /*10686*/
			} /*10686*/
		} /*10686*/
		for (var _Aa = 0, _Ab = $1.rowheight; _Aa < _Ab; _Aa++) { /*10689*/
			$aload($get($1.rowbits, $1.r - 1)); /*10689*/
		} /*10689*/
		for (var _Ah = 0, _Ai = $1.symwid * $1.sepheight; _Ah < _Ai; _Ah++) { /*10690*/
			$k[$j++] = 1; /*10690*/
		} /*10690*/
		$1.pixs = $a(); /*10691*/
		var _As = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.symwid,
			pixy: ~~($1.pixs.length / $1.symwid),
			height: (~~($1.pixs.length / $1.symwid)) / 72,
			width: $1.symwid / 72,
			opt: $1.options
		}; /*10701*/
		$k[$j++] = _As; /*10704*/
		if (!$1.dontdraw) { /*10704*/
			$0.renmatrix(); /*10704*/
		} /*10704*/
	};
	$0.code16k = function() {
		var $1 = {}; /*10731*/
		$1.options = $k[--$j]; /*10733*/
		$1.barcode = $k[--$j]; /*10734*/
		$1.dontdraw = false; /*10736*/
		$1.mode = -1; /*10737*/
		$1.pos = -1; /*10738*/
		$1.rows = 0; /*10739*/
		$1.rowheight = 8; /*10740*/
		$1.sepheight = 1; /*10741*/
		$1.encoding = "auto"; /*10742*/
		$1.raw = false; /*10743*/
		$1.parse = false; /*10744*/
		$1.parsefnc = false; /*10745*/
		$forall($1.options, function() { /*10756*/
			var _3 = $k[--$j]; /*10756*/
			$1[$k[--$j]] = _3; /*10756*/
		}); /*10756*/
		$1.mode = ~~$1.mode; /*10758*/
		$1.pos = ~~$1.pos; /*10759*/
		$1.rows = ~~$1.rows; /*10760*/
		$1.rowheight = ~~$1.rowheight; /*10761*/
		$1.sepheight = ~~$1.sepheight; /*10762*/
		if ($1.pos != -1) { /*10764*/
			$1.rows = 16; /*10764*/
		} /*10764*/
		$1.barlen = $1.barcode.length; /*10787*/
		$1.swa = -1; /*10790*/
		$1.swb = -2; /*10790*/
		$1.swc = -3; /*10790*/
		$1.sa1 = -4; /*10791*/
		$1.sb1 = -5; /*10791*/
		$1.sc1 = -6; /*10791*/
		$1.sa2 = -7; /*10792*/
		$1.sb2 = -8; /*10792*/
		$1.sc2 = -9; /*10792*/
		$1.pad = -10; /*10793*/
		$1.sb3 = -11; /*10793*/
		$1.sc3 = -12; /*10793*/
		$1.fn1 = -13; /*10794*/
		$1.fn2 = -14; /*10794*/
		$1.fn3 = -15; /*10794*/
		$1.fn4 = -16; /*10794*/
		$1.charmaps = $a([$a([32, 32, "00"]), $a(["!", "!", "01"]), $a(["\"", "\"", "02"]), $a(["#", "#", "03"]), $a(["$", "$", "04"]), $a(["%", "%", "05"]), $a(["&", "&", "06"]), $a(["'", "'", "07"]), $a([40, 40, "08"]), $a([41, 41, "09"]), $a(["*", "*", "10"]), $a(["+", "+", "11"]), $a([",", ",", "12"]), $a(["-", "-", "13"]), $a([".", ".", "14"]), $a(["/", "/", "15"]), $a(["0", "0", "16"]), $a(["1", "1", "17"]), $a(["2", "2", "18"]), $a(["3", "3", "19"]), $a(["4", "4", "20"]), $a(["5", "5", "21"]), $a(["6", "6", "22"]), $a(["7", "7", "23"]), $a(["8", "8", "24"]), $a(["9", "9", "25"]), $a([":", ":", "26"]), $a([";", ";", "27"]), $a(["<", "<", "28"]), $a(["=", "=", "29"]), $a([">", ">", "30"]), $a(["?", "?", "31"]), $a(["@", "@", "32"]), $a(["A", "A", "33"]), $a(["B", "B", "34"]), $a(["C", "C", "35"]), $a(["D", "D", "36"]), $a(["E", "E", "37"]), $a(["F", "F", "38"]), $a(["G", "G", "39"]), $a(["H", "H", "40"]), $a(["I", "I", "41"]), $a(["J", "J", "42"]), $a(["K", "K", "43"]), $a(["L", "L", "44"]), $a(["M", "M", "45"]), $a(["N", "N", "46"]), $a(["O", "O", "47"]), $a(["P", "P", "48"]), $a(["Q", "Q", "49"]), $a(["R", "R", "50"]), $a(["S", "S", "51"]), $a(["T", "T", "52"]), $a(["U", "U", "53"]), $a(["V", "V", "54"]), $a(["W", "W", "55"]), $a(["X", "X", "56"]), $a(["Y", "Y", "57"]), $a(["Z", "Z", "58"]), $a(["[", "[", "59"]), $a([92, 92, "60"]), $a(["]", "]", "61"]), $a(["^", "^", "62"]), $a(["_", "_", "63"]), $a([0, "`", "64"]), $a([1, "a", "65"]), $a([2, "b", "66"]), $a([3, "c", "67"]), $a([4, "d", "68"]), $a([5, "e", "69"]), $a([6, "f", "70"]), $a([7, "g", "71"]), $a([8, "h", "72"]), $a([9, "i", "73"]), $a([10, "j", "74"]), $a([11, "k", "75"]), $a([12, "l", "76"]), $a([13, "m", "77"]), $a([14, "n", "78"]), $a([15, "o", "79"]), $a([16, "p", "80"]), $a([17, "q", "81"]), $a([18, "r", "82"]), $a([19, "s", "83"]), $a([20, "t", "84"]), $a([21, "u", "85"]), $a([22, "v", "86"]), $a([23, "w", "87"]), $a([24, "x", "88"]), $a([25, "y", "89"]), $a([26, "z", "90"]), $a([27, "{", "91"]), $a([28, "|", "92"]), $a([29, "}", "93"]), $a([30, "~", "94"]), $a([31, 127, "95"]), $a([$1.fn3, $1.fn3, "96"]), $a([$1.fn2, $1.fn2, "97"]), $a([$1.sb1, $1.sa1, "98"]), $a([$1.swc, $1.swc, "99"]), $a([$1.swb, $1.fn4, $1.swb]), $a([$1.fn4, $1.swa, $1.swa]), $a([$1.fn1, $1.fn1, $1.fn1]), $a([$1.pad, $1.pad, $1.pad]), $a([$1.sb2, $1.sa2, $1.sb1]), $a([$1.sc2, $1.sc2, $1.sb2]), $a([$1.sc3, $1.sc3, $1.sb3])]); /*10835*/
		$1.charvals = $a([{}, {}, {}]); /*10838*/
		for (var _2S = 0, _2R = $1.charmaps.length - 1; _2S <= _2R; _2S += 1) { /*10847*/
			$1.i = _2S; /*10840*/
			$1.encs = $get($1.charmaps, $1.i); /*10841*/
			for (var _2W = 0; _2W <= 2; _2W += 1) { /*10846*/
				$1.j = _2W; /*10843*/
				var _2Z = $get($1.encs, $1.j); /*10844*/
				$k[$j++] = _2Z; /*10844*/
				if ($eq($type(_2Z), "stringtype")) { /*10844*/
					var _2c = $get($k[--$j], 0); /*10844*/
					$k[$j++] = _2c; /*10844*/
				} /*10844*/
				$put($get($1.charvals, $1.j), $k[--$j], $1.i); /*10845*/
			} /*10845*/
		} /*10845*/
		$1.seta = $get($1.charvals, 0); /*10848*/
		$1.setb = $get($1.charvals, 1); /*10849*/
		$1.setc = $get($1.charvals, 2); /*10850*/
		if ($1.raw) { /*10852*/
			$1.encoding = "raw"; /*10852*/
		} /*10852*/
		if ($eq($1.encoding, "raw")) { /*10866*/
			$1.cws = $a($1.barlen); /*10855*/
			$1.i = 0; /*10856*/
			$1.j = 0; /*10856*/
			for (;;) { /*10863*/
				if ($1.i == $1.barlen) { /*10858*/
					break; /*10858*/
				} /*10858*/
				$1.cw = ~~$z($geti($1.barcode, $1.i + 1, 3)); /*10859*/
				$put($1.cws, $1.j, $1.cw); /*10860*/
				$1.i = $1.i + 4; /*10861*/
				$1.j = $1.j + 1; /*10862*/
			} /*10862*/
			$1.cws = $geti($1.cws, 0, $1.j); /*10864*/
			$1.text = ""; /*10865*/
		} /*10865*/
		if ($eq($1.encoding, "auto")) { /*11329*/
			var _39 = {
				FNC1: $1.fn1,
				FNC2: $1.fn2,
				FNC3: $1.fn3
			}; /*10873*/
			$1.fncvals = _39; /*10875*/
			$1.msg = $a($1.barlen); /*10876*/
			$1.i = 0; /*10877*/
			$1.j = 0; /*10877*/
			for (;;) { /*10891*/
				if ($1.i == $1.barlen) { /*10878*/
					break; /*10878*/
				} /*10878*/
				$1.char = $get($1.barcode, $1.i); /*10879*/
				if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*10887*/
					if ($get($1.barcode, $1.i + 1) != 94) { /*10885*/
						$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*10882*/
						$1.i = $1.i + 4; /*10883*/
					} else { /*10885*/
						$1.i = $1.i + 1; /*10885*/
					} /*10885*/
				} /*10885*/
				$put($1.msg, $1.j, $1.char); /*10888*/
				$1.i = $1.i + 1; /*10889*/
				$1.j = $1.j + 1; /*10890*/
			} /*10890*/
			$1.msg = $geti($1.msg, 0, $1.j); /*10892*/
			$1.msglen = $1.msg.length; /*10893*/
			$k[$j++] = Infinity; /*10896*/
			for (var _3f = 0, _3g = $1.msglen; _3f < _3g; _3f++) { /*10896*/
				$k[$j++] = 0; /*10896*/
			} /*10896*/
			$k[$j++] = 0; /*10896*/
			$1.numSA = $a(); /*10896*/
			$k[$j++] = Infinity; /*10897*/
			for (var _3j = 0, _3k = $1.msglen; _3j < _3k; _3j++) { /*10897*/
				$k[$j++] = 0; /*10897*/
			} /*10897*/
			$k[$j++] = 0; /*10897*/
			$1.numEA = $a(); /*10897*/
			for (var _3n = $1.msglen - 1; _3n >= 0; _3n -= 1) { /*10907*/
				$1.i = _3n; /*10899*/
				if ($get($1.msg, $1.i) >= 0) { /*10906*/
					if ($get($1.msg, $1.i) >= 128) { /*10904*/
						$put($1.numEA, $1.i, $get($1.numEA, $1.i + 1) + 1); /*10902*/
					} else { /*10904*/
						$put($1.numSA, $1.i, $get($1.numSA, $1.i + 1) + 1); /*10904*/
					} /*10904*/
				} /*10904*/
			} /*10904*/
			$1.ea = false; /*10910*/
			$1.msgtmp = $a([]); /*10910*/
			for (var _47 = 0, _46 = $1.msglen - 1; _47 <= _46; _47 += 1) { /*10925*/
				$1.i = _47; /*10912*/
				$1.c = $get($1.msg, $1.i); /*10913*/
				if ((!$xo($1.ea, $1.c < 128)) && ($1.c >= 0)) { /*10923*/
					if ($1.ea) { /*10915*/
						$k[$j++] = $1.numSA; /*10915*/
					} else { /*10915*/
						$k[$j++] = $1.numEA; /*10915*/
					} /*10915*/
					var _4J = $get($k[--$j], $1.i); /*10915*/
					var _4M = ((_4J + $1.i) == $1.msglen) ? 3 : 5; /*10916*/
					if (_4J < _4M) { /*10921*/
						$k[$j++] = Infinity; /*10918*/
						$aload($1.msgtmp); /*10918*/
						$k[$j++] = $1.fn4; /*10918*/
						$1.msgtmp = $a(); /*10918*/
					} else { /*10921*/
						$k[$j++] = Infinity; /*10920*/
						$aload($1.msgtmp); /*10920*/
						$k[$j++] = $1.fn4; /*10920*/
						$k[$j++] = $1.fn4; /*10920*/
						$1.msgtmp = $a(); /*10920*/
						$1.ea = !$1.ea; /*10921*/
					} /*10921*/
				} /*10921*/
				$k[$j++] = Infinity; /*10924*/
				$aload($1.msgtmp); /*10924*/
				if ($1.c >= 0) { /*10924*/
					$k[$j++] = $1.c & 127; /*10924*/
				} else { /*10924*/
					$k[$j++] = $1.c; /*10924*/
				} /*10924*/
				$1.msgtmp = $a(); /*10924*/
			} /*10924*/
			$1.msg = $1.msgtmp; /*10926*/
			$1.msglen = $1.msg.length; /*10927*/
			$1.numsscr = function() {
				$1.n = 0; /*10931*/
				$1.s = 0; /*10931*/
				$1.p = $k[--$j]; /*10932*/
				for (;;) { /*10943*/
					if ($1.p >= $1.msglen) { /*10933*/
						break; /*10933*/
					} /*10933*/
					var _4h = $get($1.msg, $1.p); /*10934*/
					var _4j = $get($1.setc, _4h) !== undefined; /*10935*/
					$k[$j++] = _4h; /*10935*/
					if (!_4j) { /*10935*/
						$j--; /*10935*/
						break; /*10935*/
					} /*10935*/
					if ($k[--$j] == $1.fn1) { /*10939*/
						if (($1.s % 2) == 0) { /*10938*/
							$1.s = $1.s + 1; /*10938*/
						} else { /*10938*/
							break; /*10938*/
						} /*10938*/
					} /*10938*/
					$1.n = $1.n + 1; /*10940*/
					$1.s = $1.s + 1; /*10941*/
					$1.p = $1.p + 1; /*10942*/
				} /*10942*/
				$k[$j++] = $1.n; /*10944*/
				$k[$j++] = $1.s; /*10944*/
			}; /*10945*/
			$1.enca = function() {
				$put($1.cws, $1.j, $get($1.seta, $k[--$j])); /*10949*/
				$1.j = $1.j + 1; /*10950*/
			}; /*10951*/
			$1.encb = function() {
				$put($1.cws, $1.j, $get($1.setb, $k[--$j])); /*10953*/
				$1.j = $1.j + 1; /*10954*/
			}; /*10955*/
			$1.encc = function() {
				var _55 = $k[--$j]; /*10957*/
				$k[$j++] = _55; /*10961*/
				if ($ne($type(_55), "arraytype")) { /*10960*/
					var _59 = $get($1.setc, $k[--$j]); /*10958*/
					$k[$j++] = _59; /*10958*/
				} else { /*10960*/
					$aload($k[--$j]); /*10960*/
					var _5B = $k[--$j]; /*10960*/
					var _5C = $k[--$j]; /*10960*/
					$k[$j++] = (_5B - 48) + ((_5C - 48) * 10); /*10960*/
				} /*10960*/
				$put($1.cws, $1.j, $k[--$j]); /*10962*/
				$1.j = $1.j + 1; /*10963*/
			}; /*10964*/
			$1.anotb = function() {
				var _5H = $k[--$j]; /*10967*/
				var _5J = $get($1.seta, _5H) !== undefined; /*10967*/
				var _5L = $get($1.setb, _5H) !== undefined; /*10967*/
				$k[$j++] = _5J && (!_5L); /*10967*/
			}; /*10967*/
			$1.bnota = function() {
				var _5M = $k[--$j]; /*10968*/
				var _5O = $get($1.setb, _5M) !== undefined; /*10968*/
				var _5Q = $get($1.seta, _5M) !== undefined; /*10968*/
				$k[$j++] = _5O && (!_5Q); /*10968*/
			}; /*10968*/
			$k[$j++] = Infinity; /*10971*/
			for (var _5S = 0, _5T = $1.msg.length; _5S < _5T; _5S++) { /*10971*/
				$k[$j++] = 0; /*10971*/
			} /*10971*/
			$k[$j++] = 9999; /*10971*/
			$1.nextanotb = $a(); /*10971*/
			$k[$j++] = Infinity; /*10972*/
			for (var _5W = 0, _5X = $1.msg.length; _5W < _5X; _5W++) { /*10972*/
				$k[$j++] = 0; /*10972*/
			} /*10972*/
			$k[$j++] = 9999; /*10972*/
			$1.nextbnota = $a(); /*10972*/
			for (var _5a = $1.msg.length - 1; _5a >= 0; _5a -= 1) { /*10985*/
				$1.i = _5a; /*10974*/
				$k[$j++] = $get($1.msg, $1.i); /*10975*/
				$1.anotb(); /*10975*/
				if ($k[--$j]) { /*10978*/
					$put($1.nextanotb, $1.i, 0); /*10976*/
				} else { /*10978*/
					$put($1.nextanotb, $1.i, $get($1.nextanotb, $1.i + 1) + 1); /*10978*/
				} /*10978*/
				$k[$j++] = $get($1.msg, $1.i); /*10980*/
				$1.bnota(); /*10980*/
				if ($k[--$j]) { /*10983*/
					$put($1.nextbnota, $1.i, 0); /*10981*/
				} else { /*10983*/
					$put($1.nextbnota, $1.i, $get($1.nextbnota, $1.i + 1) + 1); /*10983*/
				} /*10983*/
			} /*10983*/
			$1.abeforeb = function() {
				var _5x = $k[--$j]; /*10988*/
				$k[$j++] = $lt($get($1.nextanotb, _5x), $get($1.nextbnota, _5x)); /*10988*/
			}; /*10988*/
			$1.bbeforea = function() {
				var _62 = $k[--$j]; /*10989*/
				$k[$j++] = $lt($get($1.nextbnota, _62), $get($1.nextanotb, _62)); /*10989*/
			}; /*10989*/
			$1.cws = $a(($1.barcode.length * 2) + 3); /*10991*/
			$1.i = 0; /*10994*/
			$1.j = 0; /*10994*/
			for (;;) { /*11084*/
				if ($1.pos != -1) { /*11005*/
					$put($1.cws, 0, (~~($1.pos / 10)) - 1); /*10999*/
					$put($1.cws, 1, ($1.pos % 10) - 1); /*11000*/
					$1.j = 2; /*11001*/
					$1.cset = "setb"; /*11002*/
					$1.mode = 7; /*11003*/
					break; /*11004*/
				} /*11004*/
				if ($1.msglen == 0) { /*11011*/
					$1.cset = "setb"; /*11008*/
					$1.mode = 1; /*11009*/
					break; /*11010*/
				} /*11010*/
				if ($1.msglen >= 2) { /*11020*/
					$k[$j++] = $get($1.msg, 0) == $1.fn1; /*11014*/
					$k[$j++] = 1; /*11014*/
					$1.numsscr(); /*11014*/
					var _6J = $k[--$j]; /*11014*/
					var _6K = $k[--$j]; /*11014*/
					if ($k[--$j] && (_6J >= 2)) { /*11019*/
						$1.cset = "setc"; /*11015*/
						$1.mode = 4; /*11016*/
						$1.i = 1; /*11017*/
						break; /*11018*/
					} /*11018*/
				} /*11018*/
				if ($get($1.msg, 0) == $1.fn1) { /*11027*/
					$1.cset = "setb"; /*11023*/
					$1.mode = 3; /*11024*/
					$1.i = 1; /*11025*/
					break; /*11026*/
				} /*11026*/
				if ($1.msglen >= 2) { /*11073*/
					$k[$j++] = 0; /*11030*/
					$1.numsscr(); /*11030*/
					var _6Q = $k[--$j]; /*11030*/
					var _6R = $k[--$j]; /*11030*/
					if ((_6Q >= 2) && ((_6Q % 2) == 0)) { /*11034*/
						$1.cset = "setc"; /*11031*/
						$1.mode = 2; /*11032*/
						break; /*11033*/
					} /*11033*/
					$k[$j++] = 0; /*11036*/
					$1.numsscr(); /*11036*/
					var _6S = $k[--$j]; /*11036*/
					var _6T = $k[--$j]; /*11036*/
					if ((_6S >= 3) && ((_6S % 2) == 1)) { /*11042*/
						$k[$j++] = $get($1.msg, 0); /*11037*/
						$1.encb(); /*11037*/
						$1.cset = "setc"; /*11038*/
						$1.mode = 5; /*11039*/
						$1.i = 1; /*11040*/
						break; /*11041*/
					} /*11041*/
					var _6Z = $get($1.setb, $get($1.msg, 0)) !== undefined; /*11044*/
					$k[$j++] = _6Z; /*11045*/
					$k[$j++] = 1; /*11045*/
					$1.numsscr(); /*11045*/
					var _6a = $k[--$j]; /*11045*/
					var _6b = $k[--$j]; /*11045*/
					if ($k[--$j] && ((_6a >= 2) && ((_6a % 2) == 0))) { /*11051*/
						$k[$j++] = $get($1.msg, 0); /*11046*/
						$1.encb(); /*11046*/
						$1.cset = "setc"; /*11047*/
						$1.mode = 5; /*11048*/
						$1.i = 1; /*11049*/
						break; /*11050*/
					} /*11050*/
					var _6i = $get($1.setb, $get($1.msg, 0)) !== undefined; /*11053*/
					$k[$j++] = _6i; /*11054*/
					$k[$j++] = 1; /*11054*/
					$1.numsscr(); /*11054*/
					var _6j = $k[--$j]; /*11054*/
					var _6k = $k[--$j]; /*11054*/
					if ($k[--$j] && ((_6j >= 3) && ((_6j % 2) == 1))) { /*11061*/
						$k[$j++] = $get($1.msg, 0); /*11055*/
						$1.encb(); /*11055*/
						$k[$j++] = $get($1.msg, 1); /*11056*/
						$1.encb(); /*11056*/
						$1.cset = "setc"; /*11057*/
						$1.mode = 6; /*11058*/
						$1.i = 2; /*11059*/
						break; /*11060*/
					} /*11060*/
					var _6t = $get($1.setb, $get($1.msg, 0)) !== undefined; /*11063*/
					var _6x = $get($1.setb, $get($1.msg, 1)) !== undefined; /*11064*/
					$k[$j++] = _6t && _6x; /*11065*/
					$k[$j++] = 2; /*11065*/
					$1.numsscr(); /*11065*/
					var _6y = $k[--$j]; /*11065*/
					var _6z = $k[--$j]; /*11065*/
					if ($k[--$j] && ((_6y >= 2) && ((_6y % 2) == 0))) { /*11072*/
						$k[$j++] = $get($1.msg, 0); /*11066*/
						$1.encb(); /*11066*/
						$k[$j++] = $get($1.msg, 1); /*11067*/
						$1.encb(); /*11067*/
						$1.cset = "setc"; /*11068*/
						$1.mode = 6; /*11069*/
						$1.i = 2; /*11070*/
						break; /*11071*/
					} /*11071*/
				} /*11071*/
				$k[$j++] = 0; /*11075*/
				$1.abeforeb(); /*11075*/
				if ($k[--$j]) { /*11079*/
					$1.cset = "seta"; /*11076*/
					$1.mode = 0; /*11077*/
					break; /*11078*/
				} /*11078*/
				$1.cset = "setb"; /*11081*/
				$1.mode = 1; /*11082*/
				break; /*11083*/
			} /*11083*/
			for (;;) { /*11327*/
				if ($1.i == $1.msglen) { /*11087*/
					break; /*11087*/
				} /*11087*/
				$k[$j++] = $1.i; /*11089*/
				$1.numsscr(); /*11089*/
				$1.nums = $k[--$j]; /*11089*/
				$1.nchars = $k[--$j]; /*11089*/
				for (;;) { /*11325*/
					if ($eq($1.cset, "seta")) { /*11166*/
						if ($1.i < ($1.msglen - 1)) { /*11103*/
							$k[$j++] = $get($1.msg, $1.i); /*11096*/
							$1.bnota(); /*11096*/
							$k[$j++] = $1.i + 1; /*11097*/
							$1.abeforeb(); /*11097*/
							var _7I = $k[--$j]; /*11097*/
							if (($k[--$j] && _7I)) { /*11102*/
								$k[$j++] = $1.sb1; /*11098*/
								$1.enca(); /*11098*/
								$k[$j++] = $get($1.msg, $1.i); /*11099*/
								$1.encb(); /*11099*/
								$1.i = $1.i + 1; /*11100*/
								break; /*11101*/
							} /*11101*/
						} /*11101*/
						if ($1.i < ($1.msglen - 2)) { /*11115*/
							$k[$j++] = $get($1.msg, $1.i); /*11106*/
							$1.bnota(); /*11106*/
							$k[$j++] = $get($1.msg, $1.i + 1); /*11107*/
							$1.bnota(); /*11107*/
							var _7X = $k[--$j]; /*11107*/
							var _7Y = $k[--$j]; /*11107*/
							$k[$j++] = $an(_7Y, _7X); /*11108*/
							$k[$j++] = $1.i + 2; /*11108*/
							$1.abeforeb(); /*11108*/
							var _7a = $k[--$j]; /*11108*/
							if (($k[--$j] && _7a)) { /*11114*/
								$k[$j++] = $1.sb2; /*11109*/
								$1.enca(); /*11109*/
								$k[$j++] = $get($1.msg, $1.i); /*11110*/
								$1.encb(); /*11110*/
								$k[$j++] = $get($1.msg, $1.i + 1); /*11111*/
								$1.encb(); /*11111*/
								$1.i = $1.i + 2; /*11112*/
								break; /*11113*/
							} /*11113*/
						} /*11113*/
						$k[$j++] = $get($1.msg, $1.i); /*11117*/
						$1.bnota(); /*11117*/
						if ($k[--$j]) { /*11121*/
							$k[$j++] = $1.swb; /*11118*/
							$1.enca(); /*11118*/
							$1.cset = "setb"; /*11119*/
							break; /*11120*/
						} /*11120*/
						if ($1.i < ($1.msglen - 4)) { /*11138*/
							var _7w = $get($1.seta, $get($1.msg, $1.i + 4)) !== undefined; /*11125*/
							if (($1.nums == 4) && _7w) { /*11137*/
								$k[$j++] = $1.sc2; /*11126*/
								$1.enca(); /*11126*/
								for (var _7y = 0, _7z = 2; _7y < _7z; _7y++) { /*11135*/
									if ($get($1.msg, $1.i) == $1.fn1) { /*11133*/
										$k[$j++] = $1.fn1; /*11129*/
										$1.encc(); /*11129*/
										$1.i = $1.i + 1; /*11130*/
									} else { /*11133*/
										$k[$j++] = $geti($1.msg, $1.i, 2); /*11132*/
										$1.encc(); /*11132*/
										$1.i = $1.i + 2; /*11133*/
									} /*11133*/
								} /*11133*/
								break; /*11136*/
							} /*11136*/
						} /*11136*/
						if ($1.i < ($1.msglen - 6)) { /*11155*/
							var _8H = $get($1.seta, $get($1.msg, $1.i + 6)) !== undefined; /*11142*/
							if (($1.nums == 6) && _8H) { /*11154*/
								$k[$j++] = $1.sc3; /*11143*/
								$1.enca(); /*11143*/
								for (var _8J = 0, _8K = 3; _8J < _8K; _8J++) { /*11152*/
									if ($get($1.msg, $1.i) == $1.fn1) { /*11150*/
										$k[$j++] = $1.fn1; /*11146*/
										$1.encc(); /*11146*/
										$1.i = $1.i + 1; /*11147*/
									} else { /*11150*/
										$k[$j++] = $geti($1.msg, $1.i, 2); /*11149*/
										$1.encc(); /*11149*/
										$1.i = $1.i + 2; /*11150*/
									} /*11150*/
								} /*11150*/
								break; /*11153*/
							} /*11153*/
						} /*11153*/
						if (($1.nums >= 4) && (($1.nums % 2) == 0)) { /*11161*/
							$k[$j++] = $1.swc; /*11158*/
							$1.enca(); /*11158*/
							$1.cset = "setc"; /*11159*/
							break; /*11160*/
						} /*11160*/
						$k[$j++] = $get($1.msg, $1.i); /*11163*/
						$1.enca(); /*11163*/
						$1.i = $1.i + 1; /*11164*/
						break; /*11165*/
					} /*11165*/
					if ($eq($1.cset, "setb")) { /*11240*/
						if ($1.i < ($1.msglen - 1)) { /*11177*/
							$k[$j++] = $get($1.msg, $1.i); /*11170*/
							$1.anotb(); /*11170*/
							$k[$j++] = $1.i + 1; /*11171*/
							$1.bbeforea(); /*11171*/
							var _8j = $k[--$j]; /*11171*/
							if (($k[--$j] && _8j)) { /*11176*/
								$k[$j++] = $1.sa1; /*11172*/
								$1.encb(); /*11172*/
								$k[$j++] = $get($1.msg, $1.i); /*11173*/
								$1.enca(); /*11173*/
								$1.i = $1.i + 1; /*11174*/
								break; /*11175*/
							} /*11175*/
						} /*11175*/
						if ($1.i < ($1.msglen - 2)) { /*11189*/
							$k[$j++] = $get($1.msg, $1.i); /*11180*/
							$1.anotb(); /*11180*/
							$k[$j++] = $get($1.msg, $1.i + 1); /*11181*/
							$1.anotb(); /*11181*/
							var _8y = $k[--$j]; /*11181*/
							var _8z = $k[--$j]; /*11181*/
							$k[$j++] = $an(_8z, _8y); /*11182*/
							$k[$j++] = $1.i + 2; /*11182*/
							$1.bbeforea(); /*11182*/
							var _91 = $k[--$j]; /*11182*/
							if (($k[--$j] && _91)) { /*11188*/
								$k[$j++] = $1.sa2; /*11183*/
								$1.encb(); /*11183*/
								$k[$j++] = $get($1.msg, $1.i); /*11184*/
								$1.enca(); /*11184*/
								$k[$j++] = $get($1.msg, $1.i + 1); /*11185*/
								$1.enca(); /*11185*/
								$1.i = $1.i + 2; /*11186*/
								break; /*11187*/
							} /*11187*/
						} /*11187*/
						$k[$j++] = $get($1.msg, $1.i); /*11191*/
						$1.anotb(); /*11191*/
						if ($k[--$j]) { /*11195*/
							$k[$j++] = $1.swa; /*11192*/
							$1.encb(); /*11192*/
							$1.cset = "seta"; /*11193*/
							break; /*11194*/
						} /*11194*/
						if ($1.i < ($1.msglen - 4)) { /*11212*/
							var _9N = $get($1.setb, $get($1.msg, $1.i + 4)) !== undefined; /*11199*/
							if (($1.nums == 4) && _9N) { /*11211*/
								$k[$j++] = $1.sc2; /*11200*/
								$1.encb(); /*11200*/
								for (var _9P = 0, _9Q = 2; _9P < _9Q; _9P++) { /*11209*/
									if ($get($1.msg, $1.i) == $1.fn1) { /*11207*/
										$k[$j++] = $1.fn1; /*11203*/
										$1.encc(); /*11203*/
										$1.i = $1.i + 1; /*11204*/
									} else { /*11207*/
										$k[$j++] = $geti($1.msg, $1.i, 2); /*11206*/
										$1.encc(); /*11206*/
										$1.i = $1.i + 2; /*11207*/
									} /*11207*/
								} /*11207*/
								break; /*11210*/
							} /*11210*/
						} /*11210*/
						if ($1.i < ($1.msglen - 6)) { /*11229*/
							var _9i = $get($1.setb, $get($1.msg, $1.i + 6)) !== undefined; /*11216*/
							if (($1.nums == 6) && _9i) { /*11228*/
								$k[$j++] = $1.sc3; /*11217*/
								$1.encb(); /*11217*/
								for (var _9k = 0, _9l = 3; _9k < _9l; _9k++) { /*11226*/
									if ($get($1.msg, $1.i) == $1.fn1) { /*11224*/
										$k[$j++] = $1.fn1; /*11220*/
										$1.encc(); /*11220*/
										$1.i = $1.i + 1; /*11221*/
									} else { /*11224*/
										$k[$j++] = $geti($1.msg, $1.i, 2); /*11223*/
										$1.encc(); /*11223*/
										$1.i = $1.i + 2; /*11224*/
									} /*11224*/
								} /*11224*/
								break; /*11227*/
							} /*11227*/
						} /*11227*/
						if (($1.nums >= 4) && (($1.nums % 2) == 0)) { /*11235*/
							$k[$j++] = $1.swc; /*11232*/
							$1.encb(); /*11232*/
							$1.cset = "setc"; /*11233*/
							break; /*11234*/
						} /*11234*/
						$k[$j++] = $get($1.msg, $1.i); /*11237*/
						$1.encb(); /*11237*/
						$1.i = $1.i + 1; /*11238*/
						break; /*11239*/
					} /*11239*/
					if ($eq($1.cset, "setc")) { /*11323*/
						if ($1.nums >= 2) { /*11252*/
							if ($get($1.msg, $1.i) == $1.fn1) { /*11249*/
								$k[$j++] = $1.fn1; /*11245*/
								$1.encc(); /*11245*/
								$1.i = $1.i + 1; /*11246*/
							} else { /*11249*/
								$k[$j++] = $geti($1.msg, $1.i, 2); /*11248*/
								$1.encc(); /*11248*/
								$1.i = $1.i + 2; /*11249*/
							} /*11249*/
							break; /*11251*/
						} /*11251*/
						if ($1.i < ($1.msglen - 1)) { /*11262*/
							var _AL = $get($1.setb, $get($1.msg, $1.i)) !== undefined; /*11255*/
							$k[$j++] = _AL; /*11256*/
							$k[$j++] = $1.i + 1; /*11256*/
							$1.numsscr(); /*11256*/
							var _AN = $k[--$j]; /*11256*/
							var _AO = $k[--$j]; /*11256*/
							if ($k[--$j] && ((_AN >= 2) && ((_AN % 2) == 0))) { /*11261*/
								$k[$j++] = $1.sb1; /*11257*/
								$1.encc(); /*11257*/
								$k[$j++] = $get($1.msg, $1.i); /*11258*/
								$1.encb(); /*11258*/
								$1.i = $1.i + 1; /*11259*/
								break; /*11260*/
							} /*11260*/
						} /*11260*/
						if ($1.i < ($1.msglen - 1)) { /*11273*/
							var _Ab = $get($1.setb, $get($1.msg, $1.i)) !== undefined; /*11265*/
							$k[$j++] = _Ab; /*11266*/
							$k[$j++] = $1.i + 1; /*11266*/
							$1.numsscr(); /*11266*/
							var _Ad = $k[--$j]; /*11266*/
							var _Ae = $k[--$j]; /*11266*/
							if ($k[--$j] && ((_Ad >= 3) && ((_Ad % 2) == 1))) { /*11272*/
								$k[$j++] = $1.sb2; /*11267*/
								$1.encc(); /*11267*/
								$k[$j++] = $get($1.msg, $1.i); /*11268*/
								$1.encb(); /*11268*/
								$k[$j++] = $get($1.msg, $1.i + 1); /*11269*/
								$1.encb(); /*11269*/
								$1.i = $1.i + 2; /*11270*/
								break; /*11271*/
							} /*11271*/
						} /*11271*/
						if ($1.i < ($1.msglen - 2)) { /*11285*/
							var _Au = $get($1.setb, $get($1.msg, $1.i)) !== undefined; /*11276*/
							var _Az = $get($1.setb, $get($1.msg, $1.i + 1)) !== undefined; /*11277*/
							$k[$j++] = _Au && _Az; /*11278*/
							$k[$j++] = $1.i + 2; /*11278*/
							$1.numsscr(); /*11278*/
							var _B1 = $k[--$j]; /*11278*/
							var _B2 = $k[--$j]; /*11278*/
							if ($k[--$j] && ((_B1 >= 2) && ((_B1 % 2) == 0))) { /*11284*/
								$k[$j++] = $1.sb2; /*11279*/
								$1.encc(); /*11279*/
								$k[$j++] = $get($1.msg, $1.i); /*11280*/
								$1.encb(); /*11280*/
								$k[$j++] = $get($1.msg, $1.i + 1); /*11281*/
								$1.encb(); /*11281*/
								$1.i = $1.i + 2; /*11282*/
								break; /*11283*/
							} /*11283*/
						} /*11283*/
						if ($1.i < ($1.msglen - 3)) { /*11298*/
							var _BI = $get($1.setb, $get($1.msg, $1.i)) !== undefined; /*11288*/
							var _BN = $get($1.setb, $get($1.msg, $1.i + 1)) !== undefined; /*11289*/
							$k[$j++] = _BI && _BN; /*11290*/
							$k[$j++] = $1.i + 2; /*11290*/
							$1.numsscr(); /*11290*/
							var _BP = $k[--$j]; /*11290*/
							var _BQ = $k[--$j]; /*11290*/
							if ($k[--$j] && ((_BP >= 3) && ((_BP % 2) == 1))) { /*11297*/
								$k[$j++] = $1.sb3; /*11291*/
								$1.encc(); /*11291*/
								$k[$j++] = $get($1.msg, $1.i); /*11292*/
								$1.encb(); /*11292*/
								$k[$j++] = $get($1.msg, $1.i + 1); /*11293*/
								$1.encb(); /*11293*/
								$k[$j++] = $get($1.msg, $1.i + 2); /*11294*/
								$1.encb(); /*11294*/
								$1.i = $1.i + 3; /*11295*/
								break; /*11296*/
							} /*11296*/
						} /*11296*/
						if ($1.i < ($1.msglen - 3)) { /*11312*/
							var _Bj = $get($1.setb, $get($1.msg, $1.i)) !== undefined; /*11301*/
							var _Bo = $get($1.setb, $get($1.msg, $1.i + 1)) !== undefined; /*11302*/
							var _Bt = $get($1.setb, $get($1.msg, $1.i + 2)) !== undefined; /*11303*/
							$k[$j++] = (_Bj && _Bo) && _Bt; /*11304*/
							$k[$j++] = $1.i + 3; /*11304*/
							$1.numsscr(); /*11304*/
							var _Bv = $k[--$j]; /*11304*/
							var _Bw = $k[--$j]; /*11304*/
							if ($k[--$j] && ((_Bv >= 2) && ((_Bv % 2) == 0))) { /*11311*/
								$k[$j++] = $1.sb3; /*11305*/
								$1.encc(); /*11305*/
								$k[$j++] = $get($1.msg, $1.i); /*11306*/
								$1.encb(); /*11306*/
								$k[$j++] = $get($1.msg, $1.i + 1); /*11307*/
								$1.encb(); /*11307*/
								$k[$j++] = $get($1.msg, $1.i + 2); /*11308*/
								$1.encb(); /*11308*/
								$1.i = $1.i + 3; /*11309*/
								break; /*11310*/
							} /*11310*/
						} /*11310*/
						$k[$j++] = $1.i; /*11314*/
						$1.abeforeb(); /*11314*/
						if ($k[--$j]) { /*11318*/
							$k[$j++] = $1.swa; /*11315*/
							$1.encc(); /*11315*/
							$1.cset = "seta"; /*11316*/
							break; /*11317*/
						} /*11317*/
						$k[$j++] = $1.swb; /*11320*/
						$1.encc(); /*11320*/
						$1.cset = "setb"; /*11321*/
						break; /*11322*/
					} /*11322*/
					break; /*11324*/
				} /*11324*/
			} /*11324*/
			$1.cws = $geti($1.cws, 0, $1.j); /*11328*/
		} /*11328*/
		$1.metrics = $a([$a([2, 7]), $a([3, 12]), $a([4, 17]), $a([5, 22]), $a([6, 27]), $a([7, 32]), $a([8, 37]), $a([9, 42]), $a([10, 47]), $a([11, 52]), $a([12, 57]), $a([13, 62]), $a([14, 67]), $a([15, 72]), $a([16, 77])]); /*11349*/
		$1.urows = $1.rows; /*11352*/
		$1.i = 0; /*11353*/
		for (;;) { /*11363*/
			$1.m = $get($1.metrics, $1.i); /*11355*/
			$1.r = $get($1.m, 0); /*11356*/
			$1.dcws = $get($1.m, 1); /*11357*/
			$1.okay = true; /*11358*/
			if (($1.urows != 0) && ($1.urows != $1.r)) { /*11359*/
				$1.okay = false; /*11359*/
			} /*11359*/
			if ($1.cws.length > $1.dcws) { /*11360*/
				$1.okay = false; /*11360*/
			} /*11360*/
			if ($1.okay) { /*11361*/
				break; /*11361*/
			} /*11361*/
			$1.i = $1.i + 1; /*11362*/
		} /*11362*/
		$k[$j++] = Infinity; /*11366*/
		$aload($1.cws); /*11366*/
		for (var _Co = 0, _Cp = $1.dcws - $1.cws.length; _Co < _Cp; _Co++) { /*11366*/
			$k[$j++] = 103; /*11366*/
		} /*11366*/
		$1.cws = $a(); /*11366*/
		$k[$j++] = Infinity; /*11369*/
		$k[$j++] = (($1.r - 2) * 7) + $1.mode; /*11369*/
		$aload($1.cws); /*11369*/
		$1.cws = $a(); /*11369*/
		$k[$j++] = 0; /*11372*/
		for (var _Cx = 0, _Cw = $1.dcws; _Cx <= _Cw; _Cx += 1) { /*11372*/
			var _D0 = $k[--$j]; /*11372*/
			$k[$j++] = _D0 + ((_Cx + 2) * $get($1.cws, _Cx)); /*11372*/
		} /*11372*/
		$1.c1 = $k[--$j] % 107; /*11373*/
		$k[$j++] = 0; /*11374*/
		for (var _D4 = 0, _D3 = $1.dcws; _D4 <= _D3; _D4 += 1) { /*11374*/
			var _D7 = $k[--$j]; /*11374*/
			$k[$j++] = _D7 + ((_D4 + 1) * $get($1.cws, _D4)); /*11374*/
		} /*11374*/
		$1.c2 = ($k[--$j] + ($1.c1 * ($1.dcws + 2))) % 107; /*11375*/
		$k[$j++] = Infinity; /*11376*/
		$aload($1.cws); /*11376*/
		$k[$j++] = $1.c1; /*11376*/
		$k[$j++] = $1.c2; /*11376*/
		$1.cws = $a(); /*11376*/
		$1.encs = $a(["212222", "222122", "222221", "121223", "121322", "131222", "122213", "122312", "132212", "221213", "221312", "231212", "112232", "122132", "122231", "113222", "123122", "123221", "223211", "221132", "221231", "213212", "223112", "312131", "311222", "321122", "321221", "312212", "322112", "322211", "212123", "212321", "232121", "111323", "131123", "131321", "112313", "132113", "132311", "211313", "231113", "231311", "112133", "112331", "132131", "113123", "113321", "133121", "313121", "211331", "231131", "213113", "213311", "213131", "311123", "311321", "331121", "312113", "312311", "332111", "314111", "221411", "431111", "111224", "111422", "121124", "121421", "141122", "141221", "112214", "112412", "122114", "122411", "142112", "142211", "241211", "221114", "413111", "241112", "134111", "111242", "121142", "121241", "114212", "124112", "124211", "411212", "421112", "421211", "212141", "214121", "412121", "111143", "111341", "131141", "114113", "114311", "411113", "411311", "113141", "114131", "311141", "411131", "211412", "211214", "211232", "211133"]); /*11396*/
		$1.startencs = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "3112", "3211", "2221", "2122", "1411", "1132", "1231", "1114", "3112"]); /*11402*/
		$1.stopencsodd = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "3112", "1132", "1231", "1114", "3112", "3211", "2221", "2122", "1411"]); /*11406*/
		$1.stopencseven = $a(["2122", "1411", "1132", "1231", "1114", "3112", "1132", "1231", "1114", "3112", "3211", "2221", "2122", "1411", "3211", "2221"]); /*11410*/
		if (($1.pos == -1) || (((~~($1.pos / 10)) % 2) == 1)) { /*11414*/
			$1.stopencs = $1.stopencsodd; /*11412*/
		} else { /*11414*/
			$1.stopencs = $1.stopencseven; /*11414*/
		} /*11414*/
		$1.rowbits = $a($1.r); /*11418*/
		for (var _DR = 0, _DQ = $1.r - 1; _DR <= _DQ; _DR += 1) { /*11435*/
			$1.i = _DR; /*11420*/
			$k[$j++] = Infinity; /*11430*/
			$k[$j++] = 10; /*11423*/
			$forall($get($1.startencs, $1.i), function() { /*11423*/
				var _DV = $k[--$j]; /*11423*/
				$k[$j++] = _DV - 48; /*11423*/
			}); /*11423*/
			$k[$j++] = 1; /*11427*/
			$forall($geti($1.cws, $1.i * 5, 5), function() { /*11427*/
				$forall($get($1.encs, $k[--$j]), function() { /*11426*/
					var _Dc = $k[--$j]; /*11426*/
					$k[$j++] = _Dc - 48; /*11426*/
				}); /*11426*/
			}); /*11426*/
			$forall($get($1.stopencs, $1.i), function() { /*11428*/
				var _Dg = $k[--$j]; /*11428*/
				$k[$j++] = _Dg - 48; /*11428*/
			}); /*11428*/
			$k[$j++] = 1; /*11429*/
			$1.sbs = $a(); /*11430*/
			$k[$j++] = Infinity; /*11431*/
			var _Di = $1.sbs; /*11432*/
			$k[$j++] = 1; /*11432*/
			for (var _Dj = 0, _Dk = _Di.length; _Dj < _Dk; _Dj++) { /*11432*/
				var _Dm = $k[--$j]; /*11432*/
				var _Dn = (_Dm == 0) ? 1 : 0; /*11432*/
				$k[$j++] = _Dm; /*11432*/
				for (var _Do = 0, _Dp = $get(_Di, _Dj); _Do < _Dp; _Do++) { /*11432*/
					$k[$j++] = _Dn /*11432*/
				} /*11432*/
			} /*11432*/
			$astore($a($counttomark() - 1)); /*11433*/
			var _Ds = $k[--$j]; /*11433*/
			var _Dt = $k[--$j]; /*11433*/
			var _Du = $k[--$j]; /*11433*/
			$put($1.rowbits, $1.i, _Ds); /*11434*/
		} /*11434*/
		$k[$j++] = Infinity; /*11447*/
		for (var _Dy = 0, _Dz = 81 * $1.sepheight; _Dy < _Dz; _Dy++) { /*11439*/
			$k[$j++] = 1; /*11439*/
		} /*11439*/
		for (var _E2 = 0, _E1 = $1.r - 2; _E2 <= _E1; _E2 += 1) { /*11444*/
			$1.i = _E2; /*11441*/
			for (var _E4 = 0, _E5 = $1.rowheight; _E4 < _E5; _E4++) { /*11442*/
				$aload($get($1.rowbits, $1.i)); /*11442*/
			} /*11442*/
			for (var _EA = 0, _EB = $1.sepheight; _EA < _EB; _EA++) { /*11443*/
				for (var _EC = 0, _ED = 10; _EC < _ED; _EC++) { /*11443*/
					$k[$j++] = 0; /*11443*/
				} /*11443*/
				for (var _EE = 0, _EF = 70; _EE < _EF; _EE++) { /*11443*/
					$k[$j++] = 1; /*11443*/
				} /*11443*/
				$k[$j++] = 0; /*11443*/
			} /*11443*/
		} /*11443*/
		for (var _EH = 0, _EI = $1.rowheight; _EH < _EI; _EH++) { /*11445*/
			$aload($get($1.rowbits, $1.r - 1)); /*11445*/
		} /*11445*/
		for (var _EN = 0, _EO = 81 * $1.sepheight; _EN < _EO; _EN++) { /*11446*/
			$k[$j++] = 1; /*11446*/
		} /*11446*/
		$1.pixs = $a(); /*11447*/
		var _EU = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: 81,
			pixy: ~~($1.pixs.length / 81),
			height: (~~($1.pixs.length / 81)) / 72,
			width: 81 / 72,
			opt: $1.options
		}; /*11457*/
		$k[$j++] = _EU; /*11460*/
		if (!$1.dontdraw) { /*11460*/
			$0.renmatrix(); /*11460*/
		} /*11460*/
	};
	$0.code49 = function() {
		var $1 = {}; /*11487*/
		$1.options = $k[--$j]; /*11489*/
		$1.barcode = $k[--$j]; /*11490*/
		$1.dontdraw = false; /*11492*/
		$1.mode = -1; /*11493*/
		$1.pos = -1; /*11494*/
		$1.rows = 0; /*11495*/
		$1.rowheight = 8; /*11496*/
		$1.sepheight = 1; /*11497*/
		$1.parse = false; /*11498*/
		$1.parsefnc = false; /*11499*/
		$forall($1.options, function() { /*11510*/
			var _3 = $k[--$j]; /*11510*/
			$1[$k[--$j]] = _3; /*11510*/
		}); /*11510*/
		$1.mode = ~~$1.mode; /*11512*/
		$1.pos = ~~$1.pos; /*11513*/
		$1.rows = ~~$1.rows; /*11514*/
		$1.rowheight = ~~$1.rowheight; /*11515*/
		$1.sepheight = ~~$1.sepheight; /*11516*/
		$1.barlen = $1.barcode.length; /*11539*/
		$1.s1 = -1; /*11542*/
		$1.s2 = -2; /*11542*/
		$1.fn1 = -3; /*11542*/
		$1.fn2 = -4; /*11542*/
		$1.fn3 = -5; /*11542*/
		$1.ns = -6; /*11542*/
		var _E = {
			FNC1: $1.fn1,
			FNC2: $1.fn2,
			FNC3: $1.fn3
		}; /*11546*/
		$1.fncvals = _E; /*11547*/
		$1.msg = $a($1.barlen); /*11548*/
		$1.i = 0; /*11549*/
		$1.j = 0; /*11549*/
		for (;;) { /*11563*/
			if ($1.i == $1.barlen) { /*11550*/
				break; /*11550*/
			} /*11550*/
			$1.char = $get($1.barcode, $1.i); /*11551*/
			if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*11559*/
				if ($get($1.barcode, $1.i + 1) != 94) { /*11557*/
					$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*11554*/
					$1.i = $1.i + 4; /*11555*/
				} else { /*11557*/
					$1.i = $1.i + 1; /*11557*/
				} /*11557*/
			} /*11557*/
			$put($1.msg, $1.j, $1.char); /*11560*/
			$1.i = $1.i + 1; /*11561*/
			$1.j = $1.j + 1; /*11562*/
		} /*11562*/
		$1.msg = $geti($1.msg, 0, $1.j); /*11564*/
		$1.msglen = $1.msg.length; /*11565*/
		$1.charmap = $a(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "-", ".", " ", "$", "/", "+", "%", $1.s1, $1.s2, $1.fn1, $1.fn2, $1.fn3, $1.ns]); /*11574*/
		$1.charvals = {}; /*11577*/
		for (var _q = 0; _q <= 48; _q += 1) { /*11583*/
			$1.i = _q; /*11579*/
			var _t = $get($1.charmap, $1.i); /*11580*/
			$k[$j++] = _t; /*11581*/
			if ($eq($type(_t), "stringtype")) { /*11581*/
				var _w = $get($k[--$j], 0); /*11581*/
				$k[$j++] = _w; /*11581*/
			} /*11581*/
			$put($1.charvals, $k[--$j], $1.i); /*11582*/
		} /*11582*/
		$1.combos = $a(["1 ", "1A", "1B", "1C", "1D", "1E", "1F", "1G", "1H", "1I", "1J", "1K", "1L", "1M", "1N", "1O", "1P", "1Q", "1R", "1S", "1T", "1U", "1V", "1W", "1X", "1Y", "1Z", "11", "12", "13", "14", "15", "  ", "16", "17", "18", " $", " %", "19", "10", "1-", "1.", "1$", " +", "1/", " -", " .", " /", " 0", " 1", " 2", " 3", " 4", " 5", " 6", " 7", " 8", " 9", "1+", "21", "22", "23", "24", "25", "26", " A", " B", " C", " D", " E", " F", " G", " H", " I", " J", " K", " L", " M", " N", " O", " P", " Q", " R", " S", " T", " U", " V", " W", " X", " Y", " Z", "27", "28", "29", "20", "2-", "2.", "2A", "2B", "2C", "2D", "2E", "2F", "2G", "2H", "2I", "2J", "2K", "2L", "2M", "2N", "2O", "2P", "2Q", "2R", "2S", "2T", "2U", "2V", "2W", "2X", "2Y", "2Z", "2$", "2/", "2+", "2%", "2 "]); /*11595*/
		for (var _11 = 0; _11 <= 127; _11 += 1) { /*11605*/
			$1.i = _11; /*11597*/
			var _14 = $get($1.combos, $1.i); /*11598*/
			$1.c1 = $get(_14, 0); /*11598*/
			$1.c2 = $get(_14, 1); /*11598*/
			if ($1.c1 == 49) { /*11601*/
				$put($1.charvals, $1.i, $a([$get($1.charvals, $1.s1), $get($1.charvals, $1.c2)])); /*11600*/
			} /*11600*/
			if ($1.c1 == 50) { /*11604*/
				$put($1.charvals, $1.i, $a([$get($1.charvals, $1.s2), $get($1.charvals, $1.c2)])); /*11603*/
			} /*11603*/
		} /*11603*/
		$1.encodealpha = function() {
			var _1T = $get($1.charvals, $k[--$j]); /*11608*/
			$k[$j++] = _1T; /*11609*/
			if ($ne($type(_1T), "arraytype")) { /*11609*/
				$astore($a(1)); /*11609*/
			} /*11609*/
			var _1W = $k[--$j]; /*11610*/
			$puti($1.cws, $1.j, _1W); /*11610*/
			$1.j = _1W.length + $1.j; /*11611*/
		}; /*11612*/
		$1.base48 = function() {
			var _1a = $k[--$j]; /*11615*/
			$k[$j++] = 0; /*11615*/
			$forall(_1a, function() { /*11615*/
				var _1b = $k[--$j]; /*11615*/
				var _1c = $k[--$j]; /*11615*/
				$k[$j++] = (_1b - 48) + (_1c * 10); /*11615*/
			}); /*11615*/
			$k[$j++] = Infinity; /*11616*/
			var _1d = $k[--$j]; /*11616*/
			var _1e = $k[--$j]; /*11616*/
			var _1f = $k[--$j]; /*11616*/
			$k[$j++] = _1d; /*11616*/
			$k[$j++] = _1e; /*11616*/
			for (var _1g = 0, _1h = _1f - 1; _1g < _1h; _1g++) { /*11616*/
				var _1i = $k[--$j]; /*11616*/
				$k[$j++] = _1i % 48; /*11616*/
				$k[$j++] = ~~(_1i / 48); /*11616*/
			} /*11616*/
			var _1j = $a(); /*11616*/
			$k[$j++] = _1j; /*11617*/
			$k[$j++] = Infinity; /*11617*/
			var _1k = $k[--$j]; /*11617*/
			var _1l = $k[--$j]; /*11617*/
			$k[$j++] = _1k; /*11617*/
			$k[$j++] = _1l; /*11617*/
			for (var _1m = _1l.length - 1; _1m >= 0; _1m -= 1) { /*11617*/
				var _1n = $k[--$j]; /*11617*/
				$k[$j++] = $get(_1n, _1m); /*11617*/
				$k[$j++] = _1n; /*11617*/
			} /*11617*/
			$j--; /*11617*/
			var _1p = $a(); /*11617*/
			$puti($1.cws, $1.j, _1p); /*11618*/
			$1.j = _1p.length + $1.j; /*11619*/
		}; /*11620*/
		$1.encodenumeric = function() {
			$1.nums = $k[--$j]; /*11623*/
			var _1v = $1.nums.length; /*11624*/
			var _1w = _1v % 5; /*11624*/
			$k[$j++] = "pre"; /*11624*/
			$k[$j++] = _1v; /*11624*/
			$k[$j++] = _1w; /*11624*/
			if (_1w != 2) { /*11624*/
				var _1x = $k[--$j]; /*11624*/
				var _1y = $k[--$j]; /*11624*/
				$k[$j++] = _1y - _1x; /*11624*/
			} else { /*11624*/
				var _1z = $k[--$j]; /*11624*/
				var _20 = $k[--$j]; /*11624*/
				$k[$j++] = (_20 - _1z) - 5; /*11624*/
			} /*11624*/
			var _21 = $k[--$j]; /*11624*/
			$1[$k[--$j]] = _21; /*11624*/
			for (var _25 = 0, _24 = $1.pre - 1; _25 <= _24; _25 += 5) { /*11625*/
				$k[$j++] = 3; /*11625*/
				$k[$j++] = $geti($1.nums, _25, 5); /*11625*/
				$1.base48(); /*11625*/
			} /*11625*/
			$1.nums = $geti($1.nums, $1.pre, $1.nums.length - $1.pre); /*11626*/
			var _2E = $1.nums.length; /*11628*/
			$k[$j++] = _2E; /*11628*/
			if (_2E == 1) { /*11628*/
				$k[$j++] = $get($1.nums, $1.i); /*11628*/
				$1.encodealpha(); /*11628*/
			} /*11628*/
			var _2I = $k[--$j]; /*11629*/
			$k[$j++] = _2I; /*11629*/
			if (_2I == 3) { /*11629*/
				$k[$j++] = 2; /*11629*/
				$k[$j++] = $1.nums; /*11629*/
				$1.base48(); /*11629*/
			} /*11629*/
			var _2K = $k[--$j]; /*11630*/
			$k[$j++] = _2K; /*11630*/
			if (_2K == 4) { /*11630*/
				$k[$j++] = 3; /*11630*/
				$k[$j++] = Infinity; /*11630*/
				$k[$j++] = 49; /*11630*/
				$k[$j++] = 48; /*11630*/
				$aload($1.nums); /*11630*/
				var _2M = $a(); /*11630*/
				$k[$j++] = _2M; /*11630*/
				$1.base48(); /*11630*/
			} /*11630*/
			if ($k[--$j] == 7) { /*11634*/
				$k[$j++] = 3; /*11632*/
				$k[$j++] = Infinity; /*11632*/
				$k[$j++] = 49; /*11632*/
				$k[$j++] = 48; /*11632*/
				$aload($geti($1.nums, 0, 4)); /*11632*/
				var _2Q = $a(); /*11632*/
				$k[$j++] = _2Q; /*11632*/
				$1.base48(); /*11632*/
				$k[$j++] = 2; /*11633*/
				$k[$j++] = $geti($1.nums, 4, 3); /*11633*/
				$1.base48(); /*11633*/
			} /*11633*/
		}; /*11635*/
		$k[$j++] = Infinity; /*11638*/
		for (var _2U = 0, _2V = $1.msglen; _2U < _2V; _2U++) { /*11638*/
			$k[$j++] = 0; /*11638*/
		} /*11638*/
		$k[$j++] = 0; /*11638*/
		$1.numericruns = $a(); /*11638*/
		for (var _2Y = $1.msglen - 1; _2Y >= 0; _2Y -= 1) { /*11647*/
			$1.i = _2Y; /*11640*/
			var _2b = $get($1.msg, $1.i); /*11641*/
			if ((_2b >= 48) && (_2b <= 57)) { /*11645*/
				$put($1.numericruns, $1.i, $get($1.numericruns, $1.i + 1) + 1); /*11643*/
			} else { /*11645*/
				$put($1.numericruns, $1.i, 0); /*11645*/
			} /*11645*/
		} /*11645*/
		if ($1.mode == -1) { /*11659*/
			for (;;) { /*11658*/
				if ($1.pos != -1) { /*11652*/
					$1.mode = 3; /*11652*/
					break; /*11652*/
				} /*11652*/
				if ($get($1.numericruns, 0) >= 5) { /*11653*/
					$1.mode = 2; /*11653*/
					break; /*11653*/
				} /*11653*/
				var _2q = $get($1.charvals, $get($1.msg, 0)); /*11654*/
				$k[$j++] = _2q; /*11655*/
				if ($ne($type(_2q), "arraytype")) { /*11655*/
					$j--; /*11655*/
					$1.mode = 0; /*11655*/
					break; /*11655*/
				} /*11655*/
				var _2u = ($get($k[--$j], 0) == 43) ? 4 : 5; /*11656*/
				$1.mode = _2u; /*11656*/
				break; /*11657*/
			} /*11657*/
		} /*11657*/
		$1.cws = $a(($1.msglen * 2) + 1); /*11661*/
		$1.method = "alpha"; /*11662*/
		$1.i = -1; /*11662*/
		$1.j = -1; /*11662*/
		if (($1.mode == 0) || ($1.mode == 1)) { /*11665*/
			$1.method = "alpha"; /*11665*/
			$1.i = 0; /*11665*/
			$1.j = 0; /*11665*/
		} /*11665*/
		if ($1.mode == 2) { /*11666*/
			$1.method = "numeric"; /*11666*/
			$1.i = 0; /*11666*/
			$1.j = 0; /*11666*/
		} /*11666*/
		if ($1.mode == 3) { /*11680*/
			$1.posval = $a([12, 22, 13, 23, 33, 14, 24, 34, 44, 15, 25, 35, 45, 55, 16, 26, 36, 46, 56, 66, 17, 27, 37, 47, 57, 67, 77, 18, 28, 38, 48, 58, 68, 78, 88, 19, 29, 39, 49, 59, 69, 79, 89, 99]); /*11677*/
			$k[$j++] = $1.cws; /*11678*/
			$k[$j++] = 0; /*11678*/
			for (var _33 = 0; _33 <= 43; _33 += 1) { /*11678*/
				$k[$j++] = _33; /*11678*/
				if ($get($1.posval, _33) != $1.pos) { /*11678*/
					$j--; /*11678*/
				} /*11678*/
			} /*11678*/
			var _37 = $k[--$j]; /*11678*/
			var _38 = $k[--$j]; /*11678*/
			$put($k[--$j], _38, _37 + 1); /*11678*/
			$1.method = "alpha"; /*11679*/
			$1.i = 0; /*11679*/
			$1.j = 1; /*11679*/
		} /*11679*/
		if (($1.mode == 4) || ($1.mode == 5)) { /*11684*/
			$put($1.cws, 0, $get($get($1.charvals, $get($1.msg, 0)), 1)); /*11682*/
			$1.method = "alpha"; /*11683*/
			$1.i = 1; /*11683*/
			$1.j = 1; /*11683*/
		} /*11683*/
		for (;;) { /*11711*/
			if ($1.i == $1.msglen) { /*11688*/
				break; /*11688*/
			} /*11688*/
			for (;;) { /*11710*/
				if ($eq($1.method, "alpha")) { /*11699*/
					if ($get($1.numericruns, $1.i) >= 5) { /*11695*/
						$k[$j++] = $1.ns; /*11692*/
						$1.encodealpha(); /*11692*/
						$1.method = "numeric"; /*11693*/
						break; /*11694*/
					} /*11694*/
					$k[$j++] = $get($1.msg, $1.i); /*11696*/
					$1.encodealpha(); /*11696*/
					$1.i = $1.i + 1; /*11697*/
					break; /*11698*/
				} /*11698*/
				if ($eq($1.method, "numeric")) { /*11709*/
					if ($get($1.numericruns, $1.i) < 5) { /*11705*/
						$k[$j++] = $1.ns; /*11702*/
						$1.encodealpha(); /*11702*/
						$1.method = "alpha"; /*11703*/
						break; /*11704*/
					} /*11704*/
					$k[$j++] = $geti($1.msg, $1.i, $get($1.numericruns, $1.i)); /*11706*/
					$1.encodenumeric(); /*11706*/
					$1.i = $1.i + $get($1.numericruns, $1.i); /*11707*/
					break; /*11708*/
				} /*11708*/
			} /*11708*/
		} /*11708*/
		$1.cws = $geti($1.cws, 0, $1.j); /*11712*/
		$1.metrics = $a([$a([2, 9]), $a([3, 16]), $a([4, 23]), $a([5, 30]), $a([6, 37]), $a([7, 42]), $a([8, 49])]); /*11724*/
		$1.urows = $1.rows; /*11727*/
		$1.i = 0; /*11728*/
		for (;;) { /*11738*/
			$1.m = $get($1.metrics, $1.i); /*11730*/
			$1.r = $get($1.m, 0); /*11731*/
			$1.dcws = $get($1.m, 1); /*11732*/
			$1.okay = true; /*11733*/
			if (($1.urows != 0) && ($1.urows != $1.r)) { /*11734*/
				$1.okay = false; /*11734*/
			} /*11734*/
			if ($1.cws.length > $1.dcws) { /*11735*/
				$1.okay = false; /*11735*/
			} /*11735*/
			if ($1.okay) { /*11736*/
				break; /*11736*/
			} /*11736*/
			$1.i = $1.i + 1; /*11737*/
		} /*11737*/
		$k[$j++] = Infinity; /*11741*/
		$aload($1.cws); /*11741*/
		for (var _4B = 0, _4C = $1.dcws - $1.cws.length; _4B < _4C; _4B++) { /*11741*/
			$k[$j++] = 48; /*11741*/
		} /*11741*/
		$1.cws = $a(); /*11741*/
		$1.ccs = $a($1.r * 8); /*11744*/
		$1.j = 0; /*11745*/
		for (var _4I = 0, _4H = $1.r - 2; _4I <= _4H; _4I += 1) { /*11752*/
			$1.i = _4I; /*11747*/
			$1.cc = $geti($1.cws, $1.j, 7); /*11748*/
			$puti($1.ccs, $1.i * 8, $1.cc); /*11749*/
			$k[$j++] = $1.ccs; /*11750*/
			$k[$j++] = ($1.i * 8) + 7; /*11750*/
			$k[$j++] = 0; /*11750*/
			$forall($1.cc, function() { /*11750*/
				var _4S = $k[--$j]; /*11750*/
				var _4T = $k[--$j]; /*11750*/
				$k[$j++] = _4T + _4S; /*11750*/
			}); /*11750*/
			var _4U = $k[--$j]; /*11750*/
			var _4V = $k[--$j]; /*11750*/
			$put($k[--$j], _4V, _4U % 49); /*11750*/
			$1.j = $1.j + 7; /*11751*/
		} /*11751*/
		if ($1.j < $1.dcws) { /*11755*/
			$puti($1.ccs, $1.ccs.length - 8, $geti($1.cws, $1.j, $1.dcws - $1.j)); /*11754*/
		} /*11754*/
		$1.cr7 = (($1.r - 2) * 7) + $1.mode; /*11758*/
		$put($1.ccs, $1.ccs.length - 2, $1.cr7); /*11759*/
		var _4m = $a([1, 9, 31, 26, 2, 12, 17, 23, 37, 18, 22, 6, 27, 44, 15, 43, 39, 11, 13, 5, 41, 33, 36, 8, 4, 32, 3, 19, 40, 25, 29, 10, 24, 30]); /*11763*/
		$k[$j++] = _4m; /*11764*/
		$k[$j++] = _4m; /*11764*/
		$k[$j++] = Infinity; /*11764*/
		var _4n = $k[--$j]; /*11764*/
		var _4p = $geti($k[--$j], 0, 32); /*11764*/
		$k[$j++] = _4n; /*11764*/
		$k[$j++] = 20; /*11764*/
		$aload(_4p); /*11764*/
		$1.weightx = $a(); /*11764*/
		var _4r = $k[--$j]; /*11765*/
		$k[$j++] = _4r; /*11765*/
		$k[$j++] = _4r; /*11765*/
		$k[$j++] = Infinity; /*11765*/
		var _4s = $k[--$j]; /*11765*/
		var _4u = $geti($k[--$j], 1, 32); /*11765*/
		$k[$j++] = _4s; /*11765*/
		$k[$j++] = 16; /*11765*/
		$aload(_4u); /*11765*/
		$1.weighty = $a(); /*11765*/
		$k[$j++] = Infinity; /*11766*/
		var _4w = $k[--$j]; /*11766*/
		var _4y = $geti($k[--$j], 2, 32); /*11766*/
		$k[$j++] = _4w; /*11766*/
		$k[$j++] = 38; /*11766*/
		$aload(_4y); /*11766*/
		$1.weightz = $a(); /*11766*/
		$1.calccheck = function() {
			$1.weights = $k[--$j]; /*11768*/
			$1.score = 0; /*11769*/
			for (var _53 = 0, _52 = (~~((($1.r - 1) * 8) / 2)) - 1; _53 <= _52; _53 += 1) { /*11774*/
				$1.i = _53; /*11771*/
				$1.score = ((($get($1.ccs, $1.i * 2) * 49) + $get($1.ccs, ($1.i * 2) + 1)) * $get($1.weights, $1.i + 1)) + $1.score; /*11773*/
			} /*11773*/
			$k[$j++] = $1.score; /*11775*/
		}; /*11776*/
		$1.lastrow = $geti($1.ccs, $1.ccs.length - 8, 8); /*11777*/
		if ($1.r >= 7) { /*11784*/
			$k[$j++] = $1.cr7 * $get($1.weightz, 0); /*11781*/
			$k[$j++] = $1.weightz; /*11781*/
			$1.calccheck(); /*11781*/
			var _5N = $k[--$j]; /*11781*/
			var _5P = ($k[--$j] + _5N) % 2401; /*11782*/
			$k[$j++] = ~~(_5P / 49); /*11782*/
			$k[$j++] = _5P % 49; /*11782*/
			$astore($a(2)); /*11782*/
			$puti($1.lastrow, 0, $k[--$j]); /*11783*/
		} /*11783*/
		$1.wr1 = ($get($1.lastrow, 0) * 49) + $get($1.lastrow, 1); /*11785*/
		$k[$j++] = $1.cr7 * $get($1.weighty, 0); /*11788*/
		$k[$j++] = $1.weighty; /*11788*/
		$1.calccheck(); /*11788*/
		var _5b = $k[--$j]; /*11788*/
		var _5h = (($k[--$j] + _5b) + ($1.wr1 * $get($1.weighty, ($1.r * 4) - 3))) % 2401; /*11790*/
		$1.wr2 = _5h; /*11790*/
		$k[$j++] = ~~(_5h / 49); /*11791*/
		$k[$j++] = _5h % 49; /*11791*/
		$astore($a(2)); /*11791*/
		$puti($1.lastrow, 2, $k[--$j]); /*11792*/
		$k[$j++] = $1.cr7 * $get($1.weightx, 0); /*11795*/
		$k[$j++] = $1.weightx; /*11795*/
		$1.calccheck(); /*11795*/
		var _5p = $k[--$j]; /*11795*/
		var _5z = ((($k[--$j] + _5p) + ($1.wr1 * $get($1.weightx, ($1.r * 4) - 3))) + ($1.wr2 * $get($1.weightx, ($1.r * 4) - 2))) % 2401; /*11799*/
		$k[$j++] = ~~(_5z / 49); /*11799*/
		$k[$j++] = _5z % 49; /*11799*/
		$astore($a(2)); /*11799*/
		$puti($1.lastrow, 4, $k[--$j]); /*11800*/
		$k[$j++] = 0; /*11803*/
		$forall($geti($1.ccs, $1.ccs.length - 8, 7), function() { /*11803*/
			var _66 = $k[--$j]; /*11803*/
			var _67 = $k[--$j]; /*11803*/
			$k[$j++] = _67 + _66; /*11803*/
		}); /*11803*/
		$put($1.ccs, $1.ccs.length - 1, $k[--$j] % 49); /*11804*/
		$1.patterns = $a([$a(["11521132", "25112131", "14212132", "25121221", "14221222", "12412132", "23321221", "12421222", "21521221", "15112222", "15121312", "13312222", "24221311", "13321312", "11512222", "22421311", "11521312", "25112311", "14212312", "23312311", "12412312", "21512311", "16121131", "14321131", "12521131", "15212131", "15221221", "13412131", "13421221", "11612131", "16112221", "16121311", "14312221", "14321311", "12512221", "12521311", "15212311", "13412311", "11612311", "11131135", "31131133", "51131131", "21122134", "41122132", "21131224", "41131222", "11113135", "31113133", "51113131", "11122225", "31122223", "51122221", "11131315", "31131313", "51131311", "21113224", "41113222", "21122314", "41122312", "11113315", "31113313", "51113311", "12131134", "32131132", "21231133", "41231131", "22122133", "42122131", "11222134", "22131223", "42131221", "11231224", "31231222", "12113134", "32113132", "12122224", "32122222", "12131314", "32131312", "21231313", "41231311", "22113223", "42113221", "11213224", "22122313", "42122311", "11222314", "31222312", "12113314", "32113312", "21213313", "41213311", "13131133", "33131131", "22231132", "11331133", "31331131", "23122132", "12222133", "23131222", "12231223", "32231221", "21331222", "13113133", "33113131", "13122223", "33122221", "11313133", "13131313", "33131311", "11322223", "22231312", "11331313", "31331311", "23113222", "12213223", "23122312", "12222313", "32222311", "21322312", "13113313", "33113311", "22213312", "11313313", "31313311", "14131132", "23231131", "12331132", "21431131", "24122131", "13222132", "24131221", "13231222", "11422132", "22331221", "11431222", "14113132", "14122222", "12313132", "14131312", "12322222", "23231311", "12331312", "21431311", "24113221", "13213222", "24122311", "13222312", "11413222", "22322311", "11422312", "14113312", "23213311", "12313312", "21413311", "15131131", "13331131", "14222131", "14231221", "12422131", "12431221", "15113131", "15122221", "13313131", "15131311", "13322221", "11513131", "13331311", "11522221", "14213221", "14222311", "12413221", "12422311", "15113311", "13313311", "11513311", "11141134", "31141132", "21132133", "41132131", "21141223", "41141221", "11123134", "31123132", "11132224", "31132222", "11141314", "31141312", "21114133", "41114131", "21123223", "41123221", "21132313", "41132311", "11114224", "31114222", "11123314", "31123312", "21114313", "41114311", "12141133", "32141131", "21241132", "22132132", "11232133", "22141222", "11241223", "31241221", "12123133", "32123131", "12132223", "32132221", "12141313", "32141311", "21241312", "22114132", "11214133", "22123222", "11223223", "22132312", "11232313", "31232311", "12114223", "32114221", "12123313", "32123311", "21223312", "22114312", "11214313", "31214311", "13141132", "22241131", "11341132", "23132131", "12232132", "23141221", "12241222", "21341221", "13123132", "13132222", "11323132", "13141312", "11332222", "22241311", "11341312", "23114131", "12214132", "23123221", "12223222", "23132311", "12232312", "21332311", "13114222", "13123312", "11314222", "22223311", "11323312", "23114311", "12214312", "21314311", "14141131", "12341131", "13232131", "13241221", "11432131", "14123131", "14132221", "12323131", "14141311", "12332221", "12341311", "13214131", "13223221", "11414131", "13232311", "11423221", "11432311", "14114221", "14123311", "12314221", "12323311", "13214311", "11414311", "11151133", "31151131", "21142132", "21151222", "11133133", "31133131", "11142223", "31142221", "11151313", "31151311", "21124132", "21133222", "21142312", "11115133", "31115131", "11124223", "31124221", "11133313", "31133311", "21115222", "21124312", "12151132", "21251131", "22142131", "11242132", "22151221", "11251222", "12133132", "12142222", "12151312", "21251311", "22124131", "11224132", "22133221", "11233222", "22142311", "11242312", "12115132", "12124222", "12133312", "21233311", "22115221", "11215222", "22124311", "11224312", "13151131", "12242131", "12251221", "13133131", "13142221", "11333131", "13151311", "11342221", "12224131", "12233221", "12242311", "13115131", "13124221", "11315131", "13133311", "11324221", "11333311", "12215221", "12224311", "11161132", "21152131", "21161221", "11143132", "11152222", "11161312", "21134131", "21143221", "21152311", "11125132", "11134222", "11143312", "21116131", "21125221", "21134311", "12161131", "11252131", "12143131", "12152221", "12161311", "11234131", "11243221", "11252311", "12125131", "12134221", "12143311", "11216131", "11225221", "11234311", "11111236", "31111234", "51111232", "21111325", "41111323", "61111321", "11111416", "31111414", "51111412", "31211143", "51211141", "12111235", "32111233", "52111231", "21211234", "41211232", "22111324", "42111322", "11211325", "31211323", "51211321", "12111415", "32111413", "52111411", "21211414", "41211412", "12211144", "32211142", "21311143", "41311141", "13111234", "33111232", "22211233", "42211231", "11311234", "31311232", "23111323", "43111321", "12211324", "32211322", "21311323", "41311321", "13111414", "33111412", "22211413", "42211411", "11311414", "31311412", "13211143", "33211141", "22311142", "11411143", "31411141", "14111233", "34111231", "23211232", "12311233", "32311231", "21411232", "24111322", "13211323", "33211321", "22311322", "11411323", "31411321", "14111413", "34111411", "23211412", "12311413", "32311411", "21411412", "14211142", "23311141", "12411142", "21511141", "15111232", "24211231", "13311232", "22411231", "11511232", "25111321", "14211322", "23311321", "12411322", "21511321", "15111412", "24211411", "13311412", "22411411", "11511412", "15211141", "13411141", "11611141", "16111231", "14311231", "12511231", "15211321", "13411321", "11611321", "16111411", "14311411", "12511411", "21121144", "41121142", "11112145", "31112143", "51112141", "11121235", "31121233", "51121231", "21112234", "41112232", "21121324", "41121322", "11112325", "31112323", "51112321", "11121415", "31121413", "51121411", "21112414", "41112412", "22121143", "42121141", "11221144", "31221142", "12112144", "32112142", "12121234", "32121232", "21221233", "41221231", "22112233", "42112231", "11212234", "22121323", "42121321", "11221324", "31221322", "12112324", "32112322", "12121414", "32121412", "21221413", "41221411", "22112413", "42112411", "11212414", "31212412", "23121142", "12221143", "32221141", "21321142", "13112143", "33112141", "13121233", "33121231", "11312143", "22221232", "11321233", "31321231", "23112232", "12212233", "23121322", "12221323", "32221321", "21321322", "13112323", "33112321", "13121413", "33121411", "11312323", "22221412", "11321413", "31321411", "23112412", "12212413", "32212411", "21312412", "24121141", "13221142", "22321141", "11421142", "14112142", "14121232", "12312142", "23221231", "12321232", "21421231", "24112231", "13212232", "24121321", "13221322", "11412232", "22321321", "11421322", "14112322", "14121412", "12312322", "23221411", "12321412", "21421411", "24112411", "13212412", "22312411", "11412412", "14221141", "12421141", "15112141", "15121231", "13312141", "13321231", "11512141", "11521231", "14212231", "14221321", "12412231", "12421321", "15112321", "15121411", "13312321", "13321411", "11512321", "11521411", "14212411", "12412411", "21131143", "41131141", "11122144", "31122142", "11131234", "31131232", "21113143", "41113141", "21122233", "41122231", "21131323", "41131321", "11113234", "31113232", "11122324", "31122322", "11131414", "31131412", "21113323", "41113321", "21122413", "41122411", "11113414", "31113412", "22131142", "11231143", "31231141", "12122143", "32122141", "12131233", "32131231", "21231232", "22113142", "11213143", "22122232", "11222233", "22131322", "11231323", "31231321", "12113233", "32113231", "12122323", "32122321", "12131413", "32131411", "21231412", "22113322", "11213323", "22122412", "11222413", "31222411", "12113413", "32113411", "21213412", "23131141", "12231142", "21331141", "13122142", "13131232", "11322142", "22231231", "11331232", "23113141", "12213142", "23122231", "12222232", "23131321", "12231322", "21331321", "13113232", "13122322", "11313232", "13131412", "11322322", "22231411", "11331412", "23113321", "12213322", "23122411", "12222412", "21322411", "13113412", "22213411", "11313412", "13231141", "11431141", "14122141", "14131231", "12322141", "12331231", "13213141", "13222231", "11413141", "13231321", "11422231", "11431321", "14113231", "14122321", "12313231", "14131411", "12322321", "12331411", "13213321", "13222411", "11413321", "11422411", "14113411", "12313411", "21141142", "11132143", "31132141", "11141233", "31141231", "21123142", "21132232", "21141322", "11114143", "31114141", "11123233", "31123231", "11132323", "31132321", "11141413", "31141411", "21114232", "21123322", "21132412", "11114323", "31114321", "11123413", "31123411", "22141141", "11241142", "12132142", "12141232", "21241231", "22123141", "11223142", "22132231", "11232232", "22141321", "11241322", "12114142", "12123232", "12132322", "12141412", "21241411", "22114231", "11214232", "22123321", "11223322", "22132411", "11232412", "12114322", "12123412", "21223411", "12241141", "13132141", "13141231", "11332141", "11341231", "12223141", "12232231", "12241321", "13114141", "13123231", "11314141", "13132321", "11323231", "13141411", "11332321", "11341411", "12214231", "12223321", "12232411", "13114321", "13123411", "11314321", "11323411", "21151141", "11142142", "11151232", "21133141", "21142231", "21151321", "11124142", "11133232", "11142322", "11151412", "21115141", "21124231", "21133321", "21142411", "11115232", "11124322", "11133412", "11251141", "12142141", "12151231", "11233141", "11242231", "11251321", "12124141", "12133231", "12142321", "12151411", "11215141", "11224231", "11233321", "11242411", "12115231", "12124321", "12133411", "11152141", "11161231", "11134141", "11143231", "11152321", "11161411", "11116141", "11125231", "11134321", "11143411", "21111244", "41111242", "11111335", "31111333", "51111331", "21111424", "41111422", "11111515", "31111513", "51111511", "21211153", "41211151", "22111243", "42111241", "11211244", "31211242", "12111334", "32111332", "21211333", "41211331", "22111423", "42111421", "11211424", "31211422", "12111514", "32111512", "21211513", "41211511", "22211152", "11311153", "31311151", "23111242", "12211243", "32211241", "21311242", "13111333", "33111331", "22211332", "11311333", "31311331", "23111422", "12211423", "32211421", "21311422", "13111513", "33111511", "22211512", "11311513", "31311511", "23211151", "12311152", "21411151", "24111241", "13211242", "22311241", "11411242", "14111332", "23211331", "12311332", "21411331", "24111421", "13211422", "22311421", "11411422", "14111512", "23211511", "12311512", "21411511", "13311151", "11511151", "14211241", "12411241", "15111331", "13311331", "11511331", "14211421", "12411421", "15111511", "13311511", "11511511", "31121152", "21112153", "41112151", "21121243", "41121241", "11112244", "31112242", "11121334", "31121332", "21112333", "41112331", "21121423", "41121421", "11112424", "31112422", "11121514", "31121512", "21112513", "41112511", "12121153", "32121151", "21221152", "22112152", "11212153", "22121242", "11221243", "31221241", "12112243", "32112241", "12121333", "32121331", "21221332", "22112332", "11212333", "22121422", "11221423", "31221421", "12112423", "32112421", "12121513", "32121511", "21221512", "22112512", "11212513", "31212511", "13121152", "22221151", "11321152", "23112151", "12212152", "23121241", "12221242", "21321241", "13112242", "13121332", "11312242", "22221331", "11321332", "23112331", "12212332", "23121421", "12221422", "21321421", "13112422", "13121512", "11312422", "22221511", "11321512", "23112511", "12212512", "21312511", "14121151", "12321151", "13212151", "13221241", "11412151", "11421241", "14112241", "14121331", "12312241", "12321331", "13212331", "13221421", "11412331", "11421421", "14112421", "14121511", "12312421", "12321511", "13212511", "11412511", "11131153", "31131151", "21122152", "21131242", "11113153", "31113151", "11122243", "31122241", "11131333", "31131331", "21113242", "21122332", "21131422", "11113333", "31113331", "11122423", "31122421", "11131513", "31131511", "21113422", "21122512", "12131152", "21231151", "22122151", "11222152", "22131241", "11231242", "12113152", "12122242", "12131332", "21231331", "22113241", "11213242", "22122331", "11222332", "22131421", "11231422", "12113332", "12122422", "12131512", "21231511", "22113421", "11213422", "22122511", "11222512", "13131151", "11331151", "12222151", "12231241", "13113151", "13122241", "11313151", "13131331", "11322241", "11331331", "12213241", "12222331", "12231421", "13113331", "13122421", "11313331", "13131511", "11322421", "11331511", "12213421", "12222511", "11141152", "21132151", "21141241", "11123152", "11132242", "11141332", "21114151", "21123241", "21132331", "21141421", "11114242", "11123332", "11132422", "11141512", "21114331", "21123421", "21132511", "12141151", "11232151", "11241241", "12123151", "12132241", "12141331", "11214151", "11223241", "11232331", "11241421", "12114241", "12123331", "12132421", "12141511", "11214331", "11223421", "11232511", "11151151", "11133151", "11142241", "11151331", "11115151", "11124241", "11133331", "11142421", "11151511", "11111254", "31111252", "21111343", "41111341", "11111434", "31111432", "21111523", "41111521", "11111614", "31111612", "31211161", "12111253", "32111251", "21211252", "22111342", "11211343", "31211341", "12111433", "32111431", "21211432", "22111522", "11211523", "31211521", "12111613", "32111611", "21211612", "12211162", "21311161", "13111252", "22211251", "11311252", "23111341", "12211342", "21311341", "13111432", "22211431", "11311432", "23111521", "12211522", "21311521", "13111612", "22211611", "11311612", "13211161", "11411161", "14111251", "12311251", "13211341", "11411341", "14111431", "12311431", "13211521", "11411521", "14111611", "12311611", "21121162", "11112163", "31112161", "11121253", "31121251", "21112252", "21121342", "11112343", "31112341", "11121433", "31121431", "21112432", "21121522", "11112523", "31112521", "11121613", "31121611", "22121161", "11221162", "12112162", "12121252", "21221251", "22112251", "11212252", "22121341", "11221342", "12112342", "12121432", "21221431", "22112431", "11212432", "22121521", "11221522", "12112522", "12121612", "21221611", "12221161", "13112161", "13121251", "11312161", "11321251", "32121115", "52121113", "21221116", "41221114", "61221112", "22112116", "42112114", "31212115", "51212113", "13121116", "33121114", "22221115", "42221113", "11321116", "31321114", "51321112", "23112115", "43112113", "12212116", "32212114", "52212112", "21312115", "41312113", "61312111", "14121115", "34121113", "23221114", "43221112", "12321115", "32321113", "52321111", "21421114", "41421112", "24112114", "13212115", "33212113", "22312114", "42312112", "11412115", "31412113", "51412111", "15121114", "24221113", "13321114", "33321112", "22421113", "42421111", "11521114", "31521112", "25112113", "14212114", "34212112", "23312113", "43312111", "12412114", "32412112", "21512113", "41512111", "16121113", "25221112", "14321113", "34321111", "23421112", "12521113", "32521111", "15212113", "24312112", "13412113", "33412111", "22512112", "11612113", "31612111", "31131115", "51131113", "21122116", "41122114", "61122112", "31113115", "51113113", "12131116", "32131114", "52131112", "21231115", "41231113", "61231111", "22122115", "42122113", "11222116", "31222114", "51222112", "12113116", "32113114", "52113112", "21213115", "41213113", "61213111", "13131115", "33131113", "22231114", "42231112", "11331115", "31331113", "51331111", "23122114", "43122112", "12222115", "32222113", "52222111", "21322114", "41322112", "13113115", "33113113", "22213114", "42213112", "11313115", "31313113", "51313111", "14131114", "34131112", "23231113", "43231111", "12331114", "32331112", "21431113", "41431111", "24122113", "13222114", "33222112", "22322113", "42322111", "11422114", "31422112", "14113114", "34113112", "23213113", "43213111", "12313114", "32313112", "21413113", "41413111", "15131113", "24231112", "13331113", "33331111", "22431112", "25122112", "14222113", "34222111", "23322112", "12422113", "32422111", "21522112", "15113113", "24213112", "13313113", "33313111", "22413112", "11513113", "31513111", "16131112", "25231111", "14331112", "23431111", "15222112", "24322111", "13422112", "22522111", "16113112", "25213111", "14313112", "23413111", "12513112", "21613111", "11141116", "31141114", "51141112", "21132115", "41132113", "61132111", "11123116", "31123114", "51123112", "21114115", "41114113", "61114111", "12141115", "32141113", "52141111", "21241114", "41241112", "22132114", "42132112", "11232115", "31232113", "51232111", "12123115", "32123113", "52123111", "21223114", "41223112", "22114114", "42114112", "11214115", "31214113", "51214111", "13141114", "33141112", "22241113", "42241111", "11341114", "31341112", "23132113", "43132111", "12232114", "32232112", "21332113", "41332111", "13123114", "33123112", "22223113", "42223111", "11323114", "31323112", "23114113", "43114111", "12214114", "32214112", "21314113", "41314111", "14141113", "34141111", "23241112", "12341113", "32341111", "24132112", "13232113", "33232111", "22332112", "11432113", "31432111", "14123113", "34123111", "23223112", "12323113", "32323111", "21423112", "24114112", "13214113", "33214111", "22314112", "11414113", "31414111", "15141112", "24241111", "13341112", "25132111", "14232112", "23332111", "12432112", "15123112", "24223111", "13323112", "22423111", "11523112", "25114111", "14214112", "23314111", "12414112", "21514111", "16141111", "14341111", "15232111", "13432111", "16123111", "14323111", "12523111", "15214111", "13414111", "11614111", "11151115", "31151113", "51151111", "21142114", "41142112", "11133115", "31133113", "51133111", "21124114", "41124112", "11115115", "31115113", "51115111", "12151114", "32151112", "21251113", "41251111", "22142113", "42142111", "11242114", "31242112", "12133114", "32133112", "21233113", "41233111", "22124113", "42124111", "11224114", "31224112", "12115114", "32115112", "21215113", "41215111", "13151113", "33151111", "22251112", "23142112", "12242113", "32242111", "21342112", "13133113", "33133111", "22233112", "11333113", "31333111", "23124112", "12224113", "32224111", "21324112", "13115113", "33115111", "22215112", "11315113", "31315111", "14151112", "23251111", "24142111", "13242112", "22342111", "14133112", "23233111", "12333112", "21433111", "24124111", "13224112", "22324111", "11424112", "14115112", "23215111", "12315112", "21415111", "15151111", "14242111", "15133111", "13333111", "14224111", "12424111", "15115111", "13315111", "11515111", "11161114", "31161112", "21152113", "41152111", "11143114", "31143112", "21134113", "41134111", "11125114", "31125112", "21116113", "41116111", "12161113", "32161111", "22152112", "11252113", "31252111", "12143113", "32143111", "21243112", "22134112", "11234113", "31234111", "12125113", "32125111", "21225112", "22116112", "11216113", "31216111", "13161112", "23152111", "12252112", "13143112", "22243111", "11343112", "23134111", "12234112", "21334111", "13125112", "22225111", "11325112", "23116111", "12216112", "21316111", "14161111", "13252111", "14143111", "12343111", "13234111", "11434111", "14125111", "12325111", "13216111", "11416111", "31111216", "51111214", "31211125", "51211123", "32111215", "52111213", "21211216", "41211214", "61211212", "12211126", "32211124", "52211122", "21311125", "41311123", "61311121", "13111216", "33111214", "22211215", "42211213", "11311216", "31311214", "51311212", "13211125", "33211123", "22311124", "42311122", "11411125", "31411123", "51411121", "14111215", "34111213", "23211214", "43211212", "12311215", "32311213", "52311211", "21411214", "41411212", "14211124", "34211122", "23311123", "43311121", "12411124", "32411122", "21511123", "41511121", "15111214", "24211213", "13311214", "33311212", "22411213", "42411211", "11511214", "31511212", "15211123", "24311122", "13411123", "33411121", "22511122", "11611123", "31611121", "16111213", "25211212", "14311213", "34311211", "23411212", "12511213", "32511211", "21611212", "21121126", "41121124", "61121122", "31112125", "51112123", "31121215", "51121213", "21112216", "41112214", "61112212", "22121125", "42121123", "11221126", "31221124", "51221122", "12112126", "32112124", "52112122", "12121216", "32121214", "52121212", "21221215", "41221213", "61221211", "22112215", "42112213", "11212216", "31212214", "51212212", "23121124", "43121122", "12221125", "32221123", "52221121", "21321124", "41321122", "13112125", "33112123", "13121215", "33121213", "11312125", "22221214", "42221212", "11321215", "31321213", "51321211", "23112214", "43112212", "12212215", "32212213", "52212211", "21312214", "41312212", "24121123", "13221124", "33221122", "22321123", "42321121", "11421124", "31421122", "14112124", "34112122", "14121214", "34121212", "12312124", "23221213", "43221211", "12321214", "32321212", "21421213", "41421211", "24112213", "13212214", "33212212", "22312213", "42312211", "11412214", "31412212", "25121122", "14221123", "34221121", "23321122", "12421123", "32421121", "21521122", "15112123", "15121213", "13312123", "24221212", "13321213", "33321211", "11512123", "22421212", "11521213", "31521211", "25112212", "14212213", "34212211", "23312212", "12412213", "32412211", "21512212", "15221122", "24321121", "13421122", "22521121", "16112122", "16121212", "14312122", "25221211", "14321212", "12512122", "23421211", "12521212", "15212212", "24312211", "13412212", "22512211", "11612212", "21131125", "41131123", "61131121", "11122126", "31122124", "51122122", "11131216", "31131214", "51131212", "21113125", "41113123", "61113121", "21122215", "41122213", "61122211", "11113216", "31113214", "51113212", "22131124", "42131122", "11231125", "31231123", "51231121", "12122125", "32122123", "52122121", "12131215", "32131213", "52131211", "21231214", "41231212", "22113124", "42113122", "11213125", "22122214", "42122212", "11222215", "31222213", "51222211", "12113215", "32113213", "52113211", "21213214", "41213212", "23131123", "43131121", "12231124", "32231122", "21331123", "41331121", "13122124", "33122122", "13131214", "33131212", "11322124", "22231213", "42231211", "11331214", "31331212", "23113123", "43113121", "12213124", "23122213", "43122211", "12222214", "32222212", "21322213", "41322211", "13113214", "33113212", "22213213", "42213211", "11313214", "31313212", "24131122", "13231123", "33231121", "22331122", "11431123", "31431121", "14122123", "34122121", "14131213", "34131211", "12322123", "23231212", "12331213", "32331211", "21431212", "24113122", "13213123", "24122212", "13222213", "33222211", "11413123", "22322212", "11422213", "31422211", "14113213", "34113211", "23213212", "12313213", "32313211", "21413212", "25131121", "14231122", "23331121", "12431122", "15122122", "15131212", "13322122", "24231211", "13331212", "11522122", "22431211", "25113121", "14213122", "25122211", "14222212", "12413122", "23322211", "12422212", "21522211", "15113212", "24213211", "13313212", "22413211", "11513212", "15231121", "13431121", "16122121", "16131211", "14322121", "14331211", "12522121", "15213121", "15222211", "13413121", "13422211", "11613121", "16113211", "14313211", "12513211", "21141124", "41141122", "11132125", "31132123", "51132121", "11141215", "31141213", "51141211", "21123124", "41123122", "21132214", "41132212", "11114125", "31114123", "51114121", "11123215", "31123213", "51123211", "21114214", "41114212", "22141123", "42141121", "11241124", "31241122", "12132124", "32132122", "12141214", "32141212", "21241213", "41241211", "22123123", "42123121", "11223124", "22132213", "42132211", "11232214", "31232212", "12114124", "32114122", "12123214", "32123212", "21223213", "41223211", "22114213", "42114211", "11214214", "31214212", "23141122", "12241123", "32241121", "21341122", "13132123", "33132121", "13141213", "33141211", "11332123", "22241212", "11341213", "31341211", "23123122", "12223123", "23132212", "12232213", "32232211", "21332212", "13114123", "33114121", "13123213", "33123211", "11314123", "22223212", "11323213", "31323211", "23114212", "12214213", "32214211", "21314212", "24141121", "13241122", "22341121", "14132122", "14141212", "12332122", "23241211", "12341212", "24123121", "13223122", "24132211", "13232212", "11423122", "22332211", "11432212", "14114122", "14123212", "12314122", "23223211", "12323212", "21423211", "24114211", "13214212", "22314211", "11414212", "14241121", "15132121", "15141211", "13332121", "13341211", "14223121", "14232211", "12423121", "12432211", "15114121", "15123211", "13314121", "13323211", "11514121", "11523211", "14214211", "12414211", "21151123", "41151121", "11142124", "31142122", "11151214", "31151212", "21133123", "41133121", "21142213", "41142211", "11124124", "31124122", "11133214", "31133212", "21115123", "41115121", "21124213", "41124211", "11115214", "31115212", "22151122", "11251123", "31251121", "12142123", "32142121", "12151213", "32151211", "21251212", "22133122", "11233123", "22142212", "11242213", "31242211", "12124123", "32124121", "12133213", "32133211", "21233212", "22115122", "11215123", "22124212", "11224213", "31224211", "12115213", "32115211", "21215212", "23151121", "12251122", "13142122", "13151212", "11342122", "22251211", "23133121", "12233122", "23142211", "12242212", "21342211", "13124122", "13133212", "11324122", "22233211", "11333212", "23115121", "12215122", "23124211", "12224212", "21324211", "13115212", "22215211", "11315212", "13251121", "14142121", "14151211", "12342121", "13233121", "13242211", "11433121", "14124121", "14133211", "12324121", "12333211", "13215121", "13224211", "11415121", "11424211", "14115211", "12315211", "21161122", "11152123", "31152121", "11161213", "31161211", "21143122", "21152212", "11134123", "31134121", "11143213", "31143211", "21125122", "21134212", "11116123", "31116121", "11125213", "31125211", "22161121", "12152122", "12161212", "22143121", "11243122", "22152211", "11252212", "12134122", "12143212", "21243211", "22125121", "11225122", "22134211", "11234212", "12116122", "12125212", "21225211", "13152121", "13161211", "12243121", "12252211", "13134121", "13143211", "11334121", "11343211", "12225121", "12234211", "13116121", "13125211", "11316121", "11325211", "21111226", "41111224", "61111222", "31111315", "51111313", "21211135", "41211133", "61211131", "22111225", "42111223", "11211226", "31211224", "51211222", "12111316", "32111314", "52111312", "21211315", "41211313", "61211311", "22211134", "42211132", "11311135", "31311133", "51311131", "23111224", "43111222", "12211225", "32211223", "52211221", "21311224", "41311222", "13111315", "33111313", "22211314", "42211312", "11311315", "31311313", "51311311", "23211133", "43211131", "12311134", "32311132", "21411133", "41411131", "24111223", "13211224", "33211222", "22311223", "42311221", "11411224", "31411222", "14111314", "34111312", "23211313", "43211311", "12311314", "32311312", "21411313", "41411311", "24211132", "13311133", "33311131", "22411132", "11511133", "31511131", "25111222", "14211223", "34211221", "23311222", "12411223", "32411221", "21511222", "15111313", "24211312", "13311313", "33311311", "22411312", "11511313", "31511311", "25211131", "14311132", "23411131", "12511132", "21611131", "15211222", "24311221", "13411222", "22511221", "11611222", "16111312", "25211311", "14311312", "23411311", "12511312", "21611311", "31121134", "51121132", "21112135", "41112133", "61112131", "21121225", "41121223", "61121221", "11112226", "31112224", "51112222", "11121316", "31121314", "51121312", "21112315", "41112313", "61112311", "12121135", "32121133", "52121131", "21221134", "41221132", "22112134", "42112132", "11212135", "22121224", "42121222", "11221225", "31221223", "51221221", "12112225", "32112223", "52112221", "12121315", "32121313", "52121311", "21221314", "41221312", "22112314", "42112312", "11212315", "31212313", "51212311", "13121134", "33121132", "22221133", "42221131", "11321134", "31321132", "23112133", "43112131", "12212134", "23121223", "43121221", "12221224", "32221222", "21321223", "41321221", "13112224", "33112222", "13121314", "33121312", "11312224", "22221313", "42221311", "11321314", "31321312", "23112313", "43112311", "12212314", "32212312", "21312313", "41312311", "14121133", "34121131", "23221132", "12321133", "32321131", "21421132", "24112132", "13212133", "24121222", "13221223", "33221221", "11412133", "22321222", "11421223", "31421221", "14112223", "34112221", "14121313", "34121311", "12312223", "23221312", "12321313", "32321311", "21421312", "24112312", "13212313", "33212311", "22312312", "11412313", "31412311", "15121132", "24221131", "13321132", "22421131"]), $a(["22121116", "42121114", "31221115", "51221113", "32112115", "52112113", "21212116", "41212114", "61212112", "23121115", "43121113", "12221116", "32221114", "52221112", "21321115", "41321113", "61321111", "13112116", "33112114", "22212115", "42212113", "11312116", "31312114", "51312112", "24121114", "13221115", "33221113", "22321114", "42321112", "11421115", "31421113", "51421111", "14112115", "34112113", "23212114", "43212112", "12312115", "32312113", "52312111", "21412114", "41412112", "25121113", "14221114", "34221112", "23321113", "43321111", "12421114", "32421112", "21521113", "41521111", "15112114", "24212113", "13312114", "33312112", "22412113", "42412111", "11512114", "31512112", "15221113", "24321112", "13421113", "33421111", "22521112", "16112113", "25212112", "14312113", "34312111", "23412112", "12512113", "32512111", "21612112", "21131116", "41131114", "61131112", "31122115", "51122113", "21113116", "41113114", "61113112", "22131115", "42131113", "11231116", "31231114", "51231112", "12122116", "32122114", "52122112", "21222115", "41222113", "61222111", "22113115", "42113113", "11213116", "31213114", "51213112", "23131114", "43131112", "12231115", "32231113", "52231111", "21331114", "41331112", "13122115", "33122113", "22222114", "42222112", "11322115", "31322113", "51322111", "23113114", "43113112", "12213115", "32213113", "52213111", "21313114", "41313112", "24131113", "13231114", "33231112", "22331113", "42331111", "11431114", "31431112", "14122114", "34122112", "23222113", "43222111", "12322114", "32322112", "21422113", "41422111", "24113113", "13213114", "33213112", "22313113", "42313111", "11413114", "31413112", "25131112", "14231113", "34231111", "23331112", "12431113", "32431111", "15122113", "24222112", "13322113", "33322111", "22422112", "11522113", "31522111", "25113112", "14213113", "34213111", "23313112", "12413113", "32413111", "21513112", "15231112", "24331111", "13431112", "16122112", "25222111", "14322112", "23422111", "12522112", "15213112", "24313111", "13413112", "22513111", "11613112", "21141115", "41141113", "61141111", "11132116", "31132114", "51132112", "21123115", "41123113", "61123111", "11114116", "31114114", "51114112", "22141114", "42141112", "11241115", "31241113", "51241111", "12132115", "32132113", "52132111", "21232114", "41232112", "22123114", "42123112", "11223115", "31223113", "51223111", "12114115", "32114113", "52114111", "21214114", "41214112", "23141113", "43141111", "12241114", "32241112", "21341113", "41341111", "13132114", "33132112", "22232113", "42232111", "11332114", "31332112", "23123113", "43123111", "12223114", "32223112", "21323113", "41323111", "13114114", "33114112", "22214113", "42214111", "11314114", "31314112", "24141112", "13241113", "33241111", "22341112", "14132113", "34132111", "23232112", "12332113", "32332111", "21432112", "24123112", "13223113", "33223111", "22323112", "11423113", "31423111", "14114113", "34114111", "23214112", "12314113", "32314111", "21414112", "25141111", "14241112", "23341111", "15132112", "24232111", "13332112", "22432111", "25123111", "14223112", "23323111", "12423112", "21523111", "15114112", "24214111", "13314112", "22414111", "11514112", "15241111", "16132111", "14332111", "15223111", "13423111", "16114111", "14314111", "12514111", "21151114", "41151112", "11142115", "31142113", "51142111", "21133114", "41133112", "11124115", "31124113", "51124111", "21115114", "41115112", "22151113", "42151111", "11251114", "31251112", "12142114", "32142112", "21242113", "41242111", "22133113", "42133111", "11233114", "31233112", "12124114", "32124112", "21224113", "41224111", "22115113", "42115111", "11215114", "31215112", "23151112", "12251113", "32251111", "13142113", "33142111", "22242112", "11342113", "31342111", "23133112", "12233113", "32233111", "21333112", "13124113", "33124111", "22224112", "11324113", "31324111", "23115112", "12215113", "32215111", "21315112", "24151111", "13251112", "14142112", "23242111", "12342112", "24133111", "13233112", "22333111", "11433112", "14124112", "23224111", "12324112", "21424111", "24115111", "13215112", "22315111", "11415112", "14251111", "15142111", "13342111", "14233111", "12433111", "15124111", "13324111", "11524111", "14215111", "12415111", "21161113", "41161111", "11152114", "31152112", "21143113", "41143111", "11134114", "31134112", "21125113", "41125111", "11116114", "31116112", "22161112", "12152113", "32152111", "21252112", "22143112", "11243113", "31243111", "12134113", "32134111", "21234112", "22125112", "11225113", "31225111", "12116113", "32116111", "21216112", "23161111", "13152112", "22252111", "23143111", "12243112", "21343111", "13134112", "22234111", "11334112", "23125111", "12225112", "21325111", "13116112", "22216111", "11316112", "14152111", "13243111", "14134111", "12334111", "13225111", "11425111", "14116111", "12316111", "41111215", "61111213", "21211126", "41211124", "61211122", "22111216", "42111214", "31211215", "51211213", "22211125", "42211123", "11311126", "31311124", "51311122", "23111215", "43111213", "12211216", "32211214", "52211212", "21311215", "41311213", "61311211", "23211124", "43211122", "12311125", "32311123", "52311121", "21411124", "41411122", "24111214", "13211215", "33211213", "22311214", "42311212", "11411215", "31411213", "51411211", "24211123", "13311124", "33311122", "22411123", "42411121", "11511124", "31511122", "25111213", "14211214", "34211212", "23311213", "43311211", "12411214", "32411212", "21511213", "41511211", "25211122", "14311123", "34311121", "23411122", "12511123", "32511121", "21611122", "15211213", "24311212", "13411213", "33411211", "22511212", "11611213", "31611211", "31121125", "51121123", "21112126", "41112124", "61112122", "21121216", "41121214", "61121212", "31112215", "51112213", "12121126", "32121124", "52121122", "21221125", "41221123", "61221121", "22112125", "42112123", "11212126", "22121215", "42121213", "11221216", "31221214", "51221212", "12112216", "32112214", "52112212", "21212215", "41212213", "61212211", "13121125", "33121123", "22221124", "42221122", "11321125", "31321123", "51321121", "23112124", "43112122", "12212125", "23121214", "43121212", "12221215", "32221213", "52221211", "21321214", "41321212", "13112215", "33112213", "22212214", "42212212", "11312215", "31312213", "51312211", "14121124", "34121122", "23221123", "43221121", "12321124", "32321122", "21421123", "41421121", "24112123", "13212124", "24121213", "13221214", "33221212", "11412124", "22321213", "42321211", "11421214", "31421212", "14112214", "34112212", "23212213", "43212211", "12312214", "32312212", "21412213", "41412211", "15121123", "24221122", "13321123", "33321121", "22421122", "11521123", "31521121", "25112122", "14212123", "25121212", "14221213", "34221211", "12412123", "23321212", "12421213", "32421211", "21521212", "15112213", "24212212", "13312213", "33312211", "22412212", "11512213", "31512211", "16121122", "25221121", "14321122", "23421121", "12521122", "15212122", "15221212", "13412122", "24321211", "13421212", "11612122", "22521211", "16112212", "25212211", "14312212", "23412211", "12512212", "21612211", "11131126", "31131124", "51131122", "21122125", "41122123", "61122121", "21131215", "41131213", "61131211", "11113126", "31113124", "51113122", "11122216", "31122214", "51122212", "21113215", "41113213", "61113211", "12131125", "32131123", "52131121", "21231124", "41231122", "22122124", "42122122", "11222125", "22131214", "42131212", "11231215", "31231213", "51231211", "12113125", "32113123", "52113121", "12122215", "32122213", "52122211", "21222214", "41222212", "22113214", "42113212", "11213215", "31213213", "51213211", "13131124", "33131122", "22231123", "42231121", "11331124", "31331122", "23122123", "43122121", "12222124", "23131213", "43131211", "12231214", "32231212", "21331213", "41331211", "13113124", "33113122", "13122214", "33122212", "11313124", "22222213", "42222211", "11322214", "31322212", "23113213", "43113211", "12213214", "32213212", "21313213", "41313211", "14131123", "34131121", "23231122", "12331123", "32331121", "21431122", "24122122", "13222123", "24131212", "13231213", "33231211", "11422123", "22331212", "11431213", "31431211", "14113123", "34113121", "14122213", "34122211", "12313123", "23222212", "12322213", "32322211", "21422212", "24113212", "13213213", "33213211", "22313212", "11413213", "31413211", "15131122", "24231121", "13331122", "22431121", "25122121", "14222122", "25131211", "14231212", "12422122", "23331211", "12431212", "15113122", "15122212", "13313122", "24222211", "13322212", "11513122", "22422211", "11522212", "25113211", "14213212", "23313211", "12413212", "21513211", "16131121", "14331121", "15222121", "15231211", "13422121", "13431211", "16113121", "16122211", "14313121", "14322211", "12513121", "12522211", "15213211", "13413211", "11613211", "11141125", "31141123", "51141121", "21132124", "41132122", "21141214", "41141212", "11123125", "31123123", "51123121", "11132215", "31132213", "51132211", "21114124", "41114122", "21123214", "41123212", "11114215", "31114213", "51114211", "12141124", "32141122", "21241123", "41241121", "22132123", "42132121", "11232124", "22141213", "42141211", "11241214", "31241212", "12123124", "32123122", "12132214", "32132212", "21232213", "41232211", "22114123", "42114121", "11214124", "22123213", "42123211", "11223214", "31223212", "12114214", "32114212", "21214213", "41214211", "13141123", "33141121", "22241122", "11341123", "31341121", "23132122", "12232123", "23141212", "12241213", "32241211", "21341212", "13123123", "33123121", "13132213", "33132211", "11323123", "22232212", "11332213", "31332211", "23114122", "12214123", "23123212", "12223213", "32223211", "21323212", "13114213", "33114211", "22214212", "11314213", "31314211", "14141122", "23241121", "12341122", "24132121", "13232122", "24141211", "13241212", "11432122", "22341211", "14123122", "14132212", "12323122", "23232211", "12332212", "21432211", "24114121", "13214122", "24123211", "13223212", "11414122", "22323211", "11423212", "14114212", "23214211", "12314212", "21414211", "15141121", "13341121", "14232121", "14241211", "12432121", "15123121", "15132211", "13323121", "13332211", "11523121", "14214121", "14223211", "12414121", "12423211", "15114211", "13314211", "11514211", "11151124", "31151122", "21142123", "41142121", "21151213", "41151211", "11133124", "31133122", "11142214", "31142212", "21124123", "41124121", "21133213", "41133211", "11115124", "31115122", "11124214", "31124212", "21115213", "41115211", "12151123", "32151121", "21251122", "22142122", "11242123", "22151212", "11251213", "31251211", "12133123", "32133121", "12142213", "32142211", "21242212", "22124122", "11224123", "22133212", "11233213", "31233211", "12115123", "32115121", "12124213", "32124211", "21224212", "22115212", "11215213", "31215211", "13151122", "22251121", "23142121", "12242122", "23151211", "12251212", "13133122", "13142212", "11333122", "22242211", "11342212", "23124121", "12224122", "23133211", "12233212", "21333211", "13115122", "13124212", "11315122", "22224211", "11324212", "23115211", "12215212", "21315211", "14151121", "13242121", "13251211", "14133121", "14142211", "12333121", "12342211", "13224121", "13233211", "11424121", "11433211", "14115121", "14124211", "12315121", "12324211", "13215211", "11415211", "11161123", "31161121", "21152122", "21161212", "11143123", "31143121", "11152213", "31152211", "21134122", "21143212", "11125123", "31125121", "11134213", "31134211", "21116122", "21125212", "12161122", "22152121", "11252122", "22161211", "12143122", "12152212", "21252211", "22134121", "11234122", "22143211", "11243212", "12125122", "12134212", "21234211", "22116121", "11216122", "22125211", "11225212", "13161121", "12252121", "13143121", "13152211", "11343121", "12234121", "12243211", "13125121", "13134211", "11325121", "11334211", "12216121", "12225211", "31111225", "51111223", "21111316", "41111314", "61111312", "31211134", "51211132", "12111226", "32111224", "52111222", "21211225", "41211223", "61211221", "22111315", "42111313", "11211316", "31211314", "51211312", "12211135", "32211133", "52211131", "21311134", "41311132", "13111225", "33111223", "22211224", "42211222", "11311225", "31311223", "51311221", "23111314", "43111312", "12211315", "32211313", "52211311", "21311314", "41311312", "13211134", "33211132", "22311133", "42311131", "11411134", "31411132", "14111224", "34111222", "23211223", "43211221", "12311224", "32311222", "21411223", "41411221", "24111313", "13211314", "33211312", "22311313", "42311311", "11411314", "31411312", "14211133", "34211131", "23311132", "12411133", "32411131", "21511132", "15111223", "24211222", "13311223", "33311221", "22411222", "11511223", "31511221", "25111312", "14211313", "34211311", "23311312", "12411313", "32411311", "21511312", "15211132", "24311131", "13411132", "22511131", "11611132", "16111222", "25211221", "14311222", "23411221", "12511222", "21611221", "15211312", "24311311", "13411312", "22511311", "11611312", "21121135", "41121133", "61121131", "11112136", "31112134", "51112132", "11121226", "31121224", "51121222", "21112225", "41112223", "61112221", "21121315", "41121313", "61121311", "11112316", "31112314", "51112312", "22121134", "42121132", "11221135", "31221133", "51221131", "12112135", "32112133", "52112131", "12121225", "32121223", "52121221", "21221224", "41221222", "22112224", "42112222", "11212225", "22121314", "42121312", "11221315", "31221313", "51221311", "12112315", "32112313", "52112311", "21212314", "41212312", "23121133", "43121131", "12221134", "32221132", "21321133", "41321131", "13112134", "33112132", "13121224", "33121222", "11312134", "22221223", "42221221", "11321224", "31321222", "23112223", "43112221", "12212224", "23121313", "43121311", "12221314", "32221312", "21321313", "41321311", "13112314", "33112312", "22212313", "42212311", "11312314", "31312312", "24121132", "13221133", "33221131", "22321132", "11421133", "31421131", "14112133", "34112131", "14121223", "34121221", "12312133", "23221222", "12321223", "32321221", "21421222", "24112222", "13212223", "24121312", "13221313", "33221311", "11412223", "22321312", "11421313", "31421311", "14112313", "34112311", "23212312", "12312313", "32312311", "21412312", "25121131", "14221132", "23321131", "12421132", "21521131", "15112132", "15121222", "13312132", "24221221", "13321222", "11512132", "22421221", "11521222", "25112221", "14212222", "25121311", "14221312", "12412222", "23321311", "12421312", "21521311", "15112312", "24212311", "13312312", "22412311", "11512312", "15221131", "13421131", "16112131", "16121221", "14312131", "14321221", "12512131", "12521221", "15212221", "15221311", "13412221", "13421311", "11612221", "16112311", "14312311", "12512311", "21131134", "41131132", "11122135", "31122133", "51122131", "11131225", "31131223", "51131221", "21113134", "41113132", "21122224", "41122222", "21131314", "41131312", "11113225", "31113223", "51113221", "11122315", "31122313", "51122311", "21113314", "41113312", "22131133", "42131131", "11231134", "31231132", "12122134", "32122132", "12131224", "32131222", "21231223", "41231221", "22113133", "42113131", "11213134", "22122223", "42122221", "11222224", "22131313", "42131311", "11231314", "31231312", "12113224", "32113222", "12122314", "32122312", "21222313", "41222311", "22113313", "42113311", "11213314", "31213312", "23131132", "12231133", "32231131", "21331132", "13122133", "33122131", "13131223", "33131221", "11322133", "22231222", "11331223", "31331221", "23113132", "12213133", "23122222", "12222223", "23131312", "12231313", "32231311", "21331312", "13113223", "33113221", "13122313", "33122311", "11313223", "22222312", "11322313", "31322311", "23113312", "12213313", "32213311", "21313312", "24131131", "13231132", "22331131", "11431132", "14122132", "14131222", "12322132", "23231221", "12331222", "21431221", "24113131", "13213132", "24122221", "13222222", "24131311", "11413132", "13231312", "11422222", "22331311", "11431312", "14113222", "14122312", "12313222", "23222311", "12322312", "21422311", "24113311", "13213312", "22313311", "11413312", "14231131", "12431131", "15122131", "15131221", "13322131", "13331221", "11522131", "14213131", "14222221", "12413131", "14231311", "12422221", "12431311", "15113221", "15122311", "13313221", "13322311", "11513221", "11522311", "14213311", "12413311", "21141133", "41141131", "11132134", "31132132", "11141224", "31141222", "21123133", "41123131", "21132223", "41132221", "21141313", "41141311", "11114134", "31114132", "11123224", "31123222", "11132314", "31132312", "21114223", "41114221", "21123313", "41123311", "11114314", "31114312", "22141132", "11241133", "31241131", "12132133", "32132131", "12141223", "32141221", "21241222", "22123132", "11223133", "22132222", "11232223", "22141312", "11241313", "31241311", "12114133", "32114131", "12123223", "32123221", "12132313", "32132311", "21232312", "22114222", "11214223", "22123312", "11223313", "31223311", "12114313", "32114311", "21214312", "23141131", "12241132", "21341131", "13132132", "13141222", "11332132", "22241221", "11341222", "23123131", "12223132", "23132221", "12232222", "23141311", "12241312", "21341311", "13114132", "13123222", "11314132", "13132312", "11323222", "22232311", "11332312", "23114221", "12214222", "23123311", "12223312", "21323311", "13114312", "22214311", "11314312", "13241131", "14132131", "14141221", "12332131", "12341221", "13223131", "13232221", "11423131", "13241311", "11432221", "14114131", "14123221", "12314131", "14132311", "12323221", "12332311", "13214221", "13223311", "11414221", "11423311", "14114311", "12314311", "21151132", "11142133", "31142131", "11151223", "31151221", "21133132", "21142222", "21151312", "11124133", "31124131", "11133223", "31133221", "11142313", "31142311", "21115132", "21124222", "21133312", "11115223", "31115221", "11124313", "31124311", "22151131", "11251132", "12142132", "12151222", "21251221", "22133131", "11233132", "22142221", "11242222", "22151311", "11251312", "12124132", "12133222", "12142312", "21242311", "22115131", "11215132", "22124221", "11224222", "22133311", "11233312", "12115222", "12124312", "21224311", "12251131", "13142131", "13151221", "11342131", "12233131", "12242221", "12251311", "13124131", "13133221", "11324131", "13142311", "11333221", "11342311", "12215131", "12224221", "12233311", "13115221", "13124311", "11315221", "11324311", "21161131", "11152132", "11161222", "21143131", "21152221", "21161311", "11134132", "11143222", "11152312", "21125131", "21134221", "21143311", "11116132", "11125222", "11134312", "12152131", "12161221", "11243131", "11252221", "12134131", "12143221", "12152311", "11225131", "11234221", "11243311", "12116131", "12125221", "12134311", "21111235", "41111233", "61111231", "11111326", "31111324", "51111322", "21111415", "41111413", "61111411", "21211144", "41211142", "22111234", "42111232", "11211235", "31211233", "51211231", "12111325", "32111323", "52111321", "21211324", "41211322", "22111414", "42111412", "11211415", "31211413", "51211411", "22211143", "42211141", "11311144", "31311142", "23111233", "43111231", "12211234", "32211232", "21311233", "41311231", "13111324", "33111322", "22211323", "42211321", "11311324", "31311322", "23111413", "43111411", "12211414", "32211412", "21311413", "41311411", "23211142", "12311143", "32311141", "21411142", "24111232", "13211233", "33211231", "22311232", "11411233", "31411231", "14111323", "34111321", "23211322", "12311323", "32311321", "21411322", "24111412", "13211413", "33211411", "22311412", "11411413", "31411411", "24211141", "13311142", "22411141", "11511142", "25111231", "14211232", "23311231", "12411232", "21511231", "15111322", "24211321", "13311322", "22411321", "11511322", "25111411", "14211412", "23311411", "12411412", "21511411", "14311141", "12511141", "15211231", "13411231", "11611231", "16111321", "14311321", "12511321", "15211411", "13411411", "11611411", "31121143", "51121141", "21112144", "41112142", "21121234", "41121232", "11112235", "31112233", "51112231", "11121325", "31121323", "51121321", "21112324", "41112322", "21121414", "41121412", "11112415", "31112413", "51112411", "12121144", "32121142", "21221143", "41221141", "22112143", "42112141", "11212144", "22121233", "42121231", "11221234", "31221232", "12112234", "32112232", "12121324", "32121322", "21221323", "41221321", "22112323", "42112321", "11212324", "22121413", "42121411", "11221414", "31221412", "12112414", "32112412", "21212413", "41212411", "13121143", "33121141", "22221142", "11321143", "31321141", "23112142", "12212143", "23121232", "12221233", "32221231", "21321232", "13112233", "33112231", "13121323", "33121321", "11312233", "22221322", "11321323", "31321321", "23112322", "12212323", "23121412", "12221413", "32221411", "21321412", "13112413", "33112411", "22212412", "11312413", "31312411", "14121142", "23221141", "12321142", "21421141", "24112141", "13212142", "24121231", "13221232", "11412142", "22321231", "11421232", "14112232", "14121322", "12312232", "23221321", "12321322", "21421321", "24112321", "13212322", "24121411", "13221412", "11412322", "22321411", "11421412", "14112412", "23212411", "12312412", "21412411", "15121141", "13321141", "11521141", "14212141", "14221231", "12412141", "12421231", "15112231", "15121321", "13312231", "13321321", "11512231", "11521321", "14212321", "14221411", "12412321", "12421411", "15112411", "13312411", "11512411", "11131144", "31131142", "21122143", "41122141", "21131233", "41131231", "11113144", "31113142", "11122234", "31122232", "11131324", "31131322", "21113233", "41113231", "21122323", "41122321", "21131413", "41131411", "11113324", "31113322", "11122414", "31122412", "21113413", "41113411", "12131143", "32131141", "21231142", "22122142", "11222143", "22131232", "11231233", "31231231", "12113143", "32113141", "12122233", "32122231", "12131323", "32131321", "21231322", "22113232", "11213233", "22122322", "11222323", "22131412", "11231413", "31231411", "12113323", "32113321", "12122413", "32122411", "21222412", "22113412", "11213413", "31213411", "13131142", "22231141", "11331142", "23122141", "12222142", "23131231", "12231232", "21331231", "13113142", "13122232", "11313142", "13131322", "11322232", "22231321", "11331322", "23113231", "12213232", "23122321", "12222322", "23131411", "12231412", "21331411", "13113322", "13122412", "11313322", "22222411", "11322412", "23113411", "12213412", "21313411", "14131141", "12331141", "13222141", "13231231", "11422141", "11431231", "14113141", "14122231", "12313141", "14131321", "12322231", "12331321", "13213231", "13222321", "11413231", "13231411", "11422321", "11431411", "14113321", "14122411", "12313321", "12322411", "13213411", "11413411", "11141143", "31141141", "21132142", "21141232", "11123143", "31123141", "11132233", "31132231", "11141323", "31141321", "21114142", "21123232", "21132322", "21141412", "11114233", "31114231", "11123323", "31123321", "11132413", "31132411", "21114322", "21123412", "12141142", "21241141", "22132141", "11232142", "22141231", "11241232", "12123142", "12132232", "12141322", "21241321", "22114141", "11214142", "22123231", "11223232", "22132321", "11232322", "22141411", "11241412", "12114232", "12123322", "12132412", "21232411", "22114321", "11214322", "22123411", "11223412", "13141141", "11341141", "12232141", "12241231", "13123141", "13132231", "11323141", "13141321", "11332231", "11341321", "12214141", "12223231", "12232321", "12241411", "13114231", "13123321", "11314231", "13132411", "11323321", "11332411", "12214321", "12223411", "11151142", "21142141", "21151231", "11133142", "11142232", "11151322", "21124141", "21133231", "21142321", "21151411", "11115142", "11124232", "11133322", "11142412", "21115231", "21124321", "21133411", "12151141", "11242141", "11251231", "12133141", "12142231", "12151321", "11224141", "11233231", "11242321", "11251411", "12115141", "12124231", "12133321", "12142411", "11215231", "11224321", "11233411", "11161141", "11143141", "11152231", "11161321", "11125141", "11134231", "11143321", "11152411", "11111245", "31111243", "51111241", "21111334", "41111332", "11111425", "31111423", "51111421", "21111514", "41111512", "31211152", "12111244", "32111242", "21211243", "41211241", "22111333", "42111331", "11211334", "31211332", "12111424", "32111422", "21211423", "41211421", "22111513", "42111511", "11211514", "31211512", "12211153", "32211151", "21311152", "13111243", "33111241", "22211242", "11311243", "31311241", "23111332", "12211333", "32211331", "21311332", "13111423", "33111421", "22211422", "11311423", "31311421", "23111512", "12211513", "32211511", "21311512", "13211152", "22311151", "11411152", "14111242", "23211241", "12311242", "21411241", "24111331", "13211332", "22311331", "11411332", "14111422", "23211421", "12311422", "21411421", "24111511", "13211512", "22311511", "11411512", "14211151", "12411151", "15111241", "13311241", "11511241", "14211331", "12411331", "15111421", "13311421", "11511421", "14211511", "12411511", "21121153", "41121151", "11112154", "31112152", "11121244", "31121242", "21112243", "41112241", "21121333", "41121331", "11112334", "31112332", "11121424", "31121422", "21112423", "41112421", "21121513", "41121511", "11112514", "31112512", "22121152", "11221153", "31221151", "12112153", "32112151", "12121243", "32121241", "21221242", "22112242", "11212243", "22121332", "11221333", "31221331", "12112333", "32112331", "12121423", "32121421", "21221422", "22112422", "11212423", "22121512", "11221513", "31221511", "12112513", "32112511", "21212512", "23121151", "12221152", "21321151", "13112152", "13121242", "11312152", "22221241", "11321242", "23112241", "12212242", "23121331", "12221332", "21321331", "13112332", "13121422", "11312332", "22221421", "11321422", "23112421", "12212422", "23121511", "12221512", "21321511", "13112512", "22212511", "11312512", "13221151", "11421151", "14112151", "14121241", "12312151", "12321241", "13212241", "13221331", "11412241", "11421331", "14112331", "14121421", "12312331", "12321421", "13212421", "13221511", "11412421", "11421511", "14112511", "12312511", "21131152", "11122153", "31122151", "11131243", "31131241", "21113152", "21122242", "21131332", "11113243", "31113241", "11122333", "31122331", "11131423", "31131421", "21113332", "21122422", "21131512", "11113423", "31113421", "11122513", "31122511", "22131151", "11231152", "12122152", "12131242", "21231241", "22113151", "11213152", "22122241", "11222242", "22131331", "11231332", "12113242", "12122332", "12131422", "21231421", "22113331", "11213332", "22122421", "11222422", "22131511", "11231512", "12113422", "12122512", "21222511", "12231151", "13122151", "13131241", "11322151", "11331241", "12213151", "12222241", "12231331", "13113241", "13122331", "11313241", "13131421", "11322331", "11331421", "12213331", "12222421", "12231511", "13113421", "13122511", "11313421", "11322511", "21141151", "11132152", "11141242", "21123151", "21132241", "21141331", "11114152", "11123242", "11132332", "11141422", "21114241", "21123331", "21132421", "21141511", "11114332", "11123422", "11132512", "11241151", "12132151", "12141241", "11223151", "11232241", "11241331", "12114151", "12123241", "12132331", "12141421", "11214241", "11223331", "11232421", "11241511", "12114331", "12123421", "12132511", "11142151", "11151241", "11124151", "11133241", "11142331", "11151421", "11115241", "11124331", "11133421", "11142511", "21111253", "41111251", "11111344", "31111342", "21111433", "41111431", "11111524", "31111522", "21111613", "41111611", "21211162", "22111252", "11211253", "31211251", "12111343", "32111341", "21211342", "22111432", "11211433", "31211431", "12111523", "32111521", "21211522", "22111612", "11211613", "31211611", "22211161", "11311162", "23111251", "12211252", "21311251", "13111342", "22211341", "11311342", "23111431", "12211432", "21311431", "13111522", "22211521", "11311522", "23111611", "12211612", "21311611", "12311161", "13211251", "11411251", "14111341", "12311341", "13211431", "11411431", "14111521", "12311521", "13211611", "11411611", "31121161", "21112162", "21121252", "11112253", "31112251", "11121343", "31121341", "21112342", "21121432", "11112433", "31112431", "11121523", "31121521", "21112522", "21121612", "12121162", "21221161", "22112161", "11212162", "22121251", "11221252", "12112252", "12121342", "21221341", "22112341", "11212342", "22121431", "11221432", "12112432", "12121522", "21221521", "22112521", "11212522", "22121611", "11221612", "13121161", "11321161", "12212161", "12221251", "13112251", "13121341", "11312251", "11321341", "12212341", "12221431", "13112431", "13121521", "11312431", "11321521", "12212521", "12221611", "11131162", "21122161", "21131251", "11113162"])]); /*12496*/
		$1.parity = $a(["1001", "0101", "1100", "0011", "1010", "0110", "1111", "0000"]); /*12500*/
		$1.rowbits = $a($1.r); /*12503*/
		for (var _6J = 0, _6I = $1.r - 1; _6J <= _6I; _6J += 1) { /*12523*/
			$1.i = _6J; /*12505*/
			$k[$j++] = "p"; /*12506*/
			if ($1.i != ($1.r - 1)) { /*12506*/
				$k[$j++] = $get($1.parity, $1.i); /*12506*/
			} else { /*12506*/
				$k[$j++] = "0000"; /*12506*/
			} /*12506*/
			var _6P = $k[--$j]; /*12506*/
			$1[$k[--$j]] = _6P; /*12506*/
			$1.ccrow = $geti($1.ccs, $1.i * 8, 8); /*12507*/
			$k[$j++] = Infinity; /*12510*/
			for (var _6U = 0; _6U <= 7; _6U += 2) { /*12509*/
				$aload($geti($1.ccrow, _6U, 2)); /*12509*/
				var _6X = $k[--$j]; /*12509*/
				var _6Y = $k[--$j]; /*12509*/
				$k[$j++] = _6X + (_6Y * 49); /*12509*/
			} /*12509*/
			$1.scrow = $a(); /*12510*/
			$k[$j++] = Infinity; /*12518*/
			$k[$j++] = 10; /*12516*/
			$k[$j++] = 1; /*12516*/
			$k[$j++] = 1; /*12516*/
			for (var _6a = 0; _6a <= 3; _6a += 1) { /*12516*/
				$1.j = _6a; /*12514*/
				$forall($get($get($1.patterns, $get($1.p, $1.j) - 48), $get($1.scrow, $1.j)), function() { /*12515*/
					var _6k = $k[--$j]; /*12515*/
					$k[$j++] = _6k - 48; /*12515*/
				}); /*12515*/
			} /*12515*/
			$k[$j++] = 4; /*12517*/
			$k[$j++] = 1; /*12517*/
			$1.sbs = $a(); /*12518*/
			$k[$j++] = Infinity; /*12519*/
			var _6m = $1.sbs; /*12520*/
			$k[$j++] = 1; /*12520*/
			for (var _6n = 0, _6o = _6m.length; _6n < _6o; _6n++) { /*12520*/
				var _6q = $k[--$j]; /*12520*/
				var _6r = (_6q == 0) ? 1 : 0; /*12520*/
				$k[$j++] = _6q; /*12520*/
				for (var _6s = 0, _6t = $get(_6m, _6n); _6s < _6t; _6s++) { /*12520*/
					$k[$j++] = _6r /*12520*/
				} /*12520*/
			} /*12520*/
			$astore($a($counttomark() - 1)); /*12521*/
			var _6w = $k[--$j]; /*12521*/
			var _6x = $k[--$j]; /*12521*/
			var _6y = $k[--$j]; /*12521*/
			$put($1.rowbits, $1.i, _6w); /*12522*/
		} /*12522*/
		$k[$j++] = Infinity; /*12535*/
		for (var _72 = 0, _73 = 81 * $1.sepheight; _72 < _73; _72++) { /*12527*/
			$k[$j++] = 1; /*12527*/
		} /*12527*/
		for (var _76 = 0, _75 = $1.r - 2; _76 <= _75; _76 += 1) { /*12532*/
			$1.i = _76; /*12529*/
			for (var _78 = 0, _79 = $1.rowheight; _78 < _79; _78++) { /*12530*/
				$aload($get($1.rowbits, $1.i)); /*12530*/
			} /*12530*/
			for (var _7E = 0, _7F = $1.sepheight; _7E < _7F; _7E++) { /*12531*/
				for (var _7G = 0, _7H = 10; _7G < _7H; _7G++) { /*12531*/
					$k[$j++] = 0; /*12531*/
				} /*12531*/
				for (var _7I = 0, _7J = 70; _7I < _7J; _7I++) { /*12531*/
					$k[$j++] = 1; /*12531*/
				} /*12531*/
				$k[$j++] = 0; /*12531*/
			} /*12531*/
		} /*12531*/
		for (var _7L = 0, _7M = $1.rowheight; _7L < _7M; _7L++) { /*12533*/
			$aload($get($1.rowbits, $1.r - 1)); /*12533*/
		} /*12533*/
		for (var _7R = 0, _7S = 81 * $1.sepheight; _7R < _7S; _7R++) { /*12534*/
			$k[$j++] = 1; /*12534*/
		} /*12534*/
		$1.pixs = $a(); /*12535*/
		var _7Y = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: 81,
			pixy: ~~($1.pixs.length / 81),
			height: (~~($1.pixs.length / 81)) / 72,
			width: 81 / 72,
			opt: $1.options
		}; /*12545*/
		$k[$j++] = _7Y; /*12548*/
		if (!$1.dontdraw) { /*12548*/
			$0.renmatrix(); /*12548*/
		} /*12548*/
	};
	$0.channelcode = function() {
		var $1 = {}; /*12575*/
		$1.options = $k[--$j]; /*12577*/
		$1.barcode = $k[--$j]; /*12578*/
		$1.dontdraw = false; /*12580*/
		$1.shortfinder = false; /*12581*/
		$1.includetext = false; /*12582*/
		$1.includecheck = false; /*12583*/
		$1.height = 1; /*12584*/
		$forall($1.options, function() { /*12595*/
			var _3 = $k[--$j]; /*12595*/
			$1[$k[--$j]] = _3; /*12595*/
		}); /*12595*/
		$1.height = +$1.height; /*12597*/
		if (($1.barcode.length < 2) || ($1.barcode.length > 7)) { /*12602*/
			$k[$j++] = "bwipp.channelcodeBadLength"; /*12601*/
			$k[$j++] = "Channel Code must be 2 to 7 digits"; /*12601*/
			$0.raiseerror(); /*12601*/
		} /*12601*/
		$forall($1.barcode, function() { /*12607*/
			var _9 = $k[--$j]; /*12604*/
			if ((_9 < 48) || (_9 > 57)) { /*12606*/
				$k[$j++] = "bwipp.channelcodeBadCharacter"; /*12605*/
				$k[$j++] = "Channel Code must contain only digits"; /*12605*/
				$0.raiseerror(); /*12605*/
			} /*12605*/
		}); /*12605*/
		if ((~~$z($1.barcode)) > $get($a([26, 292, 3493, 44072, 576688, 7742862]), $1.barcode.length - 2)) { /*12610*/
			$k[$j++] = "bwipp.channelcodeTooBig"; /*12609*/
			$k[$j++] = "The Channel Code value is too big for the number of channels"; /*12609*/
			$0.raiseerror(); /*12609*/
		} /*12609*/
		$1.nextb = function() {
			var _E = $k[--$j]; /*12613*/
			var _N = (($get($1.s, _E) + ($get($1.b, _E - 1) + ($get($1.b, _E - 2) + $get($1.s, _E - 1)))) > 4) ? 1 : 2; /*12618*/
			$k[$j++] = _E; /*12634*/
			$k[$j++] = _N; /*12634*/
			if (_E < ($1.chan + 2)) { /*12632*/
				var _P = $k[--$j]; /*12620*/
				var _Q = $k[--$j]; /*12620*/
				var _R = $k[--$j]; /*12620*/
				$k[$j++] = _R; /*12623*/
				$k[$j++] = _Q; /*12623*/
				$k[$j++] = _P; /*12623*/
				for (var _T = _P, _S = _R; _T <= _S; _T += 1) { /*12623*/
					var _V = $k[--$j]; /*12621*/
					var _W = $k[--$j]; /*12621*/
					$put($1.b, _W, _T); /*12621*/
					var _X = $k[--$j]; /*12622*/
					var _Y = $k[--$j]; /*12622*/
					$k[$j++] = _Y; /*12622*/
					$k[$j++] = _X; /*12622*/
					$k[$j++] = _W; /*12622*/
					$k[$j++] = _V; /*12622*/
					$k[$j++] = (_X - _T) + 1; /*12622*/
					$k[$j++] = _Y; /*12622*/
					$k[$j++] = _W + 1; /*12622*/
					$1.nexts(); /*12622*/
				} /*12622*/
			} else { /*12632*/
				var _Z = $k[--$j]; /*12625*/
				var _a = $k[--$j]; /*12625*/
				var _b = $k[--$j]; /*12625*/
				$k[$j++] = _b; /*12633*/
				$k[$j++] = _a; /*12633*/
				$k[$j++] = _Z; /*12633*/
				if ($le(_Z, _b)) { /*12633*/
					var _d = $k[--$j]; /*12626*/
					var _e = $k[--$j]; /*12626*/
					var _f = $k[--$j]; /*12626*/
					$put($1.b, _e, _f); /*12626*/
					$k[$j++] = _f; /*12631*/
					$k[$j++] = _e; /*12631*/
					$k[$j++] = _d; /*12631*/
					if ($1.value == $1.target) { /*12631*/
						$k[$j++] = "out"; /*12630*/
						$k[$j++] = Infinity; /*12630*/
						for (var _i = 3; _i <= 10; _i += 1) { /*12629*/
							$k[$j++] = $get($1.s, _i); /*12629*/
							$k[$j++] = $get($1.b, _i); /*12629*/
						} /*12629*/
						var _p = $geti($a(), 0, $1.chan * 2); /*12630*/
						$1[$k[--$j]] = _p; /*12630*/
					} /*12630*/
					$1.value = $1.value + 1; /*12632*/
				} /*12632*/
			} /*12632*/
			$j -= 4; /*12635*/
		}; /*12636*/
		$1.nexts = function() {
			var _s = $k[--$j]; /*12639*/
			$k[$j++] = _s; /*12639*/
			if (_s < ($1.chan + 2)) { /*12639*/
				$k[$j++] = 1; /*12639*/
			} else { /*12639*/
				var _u = $k[--$j]; /*12639*/
				var _v = $k[--$j]; /*12639*/
				$k[$j++] = _v; /*12639*/
				$k[$j++] = _u; /*12639*/
				$k[$j++] = _v; /*12639*/
			} /*12639*/
			var _w = $k[--$j]; /*12639*/
			var _x = $k[--$j]; /*12639*/
			var _y = $k[--$j]; /*12639*/
			$k[$j++] = _y; /*12642*/
			$k[$j++] = _x; /*12642*/
			for (var _10 = _w, _z = _y; _10 <= _z; _10 += 1) { /*12642*/
				var _12 = $k[--$j]; /*12640*/
				$put($1.s, _12, _10); /*12640*/
				var _13 = $k[--$j]; /*12641*/
				var _14 = $k[--$j]; /*12641*/
				$k[$j++] = _14; /*12641*/
				$k[$j++] = _13; /*12641*/
				$k[$j++] = _12; /*12641*/
				$k[$j++] = (_13 - _10) + 1; /*12641*/
				$k[$j++] = _14; /*12641*/
				$k[$j++] = _12; /*12641*/
				$1.nextb(); /*12641*/
			} /*12641*/
			$j -= 3; /*12643*/
		}; /*12644*/
		$1.encode = function() {
			$1.chan = $k[--$j]; /*12647*/
			$1.target = $k[--$j]; /*12648*/
			$1.value = 0; /*12649*/
			$1.out = -1; /*12650*/
			$1.b = $a([1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]); /*12651*/
			$1.s = $a([0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]); /*12652*/
			var _19 = $1.chan; /*12653*/
			$k[$j++] = _19; /*12653*/
			$k[$j++] = _19; /*12653*/
			$k[$j++] = 3; /*12653*/
			$1.nexts(); /*12653*/
			$k[$j++] = $1.out; /*12654*/
		}; /*12655*/
		$1.barlen = $1.barcode.length; /*12657*/
		$k[$j++] = "finder"; /*12660*/
		if ($1.shortfinder) { /*12660*/
			$k[$j++] = $a([1, 1, 1, 1, 1]); /*12660*/
		} else { /*12660*/
			$k[$j++] = $a([1, 1, 1, 1, 1, 1, 1, 1, 1]); /*12660*/
		} /*12660*/
		var _1F = $k[--$j]; /*12660*/
		$1[$k[--$j]] = _1F; /*12660*/
		$k[$j++] = "data"; /*12663*/
		$k[$j++] = ~~$z($1.barcode); /*12663*/
		$k[$j++] = $1.barlen + 1; /*12663*/
		$1.encode(); /*12663*/
		var _1J = $k[--$j]; /*12663*/
		$1[$k[--$j]] = _1J; /*12663*/
		$1.check = $a([]); /*12666*/
		if ($1.includecheck) { /*12682*/
			$1.mod23 = $get($a([$a([]), $a([]), $a([13, 12, 4, 9, 3, 1]), $a([13, 2, 12, 3, 18, 16, 4, 1]), $a([11, 16, 17, 8, 20, 4, 10, 2, 5, 1]), $a([1, 4, 16, 18, 3, 12, 2, 8, 9, 13, 6, 1]), $a([20, 16, 22, 13, 15, 12, 5, 4, 8, 9, 21, 3, 7, 1]), $a([2, 6, 18, 8, 1, 3, 9, 4, 12, 13, 16, 2, 6, 18, 8, 1])]), $1.barlen); /*12676*/
			$k[$j++] = 0; /*12680*/
			for (var _1a = 0, _1Z = $1.data.length - 1; _1a <= _1Z; _1a += 1) { /*12680*/
				var _1f = $k[--$j]; /*12679*/
				$k[$j++] = _1f + (($get($1.data, _1a) - 1) * $get($1.mod23, _1a)); /*12679*/
			} /*12679*/
			var _1g = $k[--$j]; /*12681*/
			$k[$j++] = _1g % 23; /*12681*/
			$k[$j++] = 3; /*12681*/
			$1.encode(); /*12681*/
			$1.check = $k[--$j]; /*12681*/
		} /*12681*/
		$k[$j++] = Infinity; /*12689*/
		$aload($1.finder); /*12686*/
		$aload($1.data); /*12687*/
		$aload($1.check); /*12688*/
		$1.sbs = $a(); /*12689*/
		$1.txt = $a($1.barlen); /*12692*/
		for (var _1q = 0, _1p = $1.barlen - 1; _1q <= _1p; _1q += 1) { /*12696*/
			$1.i = _1q; /*12694*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), 0, 0, "", 0])); /*12695*/
		} /*12695*/
		$k[$j++] = Infinity; /*12706*/
		$k[$j++] = "ren"; /*12703*/
		$k[$j++] = $0.renlinear; /*12703*/
		$k[$j++] = "sbs"; /*12703*/
		$k[$j++] = $1.sbs; /*12703*/
		$k[$j++] = "bhs"; /*12703*/
		$k[$j++] = Infinity; /*12703*/
		for (var _1z = 0, _20 = ~~(($1.sbs.length + 1) / 2); _1z < _20; _1z++) { /*12702*/
			$k[$j++] = $1.height; /*12702*/
		} /*12702*/
		var _22 = $a(); /*12703*/
		$k[$j++] = _22; /*12704*/
		$k[$j++] = "bbs"; /*12704*/
		$k[$j++] = Infinity; /*12704*/
		for (var _24 = 0, _25 = ~~(($1.sbs.length + 1) / 2); _24 < _25; _24++) { /*12703*/
			$k[$j++] = 0; /*12703*/
		} /*12703*/
		var _26 = $a(); /*12704*/
		$k[$j++] = _26; /*12706*/
		$k[$j++] = "txt"; /*12706*/
		$k[$j++] = $1.txt; /*12706*/
		$k[$j++] = "textxalign"; /*12706*/
		$k[$j++] = "center"; /*12706*/
		$k[$j++] = "opt"; /*12706*/
		$k[$j++] = $1.options; /*12706*/
		var _29 = $d(); /*12706*/
		$k[$j++] = _29; /*12709*/
		if (!$1.dontdraw) { /*12709*/
			$0.renlinear(); /*12709*/
		} /*12709*/
	};
	$0.flattermarken = function() {
		var $1 = {}; /*12736*/
		$1.options = $k[--$j]; /*12738*/
		$1.barcode = $k[--$j]; /*12739*/
		$1.dontdraw = false; /*12741*/
		$1.includetext = false; /*12742*/
		$1.textfont = "Courier"; /*12743*/
		$1.textsize = 10; /*12744*/
		$1.textyoffset = -8.5; /*12745*/
		$1.height = 0.3; /*12746*/
		$forall($1.barcode, function() { /*12753*/
			var _3 = $k[--$j]; /*12750*/
			if ((_3 < 48) || (_3 > 57)) { /*12752*/
				$k[$j++] = "bwipp.flattermarkenBadCharacter"; /*12751*/
				$k[$j++] = "Flattermarken must contain only digits"; /*12751*/
				$0.raiseerror(); /*12751*/
			} /*12751*/
		}); /*12751*/
		$forall($1.options, function() { /*12764*/
			var _5 = $k[--$j]; /*12764*/
			$1[$k[--$j]] = _5; /*12764*/
		}); /*12764*/
		$1.textfont = "" + $1.textfont; /*12766*/
		$1.textsize = +$1.textsize; /*12767*/
		$1.textyoffset = +$1.textyoffset; /*12768*/
		$1.height = +$1.height; /*12769*/
		$forall($1.barcode, function() { /*12776*/
			var _C = $k[--$j]; /*12773*/
			if ((_C < 48) || (_C > 57)) { /*12775*/
				$k[$j++] = "bwipp.flattermarkenBadCharacter"; /*12774*/
				$k[$j++] = "Flattermarken must contain only digits"; /*12774*/
				$0.raiseerror(); /*12774*/
			} /*12774*/
		}); /*12774*/
		$1.encs = $a(["0018", "0117", "0216", "0315", "0414", "0513", "0612", "0711", "0810", "0900"]); /*12782*/
		$1.barchars = "1234567890"; /*12785*/
		$1.barlen = $1.barcode.length; /*12787*/
		$1.sbs = $s($1.barlen * 4); /*12789*/
		$1.txt = $a($1.barlen); /*12790*/
		for (var _L = 0, _K = $1.barlen - 1; _L <= _K; _L += 1) { /*12802*/
			$1.i = _L; /*12793*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*12795*/
			$j--; /*12796*/
			$1.indx = $k[--$j].length; /*12797*/
			$j -= 2; /*12798*/
			$1.enc = $get($1.encs, $1.indx); /*12799*/
			$puti($1.sbs, $1.i * 4, $1.enc); /*12800*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), $1.i * 9, $1.textyoffset, $1.textfont, $1.textsize])); /*12801*/
		} /*12801*/
		$k[$j++] = Infinity; /*12811*/
		$k[$j++] = "ren"; /*12808*/
		$k[$j++] = $0.renlinear; /*12808*/
		$k[$j++] = "sbs"; /*12808*/
		$k[$j++] = Infinity; /*12808*/
		var _h = $1.sbs; /*12807*/
		for (var _i = 0, _j = _h.length; _i < _j; _i++) { /*12807*/
			$k[$j++] = $get(_h, _i) - 48; /*12807*/
		} /*12807*/
		var _l = $a(); /*12808*/
		$k[$j++] = _l; /*12809*/
		$k[$j++] = "bhs"; /*12809*/
		$k[$j++] = Infinity; /*12809*/
		for (var _n = 0, _o = ~~(($1.sbs.length + 1) / 2); _n < _o; _n++) { /*12808*/
			$k[$j++] = $1.height; /*12808*/
		} /*12808*/
		var _q = $a(); /*12809*/
		$k[$j++] = _q; /*12810*/
		$k[$j++] = "bbs"; /*12810*/
		$k[$j++] = Infinity; /*12810*/
		for (var _s = 0, _t = ~~(($1.sbs.length + 1) / 2); _s < _t; _s++) { /*12809*/
			$k[$j++] = 0; /*12809*/
		} /*12809*/
		var _u = $a(); /*12810*/
		$k[$j++] = _u; /*12811*/
		$k[$j++] = "txt"; /*12811*/
		$k[$j++] = $1.txt; /*12811*/
		$k[$j++] = "opt"; /*12811*/
		$k[$j++] = $1.options; /*12811*/
		var _x = $d(); /*12811*/
		$k[$j++] = _x; /*12814*/
		if (!$1.dontdraw) { /*12814*/
			$0.renlinear(); /*12814*/
		} /*12814*/
	};
	$0.raw = function() {
		var $1 = {}; /*12841*/
		$1.options = $k[--$j]; /*12843*/
		$1.barcode = $k[--$j]; /*12844*/
		$1.dontdraw = false; /*12846*/
		$1.height = 1; /*12847*/
		$forall($1.options, function() { /*12858*/
			var _3 = $k[--$j]; /*12858*/
			$1[$k[--$j]] = _3; /*12858*/
		}); /*12858*/
		$1.height = +$1.height; /*12860*/
		$forall($1.barcode, function() { /*12867*/
			var _7 = $k[--$j]; /*12864*/
			if ((_7 < 49) || (_7 > 57)) { /*12866*/
				$k[$j++] = "bwipp.rawBadCharacter"; /*12865*/
				$k[$j++] = "Raw must contain only digits 1 to 9"; /*12865*/
				$0.raiseerror(); /*12865*/
			} /*12865*/
		}); /*12865*/
		$k[$j++] = Infinity; /*12875*/
		$k[$j++] = "ren"; /*12873*/
		$k[$j++] = $0.renlinear; /*12873*/
		$k[$j++] = "sbs"; /*12873*/
		$k[$j++] = Infinity; /*12873*/
		$forall($1.barcode, function() { /*12872*/
			var _9 = $k[--$j]; /*12872*/
			$k[$j++] = _9 - 48; /*12872*/
		}); /*12872*/
		var _A = $a(); /*12873*/
		$k[$j++] = _A; /*12874*/
		$k[$j++] = "bhs"; /*12874*/
		$k[$j++] = Infinity; /*12874*/
		for (var _C = 0, _D = ~~(($1.barcode.length + 1) / 2); _C < _D; _C++) { /*12873*/
			$k[$j++] = $1.height; /*12873*/
		} /*12873*/
		var _F = $a(); /*12874*/
		$k[$j++] = _F; /*12875*/
		$k[$j++] = "bbs"; /*12875*/
		$k[$j++] = Infinity; /*12875*/
		for (var _H = 0, _I = ~~(($1.barcode.length + 1) / 2); _H < _I; _H++) { /*12874*/
			$k[$j++] = 0; /*12874*/
		} /*12874*/
		var _J = $a(); /*12875*/
		$k[$j++] = _J; /*12875*/
		$k[$j++] = "opt"; /*12875*/
		$k[$j++] = $1.options; /*12875*/
		var _L = $d(); /*12875*/
		$k[$j++] = _L; /*12878*/
		if (!$1.dontdraw) { /*12878*/
			$0.renlinear(); /*12878*/
		} /*12878*/
	};
	$0.daft = function() {
		var $1 = {}; /*12905*/
		$1.options = $k[--$j]; /*12907*/
		$1.barcode = $k[--$j]; /*12908*/
		$1.dontdraw = false; /*12910*/
		$1.height = 0.175; /*12911*/
		$forall($1.options, function() { /*12922*/
			var _3 = $k[--$j]; /*12922*/
			$1[$k[--$j]] = _3; /*12922*/
		}); /*12922*/
		$1.height = +$1.height; /*12924*/
		$forall($1.barcode, function() { /*12930*/
			var _7 = $k[--$j]; /*12927*/
			if ((_7 != 68) && ((_7 != 65) && ((_7 != 70) && (_7 != 84)))) { /*12929*/
				$k[$j++] = "bwipp.daftBadCharacter"; /*12928*/
				$k[$j++] = "DAFT must contain only characters D, A, F and T"; /*12928*/
				$0.raiseerror(); /*12928*/
			} /*12928*/
		}); /*12928*/
		$1.barlen = $1.barcode.length; /*12932*/
		$1.bbs = $a($1.barlen); /*12934*/
		$1.bhs = $a($1.barlen); /*12935*/
		for (var _F = 0, _E = $1.barlen - 1; _F <= _E; _F += 1) { /*12955*/
			$1.i = _F; /*12937*/
			$1.enc = $geti($1.barcode, $1.i, 1); /*12938*/
			if ($eq($1.enc, "D")) { /*12942*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*12940*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*12941*/
			} /*12941*/
			if ($eq($1.enc, "A")) { /*12946*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*12944*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*12945*/
			} /*12945*/
			if ($eq($1.enc, "F")) { /*12950*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*12948*/
				$put($1.bhs, $1.i, (8 * $1.height) / 8); /*12949*/
			} /*12949*/
			if ($eq($1.enc, "T")) { /*12954*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*12952*/
				$put($1.bhs, $1.i, (2 * $1.height) / 8); /*12953*/
			} /*12953*/
		} /*12953*/
		$k[$j++] = Infinity; /*12963*/
		$k[$j++] = "ren"; /*12963*/
		$k[$j++] = $0.renlinear; /*12963*/
		$k[$j++] = "bbs"; /*12963*/
		$k[$j++] = $1.bbs; /*12963*/
		$k[$j++] = "bhs"; /*12963*/
		$k[$j++] = $1.bhs; /*12963*/
		$k[$j++] = "sbs"; /*12963*/
		$k[$j++] = Infinity; /*12963*/
		for (var _o = 0, _p = $1.bhs.length - 1; _o < _p; _o++) { /*12962*/
			$k[$j++] = 1.44; /*12962*/
			$k[$j++] = 1.872; /*12962*/
		} /*12962*/
		$k[$j++] = 1.44; /*12962*/
		var _q = $a(); /*12963*/
		$k[$j++] = _q; /*12963*/
		$k[$j++] = "opt"; /*12963*/
		$k[$j++] = $1.options; /*12963*/
		var _s = $d(); /*12963*/
		$k[$j++] = _s; /*12966*/
		if (!$1.dontdraw) { /*12966*/
			$0.renlinear(); /*12966*/
		} /*12966*/
	};
	$0.symbol = function() {
		var $1 = {}; /*12993*/
		$1.options = $k[--$j]; /*12995*/
		$1.barcode = $k[--$j]; /*12996*/
		$1.dontdraw = false; /*12998*/
		$forall($1.options, function() { /*13009*/
			var _3 = $k[--$j]; /*13009*/
			$1[$k[--$j]] = _3; /*13009*/
		}); /*13009*/
		var _H = {
			fima: function() {
				$1.sbs = $a([2.25, 2.25, 2.25, 11.25, 2.25, 11.25, 2.25, 2.25, 2.25]); /*13013*/
				$1.bhs = $a([0.625, 0.625, 0.625, 0.625, 0.625]); /*13014*/
				$1.bbs = $a([0, 0, 0, 0, 0]); /*13015*/
			},
			fimb: function() {
				$1.sbs = $a([2.25, 6.75, 2.25, 2.25, 2.25, 6.25, 2.25, 2.25, 2.25, 6.75, 2.25]); /*13018*/
				$1.bhs = $a([0.625, 0.625, 0.625, 0.625, 0.625, 0.625]); /*13019*/
				$1.bbs = $a([0, 0, 0, 0, 0, 0]); /*13020*/
			},
			fimc: function() {
				$1.sbs = $a([2.25, 2.25, 2.25, 6.75, 2.25, 6.75, 2.25, 6.75, 2.25, 2.25, 2.25]); /*13023*/
				$1.bhs = $a([0.625, 0.625, 0.625, 0.625, 0.625, 0.625]); /*13024*/
				$1.bbs = $a([0, 0, 0, 0, 0, 0]); /*13025*/
			},
			fimd: function() {
				$1.sbs = $a([2.25, 2.25, 2.25, 2.25, 2.25, 6.75, 2.25, 6.75, 2.25, 2.25, 2.25, 2.25, 2.25]); /*13028*/
				$1.bhs = $a([0.625, 0.625, 0.625, 0.625, 0.625, 0.625, 0.625]); /*13029*/
				$1.bbs = $a([0, 0, 0, 0, 0, 0, 0]); /*13030*/
			}
		}; /*13030*/
		$1.symbols = _H; /*13032*/
		var _K = $get($1.symbols, $1.barcode) !== undefined; /*13035*/
		if (!_K) { /*13037*/
			$k[$j++] = "bwipp.symbolUnknownSymbol"; /*13036*/
			$k[$j++] = "Unknown symbol name provided"; /*13036*/
			$0.raiseerror(); /*13036*/
		} /*13036*/
		$get($1.symbols, $1.barcode)(); /*13039*/
		var _S = {
			ren: $0.renlinear,
			sbs: $1.sbs,
			bhs: $1.bhs,
			bbs: $1.bbs,
			opt: $1.options
		}; /*13047*/
		$k[$j++] = _S; /*13050*/
		if (!$1.dontdraw) { /*13050*/
			$0.renlinear(); /*13050*/
		} /*13050*/
	};
	$0.pdf417 = function() {
		var $1 = {}; /*13077*/
		$1.options = $k[--$j]; /*13079*/
		$1.barcode = $k[--$j]; /*13080*/
		$1.dontdraw = false; /*13082*/
		$1.compact = false; /*13083*/
		$1.eclevel = -1; /*13084*/
		$1.columns = 0; /*13085*/
		$1.rows = 0; /*13086*/
		$1.rowmult = 3; /*13087*/
		$1.encoding = "auto"; /*13088*/
		$1.ccc = false; /*13089*/
		$1.raw = false; /*13090*/
		$1.parse = false; /*13091*/
		$forall($1.options, function() { /*13102*/
			var _3 = $k[--$j]; /*13102*/
			$1[$k[--$j]] = _3; /*13102*/
		}); /*13102*/
		$1.eclevel = ~~$1.eclevel; /*13104*/
		$1.columns = ~~$1.columns; /*13105*/
		$1.rows = ~~$1.rows; /*13106*/
		$1.rowmult = +$1.rowmult; /*13107*/
		if ($1.raw) { /*13130*/
			$1.encoding = "raw"; /*13130*/
		} /*13130*/
		if ($eq($1.encoding, "raw")) { /*13144*/
			$1.datcws = $a($1.barcode.length); /*13134*/
			$1.i = 0; /*13135*/
			$1.j = 0; /*13135*/
			for (;;) { /*13142*/
				if ($1.i == $1.barcode.length) { /*13137*/
					break; /*13137*/
				} /*13137*/
				$1.cw = ~~$z($geti($1.barcode, $1.i + 1, 3)); /*13138*/
				$put($1.datcws, $1.j, $1.cw); /*13139*/
				$1.i = $1.i + 4; /*13140*/
				$1.j = $1.j + 1; /*13141*/
			} /*13141*/
			$1.datcws = $geti($1.datcws, 0, $1.j); /*13143*/
		} /*13143*/
		$k[$j++] = Infinity; /*13146*/
		$forall($1.barcode); /*13146*/
		$1.barcode = $a(); /*13146*/
		$1.barlen = $1.barcode.length; /*13147*/
		if ($1.ccc) { /*13149*/
			$1.encoding = "ccc"; /*13149*/
		} /*13149*/
		$1.encb = function() {
			$1.in = $k[--$j]; /*13152*/
			$1.inlen = $1.in.length; /*13153*/
			$1.out = $a(((~~($1.inlen / 6)) * 5) + ($1.inlen % 6)); /*13154*/
			for (var _b = 0, _a = (~~($1.inlen / 6)) - 1; _b <= _a; _b += 1) { /*13177*/
				$1.k = _b; /*13156*/
				$k[$j++] = Infinity; /*13157*/
				$aload($geti($1.in, $1.k * 6, 3)); /*13157*/
				$1.msbs = $a(); /*13157*/
				$k[$j++] = Infinity; /*13161*/
				$aload($1.msbs); /*13159*/
				var _h = $k[--$j]; /*13159*/
				var _i = $k[--$j]; /*13159*/
				var _j = $k[--$j]; /*13159*/
				$k[$j++] = (_h + (_i * 256)) + (_j * 65536); /*13160*/
				for (var _k = 0, _l = 3; _k < _l; _k++) { /*13160*/
					var _m = $k[--$j]; /*13160*/
					$k[$j++] = _m % 900; /*13160*/
					$k[$j++] = ~~(_m / 900); /*13160*/
				} /*13160*/
				$1.mscs = $a(); /*13161*/
				$k[$j++] = Infinity; /*13162*/
				$aload($geti($1.in, ($1.k * 6) + 3, 3)); /*13162*/
				$1.lsbs = $a(); /*13162*/
				$k[$j++] = Infinity; /*13166*/
				$aload($1.lsbs); /*13164*/
				var _t = $k[--$j]; /*13164*/
				var _u = $k[--$j]; /*13164*/
				var _v = $k[--$j]; /*13164*/
				$k[$j++] = (_t + (_u * 256)) + (_v * 65536); /*13165*/
				for (var _w = 0, _x = 3; _w < _x; _w++) { /*13165*/
					var _y = $k[--$j]; /*13165*/
					$k[$j++] = _y % 900; /*13165*/
					$k[$j++] = ~~(_y / 900); /*13165*/
				} /*13165*/
				$1.lscs = $a(); /*13166*/
				var _11 = $get($1.lscs, 0); /*13167*/
				var _13 = $get($1.mscs, 0); /*13167*/
				$put($1.out, ($1.k * 5) + 4, (_11 + (_13 * 316)) % 900); /*13168*/
				var _17 = $get($1.lscs, 1); /*13169*/
				var _19 = $get($1.mscs, 0); /*13169*/
				var _1B = $get($1.mscs, 1); /*13169*/
				$put($1.out, ($1.k * 5) + 3, ((((~~((_11 + (_13 * 316)) / 900)) + _17) + (_19 * 641)) + (_1B * 316)) % 900); /*13170*/
				var _1F = $get($1.lscs, 2); /*13171*/
				var _1H = $get($1.mscs, 0); /*13171*/
				var _1J = $get($1.mscs, 1); /*13171*/
				var _1L = $get($1.mscs, 2); /*13171*/
				$put($1.out, ($1.k * 5) + 2, (((((~~(((((~~((_11 + (_13 * 316)) / 900)) + _17) + (_19 * 641)) + (_1B * 316)) / 900)) + _1F) + (_1H * 20)) + (_1J * 641)) + (_1L * 316)) % 900); /*13172*/
				var _1P = $get($1.lscs, 3); /*13173*/
				var _1R = $get($1.mscs, 1); /*13173*/
				var _1T = $get($1.mscs, 2); /*13173*/
				$put($1.out, ($1.k * 5) + 1, ((((~~((((((~~(((((~~((_11 + (_13 * 316)) / 900)) + _17) + (_19 * 641)) + (_1B * 316)) / 900)) + _1F) + (_1H * 20)) + (_1J * 641)) + (_1L * 316)) / 900)) + _1P) + (_1R * 20)) + (_1T * 641)) % 900); /*13174*/
				$put($1.out, $1.k * 5, ((~~(((((~~((((((~~(((((~~((_11 + (_13 * 316)) / 900)) + _17) + (_19 * 641)) + (_1B * 316)) / 900)) + _1F) + (_1H * 20)) + (_1J * 641)) + (_1L * 316)) / 900)) + _1P) + (_1R * 20)) + (_1T * 641)) / 900)) + ($get($1.mscs, 2) * 20)) % 900); /*13176*/
			} /*13176*/
			$1.rem = $1.inlen % 6; /*13178*/
			if ($1.rem != 0) { /*13183*/
				$k[$j++] = $1.out; /*13181*/
				$k[$j++] = $1.out.length - $1.rem; /*13181*/
				$k[$j++] = Infinity; /*13181*/
				$aload($geti($1.in, $1.inlen - $1.rem, $1.rem)); /*13181*/
				var _1k = $a(); /*13181*/
				var _1l = $k[--$j]; /*13182*/
				$puti($k[--$j], _1l, _1k); /*13182*/
			} /*13182*/
			$k[$j++] = $1.out; /*13184*/
		}; /*13185*/
		if ($eq($1.encoding, "byte") || $eq($1.encoding, "ccc")) { /*13192*/
			$1.datcws = $a((((~~($1.barlen / 6)) * 5) + ($1.barlen % 6)) + 1); /*13188*/
			var _1v = (($1.barlen % 6) == 0) ? 924 : 901; /*13189*/
			$put($1.datcws, 0, _1v); /*13189*/
			$k[$j++] = $1.datcws; /*13190*/
			$k[$j++] = 1; /*13190*/
			$k[$j++] = $1.barcode; /*13190*/
			$1.encb(); /*13190*/
			var _1y = $k[--$j]; /*13190*/
			var _1z = $k[--$j]; /*13190*/
			$puti($k[--$j], _1z, _1y); /*13190*/
			if ($eq($1.encoding, "ccc")) { /*13191*/
				$k[$j++] = Infinity; /*13191*/
				$k[$j++] = 920; /*13191*/
				$aload($1.datcws); /*13191*/
				$1.datcws = $a(); /*13191*/
			} /*13191*/
		} /*13191*/
		if ($eq($1.encoding, "auto")) { /*13556*/
			$1.T = 0; /*13197*/
			$1.N = 1; /*13197*/
			$1.B = 2; /*13197*/
			$1.A = 0; /*13198*/
			$1.L = 1; /*13198*/
			$1.M = 2; /*13198*/
			$1.P = 3; /*13198*/
			$1.tl = -1; /*13201*/
			$1.nl = -2; /*13201*/
			$1.bl = -3; /*13201*/
			$1.bl6 = -4; /*13201*/
			$1.bs = -5; /*13201*/
			$1.al = -6; /*13204*/
			$1.ll = -7; /*13204*/
			$1.ml = -8; /*13204*/
			$1.pl = -9; /*13204*/
			$1.as = -10; /*13204*/
			$1.ps = -11; /*13204*/
			$1.charmaps = $a([$a(["A", "a", "0", ";"]), $a(["B", "b", "1", "<"]), $a(["C", "c", "2", ">"]), $a(["D", "d", "3", "@"]), $a(["E", "e", "4", "["]), $a(["F", "f", "5", 92]), $a(["G", "g", "6", "]"]), $a(["H", "h", "7", "_"]), $a(["I", "i", "8", "`"]), $a(["J", "j", "9", "~"]), $a(["K", "k", "&", "!"]), $a(["L", "l", 13, 13]), $a(["M", "m", 9, 9]), $a(["N", "n", ",", ","]), $a(["O", "o", ":", ":"]), $a(["P", "p", "#", 10]), $a(["Q", "q", "-", "-"]), $a(["R", "r", ".", "."]), $a(["S", "s", "$", "$"]), $a(["T", "t", "/", "/"]), $a(["U", "u", "+", "\""]), $a(["V", "v", "%", "|"]), $a(["W", "w", "*", "*"]), $a(["X", "x", "=", 40]), $a(["Y", "y", "^", 41]), $a(["Z", "z", $1.pl, "?"]), $a([" ", " ", " ", "{"]), $a([$1.ll, $1.as, $1.ll, "}"]), $a([$1.ml, $1.ml, $1.al, "'"]), $a([$1.ps, $1.ps, $1.ps, $1.al])]); /*13239*/
			$1.charvals = $a([{}, {}, {}, {}]); /*13242*/
			$1.alltext = {}; /*13243*/
			for (var _2o = 0, _2n = $1.charmaps.length - 1; _2o <= _2n; _2o += 1) { /*13253*/
				$1.i = _2o; /*13245*/
				$1.encs = $get($1.charmaps, $1.i); /*13246*/
				for (var _2s = 0; _2s <= 3; _2s += 1) { /*13252*/
					$1.j = _2s; /*13248*/
					var _2v = $get($1.encs, $1.j); /*13249*/
					$k[$j++] = _2v; /*13249*/
					if ($eq($type(_2v), "stringtype")) { /*13249*/
						var _2y = $get($k[--$j], 0); /*13249*/
						$k[$j++] = _2y; /*13249*/
					} /*13249*/
					var _2z = $k[--$j]; /*13250*/
					$put($get($1.charvals, $1.j), _2z, $1.i); /*13250*/
					$put($1.alltext, _2z, -1); /*13251*/
				} /*13251*/
			} /*13251*/
			$1.e = 10000; /*13255*/
			$1.latlen = $a([$a([0, 1, 1, 2]), $a([2, 0, 1, 2]), $a([1, 1, 0, 1]), $a([1, 2, 2, 0])]); /*13263*/
			$1.latseq = $a([$a([$a([]), $a([$1.ll]), $a([$1.ml]), $a([$1.ml, $1.pl])]), $a([$a([$1.ml, $1.al]), $a([]), $a([$1.ml]), $a([$1.ml, $1.pl])]), $a([$a([$1.al]), $a([$1.ll]), $a([]), $a([$1.pl])]), $a([$a([$1.al]), $a([$1.al, $1.ll]), $a([$1.al, $1.ml]), $a([])])]); /*13271*/
			$1.shftlen = $a([$a([$1.e, $1.e, $1.e, 1]), $a([1, $1.e, $1.e, 1]), $a([$1.e, $1.e, $1.e, 1]), $a([$1.e, $1.e, $1.e, $1.e])]); /*13279*/
			$k[$j++] = Infinity; /*13282*/
			for (var _44 = 0, _45 = $1.barlen; _44 < _45; _44++) { /*13282*/
				$k[$j++] = 0; /*13282*/
			} /*13282*/
			$k[$j++] = 0; /*13282*/
			$1.numdigits = $a(); /*13282*/
			$k[$j++] = Infinity; /*13283*/
			for (var _48 = 0, _49 = $1.barlen; _48 < _49; _48++) { /*13283*/
				$k[$j++] = 0; /*13283*/
			} /*13283*/
			$k[$j++] = 0; /*13283*/
			$1.numtext = $a(); /*13283*/
			$k[$j++] = Infinity; /*13284*/
			for (var _4C = 0, _4D = $1.barlen; _4C < _4D; _4C++) { /*13284*/
				$k[$j++] = 0; /*13284*/
			} /*13284*/
			$k[$j++] = 0; /*13284*/
			$1.numbytes = $a(); /*13284*/
			for (var _4G = $1.barlen - 1; _4G >= 0; _4G -= 1) { /*13296*/
				$1.i = _4G; /*13286*/
				var _4J = $get($1.barcode, $1.i); /*13287*/
				if ((_4J >= 48) && (_4J <= 57)) { /*13289*/
					$put($1.numdigits, $1.i, $get($1.numdigits, $1.i + 1) + 1); /*13288*/
				} /*13288*/
				var _4T = $get($1.alltext, $get($1.barcode, $1.i)) !== undefined; /*13290*/
				if (_4T && ($get($1.numdigits, $1.i) < 13)) { /*13292*/
					$put($1.numtext, $1.i, $get($1.numtext, $1.i + 1) + 1); /*13291*/
				} /*13291*/
				if (($get($1.numtext, $1.i) < 5) && ($get($1.numdigits, $1.i) < 13)) { /*13295*/
					$put($1.numbytes, $1.i, $get($1.numbytes, $1.i + 1) + 1); /*13294*/
				} /*13294*/
			} /*13294*/
			$1.numdigits = $geti($1.numdigits, 0, $1.barlen); /*13297*/
			$1.numtext = $geti($1.numtext, 0, $1.barlen); /*13298*/
			$1.numbytes = $geti($1.numbytes, 0, $1.barlen); /*13299*/
			$1.seq = $a([]); /*13301*/
			$1.seqlen = 0; /*13301*/
			$1.state = $1.T; /*13301*/
			$1.p = 0; /*13301*/
			for (;;) { /*13344*/
				if ($1.p == $1.barlen) { /*13302*/
					break; /*13302*/
				} /*13302*/
				$1.n = $get($1.numdigits, $1.p); /*13303*/
				if ($1.n >= 13) { /*13342*/
					$k[$j++] = Infinity; /*13309*/
					$aload($1.seq); /*13306*/
					$k[$j++] = $1.nl; /*13308*/
					$k[$j++] = Infinity; /*13308*/
					$aload($geti($1.barcode, $1.p, $1.n)); /*13308*/
					var _5A = $a(); /*13308*/
					$k[$j++] = _5A; /*13308*/
					$1.seq = $a(); /*13309*/
					$1.state = $1.N; /*13310*/
					$1.p = $1.p + $1.n; /*13311*/
					$1.seqlen = ($1.seqlen + 1) + $1.n; /*13312*/
				} else { /*13342*/
					$1.t = $get($1.numtext, $1.p); /*13314*/
					if ($1.t >= 5) { /*13342*/
						$k[$j++] = Infinity; /*13320*/
						$aload($1.seq); /*13317*/
						if ($1.state != $1.T) { /*13318*/
							$k[$j++] = $1.tl; /*13318*/
						} /*13318*/
						$k[$j++] = Infinity; /*13319*/
						$aload($geti($1.barcode, $1.p, $1.t)); /*13319*/
						var _5T = $a(); /*13319*/
						$k[$j++] = _5T; /*13319*/
						$1.seq = $a(); /*13320*/
						$1.state = $1.T; /*13321*/
						$1.p = $1.p + $1.t; /*13322*/
						$1.seqlen = ($1.seqlen + 1) + $1.t; /*13323*/
					} else { /*13342*/
						$1.b = $get($1.numbytes, $1.p); /*13325*/
						if (($1.b == 1) && ($1.state == $1.T)) { /*13342*/
							$k[$j++] = Infinity; /*13331*/
							$aload($1.seq); /*13328*/
							$k[$j++] = $1.bs; /*13330*/
							$k[$j++] = $a([$get($1.barcode, $1.p)]); /*13330*/
							$1.seq = $a(); /*13331*/
							$1.p = $1.p + $1.b; /*13332*/
							$1.seqlen = $1.seqlen + 2; /*13333*/
						} else { /*13342*/
							$k[$j++] = Infinity; /*13339*/
							$aload($1.seq); /*13336*/
							if (($1.b % 6) != 0) { /*13337*/
								$k[$j++] = $1.bl; /*13337*/
							} else { /*13337*/
								$k[$j++] = $1.bl6; /*13337*/
							} /*13337*/
							$k[$j++] = Infinity; /*13338*/
							$aload($geti($1.barcode, $1.p, $1.b)); /*13338*/
							var _5y = $a(); /*13338*/
							$k[$j++] = _5y; /*13338*/
							$1.seq = $a(); /*13339*/
							$1.state = $1.B; /*13340*/
							$1.p = $1.p + $1.b; /*13341*/
							$1.seqlen = ($1.seqlen + 1) + $1.b; /*13342*/
						} /*13342*/
					} /*13342*/
				} /*13342*/
			} /*13342*/
			$k[$j++] = "latchcws"; /*13347*/
			$k[$j++] = Infinity; /*13347*/
			$k[$j++] = $1.tl; /*13347*/
			$k[$j++] = 900; /*13347*/
			$k[$j++] = $1.bl; /*13347*/
			$k[$j++] = 901; /*13347*/
			$k[$j++] = $1.bl6; /*13347*/
			$k[$j++] = 924; /*13347*/
			$k[$j++] = $1.nl; /*13347*/
			$k[$j++] = 902; /*13347*/
			$k[$j++] = $1.bs; /*13347*/
			$k[$j++] = 913; /*13347*/
			var _6A = $d(); /*13347*/
			$1[$k[--$j]] = _6A; /*13348*/
			$1.enca = function() {
				var _6G = $get($get($1.charvals, $1.A), $k[--$j]); /*13351*/
				$k[$j++] = _6G; /*13351*/
			}; /*13351*/
			$1.encl = function() {
				var _6L = $get($get($1.charvals, $1.L), $k[--$j]); /*13352*/
				$k[$j++] = _6L; /*13352*/
			}; /*13352*/
			$1.encm = function() {
				var _6Q = $get($get($1.charvals, $1.M), $k[--$j]); /*13353*/
				$k[$j++] = _6Q; /*13353*/
			}; /*13353*/
			$1.encp = function() {
				var _6V = $get($get($1.charvals, $1.P), $k[--$j]); /*13354*/
				$k[$j++] = _6V; /*13354*/
			}; /*13354*/
			$1.textencfuncs = $a(["enca", "encl", "encm", "encp"]); /*13355*/
			$1.addtotext = function() {
				$put($1.text, $1.l, $k[--$j]); /*13358*/
				$1.l = $1.l + 1; /*13359*/
			}; /*13360*/
			$1.enct = function() {
				$1.in = $k[--$j]; /*13364*/
				$1.curlen = $a([$1.e, $1.e, $1.e, $1.e]); /*13366*/
				$put($1.curlen, $1.submode, 0); /*13367*/
				$1.curseq = $a([$a([]), $a([]), $a([]), $a([])]); /*13368*/
				$forall($1.in, function() { /*13438*/
					$1.char = $k[--$j]; /*13373*/
					for (;;) { /*13394*/
						$1.imp = false; /*13377*/
						var _6u = $a([$1.A, $1.L, $1.M, $1.P]); /*13378*/
						for (var _6v = 0, _6w = _6u.length; _6v < _6w; _6v++) { /*13392*/
							$1.x = $get(_6u, _6v); /*13379*/
							var _72 = $a([$1.A, $1.L, $1.M, $1.P]); /*13380*/
							for (var _73 = 0, _74 = _72.length; _73 < _74; _73++) { /*13391*/
								$1.y = $get(_72, _73); /*13381*/
								$1.cost = $get($1.curlen, $1.x) + $get($get($1.latlen, $1.x), $1.y); /*13382*/
								if ($1.cost < $get($1.curlen, $1.y)) { /*13390*/
									$put($1.curlen, $1.y, $1.cost); /*13384*/
									$k[$j++] = $1.curseq; /*13387*/
									$k[$j++] = $1.y; /*13387*/
									$k[$j++] = Infinity; /*13387*/
									$aload($get($1.curseq, $1.x)); /*13386*/
									$aload($get($get($1.latseq, $1.x), $1.y)); /*13387*/
									var _7V = $a(); /*13387*/
									var _7W = $k[--$j]; /*13388*/
									$put($k[--$j], _7W, _7V); /*13388*/
									$1.imp = true; /*13389*/
								} /*13389*/
							} /*13389*/
						} /*13389*/
						if (!$1.imp) { /*13393*/
							break; /*13393*/
						} /*13393*/
					} /*13393*/
					$1.nxtlen = $a([$1.e, $1.e, $1.e, $1.e]); /*13397*/
					$1.nxtseq = $a(4); /*13398*/
					var _7j = $a([$1.A, $1.L, $1.M, $1.P]); /*13400*/
					for (var _7k = 0, _7l = _7j.length; _7k < _7l; _7k++) { /*13433*/
						$1.x = $get(_7j, _7k); /*13401*/
						for (;;) { /*13431*/
							var _7r = $get($get($1.charvals, $1.x), $1.char) !== undefined; /*13405*/
							if (!_7r) { /*13405*/
								break; /*13405*/
							} /*13405*/
							$1.cost = $get($1.curlen, $1.x) + 1; /*13408*/
							if ($1.cost < $get($1.nxtlen, $1.x)) { /*13412*/
								$put($1.nxtlen, $1.x, $1.cost); /*13410*/
								$k[$j++] = $1.nxtseq; /*13411*/
								$k[$j++] = $1.x; /*13411*/
								$k[$j++] = Infinity; /*13411*/
								$aload($get($1.curseq, $1.x)); /*13411*/
								$k[$j++] = $1.char; /*13411*/
								var _88 = $a(); /*13411*/
								var _89 = $k[--$j]; /*13411*/
								$put($k[--$j], _89, _88); /*13411*/
							} /*13411*/
							var _8F = $a([$1.A, $1.L, $1.M, $1.P]); /*13415*/
							for (var _8G = 0, _8H = _8F.length; _8G < _8H; _8G++) { /*13428*/
								$1.y = $get(_8F, _8G); /*13416*/
								if ($ne($1.x, $1.y)) { /*13427*/
									$1.cost = ($get($1.curlen, $1.y) + $get($get($1.shftlen, $1.y), $1.x)) + 1; /*13418*/
									if ($1.cost < $get($1.nxtlen, $1.y)) { /*13426*/
										$put($1.nxtlen, $1.y, $1.cost); /*13420*/
										$k[$j++] = $1.nxtseq; /*13424*/
										$k[$j++] = $1.y; /*13424*/
										$k[$j++] = Infinity; /*13424*/
										$aload($get($1.curseq, $1.y)); /*13422*/
										if ($1.x == $1.A) { /*13423*/
											$k[$j++] = $1.as; /*13423*/
										} else { /*13423*/
											$k[$j++] = $1.ps; /*13423*/
										} /*13423*/
										$k[$j++] = $1.char; /*13424*/
										var _8k = $a(); /*13424*/
										var _8l = $k[--$j]; /*13425*/
										$put($k[--$j], _8l, _8k); /*13425*/
									} /*13425*/
								} /*13425*/
							} /*13425*/
							break; /*13430*/
						} /*13430*/
					} /*13430*/
					$1.curlen = $1.nxtlen; /*13435*/
					$1.curseq = $1.nxtseq; /*13436*/
				}); /*13436*/
				$1.minseq = $1.e; /*13441*/
				var _8u = $a([$1.A, $1.L, $1.M, $1.P]); /*13442*/
				for (var _8v = 0, _8w = _8u.length; _8v < _8w; _8v++) { /*13448*/
					$1.k = $get(_8u, _8v); /*13443*/
					if ($get($1.curlen, $1.k) < $1.minseq) { /*13447*/
						$1.minseq = $get($1.curlen, $1.k); /*13445*/
						$1.txtseq = $get($1.curseq, $1.k); /*13446*/
					} /*13446*/
				} /*13446*/
				$1.text = $a($1.minseq); /*13451*/
				$1.k = 0; /*13452*/
				$1.l = 0; /*13452*/
				for (;;) { /*13472*/
					if ($1.k >= $1.txtseq.length) { /*13453*/
						break; /*13453*/
					} /*13453*/
					$1.char = $get($1.txtseq, $1.k); /*13455*/
					$k[$j++] = $1.char; /*13458*/
					$1[$get($1.textencfuncs, $1.submode)](); /*13458*/
					$1.addtotext(); /*13458*/
					$1.k = $1.k + 1; /*13459*/
					if (($1.char == $1.as) || ($1.char == $1.ps)) { /*13465*/
						$k[$j++] = $get($1.txtseq, $1.k); /*13463*/
						if ($1.char == $1.as) { /*13463*/
							$1.enca(); /*13463*/
						} else { /*13463*/
							$1.encp(); /*13463*/
						} /*13463*/
						$1.addtotext(); /*13463*/
						$1.k = $1.k + 1; /*13464*/
					} /*13464*/
					if ($1.char == $1.al) { /*13468*/
						$1.submode = $1.A; /*13468*/
					} /*13468*/
					if ($1.char == $1.ll) { /*13469*/
						$1.submode = $1.L; /*13469*/
					} /*13469*/
					if ($1.char == $1.ml) { /*13470*/
						$1.submode = $1.M; /*13470*/
					} /*13470*/
					if ($1.char == $1.pl) { /*13471*/
						$1.submode = $1.P; /*13471*/
					} /*13471*/
				} /*13471*/
				if (($1.text.length % 2) == 1) { /*13482*/
					if ($1.submode == $1.P) { /*13479*/
						$k[$j++] = "pad"; /*13476*/
						$k[$j++] = $1.al; /*13476*/
						$1.encp(); /*13476*/
						var _9l = $k[--$j]; /*13476*/
						$1[$k[--$j]] = _9l; /*13476*/
						$1.submode = $1.A; /*13477*/
					} else { /*13479*/
						$k[$j++] = "pad"; /*13479*/
						$k[$j++] = $1.ps; /*13479*/
						$1[$get($1.textencfuncs, $1.submode)](); /*13479*/
						var _9t = $k[--$j]; /*13479*/
						$1[$k[--$j]] = _9t; /*13479*/
					} /*13479*/
					$k[$j++] = Infinity; /*13481*/
					$aload($1.text); /*13481*/
					$k[$j++] = $1.pad; /*13481*/
					$1.text = $a(); /*13481*/
				} /*13481*/
				$1.out = $a(~~($1.text.length / 2)); /*13484*/
				for (var _A2 = 0, _A1 = $1.out.length - 1; _A2 <= _A1; _A2 += 1) { /*13488*/
					$1.k = _A2; /*13486*/
					$put($1.out, $1.k, ($get($1.text, $1.k * 2) * 30) + $get($1.text, ($1.k * 2) + 1)); /*13487*/
				} /*13487*/
				$k[$j++] = $1.out; /*13490*/
			}; /*13492*/
			$1.encn = function() {
				$1.in = $k[--$j]; /*13495*/
				$1.out = $a([]); /*13496*/
				for (var _AG = 0, _AF = $1.in.length - 1; _AG <= _AF; _AG += 44) { /*13524*/
					$1.k = _AG; /*13498*/
					$k[$j++] = Infinity; /*13502*/
					var _AL = $1.in.length - $1.k; /*13500*/
					$k[$j++] = 1; /*13500*/
					$k[$j++] = $1.in; /*13500*/
					$k[$j++] = $1.k; /*13500*/
					$k[$j++] = _AL; /*13500*/
					if (_AL > 44) { /*13500*/
						$j--; /*13500*/
						$k[$j++] = 44; /*13500*/
					} /*13500*/
					var _AM = $k[--$j]; /*13500*/
					var _AN = $k[--$j]; /*13500*/
					$forall($geti($k[--$j], _AN, _AM), function() { /*13501*/
						var _AQ = $k[--$j]; /*13501*/
						$k[$j++] = _AQ - 48; /*13501*/
					}); /*13501*/
					$1.gmod = $a(); /*13502*/
					$1.cwn = $a([]); /*13503*/
					for (;;) { /*13522*/
						$1.dv = 900; /*13504*/
						$1.gmul = $a([]); /*13505*/
						$1.val = 0; /*13505*/
						for (;;) { /*13517*/
							if ($1.gmod.length == 0) { /*13506*/
								break; /*13506*/
							} /*13506*/
							$1.val = ($1.val * 10) + $get($1.gmod, 0); /*13507*/
							$1.gmod = $geti($1.gmod, 1, $1.gmod.length - 1); /*13508*/
							if ($1.val < $1.dv) { /*13514*/
								if ($1.gmul.length != 0) { /*13512*/
									$k[$j++] = Infinity; /*13511*/
									$aload($1.gmul); /*13511*/
									$k[$j++] = 0; /*13511*/
									$1.gmul = $a(); /*13511*/
								} /*13511*/
							} else { /*13514*/
								$k[$j++] = Infinity; /*13514*/
								$aload($1.gmul); /*13514*/
								$k[$j++] = ~~($1.val / $1.dv); /*13514*/
								$1.gmul = $a(); /*13514*/
							} /*13514*/
							$1.val = $1.val % $1.dv; /*13516*/
						} /*13516*/
						$1.dv = $1.val; /*13518*/
						$k[$j++] = Infinity; /*13519*/
						$k[$j++] = $1.dv; /*13519*/
						$aload($1.cwn); /*13519*/
						$1.cwn = $a(); /*13519*/
						$1.gmod = $1.gmul; /*13520*/
						if ($1.gmul.length == 0) { /*13521*/
							break; /*13521*/
						} /*13521*/
					} /*13521*/
					$k[$j++] = Infinity; /*13523*/
					$aload($1.out); /*13523*/
					$aload($1.cwn); /*13523*/
					$1.out = $a(); /*13523*/
				} /*13523*/
				$k[$j++] = $1.out; /*13525*/
			}; /*13526*/
			$1.encfuncs = $a(["enct", "encn", "encb"]); /*13528*/
			$1.addtocws = function() {
				var _Ax = $k[--$j]; /*13531*/
				$puti($1.datcws, $1.j, _Ax); /*13531*/
				$1.j = _Ax.length + $1.j; /*13532*/
			}; /*13533*/
			$1.state = $1.T; /*13536*/
			$1.submode = $1.A; /*13536*/
			$1.datcws = $a($1.seqlen); /*13537*/
			$1.i = 0; /*13538*/
			$1.j = 0; /*13538*/
			for (;;) { /*13554*/
				if ($1.i >= $1.seq.length) { /*13539*/
					break; /*13539*/
				} /*13539*/
				$1.chars = $get($1.seq, $1.i); /*13540*/
				if ($eq($type($1.chars), "arraytype")) { /*13550*/
					$k[$j++] = $1.chars; /*13542*/
					$1[$get($1.encfuncs, $1.state)](); /*13542*/
					$1.addtocws(); /*13542*/
				} else { /*13550*/
					$k[$j++] = $a([$get($1.latchcws, $1.chars)]); /*13544*/
					$1.addtocws(); /*13544*/
					if ($1.chars == $1.tl) { /*13545*/
						$1.state = $1.T; /*13545*/
						$1.submode = $1.A; /*13545*/
					} /*13545*/
					if ($1.chars == $1.nl) { /*13546*/
						$1.state = $1.N; /*13546*/
					} /*13546*/
					if (($1.chars == $1.bl) || ($1.chars == $1.bl6)) { /*13547*/
						$1.state = $1.B; /*13547*/
					} /*13547*/
					if ($1.chars == $1.bs) { /*13551*/
						$1.i = $1.i + 1; /*13549*/
						$k[$j++] = $get($1.seq, $1.i); /*13550*/
						$1.encb(); /*13550*/
						$1.addtocws(); /*13550*/
					} /*13550*/
				} /*13550*/
				$1.i = $1.i + 1; /*13553*/
			} /*13553*/
			$1.datcws = $geti($1.datcws, 0, $1.j); /*13555*/
		} /*13555*/
		$1.m = $1.datcws.length; /*13559*/
		if ($1.eclevel == -1) { /*13565*/
			if ($1.m <= 40) { /*13561*/
				$1.eclevel = 2; /*13561*/
			} /*13561*/
			if (($1.m >= 41) && ($1.m <= 160)) { /*13562*/
				$1.eclevel = 3; /*13562*/
			} /*13562*/
			if (($1.m >= 161) && ($1.m <= 320)) { /*13563*/
				$1.eclevel = 4; /*13563*/
			} /*13563*/
			if ($1.m >= 321) { /*13564*/
				$1.eclevel = 5; /*13564*/
			} /*13564*/
		} /*13564*/
		$1.maxeclevel = (~~((Math.log((928 - 1) - $1.m)) / Math.log(2))) - 1; /*13568*/
		if ($1.eclevel > $1.maxeclevel) { /*13569*/
			$1.eclevel = $1.maxeclevel; /*13569*/
		} /*13569*/
		$1.k = ~~Math.pow(2, $1.eclevel + 1); /*13570*/
		if ($1.columns == 0) { /*13573*/
			$1.columns = ~~(Math.round(Math.sqrt(($1.m + $1.k) / 3))); /*13573*/
		} /*13573*/
		if (($1.columns >= 1) && ($1.columns <= 30)) { /*13574*/
			$1.c = $1.columns; /*13574*/
		} /*13574*/
		$1.r = ~~(Math.ceil((($1.m + $1.k) + 1) / $1.columns)); /*13577*/
		if (($1.r < $1.rows) && ($1.rows <= 90)) { /*13578*/
			$1.r = $1.rows; /*13578*/
		} /*13578*/
		if ($1.r < 3) { /*13579*/
			$1.r = 3; /*13579*/
		} /*13579*/
		var _C8 = $1.c; /*13582*/
		var _C9 = $1.r; /*13582*/
		var _CA = $1.m; /*13582*/
		var _CB = 8; /*13582*/
		var _CC = (~~((Math.log(((_C8 * _C9) - 1) - _CA)) / Math.log(2))) - 1; /*13582*/
		if (((~~((Math.log(((_C8 * _C9) - 1) - _CA)) / Math.log(2))) - 1) > 8) { /*13582*/
			var _ = _CB; /*13582*/
			_CB = _CC; /*13582*/
			_CC = _; /*13582*/
		} /*13582*/
		$1.maxeclevel = _CC; /*13582*/
		if ($1.maxeclevel > $1.eclevel) { /*13586*/
			$1.eclevel = $1.maxeclevel; /*13584*/
			$1.k = ~~Math.pow(2, $1.eclevel + 1); /*13585*/
		} /*13585*/
		$1.n = ($1.c * $1.r) - $1.k; /*13589*/
		$1.cws = $a(($1.c * $1.r) + 1); /*13590*/
		$put($1.cws, 0, $1.n); /*13591*/
		$puti($1.cws, 1, $1.datcws); /*13592*/
		$k[$j++] = $1.cws; /*13593*/
		$k[$j++] = $1.m + 1; /*13593*/
		$k[$j++] = Infinity; /*13593*/
		for (var _CV = 0, _CW = ($1.n - $1.m) - 1; _CV < _CW; _CV++) { /*13593*/
			$k[$j++] = 900; /*13593*/
		} /*13593*/
		var _CX = $a(); /*13593*/
		var _CY = $k[--$j]; /*13593*/
		$puti($k[--$j], _CY, _CX); /*13593*/
		$k[$j++] = $1.cws; /*13594*/
		$k[$j++] = $1.n; /*13594*/
		$k[$j++] = Infinity; /*13594*/
		for (var _Cd = 0, _Ce = $1.k; _Cd < _Ce; _Cd++) { /*13594*/
			$k[$j++] = 0; /*13594*/
		} /*13594*/
		$k[$j++] = 0; /*13594*/
		var _Cf = $a(); /*13594*/
		var _Cg = $k[--$j]; /*13594*/
		$puti($k[--$j], _Cg, _Cf); /*13594*/
		$k[$j++] = Infinity; /*13597*/
		$k[$j++] = 1; /*13597*/
		for (var _Ci = 0, _Cj = 928; _Ci < _Cj; _Ci++) { /*13597*/
			var _Ck = $k[--$j]; /*13597*/
			$k[$j++] = _Ck; /*13597*/
			$k[$j++] = (_Ck * 3) % 929; /*13597*/
		} /*13597*/
		$1.rsalog = $a(); /*13597*/
		$1.rslog = $a(929); /*13598*/
		for (var _Cn = 1; _Cn <= 928; _Cn += 1) { /*13599*/
			$put($1.rslog, $get($1.rsalog, _Cn), _Cn); /*13599*/
		} /*13599*/
		$1.rsprod = function() {
			var _Cr = $k[--$j]; /*13603*/
			var _Cs = $k[--$j]; /*13603*/
			$k[$j++] = _Cs; /*13607*/
			$k[$j++] = _Cr; /*13607*/
			if ((_Cr != 0) && (_Cs != 0)) { /*13606*/
				var _Cv = $get($1.rslog, $k[--$j]); /*13604*/
				var _D0 = $get($1.rsalog, (_Cv + $get($1.rslog, $k[--$j])) % 928); /*13604*/
				$k[$j++] = _D0; /*13604*/
			} else { /*13606*/
				$j -= 2; /*13606*/
				$k[$j++] = 0; /*13606*/
			} /*13606*/
		}; /*13608*/
		$k[$j++] = Infinity; /*13611*/
		$k[$j++] = 1; /*13611*/
		for (var _D2 = 0, _D3 = $1.k; _D2 < _D3; _D2++) { /*13611*/
			$k[$j++] = 0; /*13611*/
		} /*13611*/
		$1.coeffs = $a(); /*13611*/
		for (var _D7 = 1, _D6 = $1.k; _D7 <= _D6; _D7 += 1) { /*13620*/
			$1.i = _D7; /*13613*/
			$put($1.coeffs, $1.i, $get($1.coeffs, $1.i - 1)); /*13614*/
			for (var _DE = $1.i - 1; _DE >= 1; _DE -= 1) { /*13618*/
				$1.j = _DE; /*13616*/
				$k[$j++] = $1.coeffs; /*13617*/
				$k[$j++] = $1.j; /*13617*/
				$k[$j++] = $get($1.coeffs, $1.j - 1); /*13617*/
				$k[$j++] = $get($1.coeffs, $1.j); /*13617*/
				$k[$j++] = $get($1.rsalog, $1.i); /*13617*/
				$1.rsprod(); /*13617*/
				var _DQ = $k[--$j]; /*13617*/
				var _DR = $k[--$j]; /*13617*/
				var _DS = $k[--$j]; /*13617*/
				$put($k[--$j], _DS, (_DR + _DQ) % 929); /*13617*/
			} /*13617*/
			$k[$j++] = $1.coeffs; /*13619*/
			$k[$j++] = 0; /*13619*/
			$k[$j++] = $get($1.coeffs, 0); /*13619*/
			$k[$j++] = $get($1.rsalog, $1.i); /*13619*/
			$1.rsprod(); /*13619*/
			var _Da = $k[--$j]; /*13619*/
			var _Db = $k[--$j]; /*13619*/
			$put($k[--$j], _Db, _Da); /*13619*/
		} /*13619*/
		$1.coeffs = $geti($1.coeffs, 0, $1.coeffs.length - 1); /*13621*/
		for (var _Dh = $1.coeffs.length - 1; _Dh >= 0; _Dh -= 2) { /*13622*/
			var _Di = $1.coeffs; /*13622*/
			$put(_Di, _Dh, 929 - $get(_Di, _Dh)); /*13622*/
		} /*13622*/
		for (var _Dm = 0, _Dl = $1.n - 1; _Dm <= _Dl; _Dm += 1) { /*13631*/
			$1.t = ($get($1.cws, _Dm) + $get($1.cws, $1.n)) % 929; /*13626*/
			for (var _Du = 0, _Dt = $1.k - 1; _Du <= _Dt; _Du += 1) { /*13630*/
				$1.j = _Du; /*13628*/
				$put($1.cws, $1.n + $1.j, ($get($1.cws, ($1.n + $1.j) + 1) + (929 - (($1.t * $get($1.coeffs, ($1.k - $1.j) - 1)) % 929))) % 929); /*13629*/
			} /*13629*/
		} /*13629*/
		for (var _EB = $1.n, _EA = $1.n + $1.k; _EB <= _EA; _EB += 1) { /*13632*/
			$put($1.cws, _EB, (929 - $get($1.cws, _EB)) % 929); /*13632*/
		} /*13632*/
		$1.cws = $geti($1.cws, 0, $1.cws.length - 1); /*13635*/
		$1.clusters = $a([$a([120256, 125680, 128380, 120032, 125560, 128318, 108736, 119920, 108640, 86080, 108592, 86048, 110016, 120560, 125820, 109792, 120440, 125758, 88256, 109680, 88160, 89536, 110320, 120700, 89312, 110200, 120638, 89200, 110140, 89840, 110460, 89720, 110398, 89980, 128506, 119520, 125304, 128190, 107712, 119408, 125244, 107616, 119352, 84032, 107568, 119324, 84000, 107544, 83984, 108256, 119672, 125374, 85184, 108144, 119612, 85088, 108088, 119582, 85040, 108060, 85728, 108408, 119742, 85616, 108348, 85560, 108318, 85880, 108478, 85820, 85790, 107200, 119152, 125116, 107104, 119096, 125086, 83008, 107056, 119068, 82976, 107032, 82960, 82952, 83648, 107376, 119228, 83552, 107320, 119198, 83504, 107292, 83480, 83468, 83824, 107452, 83768, 107422, 83740, 83900, 106848, 118968, 125022, 82496, 106800, 118940, 82464, 106776, 118926, 82448, 106764, 82440, 106758, 82784, 106936, 119006, 82736, 106908, 82712, 106894, 82700, 82694, 106974, 82830, 82240, 106672, 118876, 82208, 106648, 118862, 82192, 106636, 82184, 106630, 82180, 82352, 82328, 82316, 82080, 118830, 106572, 106566, 82050, 117472, 124280, 127678, 103616, 117360, 124220, 103520, 117304, 124190, 75840, 103472, 75808, 104160, 117624, 124350, 76992, 104048, 117564, 76896, 103992, 76848, 76824, 77536, 104312, 117694, 77424, 104252, 77368, 77340, 77688, 104382, 77628, 77758, 121536, 126320, 128700, 121440, 126264, 128670, 111680, 121392, 126236, 111648, 121368, 126222, 111632, 121356, 103104, 117104, 124092, 112320, 103008, 117048, 124062, 112224, 121656, 126366, 93248, 74784, 102936, 117006, 93216, 112152, 93200, 75456, 103280, 117180, 93888, 75360, 103224, 117150, 93792, 112440, 121758, 93744, 75288, 93720, 75632, 103356, 94064, 75576, 103326, 94008, 112542, 93980, 75708, 94140, 75678, 94110, 121184, 126136, 128606, 111168, 121136, 126108, 111136, 121112, 126094, 111120, 121100, 111112, 111108, 102752, 116920, 123998, 111456, 102704, 116892, 91712, 74272, 121244, 116878, 91680, 74256, 102668, 91664, 111372, 102662, 74244, 74592, 102840, 116958, 92000, 74544, 102812, 91952, 111516, 102798, 91928, 74508, 74502, 74680, 102878, 92088, 74652, 92060, 74638, 92046, 92126, 110912, 121008, 126044, 110880, 120984, 126030, 110864, 120972, 110856, 120966, 110852, 110850, 74048, 102576, 116828, 90944, 74016, 102552, 116814, 90912, 111000, 121038, 90896, 73992, 102534, 90888, 110982, 90884, 74160, 102620, 91056, 74136, 102606, 91032, 111054, 91020, 74118, 91014, 91100, 91086, 110752, 120920, 125998, 110736, 120908, 110728, 120902, 110724, 110722, 73888, 102488, 116782, 90528, 73872, 102476, 90512, 110796, 102470, 90504, 73860, 90500, 73858, 73944, 90584, 90572, 90566, 120876, 120870, 110658, 102444, 73800, 90312, 90308, 90306, 101056, 116080, 123580, 100960, 116024, 70720, 100912, 115996, 70688, 100888, 70672, 70664, 71360, 101232, 116156, 71264, 101176, 116126, 71216, 101148, 71192, 71180, 71536, 101308, 71480, 101278, 71452, 71612, 71582, 118112, 124600, 127838, 105024, 118064, 124572, 104992, 118040, 124558, 104976, 118028, 104968, 118022, 100704, 115896, 123486, 105312, 100656, 115868, 79424, 70176, 118172, 115854, 79392, 105240, 100620, 79376, 70152, 79368, 70496, 100792, 115934, 79712, 70448, 118238, 79664, 105372, 100750, 79640, 70412, 79628, 70584, 100830, 79800, 70556, 79772, 70542, 70622, 79838, 122176, 126640, 128860, 122144, 126616, 128846, 122128, 126604, 122120, 126598, 122116, 104768, 117936, 124508, 113472, 104736, 126684, 124494, 113440, 122264, 126670, 113424, 104712, 117894, 113416, 122246, 104706, 69952, 100528, 115804, 78656, 69920, 100504, 115790, 96064, 78624, 104856, 117966, 96032, 113560, 122318, 100486, 96016, 78600, 104838, 96008, 69890, 70064, 100572, 78768, 70040, 100558, 96176, 78744, 104910, 96152, 113614, 70022, 78726, 70108, 78812, 70094, 96220, 78798, 122016, 126552, 128814, 122000, 126540, 121992, 126534, 121988, 121986, 104608, 117848, 124462, 113056, 104592, 126574, 113040, 122060, 117830, 113032, 104580, 113028, 104578, 113026, 69792, 100440, 115758, 78240, 69776, 100428, 95136, 78224, 104652, 100422, 95120, 113100, 69764, 95112, 78212, 69762, 78210, 69848, 100462, 78296, 69836, 95192, 78284, 69830, 95180, 78278, 69870, 95214, 121936, 126508, 121928, 126502, 121924, 121922, 104528, 117804, 112848, 104520, 117798, 112840, 121958, 112836, 104514, 112834, 69712, 100396, 78032, 69704, 100390, 94672, 78024, 104550, 94664, 112870, 69698, 94660, 78018, 94658, 78060, 94700, 94694, 126486, 121890, 117782, 104484, 104482, 69672, 77928, 94440, 69666, 77922, 99680, 68160, 99632, 68128, 99608, 115342, 68112, 99596, 68104, 99590, 68448, 99768, 115422, 68400, 99740, 68376, 99726, 68364, 68358, 68536, 99806, 68508, 68494, 68574, 101696, 116400, 123740, 101664, 116376, 101648, 116364, 101640, 116358, 101636, 67904, 99504, 115292, 72512, 67872, 116444, 115278, 72480, 101784, 116430, 72464, 67848, 99462, 72456, 101766, 67842, 68016, 99548, 72624, 67992, 99534, 72600, 101838, 72588, 67974, 68060, 72668, 68046, 72654, 118432, 124760, 127918, 118416, 124748, 118408, 124742, 118404, 118402, 101536, 116312, 105888, 101520, 116300, 105872, 118476, 116294, 105864, 101508, 105860, 101506, 105858, 67744, 99416, 72096, 67728, 116334, 80800, 72080, 101580, 99398, 80784, 105932, 67716, 80776, 72068, 67714, 72066, 67800, 99438, 72152, 67788, 80856, 72140, 67782, 80844, 72134, 67822, 72174, 80878, 126800, 128940, 126792, 128934, 126788, 126786, 118352, 124716, 122576, 126828, 124710, 122568, 126822, 122564, 118338, 122562, 101456, 116268, 105680, 101448, 116262, 114128, 105672, 118374, 114120, 122598, 101442, 114116, 105666, 114114, 67664, 99372, 71888, 67656, 99366, 80336, 71880, 101478, 97232, 80328, 105702, 67650, 97224, 114150, 71874, 97220, 67692, 71916, 67686, 80364, 71910, 97260, 80358, 97254, 126760, 128918, 126756, 126754, 118312, 124694, 122472, 126774, 122468, 118306, 122466, 101416, 116246, 105576, 101412, 113896, 105572, 101410, 113892, 105570, 113890, 67624, 99350, 71784, 101430, 80104, 71780, 67618, 96744, 80100, 71778, 96740, 80098, 96738, 71798, 96758, 126738, 122420, 122418, 105524, 113780, 113778, 71732, 79988, 96500, 96498, 66880, 66848, 98968, 66832, 66824, 66820, 66992, 66968, 66956, 66950, 67036, 67022, 100000, 99984, 115532, 99976, 115526, 99972, 99970, 66720, 98904, 69024, 100056, 98892, 69008, 100044, 69000, 100038, 68996, 66690, 68994, 66776, 98926, 69080, 100078, 69068, 66758, 69062, 66798, 69102, 116560, 116552, 116548, 116546, 99920, 102096, 116588, 115494, 102088, 116582, 102084, 99906, 102082, 66640, 68816, 66632, 98854, 73168, 68808, 66628, 73160, 68804, 66626, 73156, 68802, 66668, 68844, 66662, 73196, 68838, 73190, 124840, 124836, 124834, 116520, 118632, 124854, 118628, 116514, 118626, 99880, 115478, 101992, 116534, 106216, 101988, 99874, 106212, 101986, 106210, 66600, 98838, 68712, 99894, 72936, 68708, 66594, 81384, 72932, 68706, 81380, 72930, 66614, 68726, 72950, 81398, 128980, 128978, 124820, 126900, 124818, 126898, 116500, 118580, 116498, 122740, 118578, 122738, 99860, 101940, 99858, 106100, 101938, 114420]), $a([128352, 129720, 125504, 128304, 129692, 125472, 128280, 129678, 125456, 128268, 125448, 128262, 125444, 125792, 128440, 129758, 120384, 125744, 128412, 120352, 125720, 128398, 120336, 125708, 120328, 125702, 120324, 120672, 125880, 128478, 110144, 120624, 125852, 110112, 120600, 125838, 110096, 120588, 110088, 120582, 110084, 110432, 120760, 125918, 89664, 110384, 120732, 89632, 110360, 120718, 89616, 110348, 89608, 110342, 89952, 110520, 120798, 89904, 110492, 89880, 110478, 89868, 90040, 110558, 90012, 89998, 125248, 128176, 129628, 125216, 128152, 129614, 125200, 128140, 125192, 128134, 125188, 125186, 119616, 125360, 128220, 119584, 125336, 128206, 119568, 125324, 119560, 125318, 119556, 119554, 108352, 119728, 125404, 108320, 119704, 125390, 108304, 119692, 108296, 119686, 108292, 108290, 85824, 108464, 119772, 85792, 108440, 119758, 85776, 108428, 85768, 108422, 85764, 85936, 108508, 85912, 108494, 85900, 85894, 85980, 85966, 125088, 128088, 129582, 125072, 128076, 125064, 128070, 125060, 125058, 119200, 125144, 128110, 119184, 125132, 119176, 125126, 119172, 119170, 107424, 119256, 125166, 107408, 119244, 107400, 119238, 107396, 107394, 83872, 107480, 119278, 83856, 107468, 83848, 107462, 83844, 83842, 83928, 107502, 83916, 83910, 83950, 125008, 128044, 125000, 128038, 124996, 124994, 118992, 125036, 118984, 125030, 118980, 118978, 106960, 119020, 106952, 119014, 106948, 106946, 82896, 106988, 82888, 106982, 82884, 82882, 82924, 82918, 124968, 128022, 124964, 124962, 118888, 124982, 118884, 118882, 106728, 118902, 106724, 106722, 82408, 106742, 82404, 82402, 124948, 124946, 118836, 118834, 106612, 106610, 124224, 127664, 129372, 124192, 127640, 129358, 124176, 127628, 124168, 127622, 124164, 124162, 117568, 124336, 127708, 117536, 124312, 127694, 117520, 124300, 117512, 124294, 117508, 117506, 104256, 117680, 124380, 104224, 117656, 124366, 104208, 117644, 104200, 117638, 104196, 104194, 77632, 104368, 117724, 77600, 104344, 117710, 77584, 104332, 77576, 104326, 77572, 77744, 104412, 77720, 104398, 77708, 77702, 77788, 77774, 128672, 129880, 93168, 128656, 129868, 92664, 128648, 129862, 92412, 128644, 128642, 124064, 127576, 129326, 126368, 124048, 129902, 126352, 128716, 127558, 126344, 124036, 126340, 124034, 126338, 117152, 124120, 127598, 121760, 117136, 124108, 121744, 126412, 124102, 121736, 117124, 121732, 117122, 121730, 103328, 117208, 124142, 112544, 103312, 117196, 112528, 121804, 117190, 112520, 103300, 112516, 103298, 112514, 75680, 103384, 117230, 94112, 75664, 103372, 94096, 112588, 103366, 94088, 75652, 94084, 75650, 75736, 103406, 94168, 75724, 94156, 75718, 94150, 75758, 128592, 129836, 91640, 128584, 129830, 91388, 128580, 91262, 128578, 123984, 127532, 126160, 123976, 127526, 126152, 128614, 126148, 123970, 126146, 116944, 124012, 121296, 116936, 124006, 121288, 126182, 121284, 116930, 121282, 102864, 116972, 111568, 102856, 116966, 111560, 121318, 111556, 102850, 111554, 74704, 102892, 92112, 74696, 102886, 92104, 111590, 92100, 74690, 92098, 74732, 92140, 74726, 92134, 128552, 129814, 90876, 128548, 90750, 128546, 123944, 127510, 126056, 128566, 126052, 123938, 126050, 116840, 123958, 121064, 116836, 121060, 116834, 121058, 102632, 116854, 111080, 121078, 111076, 102626, 111074, 74216, 102646, 91112, 74212, 91108, 74210, 91106, 74230, 91126, 128532, 90494, 128530, 123924, 126004, 123922, 126002, 116788, 120948, 116786, 120946, 102516, 110836, 102514, 110834, 73972, 90612, 73970, 90610, 128522, 123914, 125978, 116762, 120890, 102458, 110714, 123552, 127320, 129198, 123536, 127308, 123528, 127302, 123524, 123522, 116128, 123608, 127342, 116112, 123596, 116104, 123590, 116100, 116098, 101280, 116184, 123630, 101264, 116172, 101256, 116166, 101252, 101250, 71584, 101336, 116206, 71568, 101324, 71560, 101318, 71556, 71554, 71640, 101358, 71628, 71622, 71662, 127824, 129452, 79352, 127816, 129446, 79100, 127812, 78974, 127810, 123472, 127276, 124624, 123464, 127270, 124616, 127846, 124612, 123458, 124610, 115920, 123500, 118224, 115912, 123494, 118216, 124646, 118212, 115906, 118210, 100816, 115948, 105424, 100808, 115942, 105416, 118246, 105412, 100802, 105410, 70608, 100844, 79824, 70600, 100838, 79816, 105446, 79812, 70594, 79810, 70636, 79852, 70630, 79846, 129960, 95728, 113404, 129956, 95480, 113278, 129954, 95356, 95294, 127784, 129430, 78588, 128872, 129974, 95996, 78462, 128868, 127778, 95870, 128866, 123432, 127254, 124520, 123428, 126696, 128886, 123426, 126692, 124514, 126690, 115816, 123446, 117992, 115812, 122344, 117988, 115810, 122340, 117986, 122338, 100584, 115830, 104936, 100580, 113640, 104932, 100578, 113636, 104930, 113634, 70120, 100598, 78824, 70116, 96232, 78820, 70114, 96228, 78818, 96226, 70134, 78838, 129940, 94968, 113022, 129938, 94844, 94782, 127764, 78206, 128820, 127762, 95102, 128818, 123412, 124468, 123410, 126580, 124466, 126578, 115764, 117876, 115762, 122100, 117874, 122098, 100468, 104692, 100466, 113140, 104690, 113138, 69876, 78324, 69874, 95220, 78322, 95218, 129930, 94588, 94526, 127754, 128794, 123402, 124442, 126522, 115738, 117818, 121978, 100410, 104570, 112890, 69754, 78074, 94714, 94398, 123216, 127148, 123208, 127142, 123204, 123202, 115408, 123244, 115400, 123238, 115396, 115394, 99792, 115436, 99784, 115430, 99780, 99778, 68560, 99820, 68552, 99814, 68548, 68546, 68588, 68582, 127400, 129238, 72444, 127396, 72318, 127394, 123176, 127126, 123752, 123172, 123748, 123170, 123746, 115304, 123190, 116456, 115300, 116452, 115298, 116450, 99560, 115318, 101864, 99556, 101860, 99554, 101858, 68072, 99574, 72680, 68068, 72676, 68066, 72674, 68086, 72694, 129492, 80632, 105854, 129490, 80508, 80446, 127380, 72062, 127924, 127378, 80766, 127922, 123156, 123700, 123154, 124788, 123698, 124786, 115252, 116340, 115250, 118516, 116338, 118514, 99444, 101620, 99442, 105972, 101618, 105970, 67828, 72180, 67826, 80884, 72178, 80882, 97008, 114044, 96888, 113982, 96828, 96798, 129482, 80252, 130010, 97148, 80190, 97086, 127370, 127898, 128954, 123146, 123674, 124730, 126842, 115226, 116282, 118394, 122618, 99386, 101498, 105722, 114170, 67706, 71930, 80378, 96632, 113854, 96572, 96542, 80062, 96702, 96444, 96414, 96350, 123048, 123044, 123042, 115048, 123062, 115044, 115042, 99048, 115062, 99044, 99042, 67048, 99062, 67044, 67042, 67062, 127188, 68990, 127186, 123028, 123316, 123026, 123314, 114996, 115572, 114994, 115570, 98932, 100084, 98930, 100082, 66804, 69108, 66802, 69106, 129258, 73084, 73022, 127178, 127450, 123018, 123290, 123834, 114970, 115514, 116602, 98874, 99962, 102138, 66682, 68858, 73210, 81272, 106174, 81212, 81182, 72894, 81342, 97648, 114364, 97592, 114334, 97564, 97550, 81084, 97724, 81054, 97694, 97464, 114270, 97436, 97422, 80990, 97502, 97372, 97358, 97326, 114868, 114866, 98676, 98674, 66292, 66290, 123098, 114842, 115130, 98618, 99194, 66170, 67322, 69310, 73404, 73374, 81592, 106334, 81564, 81550, 73310, 81630, 97968, 114524, 97944, 114510, 97932, 97926, 81500, 98012, 81486, 97998, 97880, 114478, 97868, 97862, 81454, 97902, 97836, 97830, 69470, 73564, 73550, 81752, 106414, 81740, 81734, 73518, 81774, 81708, 81702]), $a([109536, 120312, 86976, 109040, 120060, 86496, 108792, 119934, 86256, 108668, 86136, 129744, 89056, 110072, 129736, 88560, 109820, 129732, 88312, 109694, 129730, 88188, 128464, 129772, 89592, 128456, 129766, 89340, 128452, 89214, 128450, 125904, 128492, 125896, 128486, 125892, 125890, 120784, 125932, 120776, 125926, 120772, 120770, 110544, 120812, 110536, 120806, 110532, 84928, 108016, 119548, 84448, 107768, 119422, 84208, 107644, 84088, 107582, 84028, 129640, 85488, 108284, 129636, 85240, 108158, 129634, 85116, 85054, 128232, 129654, 85756, 128228, 85630, 128226, 125416, 128246, 125412, 125410, 119784, 125430, 119780, 119778, 108520, 119798, 108516, 108514, 83424, 107256, 119166, 83184, 107132, 83064, 107070, 83004, 82974, 129588, 83704, 107390, 129586, 83580, 83518, 128116, 83838, 128114, 125172, 125170, 119284, 119282, 107508, 107506, 82672, 106876, 82552, 106814, 82492, 82462, 129562, 82812, 82750, 128058, 125050, 119034, 82296, 106686, 82236, 82206, 82366, 82108, 82078, 76736, 103920, 117500, 76256, 103672, 117374, 76016, 103548, 75896, 103486, 75836, 129384, 77296, 104188, 129380, 77048, 104062, 129378, 76924, 76862, 127720, 129398, 77564, 127716, 77438, 127714, 124392, 127734, 124388, 124386, 117736, 124406, 117732, 117730, 104424, 117750, 104420, 104418, 112096, 121592, 126334, 92608, 111856, 121468, 92384, 111736, 121406, 92272, 111676, 92216, 111646, 92188, 75232, 103160, 117118, 93664, 74992, 103036, 93424, 112252, 102974, 93304, 74812, 93244, 74782, 93214, 129332, 75512, 103294, 129908, 129330, 93944, 75388, 129906, 93820, 75326, 93758, 127604, 75646, 128756, 127602, 94078, 128754, 124148, 126452, 124146, 126450, 117236, 121844, 117234, 121842, 103412, 103410, 91584, 111344, 121212, 91360, 111224, 121150, 91248, 111164, 91192, 111134, 91164, 91150, 74480, 102780, 91888, 74360, 102718, 91768, 111422, 91708, 74270, 91678, 129306, 74620, 129850, 92028, 74558, 91966, 127546, 128634, 124026, 126202, 116986, 121338, 102906, 90848, 110968, 121022, 90736, 110908, 90680, 110878, 90652, 90638, 74104, 102590, 91000, 74044, 90940, 74014, 90910, 74174, 91070, 90480, 110780, 90424, 110750, 90396, 90382, 73916, 90556, 73886, 90526, 90296, 110686, 90268, 90254, 73822, 90334, 90204, 90190, 71136, 101112, 116094, 70896, 100988, 70776, 100926, 70716, 70686, 129204, 71416, 101246, 129202, 71292, 71230, 127348, 71550, 127346, 123636, 123634, 116212, 116210, 101364, 101362, 79296, 105200, 118140, 79072, 105080, 118078, 78960, 105020, 78904, 104990, 78876, 78862, 70384, 100732, 79600, 70264, 100670, 79480, 105278, 79420, 70174, 79390, 129178, 70524, 129466, 79740, 70462, 79678, 127290, 127866, 123514, 124666, 115962, 118266, 100858, 113376, 122232, 126654, 95424, 113264, 122172, 95328, 113208, 122142, 95280, 113180, 95256, 113166, 95244, 78560, 104824, 117950, 95968, 78448, 104764, 95856, 113468, 104734, 95800, 78364, 95772, 78350, 95758, 70008, 100542, 78712, 69948, 96120, 78652, 69918, 96060, 78622, 96030, 70078, 78782, 96190, 94912, 113008, 122044, 94816, 112952, 122014, 94768, 112924, 94744, 112910, 94732, 94726, 78192, 104636, 95088, 78136, 104606, 95032, 113054, 95004, 78094, 94990, 69820, 78268, 69790, 95164, 78238, 95134, 94560, 112824, 121950, 94512, 112796, 94488, 112782, 94476, 94470, 78008, 104542, 94648, 77980, 94620, 77966, 94606, 69726, 78046, 94686, 94384, 112732, 94360, 112718, 94348, 94342, 77916, 94428, 77902, 94414, 94296, 112686, 94284, 94278, 77870, 94318, 94252, 94246, 68336, 99708, 68216, 99646, 68156, 68126, 68476, 68414, 127162, 123258, 115450, 99834, 72416, 101752, 116414, 72304, 101692, 72248, 101662, 72220, 72206, 67960, 99518, 72568, 67900, 72508, 67870, 72478, 68030, 72638, 80576, 105840, 118460, 80480, 105784, 118430, 80432, 105756, 80408, 105742, 80396, 80390, 72048, 101564, 80752, 71992, 101534, 80696, 71964, 80668, 71950, 80654, 67772, 72124, 67742, 80828, 72094, 80798, 114016, 122552, 126814, 96832, 113968, 122524, 96800, 113944, 122510, 96784, 113932, 96776, 113926, 96772, 80224, 105656, 118366, 97120, 80176, 105628, 97072, 114076, 105614, 97048, 80140, 97036, 80134, 97030, 71864, 101470, 80312, 71836, 97208, 80284, 71822, 97180, 80270, 97166, 67678, 71902, 80350, 97246, 96576, 113840, 122460, 96544, 113816, 122446, 96528, 113804, 96520, 113798, 96516, 96514, 80048, 105564, 96688, 80024, 105550, 96664, 113870, 96652, 80006, 96646, 71772, 80092, 71758, 96732, 80078, 96718, 96416, 113752, 122414, 96400, 113740, 96392, 113734, 96388, 96386, 79960, 105518, 96472, 79948, 96460, 79942, 96454, 71726, 79982, 96494, 96336, 113708, 96328, 113702, 96324, 96322, 79916, 96364, 79910, 96358, 96296, 113686, 96292, 96290, 79894, 96310, 66936, 99006, 66876, 66846, 67006, 68976, 100028, 68920, 99998, 68892, 68878, 66748, 69052, 66718, 69022, 73056, 102072, 116574, 73008, 102044, 72984, 102030, 72972, 72966, 68792, 99934, 73144, 68764, 73116, 68750, 73102, 66654, 68830, 73182, 81216, 106160, 118620, 81184, 106136, 118606, 81168, 106124, 81160, 106118, 81156, 81154, 72880, 101980, 81328, 72856, 101966, 81304, 106190, 81292, 72838, 81286, 68700, 72924, 68686, 81372, 72910, 81358, 114336, 122712, 126894, 114320, 122700, 114312, 122694, 114308, 114306, 81056, 106072, 118574, 97696, 81040, 106060, 97680, 114380, 106054, 97672, 81028, 97668, 81026, 97666, 72792, 101934, 81112, 72780, 97752, 81100, 72774, 97740, 81094, 97734, 68654, 72814, 81134, 97774, 114256, 122668, 114248, 122662, 114244, 114242, 80976, 106028, 97488, 80968, 106022, 97480, 114278, 97476, 80962, 97474, 72748, 81004, 72742, 97516, 80998, 97510, 114216, 122646, 114212, 114210, 80936, 106006, 97384, 80932, 97380, 80930, 97378, 72726, 80950, 97398, 114196, 114194, 80916, 97332, 80914, 97330, 66236, 66206, 67256, 99166, 67228, 67214, 66142, 67294, 69296, 100188, 69272, 100174, 69260, 69254, 67164, 69340, 67150, 69326, 73376, 102232, 116654, 73360, 102220, 73352, 102214, 73348, 73346, 69208, 100142, 73432, 102254, 73420, 69190, 73414, 67118, 69230, 73454, 106320, 118700, 106312, 118694, 106308, 106306, 73296, 102188, 81616, 106348, 102182, 81608, 73284, 81604, 73282, 81602, 69164, 73324, 69158, 81644, 73318, 81638, 122792, 126934, 122788, 122786, 106280, 118678, 114536, 106276, 114532, 106274, 114530, 73256, 102166, 81512, 73252, 98024, 81508, 73250, 98020, 81506, 98018, 69142, 73270, 81526, 98038, 122772, 122770, 106260, 114484, 106258, 114482, 73236, 81460, 73234, 97908, 81458, 97906, 122762, 106250, 114458, 73226, 81434, 97850, 66396, 66382, 67416, 99246, 67404, 67398, 66350, 67438, 69456, 100268, 69448, 100262, 69444, 69442, 67372, 69484, 67366, 69478, 102312, 116694, 102308, 102306, 69416, 100246, 73576, 102326, 73572, 69410, 73570, 67350, 69430, 73590, 118740, 118738, 102292, 106420, 102290, 106418, 69396, 73524, 69394, 81780, 73522, 81778, 118730, 102282, 106394, 69386, 73498, 81722, 66476, 66470, 67496, 99286, 67492, 67490, 66454, 67510, 100308, 100306, 67476, 69556, 67474, 69554, 116714])]); /*13877*/
		$1.cwtobits = function() {
			var _EO = $get($1.clusters, $k[--$j]); /*13881*/
			$1.v = $get(_EO, $k[--$j]); /*13881*/
			$k[$j++] = Infinity; /*13882*/
			for (var _ER = 0, _ES = 17; _ER < _ES; _ER++) { /*13882*/
				$k[$j++] = 0; /*13882*/
			} /*13882*/
			var _EV = $cvrs($s(17), $1.v, 2); /*13882*/
			for (var _EW = 0, _EX = _EV.length; _EW < _EX; _EW++) { /*13882*/
				$k[$j++] = $get(_EV, _EW) - 48; /*13882*/
			} /*13882*/
			var _EZ = $a(); /*13882*/
			$k[$j++] = $geti(_EZ, _EZ.length - 17, 17); /*13883*/
		}; /*13884*/
		if ($1.compact) { /*13890*/
			$1.rwid = (((17 * $1.c) + 17) + 17) + 1; /*13888*/
		} else { /*13890*/
			$1.rwid = ((((17 * $1.c) + 17) + 17) + 17) + 18; /*13890*/
		} /*13890*/
		$1.pixs = $a($1.rwid * $1.r); /*13892*/
		for (var _Ej = 0, _Ei = $1.r - 1; _Ej <= _Ei; _Ej += 1) { /*13922*/
			$1.i = _Ej; /*13895*/
			if (($1.i % 3) == 0) { /*13900*/
				$1.lcw = ((~~($1.i / 3)) * 30) + (~~(($1.r - 1) / 3)); /*13898*/
				$1.rcw = (((~~($1.i / 3)) * 30) + $1.c) - 1; /*13899*/
			} /*13899*/
			if (($1.i % 3) == 1) { /*13904*/
				$1.lcw = (((~~($1.i / 3)) * 30) + ($1.eclevel * 3)) + (($1.r - 1) % 3); /*13902*/
				$1.rcw = ((~~($1.i / 3)) * 30) + (~~(($1.r - 1) / 3)); /*13903*/
			} /*13903*/
			if (($1.i % 3) == 2) { /*13908*/
				$1.lcw = (((~~($1.i / 3)) * 30) + $1.c) - 1; /*13906*/
				$1.rcw = (((~~($1.i / 3)) * 30) + ($1.eclevel * 3)) + (($1.r - 1) % 3); /*13907*/
			} /*13907*/
			$k[$j++] = $1.pixs; /*13918*/
			$k[$j++] = $1.rwid * $1.i; /*13918*/
			$k[$j++] = Infinity; /*13918*/
			$k[$j++] = 1; /*13912*/
			$k[$j++] = 1; /*13912*/
			$k[$j++] = 1; /*13912*/
			$k[$j++] = 1; /*13912*/
			$k[$j++] = 1; /*13912*/
			$k[$j++] = 1; /*13912*/
			$k[$j++] = 1; /*13912*/
			$k[$j++] = 1; /*13912*/
			$k[$j++] = 0; /*13912*/
			$k[$j++] = 1; /*13912*/
			$k[$j++] = 0; /*13912*/
			$k[$j++] = 1; /*13912*/
			$k[$j++] = 0; /*13912*/
			$k[$j++] = 1; /*13912*/
			$k[$j++] = 0; /*13912*/
			$k[$j++] = 0; /*13912*/
			$k[$j++] = 0; /*13912*/
			$k[$j++] = $1.lcw; /*13912*/
			$k[$j++] = $1.i % 3; /*13912*/
			$1.cwtobits(); /*13912*/
			$forall($k[--$j]); /*13912*/
			$forall($geti($1.cws, $1.c * $1.i, $1.c), function() { /*13913*/
				$k[$j++] = $1.i % 3; /*13913*/
				$1.cwtobits(); /*13913*/
				$forall($k[--$j]); /*13913*/
			}); /*13913*/
			if ($1.compact) { /*13918*/
				$k[$j++] = 1; /*13915*/
			} else { /*13918*/
				$k[$j++] = $1.rcw; /*13917*/
				$k[$j++] = $1.i % 3; /*13917*/
				$1.cwtobits(); /*13917*/
				$forall($k[--$j]); /*13917*/
				$k[$j++] = 1; /*13918*/
				$k[$j++] = 1; /*13918*/
				$k[$j++] = 1; /*13918*/
				$k[$j++] = 1; /*13918*/
				$k[$j++] = 1; /*13918*/
				$k[$j++] = 1; /*13918*/
				$k[$j++] = 1; /*13918*/
				$k[$j++] = 0; /*13918*/
				$k[$j++] = 1; /*13918*/
				$k[$j++] = 0; /*13918*/
				$k[$j++] = 0; /*13918*/
				$k[$j++] = 0; /*13918*/
				$k[$j++] = 1; /*13918*/
				$k[$j++] = 0; /*13918*/
				$k[$j++] = 1; /*13918*/
				$k[$j++] = 0; /*13918*/
				$k[$j++] = 0; /*13918*/
				$k[$j++] = 1; /*13918*/
			} /*13918*/
			var _FI = $a(); /*13918*/
			var _FJ = $k[--$j]; /*13920*/
			$puti($k[--$j], _FJ, _FI); /*13920*/
		} /*13920*/
		var _FS = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.rwid,
			pixy: $1.r,
			height: ($1.r / 72) * $1.rowmult,
			width: $1.rwid / 72,
			opt: $1.options
		}; /*13932*/
		$k[$j++] = _FS; /*13935*/
		if (!$1.dontdraw) { /*13935*/
			$0.renmatrix(); /*13935*/
		} /*13935*/
	};
	$0.pdf417compact = function() {
		var $1 = {}; /*13963*/
		$1.options = $k[--$j]; /*13965*/
		$1.barcode = $k[--$j]; /*13966*/
		$1.dontdraw = false; /*13968*/
		$forall($1.options, function() { /*13979*/
			var _3 = $k[--$j]; /*13979*/
			$1[$k[--$j]] = _3; /*13979*/
		}); /*13979*/
		$1.options.dontdraw = true; /*13982*/
		$1.options.compact = true; /*13983*/
		$k[$j++] = "args"; /*13985*/
		$k[$j++] = $1.barcode; /*13985*/
		$k[$j++] = $1.options; /*13985*/
		$0.pdf417(); /*13985*/
		var _9 = $k[--$j]; /*13985*/
		$1[$k[--$j]] = _9; /*13985*/
		$1.args.opt = $1.options; /*13987*/
		$k[$j++] = $1.args; /*13990*/
		if (!$1.dontdraw) { /*13990*/
			$0.renmatrix(); /*13990*/
		} /*13990*/
	};
	$0.micropdf417 = function() {
		var $1 = {}; /*14017*/
		$1.options = $k[--$j]; /*14019*/
		$1.barcode = $k[--$j]; /*14020*/
		$1.dontdraw = false; /*14022*/
		$1.version = "unset"; /*14023*/
		$1.columns = 0; /*14024*/
		$1.rows = 0; /*14025*/
		$1.rowmult = 2; /*14026*/
		$1.encoding = "auto"; /*14027*/
		$1.cca = false; /*14028*/
		$1.ccb = false; /*14029*/
		$1.raw = false; /*14030*/
		$1.parse = false; /*14031*/
		$forall($1.options, function() { /*14042*/
			var _3 = $k[--$j]; /*14042*/
			$1[$k[--$j]] = _3; /*14042*/
		}); /*14042*/
		if ($ne($1.version, "unset")) { /*14048*/
			$search($1.version, "x"); /*14045*/
			$j--; /*14046*/
			$1.columns = $k[--$j]; /*14046*/
			$j--; /*14047*/
			$1.rows = $k[--$j]; /*14047*/
		} /*14047*/
		$1.columns = ~~$z($1.columns); /*14050*/
		$1.rows = ~~$z($1.rows); /*14051*/
		$1.rowmult = +$1.rowmult; /*14052*/
		if ($1.raw) { /*14075*/
			$1.encoding = "raw"; /*14075*/
		} /*14075*/
		if ($1.cca) { /*14076*/
			$1.encoding = "cca"; /*14076*/
		} /*14076*/
		if ($eq($1.encoding, "raw") || $eq($1.encoding, "cca")) { /*14090*/
			$1.datcws = $a($1.barcode.length); /*14080*/
			$1.i = 0; /*14081*/
			$1.j = 0; /*14081*/
			for (;;) { /*14088*/
				if ($1.i == $1.barcode.length) { /*14083*/
					break; /*14083*/
				} /*14083*/
				$1.cw = ~~$z($geti($1.barcode, $1.i + 1, 3)); /*14084*/
				$put($1.datcws, $1.j, $1.cw); /*14085*/
				$1.i = $1.i + 4; /*14086*/
				$1.j = $1.j + 1; /*14087*/
			} /*14087*/
			$1.datcws = $geti($1.datcws, 0, $1.j); /*14089*/
		} /*14089*/
		$k[$j++] = Infinity; /*14092*/
		$forall($1.barcode); /*14092*/
		$1.barcode = $a(); /*14092*/
		$1.barlen = $1.barcode.length; /*14093*/
		if ($1.ccb) { /*14095*/
			$1.encoding = "ccb"; /*14095*/
		} /*14095*/
		$1.encb = function() {
			$1.in = $k[--$j]; /*14098*/
			$1.inlen = $1.in.length; /*14099*/
			$1.out = $a(((~~($1.inlen / 6)) * 5) + ($1.inlen % 6)); /*14100*/
			for (var _g = 0, _f = (~~($1.inlen / 6)) - 1; _g <= _f; _g += 1) { /*14123*/
				$1.k = _g; /*14102*/
				$k[$j++] = Infinity; /*14103*/
				$aload($geti($1.in, $1.k * 6, 3)); /*14103*/
				$1.msbs = $a(); /*14103*/
				$k[$j++] = Infinity; /*14107*/
				$aload($1.msbs); /*14105*/
				var _m = $k[--$j]; /*14105*/
				var _n = $k[--$j]; /*14105*/
				var _o = $k[--$j]; /*14105*/
				$k[$j++] = (_m + (_n * 256)) + (_o * 65536); /*14106*/
				for (var _p = 0, _q = 3; _p < _q; _p++) { /*14106*/
					var _r = $k[--$j]; /*14106*/
					$k[$j++] = _r % 900; /*14106*/
					$k[$j++] = ~~(_r / 900); /*14106*/
				} /*14106*/
				$1.mscs = $a(); /*14107*/
				$k[$j++] = Infinity; /*14108*/
				$aload($geti($1.in, ($1.k * 6) + 3, 3)); /*14108*/
				$1.lsbs = $a(); /*14108*/
				$k[$j++] = Infinity; /*14112*/
				$aload($1.lsbs); /*14110*/
				var _y = $k[--$j]; /*14110*/
				var _z = $k[--$j]; /*14110*/
				var _10 = $k[--$j]; /*14110*/
				$k[$j++] = (_y + (_z * 256)) + (_10 * 65536); /*14111*/
				for (var _11 = 0, _12 = 3; _11 < _12; _11++) { /*14111*/
					var _13 = $k[--$j]; /*14111*/
					$k[$j++] = _13 % 900; /*14111*/
					$k[$j++] = ~~(_13 / 900); /*14111*/
				} /*14111*/
				$1.lscs = $a(); /*14112*/
				var _16 = $get($1.lscs, 0); /*14113*/
				var _18 = $get($1.mscs, 0); /*14113*/
				$put($1.out, ($1.k * 5) + 4, (_16 + (_18 * 316)) % 900); /*14114*/
				var _1C = $get($1.lscs, 1); /*14115*/
				var _1E = $get($1.mscs, 0); /*14115*/
				var _1G = $get($1.mscs, 1); /*14115*/
				$put($1.out, ($1.k * 5) + 3, ((((~~((_16 + (_18 * 316)) / 900)) + _1C) + (_1E * 641)) + (_1G * 316)) % 900); /*14116*/
				var _1K = $get($1.lscs, 2); /*14117*/
				var _1M = $get($1.mscs, 0); /*14117*/
				var _1O = $get($1.mscs, 1); /*14117*/
				var _1Q = $get($1.mscs, 2); /*14117*/
				$put($1.out, ($1.k * 5) + 2, (((((~~(((((~~((_16 + (_18 * 316)) / 900)) + _1C) + (_1E * 641)) + (_1G * 316)) / 900)) + _1K) + (_1M * 20)) + (_1O * 641)) + (_1Q * 316)) % 900); /*14118*/
				var _1U = $get($1.lscs, 3); /*14119*/
				var _1W = $get($1.mscs, 1); /*14119*/
				var _1Y = $get($1.mscs, 2); /*14119*/
				$put($1.out, ($1.k * 5) + 1, ((((~~((((((~~(((((~~((_16 + (_18 * 316)) / 900)) + _1C) + (_1E * 641)) + (_1G * 316)) / 900)) + _1K) + (_1M * 20)) + (_1O * 641)) + (_1Q * 316)) / 900)) + _1U) + (_1W * 20)) + (_1Y * 641)) % 900); /*14120*/
				$put($1.out, $1.k * 5, ((~~(((((~~((((((~~(((((~~((_16 + (_18 * 316)) / 900)) + _1C) + (_1E * 641)) + (_1G * 316)) / 900)) + _1K) + (_1M * 20)) + (_1O * 641)) + (_1Q * 316)) / 900)) + _1U) + (_1W * 20)) + (_1Y * 641)) / 900)) + ($get($1.mscs, 2) * 20)) % 900); /*14122*/
			} /*14122*/
			$1.rem = $1.inlen % 6; /*14124*/
			if ($1.rem != 0) { /*14129*/
				$k[$j++] = $1.out; /*14127*/
				$k[$j++] = $1.out.length - $1.rem; /*14127*/
				$k[$j++] = Infinity; /*14127*/
				$aload($geti($1.in, $1.inlen - $1.rem, $1.rem)); /*14127*/
				var _1p = $a(); /*14127*/
				var _1q = $k[--$j]; /*14128*/
				$puti($k[--$j], _1q, _1p); /*14128*/
			} /*14128*/
			$k[$j++] = $1.out; /*14130*/
		}; /*14131*/
		if ($eq($1.encoding, "byte") || $eq($1.encoding, "ccb")) { /*14138*/
			$1.datcws = $a((((~~($1.barlen / 6)) * 5) + ($1.barlen % 6)) + 1); /*14134*/
			var _20 = (($1.barlen % 6) == 0) ? 924 : 901; /*14135*/
			$put($1.datcws, 0, _20); /*14135*/
			$k[$j++] = $1.datcws; /*14136*/
			$k[$j++] = 1; /*14136*/
			$k[$j++] = $1.barcode; /*14136*/
			$1.encb(); /*14136*/
			var _23 = $k[--$j]; /*14136*/
			var _24 = $k[--$j]; /*14136*/
			$puti($k[--$j], _24, _23); /*14136*/
			if ($eq($1.encoding, "ccb")) { /*14137*/
				$k[$j++] = Infinity; /*14137*/
				$k[$j++] = 920; /*14137*/
				$aload($1.datcws); /*14137*/
				$1.datcws = $a(); /*14137*/
			} /*14137*/
		} /*14137*/
		if ($eq($1.encoding, "auto")) { /*14502*/
			$1.T = 0; /*14143*/
			$1.N = 1; /*14143*/
			$1.B = 2; /*14143*/
			$1.A = 0; /*14144*/
			$1.L = 1; /*14144*/
			$1.M = 2; /*14144*/
			$1.P = 3; /*14144*/
			$1.tl = -1; /*14147*/
			$1.nl = -2; /*14147*/
			$1.bl = -3; /*14147*/
			$1.bl6 = -4; /*14147*/
			$1.bs = -5; /*14147*/
			$1.al = -6; /*14150*/
			$1.ll = -7; /*14150*/
			$1.ml = -8; /*14150*/
			$1.pl = -9; /*14150*/
			$1.as = -10; /*14150*/
			$1.ps = -11; /*14150*/
			$1.charmaps = $a([$a(["A", "a", "0", ";"]), $a(["B", "b", "1", "<"]), $a(["C", "c", "2", ">"]), $a(["D", "d", "3", "@"]), $a(["E", "e", "4", "["]), $a(["F", "f", "5", 92]), $a(["G", "g", "6", "]"]), $a(["H", "h", "7", "_"]), $a(["I", "i", "8", "`"]), $a(["J", "j", "9", "~"]), $a(["K", "k", "&", "!"]), $a(["L", "l", 13, 13]), $a(["M", "m", 9, 9]), $a(["N", "n", ",", ","]), $a(["O", "o", ":", ":"]), $a(["P", "p", "#", 10]), $a(["Q", "q", "-", "-"]), $a(["R", "r", ".", "."]), $a(["S", "s", "$", "$"]), $a(["T", "t", "/", "/"]), $a(["U", "u", "+", "\""]), $a(["V", "v", "%", "|"]), $a(["W", "w", "*", "*"]), $a(["X", "x", "=", 40]), $a(["Y", "y", "^", 41]), $a(["Z", "z", $1.pl, "?"]), $a([" ", " ", " ", "{"]), $a([$1.ll, $1.as, $1.ll, "}"]), $a([$1.ml, $1.ml, $1.al, "'"]), $a([$1.ps, $1.ps, $1.ps, $1.al])]); /*14185*/
			$1.charvals = $a([{}, {}, {}, {}]); /*14188*/
			$1.alltext = {}; /*14189*/
			for (var _2t = 0, _2s = $1.charmaps.length - 1; _2t <= _2s; _2t += 1) { /*14199*/
				$1.i = _2t; /*14191*/
				$1.encs = $get($1.charmaps, $1.i); /*14192*/
				for (var _2x = 0; _2x <= 3; _2x += 1) { /*14198*/
					$1.j = _2x; /*14194*/
					var _30 = $get($1.encs, $1.j); /*14195*/
					$k[$j++] = _30; /*14195*/
					if ($eq($type(_30), "stringtype")) { /*14195*/
						var _33 = $get($k[--$j], 0); /*14195*/
						$k[$j++] = _33; /*14195*/
					} /*14195*/
					var _34 = $k[--$j]; /*14196*/
					$put($get($1.charvals, $1.j), _34, $1.i); /*14196*/
					$put($1.alltext, _34, -1); /*14197*/
				} /*14197*/
			} /*14197*/
			$1.e = 10000; /*14201*/
			$1.latlen = $a([$a([0, 1, 1, 2]), $a([2, 0, 1, 2]), $a([1, 1, 0, 1]), $a([1, 2, 2, 0])]); /*14209*/
			$1.latseq = $a([$a([$a([]), $a([$1.ll]), $a([$1.ml]), $a([$1.ml, $1.pl])]), $a([$a([$1.ml, $1.al]), $a([]), $a([$1.ml]), $a([$1.ml, $1.pl])]), $a([$a([$1.al]), $a([$1.ll]), $a([]), $a([$1.pl])]), $a([$a([$1.al]), $a([$1.al, $1.ll]), $a([$1.al, $1.ml]), $a([])])]); /*14217*/
			$1.shftlen = $a([$a([$1.e, $1.e, $1.e, 1]), $a([1, $1.e, $1.e, 1]), $a([$1.e, $1.e, $1.e, 1]), $a([$1.e, $1.e, $1.e, $1.e])]); /*14225*/
			$k[$j++] = Infinity; /*14228*/
			for (var _49 = 0, _4A = $1.barlen; _49 < _4A; _49++) { /*14228*/
				$k[$j++] = 0; /*14228*/
			} /*14228*/
			$k[$j++] = 0; /*14228*/
			$1.numdigits = $a(); /*14228*/
			$k[$j++] = Infinity; /*14229*/
			for (var _4D = 0, _4E = $1.barlen; _4D < _4E; _4D++) { /*14229*/
				$k[$j++] = 0; /*14229*/
			} /*14229*/
			$k[$j++] = 0; /*14229*/
			$1.numtext = $a(); /*14229*/
			$k[$j++] = Infinity; /*14230*/
			for (var _4H = 0, _4I = $1.barlen; _4H < _4I; _4H++) { /*14230*/
				$k[$j++] = 0; /*14230*/
			} /*14230*/
			$k[$j++] = 0; /*14230*/
			$1.numbytes = $a(); /*14230*/
			for (var _4L = $1.barlen - 1; _4L >= 0; _4L -= 1) { /*14242*/
				$1.i = _4L; /*14232*/
				var _4O = $get($1.barcode, $1.i); /*14233*/
				if ((_4O >= 48) && (_4O <= 57)) { /*14235*/
					$put($1.numdigits, $1.i, $get($1.numdigits, $1.i + 1) + 1); /*14234*/
				} /*14234*/
				var _4Y = $get($1.alltext, $get($1.barcode, $1.i)) !== undefined; /*14236*/
				if (_4Y && ($get($1.numdigits, $1.i) < 13)) { /*14238*/
					$put($1.numtext, $1.i, $get($1.numtext, $1.i + 1) + 1); /*14237*/
				} /*14237*/
				if (($get($1.numtext, $1.i) < 5) && ($get($1.numdigits, $1.i) < 13)) { /*14241*/
					$put($1.numbytes, $1.i, $get($1.numbytes, $1.i + 1) + 1); /*14240*/
				} /*14240*/
			} /*14240*/
			$1.numdigits = $geti($1.numdigits, 0, $1.barlen); /*14243*/
			$1.numtext = $geti($1.numtext, 0, $1.barlen); /*14244*/
			$1.numbytes = $geti($1.numbytes, 0, $1.barlen); /*14245*/
			$1.seq = $a([]); /*14247*/
			$1.seqlen = 0; /*14247*/
			$1.state = $1.B; /*14247*/
			$1.p = 0; /*14247*/
			for (;;) { /*14290*/
				if ($1.p == $1.barlen) { /*14248*/
					break; /*14248*/
				} /*14248*/
				$1.n = $get($1.numdigits, $1.p); /*14249*/
				if ($1.n >= 13) { /*14288*/
					$k[$j++] = Infinity; /*14255*/
					$aload($1.seq); /*14252*/
					$k[$j++] = $1.nl; /*14254*/
					$k[$j++] = Infinity; /*14254*/
					$aload($geti($1.barcode, $1.p, $1.n)); /*14254*/
					var _5F = $a(); /*14254*/
					$k[$j++] = _5F; /*14254*/
					$1.seq = $a(); /*14255*/
					$1.state = $1.N; /*14256*/
					$1.p = $1.p + $1.n; /*14257*/
					$1.seqlen = ($1.seqlen + 1) + $1.n; /*14258*/
				} else { /*14288*/
					$1.t = $get($1.numtext, $1.p); /*14260*/
					if ($1.t >= 5) { /*14288*/
						$k[$j++] = Infinity; /*14266*/
						$aload($1.seq); /*14263*/
						if ($1.state != $1.T) { /*14264*/
							$k[$j++] = $1.tl; /*14264*/
						} /*14264*/
						$k[$j++] = Infinity; /*14265*/
						$aload($geti($1.barcode, $1.p, $1.t)); /*14265*/
						var _5Y = $a(); /*14265*/
						$k[$j++] = _5Y; /*14265*/
						$1.seq = $a(); /*14266*/
						$1.state = $1.T; /*14267*/
						$1.p = $1.p + $1.t; /*14268*/
						$1.seqlen = ($1.seqlen + 1) + $1.t; /*14269*/
					} else { /*14288*/
						$1.b = $get($1.numbytes, $1.p); /*14271*/
						if (($1.b == 1) && ($1.state == $1.T)) { /*14288*/
							$k[$j++] = Infinity; /*14277*/
							$aload($1.seq); /*14274*/
							$k[$j++] = $1.bs; /*14276*/
							$k[$j++] = $a([$get($1.barcode, $1.p)]); /*14276*/
							$1.seq = $a(); /*14277*/
							$1.p = $1.p + $1.b; /*14278*/
							$1.seqlen = $1.seqlen + 2; /*14279*/
						} else { /*14288*/
							$k[$j++] = Infinity; /*14285*/
							$aload($1.seq); /*14282*/
							if (($1.b % 6) != 0) { /*14283*/
								$k[$j++] = $1.bl; /*14283*/
							} else { /*14283*/
								$k[$j++] = $1.bl6; /*14283*/
							} /*14283*/
							$k[$j++] = Infinity; /*14284*/
							$aload($geti($1.barcode, $1.p, $1.b)); /*14284*/
							var _63 = $a(); /*14284*/
							$k[$j++] = _63; /*14284*/
							$1.seq = $a(); /*14285*/
							$1.state = $1.B; /*14286*/
							$1.p = $1.p + $1.b; /*14287*/
							$1.seqlen = ($1.seqlen + 1) + $1.b; /*14288*/
						} /*14288*/
					} /*14288*/
				} /*14288*/
			} /*14288*/
			$k[$j++] = "latchcws"; /*14293*/
			$k[$j++] = Infinity; /*14293*/
			$k[$j++] = $1.tl; /*14293*/
			$k[$j++] = 900; /*14293*/
			$k[$j++] = $1.bl; /*14293*/
			$k[$j++] = 901; /*14293*/
			$k[$j++] = $1.bl6; /*14293*/
			$k[$j++] = 924; /*14293*/
			$k[$j++] = $1.nl; /*14293*/
			$k[$j++] = 902; /*14293*/
			$k[$j++] = $1.bs; /*14293*/
			$k[$j++] = 913; /*14293*/
			var _6F = $d(); /*14293*/
			$1[$k[--$j]] = _6F; /*14294*/
			$1.enca = function() {
				var _6L = $get($get($1.charvals, $1.A), $k[--$j]); /*14297*/
				$k[$j++] = _6L; /*14297*/
			}; /*14297*/
			$1.encl = function() {
				var _6Q = $get($get($1.charvals, $1.L), $k[--$j]); /*14298*/
				$k[$j++] = _6Q; /*14298*/
			}; /*14298*/
			$1.encm = function() {
				var _6V = $get($get($1.charvals, $1.M), $k[--$j]); /*14299*/
				$k[$j++] = _6V; /*14299*/
			}; /*14299*/
			$1.encp = function() {
				var _6a = $get($get($1.charvals, $1.P), $k[--$j]); /*14300*/
				$k[$j++] = _6a; /*14300*/
			}; /*14300*/
			$1.textencfuncs = $a(["enca", "encl", "encm", "encp"]); /*14301*/
			$1.addtotext = function() {
				$put($1.text, $1.l, $k[--$j]); /*14304*/
				$1.l = $1.l + 1; /*14305*/
			}; /*14306*/
			$1.enct = function() {
				$1.in = $k[--$j]; /*14310*/
				$1.curlen = $a([$1.e, $1.e, $1.e, $1.e]); /*14312*/
				$put($1.curlen, $1.submode, 0); /*14313*/
				$1.curseq = $a([$a([]), $a([]), $a([]), $a([])]); /*14314*/
				$forall($1.in, function() { /*14384*/
					$1.char = $k[--$j]; /*14319*/
					for (;;) { /*14340*/
						$1.imp = false; /*14323*/
						var _6z = $a([$1.A, $1.L, $1.M, $1.P]); /*14324*/
						for (var _70 = 0, _71 = _6z.length; _70 < _71; _70++) { /*14338*/
							$1.x = $get(_6z, _70); /*14325*/
							var _77 = $a([$1.A, $1.L, $1.M, $1.P]); /*14326*/
							for (var _78 = 0, _79 = _77.length; _78 < _79; _78++) { /*14337*/
								$1.y = $get(_77, _78); /*14327*/
								$1.cost = $get($1.curlen, $1.x) + $get($get($1.latlen, $1.x), $1.y); /*14328*/
								if ($1.cost < $get($1.curlen, $1.y)) { /*14336*/
									$put($1.curlen, $1.y, $1.cost); /*14330*/
									$k[$j++] = $1.curseq; /*14333*/
									$k[$j++] = $1.y; /*14333*/
									$k[$j++] = Infinity; /*14333*/
									$aload($get($1.curseq, $1.x)); /*14332*/
									$aload($get($get($1.latseq, $1.x), $1.y)); /*14333*/
									var _7a = $a(); /*14333*/
									var _7b = $k[--$j]; /*14334*/
									$put($k[--$j], _7b, _7a); /*14334*/
									$1.imp = true; /*14335*/
								} /*14335*/
							} /*14335*/
						} /*14335*/
						if (!$1.imp) { /*14339*/
							break; /*14339*/
						} /*14339*/
					} /*14339*/
					$1.nxtlen = $a([$1.e, $1.e, $1.e, $1.e]); /*14343*/
					$1.nxtseq = $a(4); /*14344*/
					var _7o = $a([$1.A, $1.L, $1.M, $1.P]); /*14346*/
					for (var _7p = 0, _7q = _7o.length; _7p < _7q; _7p++) { /*14379*/
						$1.x = $get(_7o, _7p); /*14347*/
						for (;;) { /*14377*/
							var _7w = $get($get($1.charvals, $1.x), $1.char) !== undefined; /*14351*/
							if (!_7w) { /*14351*/
								break; /*14351*/
							} /*14351*/
							$1.cost = $get($1.curlen, $1.x) + 1; /*14354*/
							if ($1.cost < $get($1.nxtlen, $1.x)) { /*14358*/
								$put($1.nxtlen, $1.x, $1.cost); /*14356*/
								$k[$j++] = $1.nxtseq; /*14357*/
								$k[$j++] = $1.x; /*14357*/
								$k[$j++] = Infinity; /*14357*/
								$aload($get($1.curseq, $1.x)); /*14357*/
								$k[$j++] = $1.char; /*14357*/
								var _8D = $a(); /*14357*/
								var _8E = $k[--$j]; /*14357*/
								$put($k[--$j], _8E, _8D); /*14357*/
							} /*14357*/
							var _8K = $a([$1.A, $1.L, $1.M, $1.P]); /*14361*/
							for (var _8L = 0, _8M = _8K.length; _8L < _8M; _8L++) { /*14374*/
								$1.y = $get(_8K, _8L); /*14362*/
								if ($ne($1.x, $1.y)) { /*14373*/
									$1.cost = ($get($1.curlen, $1.y) + $get($get($1.shftlen, $1.y), $1.x)) + 1; /*14364*/
									if ($1.cost < $get($1.nxtlen, $1.y)) { /*14372*/
										$put($1.nxtlen, $1.y, $1.cost); /*14366*/
										$k[$j++] = $1.nxtseq; /*14370*/
										$k[$j++] = $1.y; /*14370*/
										$k[$j++] = Infinity; /*14370*/
										$aload($get($1.curseq, $1.y)); /*14368*/
										if ($1.x == $1.A) { /*14369*/
											$k[$j++] = $1.as; /*14369*/
										} else { /*14369*/
											$k[$j++] = $1.ps; /*14369*/
										} /*14369*/
										$k[$j++] = $1.char; /*14370*/
										var _8p = $a(); /*14370*/
										var _8q = $k[--$j]; /*14371*/
										$put($k[--$j], _8q, _8p); /*14371*/
									} /*14371*/
								} /*14371*/
							} /*14371*/
							break; /*14376*/
						} /*14376*/
					} /*14376*/
					$1.curlen = $1.nxtlen; /*14381*/
					$1.curseq = $1.nxtseq; /*14382*/
				}); /*14382*/
				$1.minseq = $1.e; /*14387*/
				var _8z = $a([$1.A, $1.L, $1.M, $1.P]); /*14388*/
				for (var _90 = 0, _91 = _8z.length; _90 < _91; _90++) { /*14394*/
					$1.k = $get(_8z, _90); /*14389*/
					if ($get($1.curlen, $1.k) < $1.minseq) { /*14393*/
						$1.minseq = $get($1.curlen, $1.k); /*14391*/
						$1.txtseq = $get($1.curseq, $1.k); /*14392*/
					} /*14392*/
				} /*14392*/
				$1.text = $a($1.minseq); /*14397*/
				$1.k = 0; /*14398*/
				$1.l = 0; /*14398*/
				for (;;) { /*14418*/
					if ($1.k >= $1.txtseq.length) { /*14399*/
						break; /*14399*/
					} /*14399*/
					$1.char = $get($1.txtseq, $1.k); /*14401*/
					$k[$j++] = $1.char; /*14404*/
					$1[$get($1.textencfuncs, $1.submode)](); /*14404*/
					$1.addtotext(); /*14404*/
					$1.k = $1.k + 1; /*14405*/
					if (($1.char == $1.as) || ($1.char == $1.ps)) { /*14411*/
						$k[$j++] = $get($1.txtseq, $1.k); /*14409*/
						if ($1.char == $1.as) { /*14409*/
							$1.enca(); /*14409*/
						} else { /*14409*/
							$1.encp(); /*14409*/
						} /*14409*/
						$1.addtotext(); /*14409*/
						$1.k = $1.k + 1; /*14410*/
					} /*14410*/
					if ($1.char == $1.al) { /*14414*/
						$1.submode = $1.A; /*14414*/
					} /*14414*/
					if ($1.char == $1.ll) { /*14415*/
						$1.submode = $1.L; /*14415*/
					} /*14415*/
					if ($1.char == $1.ml) { /*14416*/
						$1.submode = $1.M; /*14416*/
					} /*14416*/
					if ($1.char == $1.pl) { /*14417*/
						$1.submode = $1.P; /*14417*/
					} /*14417*/
				} /*14417*/
				if (($1.text.length % 2) == 1) { /*14428*/
					if ($1.submode == $1.P) { /*14425*/
						$k[$j++] = "pad"; /*14422*/
						$k[$j++] = $1.al; /*14422*/
						$1.encp(); /*14422*/
						var _9q = $k[--$j]; /*14422*/
						$1[$k[--$j]] = _9q; /*14422*/
						$1.submode = $1.A; /*14423*/
					} else { /*14425*/
						$k[$j++] = "pad"; /*14425*/
						$k[$j++] = $1.ps; /*14425*/
						$1[$get($1.textencfuncs, $1.submode)](); /*14425*/
						var _9y = $k[--$j]; /*14425*/
						$1[$k[--$j]] = _9y; /*14425*/
					} /*14425*/
					$k[$j++] = Infinity; /*14427*/
					$aload($1.text); /*14427*/
					$k[$j++] = $1.pad; /*14427*/
					$1.text = $a(); /*14427*/
				} /*14427*/
				$1.out = $a(~~($1.text.length / 2)); /*14430*/
				for (var _A7 = 0, _A6 = $1.out.length - 1; _A7 <= _A6; _A7 += 1) { /*14434*/
					$1.k = _A7; /*14432*/
					$put($1.out, $1.k, ($get($1.text, $1.k * 2) * 30) + $get($1.text, ($1.k * 2) + 1)); /*14433*/
				} /*14433*/
				$k[$j++] = $1.out; /*14436*/
			}; /*14438*/
			$1.encn = function() {
				$1.in = $k[--$j]; /*14441*/
				$1.out = $a([]); /*14442*/
				for (var _AL = 0, _AK = $1.in.length - 1; _AL <= _AK; _AL += 44) { /*14470*/
					$1.k = _AL; /*14444*/
					$k[$j++] = Infinity; /*14448*/
					var _AQ = $1.in.length - $1.k; /*14446*/
					$k[$j++] = 1; /*14446*/
					$k[$j++] = $1.in; /*14446*/
					$k[$j++] = $1.k; /*14446*/
					$k[$j++] = _AQ; /*14446*/
					if (_AQ > 44) { /*14446*/
						$j--; /*14446*/
						$k[$j++] = 44; /*14446*/
					} /*14446*/
					var _AR = $k[--$j]; /*14446*/
					var _AS = $k[--$j]; /*14446*/
					$forall($geti($k[--$j], _AS, _AR), function() { /*14447*/
						var _AV = $k[--$j]; /*14447*/
						$k[$j++] = _AV - 48; /*14447*/
					}); /*14447*/
					$1.gmod = $a(); /*14448*/
					$1.cwn = $a([]); /*14449*/
					for (;;) { /*14468*/
						$1.dv = 900; /*14450*/
						$1.gmul = $a([]); /*14451*/
						$1.val = 0; /*14451*/
						for (;;) { /*14463*/
							if ($1.gmod.length == 0) { /*14452*/
								break; /*14452*/
							} /*14452*/
							$1.val = ($1.val * 10) + $get($1.gmod, 0); /*14453*/
							$1.gmod = $geti($1.gmod, 1, $1.gmod.length - 1); /*14454*/
							if ($1.val < $1.dv) { /*14460*/
								if ($1.gmul.length != 0) { /*14458*/
									$k[$j++] = Infinity; /*14457*/
									$aload($1.gmul); /*14457*/
									$k[$j++] = 0; /*14457*/
									$1.gmul = $a(); /*14457*/
								} /*14457*/
							} else { /*14460*/
								$k[$j++] = Infinity; /*14460*/
								$aload($1.gmul); /*14460*/
								$k[$j++] = ~~($1.val / $1.dv); /*14460*/
								$1.gmul = $a(); /*14460*/
							} /*14460*/
							$1.val = $1.val % $1.dv; /*14462*/
						} /*14462*/
						$1.dv = $1.val; /*14464*/
						$k[$j++] = Infinity; /*14465*/
						$k[$j++] = $1.dv; /*14465*/
						$aload($1.cwn); /*14465*/
						$1.cwn = $a(); /*14465*/
						$1.gmod = $1.gmul; /*14466*/
						if ($1.gmul.length == 0) { /*14467*/
							break; /*14467*/
						} /*14467*/
					} /*14467*/
					$k[$j++] = Infinity; /*14469*/
					$aload($1.out); /*14469*/
					$aload($1.cwn); /*14469*/
					$1.out = $a(); /*14469*/
				} /*14469*/
				$k[$j++] = $1.out; /*14471*/
			}; /*14472*/
			$1.encfuncs = $a(["enct", "encn", "encb"]); /*14474*/
			$1.addtocws = function() {
				var _B2 = $k[--$j]; /*14477*/
				$puti($1.datcws, $1.j, _B2); /*14477*/
				$1.j = _B2.length + $1.j; /*14478*/
			}; /*14479*/
			$1.state = $1.T; /*14482*/
			$1.submode = $1.A; /*14482*/
			$1.datcws = $a($1.seqlen); /*14483*/
			$1.i = 0; /*14484*/
			$1.j = 0; /*14484*/
			for (;;) { /*14500*/
				if ($1.i >= $1.seq.length) { /*14485*/
					break; /*14485*/
				} /*14485*/
				$1.chars = $get($1.seq, $1.i); /*14486*/
				if ($eq($type($1.chars), "arraytype")) { /*14496*/
					$k[$j++] = $1.chars; /*14488*/
					$1[$get($1.encfuncs, $1.state)](); /*14488*/
					$1.addtocws(); /*14488*/
				} else { /*14496*/
					$k[$j++] = $a([$get($1.latchcws, $1.chars)]); /*14490*/
					$1.addtocws(); /*14490*/
					if ($1.chars == $1.tl) { /*14491*/
						$1.state = $1.T; /*14491*/
						$1.submode = $1.A; /*14491*/
					} /*14491*/
					if ($1.chars == $1.nl) { /*14492*/
						$1.state = $1.N; /*14492*/
					} /*14492*/
					if (($1.chars == $1.bl) || ($1.chars == $1.bl6)) { /*14493*/
						$1.state = $1.B; /*14493*/
					} /*14493*/
					if ($1.chars == $1.bs) { /*14497*/
						$1.i = $1.i + 1; /*14495*/
						$k[$j++] = $get($1.seq, $1.i); /*14496*/
						$1.encb(); /*14496*/
						$1.addtocws(); /*14496*/
					} /*14496*/
				} /*14496*/
				$1.i = $1.i + 1; /*14499*/
			} /*14499*/
			$1.datcws = $geti($1.datcws, 0, $1.j); /*14501*/
		} /*14501*/
		$1.metrics = $a([$a([1, 11, 7, 1, 0, 9]), $a([1, 14, 7, 8, 0, 8]), $a([1, 17, 7, 36, 0, 36]), $a([1, 20, 8, 19, 0, 19]), $a([1, 24, 8, 9, 0, 17]), $a([1, 28, 8, 25, 0, 33]), $a([2, 8, 8, 1, 0, 1]), $a([2, 11, 9, 1, 0, 9]), $a([2, 14, 9, 8, 0, 8]), $a([2, 17, 10, 36, 0, 36]), $a([2, 20, 11, 19, 0, 19]), $a([2, 23, 13, 9, 0, 17]), $a([2, 26, 15, 27, 0, 35]), $a([3, 6, 12, 1, 1, 1]), $a([3, 8, 14, 7, 7, 7]), $a([3, 10, 16, 15, 15, 15]), $a([3, 12, 18, 25, 25, 25]), $a([3, 15, 21, 37, 37, 37]), $a([3, 20, 26, 1, 17, 33]), $a([3, 26, 32, 1, 9, 17]), $a([3, 32, 38, 21, 29, 37]), $a([3, 38, 44, 15, 31, 47]), $a([3, 44, 50, 1, 25, 49]), $a([4, 4, 8, 47, 19, 43]), $a([4, 6, 12, 1, 1, 1]), $a([4, 8, 14, 7, 7, 7]), $a([4, 10, 16, 15, 15, 15]), $a([4, 12, 18, 25, 25, 25]), $a([4, 15, 21, 37, 37, 37]), $a([4, 20, 26, 1, 17, 33]), $a([4, 26, 32, 1, 9, 17]), $a([4, 32, 38, 21, 29, 37]), $a([4, 38, 44, 15, 31, 47]), $a([4, 44, 50, 1, 25, 49])]); /*14541*/
		$1.ccametrics = $a([$a([2, 5, 4, 39, 0, 19]), $a([2, 6, 4, 1, 0, 33]), $a([2, 7, 5, 32, 0, 12]), $a([2, 8, 5, 8, 0, 40]), $a([2, 9, 6, 14, 0, 46]), $a([2, 10, 6, 43, 0, 23]), $a([2, 12, 7, 20, 0, 52]), $a([3, 4, 4, 11, 43, 23]), $a([3, 5, 5, 1, 33, 13]), $a([3, 6, 6, 5, 37, 17]), $a([3, 7, 7, 15, 47, 27]), $a([3, 8, 7, 21, 1, 33]), $a([4, 3, 4, 40, 20, 52]), $a([4, 4, 5, 43, 23, 3]), $a([4, 5, 6, 46, 26, 6]), $a([4, 6, 7, 34, 14, 46]), $a([4, 7, 8, 29, 9, 41])]); /*14563*/
		if ($1.cca) { /*14564*/
			$1.metrics = $1.ccametrics; /*14564*/
		} /*14564*/
		$1.urows = $1.rows; /*14567*/
		$1.ucols = $1.columns; /*14568*/
		$1.i = 0; /*14569*/
		for (;;) { /*14585*/
			$1.m = $get($1.metrics, $1.i); /*14571*/
			$1.c = $get($1.m, 0); /*14572*/
			$1.r = $get($1.m, 1); /*14573*/
			$1.k = $get($1.m, 2); /*14574*/
			$1.rapl = $get($1.m, 3); /*14575*/
			$1.rapc = $get($1.m, 4); /*14576*/
			$1.rapr = $get($1.m, 5); /*14577*/
			$1.ncws = ($1.r * $1.c) - $1.k; /*14578*/
			$1.okay = true; /*14579*/
			if ($1.datcws.length > $1.ncws) { /*14580*/
				$1.okay = false; /*14580*/
			} /*14580*/
			if (($1.urows != 0) && ($1.urows != $1.r)) { /*14581*/
				$1.okay = false; /*14581*/
			} /*14581*/
			if (($1.ucols != 0) && ($1.ucols != $1.c)) { /*14582*/
				$1.okay = false; /*14582*/
			} /*14582*/
			if ($1.okay) { /*14583*/
				break; /*14583*/
			} /*14583*/
			$1.i = $1.i + 1; /*14584*/
		} /*14584*/
		$1.m = $1.datcws.length; /*14586*/
		$1.n = ($1.c * $1.r) - $1.k; /*14589*/
		$1.cws = $a(($1.c * $1.r) + 1); /*14590*/
		$puti($1.cws, 0, $1.datcws); /*14591*/
		$k[$j++] = $1.cws; /*14592*/
		$k[$j++] = $1.m; /*14592*/
		$k[$j++] = Infinity; /*14592*/
		for (var _DM = 0, _DN = $1.n - $1.m; _DM < _DN; _DM++) { /*14592*/
			$k[$j++] = 900; /*14592*/
		} /*14592*/
		var _DO = $a(); /*14592*/
		var _DP = $k[--$j]; /*14592*/
		$puti($k[--$j], _DP, _DO); /*14592*/
		$k[$j++] = $1.cws; /*14593*/
		$k[$j++] = $1.n; /*14593*/
		$k[$j++] = Infinity; /*14593*/
		for (var _DU = 0, _DV = $1.k; _DU < _DV; _DU++) { /*14593*/
			$k[$j++] = 0; /*14593*/
		} /*14593*/
		$k[$j++] = 0; /*14593*/
		var _DW = $a(); /*14593*/
		var _DX = $k[--$j]; /*14593*/
		$puti($k[--$j], _DX, _DW); /*14593*/
		$k[$j++] = Infinity; /*14596*/
		$k[$j++] = 1; /*14596*/
		for (var _DZ = 0, _Da = 928; _DZ < _Da; _DZ++) { /*14596*/
			var _Db = $k[--$j]; /*14596*/
			$k[$j++] = _Db; /*14596*/
			$k[$j++] = (_Db * 3) % 929; /*14596*/
		} /*14596*/
		$1.rsalog = $a(); /*14596*/
		$1.rslog = $a(929); /*14597*/
		for (var _De = 1; _De <= 928; _De += 1) { /*14598*/
			$put($1.rslog, $get($1.rsalog, _De), _De); /*14598*/
		} /*14598*/
		$1.rsprod = function() {
			var _Di = $k[--$j]; /*14602*/
			var _Dj = $k[--$j]; /*14602*/
			$k[$j++] = _Dj; /*14606*/
			$k[$j++] = _Di; /*14606*/
			if ((_Di != 0) && (_Dj != 0)) { /*14605*/
				var _Dm = $get($1.rslog, $k[--$j]); /*14603*/
				var _Dr = $get($1.rsalog, (_Dm + $get($1.rslog, $k[--$j])) % 928); /*14603*/
				$k[$j++] = _Dr; /*14603*/
			} else { /*14605*/
				$j -= 2; /*14605*/
				$k[$j++] = 0; /*14605*/
			} /*14605*/
		}; /*14607*/
		$k[$j++] = Infinity; /*14610*/
		$k[$j++] = 1; /*14610*/
		for (var _Dt = 0, _Du = $1.k; _Dt < _Du; _Dt++) { /*14610*/
			$k[$j++] = 0; /*14610*/
		} /*14610*/
		$1.coeffs = $a(); /*14610*/
		for (var _Dy = 1, _Dx = $1.k; _Dy <= _Dx; _Dy += 1) { /*14619*/
			$1.i = _Dy; /*14612*/
			$put($1.coeffs, $1.i, $get($1.coeffs, $1.i - 1)); /*14613*/
			for (var _E5 = $1.i - 1; _E5 >= 1; _E5 -= 1) { /*14617*/
				$1.j = _E5; /*14615*/
				$k[$j++] = $1.coeffs; /*14616*/
				$k[$j++] = $1.j; /*14616*/
				$k[$j++] = $get($1.coeffs, $1.j - 1); /*14616*/
				$k[$j++] = $get($1.coeffs, $1.j); /*14616*/
				$k[$j++] = $get($1.rsalog, $1.i); /*14616*/
				$1.rsprod(); /*14616*/
				var _EH = $k[--$j]; /*14616*/
				var _EI = $k[--$j]; /*14616*/
				var _EJ = $k[--$j]; /*14616*/
				$put($k[--$j], _EJ, (_EI + _EH) % 929); /*14616*/
			} /*14616*/
			$k[$j++] = $1.coeffs; /*14618*/
			$k[$j++] = 0; /*14618*/
			$k[$j++] = $get($1.coeffs, 0); /*14618*/
			$k[$j++] = $get($1.rsalog, $1.i); /*14618*/
			$1.rsprod(); /*14618*/
			var _ER = $k[--$j]; /*14618*/
			var _ES = $k[--$j]; /*14618*/
			$put($k[--$j], _ES, _ER); /*14618*/
		} /*14618*/
		$1.coeffs = $geti($1.coeffs, 0, $1.coeffs.length - 1); /*14620*/
		for (var _EY = $1.coeffs.length - 1; _EY >= 0; _EY -= 2) { /*14621*/
			var _EZ = $1.coeffs; /*14621*/
			$put(_EZ, _EY, 929 - $get(_EZ, _EY)); /*14621*/
		} /*14621*/
		for (var _Ed = 0, _Ec = $1.n - 1; _Ed <= _Ec; _Ed += 1) { /*14630*/
			$1.t = ($get($1.cws, _Ed) + $get($1.cws, $1.n)) % 929; /*14625*/
			for (var _El = 0, _Ek = $1.k - 1; _El <= _Ek; _El += 1) { /*14629*/
				$1.j = _El; /*14627*/
				$put($1.cws, $1.n + $1.j, ($get($1.cws, ($1.n + $1.j) + 1) + (929 - (($1.t * $get($1.coeffs, ($1.k - $1.j) - 1)) % 929))) % 929); /*14628*/
			} /*14628*/
		} /*14628*/
		for (var _F2 = $1.n, _F1 = $1.n + $1.k; _F2 <= _F1; _F2 += 1) { /*14631*/
			$put($1.cws, _F2, (929 - $get($1.cws, _F2)) % 929); /*14631*/
		} /*14631*/
		$1.cws = $geti($1.cws, 0, $1.cws.length - 1); /*14634*/
		$1.clusters = $a([$a([120256, 125680, 128380, 120032, 125560, 128318, 108736, 119920, 108640, 86080, 108592, 86048, 110016, 120560, 125820, 109792, 120440, 125758, 88256, 109680, 88160, 89536, 110320, 120700, 89312, 110200, 120638, 89200, 110140, 89840, 110460, 89720, 110398, 89980, 128506, 119520, 125304, 128190, 107712, 119408, 125244, 107616, 119352, 84032, 107568, 119324, 84000, 107544, 83984, 108256, 119672, 125374, 85184, 108144, 119612, 85088, 108088, 119582, 85040, 108060, 85728, 108408, 119742, 85616, 108348, 85560, 108318, 85880, 108478, 85820, 85790, 107200, 119152, 125116, 107104, 119096, 125086, 83008, 107056, 119068, 82976, 107032, 82960, 82952, 83648, 107376, 119228, 83552, 107320, 119198, 83504, 107292, 83480, 83468, 83824, 107452, 83768, 107422, 83740, 83900, 106848, 118968, 125022, 82496, 106800, 118940, 82464, 106776, 118926, 82448, 106764, 82440, 106758, 82784, 106936, 119006, 82736, 106908, 82712, 106894, 82700, 82694, 106974, 82830, 82240, 106672, 118876, 82208, 106648, 118862, 82192, 106636, 82184, 106630, 82180, 82352, 82328, 82316, 82080, 118830, 106572, 106566, 82050, 117472, 124280, 127678, 103616, 117360, 124220, 103520, 117304, 124190, 75840, 103472, 75808, 104160, 117624, 124350, 76992, 104048, 117564, 76896, 103992, 76848, 76824, 77536, 104312, 117694, 77424, 104252, 77368, 77340, 77688, 104382, 77628, 77758, 121536, 126320, 128700, 121440, 126264, 128670, 111680, 121392, 126236, 111648, 121368, 126222, 111632, 121356, 103104, 117104, 124092, 112320, 103008, 117048, 124062, 112224, 121656, 126366, 93248, 74784, 102936, 117006, 93216, 112152, 93200, 75456, 103280, 117180, 93888, 75360, 103224, 117150, 93792, 112440, 121758, 93744, 75288, 93720, 75632, 103356, 94064, 75576, 103326, 94008, 112542, 93980, 75708, 94140, 75678, 94110, 121184, 126136, 128606, 111168, 121136, 126108, 111136, 121112, 126094, 111120, 121100, 111112, 111108, 102752, 116920, 123998, 111456, 102704, 116892, 91712, 74272, 121244, 116878, 91680, 74256, 102668, 91664, 111372, 102662, 74244, 74592, 102840, 116958, 92000, 74544, 102812, 91952, 111516, 102798, 91928, 74508, 74502, 74680, 102878, 92088, 74652, 92060, 74638, 92046, 92126, 110912, 121008, 126044, 110880, 120984, 126030, 110864, 120972, 110856, 120966, 110852, 110850, 74048, 102576, 116828, 90944, 74016, 102552, 116814, 90912, 111000, 121038, 90896, 73992, 102534, 90888, 110982, 90884, 74160, 102620, 91056, 74136, 102606, 91032, 111054, 91020, 74118, 91014, 91100, 91086, 110752, 120920, 125998, 110736, 120908, 110728, 120902, 110724, 110722, 73888, 102488, 116782, 90528, 73872, 102476, 90512, 110796, 102470, 90504, 73860, 90500, 73858, 73944, 90584, 90572, 90566, 120876, 120870, 110658, 102444, 73800, 90312, 90308, 90306, 101056, 116080, 123580, 100960, 116024, 70720, 100912, 115996, 70688, 100888, 70672, 70664, 71360, 101232, 116156, 71264, 101176, 116126, 71216, 101148, 71192, 71180, 71536, 101308, 71480, 101278, 71452, 71612, 71582, 118112, 124600, 127838, 105024, 118064, 124572, 104992, 118040, 124558, 104976, 118028, 104968, 118022, 100704, 115896, 123486, 105312, 100656, 115868, 79424, 70176, 118172, 115854, 79392, 105240, 100620, 79376, 70152, 79368, 70496, 100792, 115934, 79712, 70448, 118238, 79664, 105372, 100750, 79640, 70412, 79628, 70584, 100830, 79800, 70556, 79772, 70542, 70622, 79838, 122176, 126640, 128860, 122144, 126616, 128846, 122128, 126604, 122120, 126598, 122116, 104768, 117936, 124508, 113472, 104736, 126684, 124494, 113440, 122264, 126670, 113424, 104712, 117894, 113416, 122246, 104706, 69952, 100528, 115804, 78656, 69920, 100504, 115790, 96064, 78624, 104856, 117966, 96032, 113560, 122318, 100486, 96016, 78600, 104838, 96008, 69890, 70064, 100572, 78768, 70040, 100558, 96176, 78744, 104910, 96152, 113614, 70022, 78726, 70108, 78812, 70094, 96220, 78798, 122016, 126552, 128814, 122000, 126540, 121992, 126534, 121988, 121986, 104608, 117848, 124462, 113056, 104592, 126574, 113040, 122060, 117830, 113032, 104580, 113028, 104578, 113026, 69792, 100440, 115758, 78240, 69776, 100428, 95136, 78224, 104652, 100422, 95120, 113100, 69764, 95112, 78212, 69762, 78210, 69848, 100462, 78296, 69836, 95192, 78284, 69830, 95180, 78278, 69870, 95214, 121936, 126508, 121928, 126502, 121924, 121922, 104528, 117804, 112848, 104520, 117798, 112840, 121958, 112836, 104514, 112834, 69712, 100396, 78032, 69704, 100390, 94672, 78024, 104550, 94664, 112870, 69698, 94660, 78018, 94658, 78060, 94700, 94694, 126486, 121890, 117782, 104484, 104482, 69672, 77928, 94440, 69666, 77922, 99680, 68160, 99632, 68128, 99608, 115342, 68112, 99596, 68104, 99590, 68448, 99768, 115422, 68400, 99740, 68376, 99726, 68364, 68358, 68536, 99806, 68508, 68494, 68574, 101696, 116400, 123740, 101664, 116376, 101648, 116364, 101640, 116358, 101636, 67904, 99504, 115292, 72512, 67872, 116444, 115278, 72480, 101784, 116430, 72464, 67848, 99462, 72456, 101766, 67842, 68016, 99548, 72624, 67992, 99534, 72600, 101838, 72588, 67974, 68060, 72668, 68046, 72654, 118432, 124760, 127918, 118416, 124748, 118408, 124742, 118404, 118402, 101536, 116312, 105888, 101520, 116300, 105872, 118476, 116294, 105864, 101508, 105860, 101506, 105858, 67744, 99416, 72096, 67728, 116334, 80800, 72080, 101580, 99398, 80784, 105932, 67716, 80776, 72068, 67714, 72066, 67800, 99438, 72152, 67788, 80856, 72140, 67782, 80844, 72134, 67822, 72174, 80878, 126800, 128940, 126792, 128934, 126788, 126786, 118352, 124716, 122576, 126828, 124710, 122568, 126822, 122564, 118338, 122562, 101456, 116268, 105680, 101448, 116262, 114128, 105672, 118374, 114120, 122598, 101442, 114116, 105666, 114114, 67664, 99372, 71888, 67656, 99366, 80336, 71880, 101478, 97232, 80328, 105702, 67650, 97224, 114150, 71874, 97220, 67692, 71916, 67686, 80364, 71910, 97260, 80358, 97254, 126760, 128918, 126756, 126754, 118312, 124694, 122472, 126774, 122468, 118306, 122466, 101416, 116246, 105576, 101412, 113896, 105572, 101410, 113892, 105570, 113890, 67624, 99350, 71784, 101430, 80104, 71780, 67618, 96744, 80100, 71778, 96740, 80098, 96738, 71798, 96758, 126738, 122420, 122418, 105524, 113780, 113778, 71732, 79988, 96500, 96498, 66880, 66848, 98968, 66832, 66824, 66820, 66992, 66968, 66956, 66950, 67036, 67022, 100000, 99984, 115532, 99976, 115526, 99972, 99970, 66720, 98904, 69024, 100056, 98892, 69008, 100044, 69000, 100038, 68996, 66690, 68994, 66776, 98926, 69080, 100078, 69068, 66758, 69062, 66798, 69102, 116560, 116552, 116548, 116546, 99920, 102096, 116588, 115494, 102088, 116582, 102084, 99906, 102082, 66640, 68816, 66632, 98854, 73168, 68808, 66628, 73160, 68804, 66626, 73156, 68802, 66668, 68844, 66662, 73196, 68838, 73190, 124840, 124836, 124834, 116520, 118632, 124854, 118628, 116514, 118626, 99880, 115478, 101992, 116534, 106216, 101988, 99874, 106212, 101986, 106210, 66600, 98838, 68712, 99894, 72936, 68708, 66594, 81384, 72932, 68706, 81380, 72930, 66614, 68726, 72950, 81398, 128980, 128978, 124820, 126900, 124818, 126898, 116500, 118580, 116498, 122740, 118578, 122738, 99860, 101940, 99858, 106100, 101938, 114420]), $a([128352, 129720, 125504, 128304, 129692, 125472, 128280, 129678, 125456, 128268, 125448, 128262, 125444, 125792, 128440, 129758, 120384, 125744, 128412, 120352, 125720, 128398, 120336, 125708, 120328, 125702, 120324, 120672, 125880, 128478, 110144, 120624, 125852, 110112, 120600, 125838, 110096, 120588, 110088, 120582, 110084, 110432, 120760, 125918, 89664, 110384, 120732, 89632, 110360, 120718, 89616, 110348, 89608, 110342, 89952, 110520, 120798, 89904, 110492, 89880, 110478, 89868, 90040, 110558, 90012, 89998, 125248, 128176, 129628, 125216, 128152, 129614, 125200, 128140, 125192, 128134, 125188, 125186, 119616, 125360, 128220, 119584, 125336, 128206, 119568, 125324, 119560, 125318, 119556, 119554, 108352, 119728, 125404, 108320, 119704, 125390, 108304, 119692, 108296, 119686, 108292, 108290, 85824, 108464, 119772, 85792, 108440, 119758, 85776, 108428, 85768, 108422, 85764, 85936, 108508, 85912, 108494, 85900, 85894, 85980, 85966, 125088, 128088, 129582, 125072, 128076, 125064, 128070, 125060, 125058, 119200, 125144, 128110, 119184, 125132, 119176, 125126, 119172, 119170, 107424, 119256, 125166, 107408, 119244, 107400, 119238, 107396, 107394, 83872, 107480, 119278, 83856, 107468, 83848, 107462, 83844, 83842, 83928, 107502, 83916, 83910, 83950, 125008, 128044, 125000, 128038, 124996, 124994, 118992, 125036, 118984, 125030, 118980, 118978, 106960, 119020, 106952, 119014, 106948, 106946, 82896, 106988, 82888, 106982, 82884, 82882, 82924, 82918, 124968, 128022, 124964, 124962, 118888, 124982, 118884, 118882, 106728, 118902, 106724, 106722, 82408, 106742, 82404, 82402, 124948, 124946, 118836, 118834, 106612, 106610, 124224, 127664, 129372, 124192, 127640, 129358, 124176, 127628, 124168, 127622, 124164, 124162, 117568, 124336, 127708, 117536, 124312, 127694, 117520, 124300, 117512, 124294, 117508, 117506, 104256, 117680, 124380, 104224, 117656, 124366, 104208, 117644, 104200, 117638, 104196, 104194, 77632, 104368, 117724, 77600, 104344, 117710, 77584, 104332, 77576, 104326, 77572, 77744, 104412, 77720, 104398, 77708, 77702, 77788, 77774, 128672, 129880, 93168, 128656, 129868, 92664, 128648, 129862, 92412, 128644, 128642, 124064, 127576, 129326, 126368, 124048, 129902, 126352, 128716, 127558, 126344, 124036, 126340, 124034, 126338, 117152, 124120, 127598, 121760, 117136, 124108, 121744, 126412, 124102, 121736, 117124, 121732, 117122, 121730, 103328, 117208, 124142, 112544, 103312, 117196, 112528, 121804, 117190, 112520, 103300, 112516, 103298, 112514, 75680, 103384, 117230, 94112, 75664, 103372, 94096, 112588, 103366, 94088, 75652, 94084, 75650, 75736, 103406, 94168, 75724, 94156, 75718, 94150, 75758, 128592, 129836, 91640, 128584, 129830, 91388, 128580, 91262, 128578, 123984, 127532, 126160, 123976, 127526, 126152, 128614, 126148, 123970, 126146, 116944, 124012, 121296, 116936, 124006, 121288, 126182, 121284, 116930, 121282, 102864, 116972, 111568, 102856, 116966, 111560, 121318, 111556, 102850, 111554, 74704, 102892, 92112, 74696, 102886, 92104, 111590, 92100, 74690, 92098, 74732, 92140, 74726, 92134, 128552, 129814, 90876, 128548, 90750, 128546, 123944, 127510, 126056, 128566, 126052, 123938, 126050, 116840, 123958, 121064, 116836, 121060, 116834, 121058, 102632, 116854, 111080, 121078, 111076, 102626, 111074, 74216, 102646, 91112, 74212, 91108, 74210, 91106, 74230, 91126, 128532, 90494, 128530, 123924, 126004, 123922, 126002, 116788, 120948, 116786, 120946, 102516, 110836, 102514, 110834, 73972, 90612, 73970, 90610, 128522, 123914, 125978, 116762, 120890, 102458, 110714, 123552, 127320, 129198, 123536, 127308, 123528, 127302, 123524, 123522, 116128, 123608, 127342, 116112, 123596, 116104, 123590, 116100, 116098, 101280, 116184, 123630, 101264, 116172, 101256, 116166, 101252, 101250, 71584, 101336, 116206, 71568, 101324, 71560, 101318, 71556, 71554, 71640, 101358, 71628, 71622, 71662, 127824, 129452, 79352, 127816, 129446, 79100, 127812, 78974, 127810, 123472, 127276, 124624, 123464, 127270, 124616, 127846, 124612, 123458, 124610, 115920, 123500, 118224, 115912, 123494, 118216, 124646, 118212, 115906, 118210, 100816, 115948, 105424, 100808, 115942, 105416, 118246, 105412, 100802, 105410, 70608, 100844, 79824, 70600, 100838, 79816, 105446, 79812, 70594, 79810, 70636, 79852, 70630, 79846, 129960, 95728, 113404, 129956, 95480, 113278, 129954, 95356, 95294, 127784, 129430, 78588, 128872, 129974, 95996, 78462, 128868, 127778, 95870, 128866, 123432, 127254, 124520, 123428, 126696, 128886, 123426, 126692, 124514, 126690, 115816, 123446, 117992, 115812, 122344, 117988, 115810, 122340, 117986, 122338, 100584, 115830, 104936, 100580, 113640, 104932, 100578, 113636, 104930, 113634, 70120, 100598, 78824, 70116, 96232, 78820, 70114, 96228, 78818, 96226, 70134, 78838, 129940, 94968, 113022, 129938, 94844, 94782, 127764, 78206, 128820, 127762, 95102, 128818, 123412, 124468, 123410, 126580, 124466, 126578, 115764, 117876, 115762, 122100, 117874, 122098, 100468, 104692, 100466, 113140, 104690, 113138, 69876, 78324, 69874, 95220, 78322, 95218, 129930, 94588, 94526, 127754, 128794, 123402, 124442, 126522, 115738, 117818, 121978, 100410, 104570, 112890, 69754, 78074, 94714, 94398, 123216, 127148, 123208, 127142, 123204, 123202, 115408, 123244, 115400, 123238, 115396, 115394, 99792, 115436, 99784, 115430, 99780, 99778, 68560, 99820, 68552, 99814, 68548, 68546, 68588, 68582, 127400, 129238, 72444, 127396, 72318, 127394, 123176, 127126, 123752, 123172, 123748, 123170, 123746, 115304, 123190, 116456, 115300, 116452, 115298, 116450, 99560, 115318, 101864, 99556, 101860, 99554, 101858, 68072, 99574, 72680, 68068, 72676, 68066, 72674, 68086, 72694, 129492, 80632, 105854, 129490, 80508, 80446, 127380, 72062, 127924, 127378, 80766, 127922, 123156, 123700, 123154, 124788, 123698, 124786, 115252, 116340, 115250, 118516, 116338, 118514, 99444, 101620, 99442, 105972, 101618, 105970, 67828, 72180, 67826, 80884, 72178, 80882, 97008, 114044, 96888, 113982, 96828, 96798, 129482, 80252, 130010, 97148, 80190, 97086, 127370, 127898, 128954, 123146, 123674, 124730, 126842, 115226, 116282, 118394, 122618, 99386, 101498, 105722, 114170, 67706, 71930, 80378, 96632, 113854, 96572, 96542, 80062, 96702, 96444, 96414, 96350, 123048, 123044, 123042, 115048, 123062, 115044, 115042, 99048, 115062, 99044, 99042, 67048, 99062, 67044, 67042, 67062, 127188, 68990, 127186, 123028, 123316, 123026, 123314, 114996, 115572, 114994, 115570, 98932, 100084, 98930, 100082, 66804, 69108, 66802, 69106, 129258, 73084, 73022, 127178, 127450, 123018, 123290, 123834, 114970, 115514, 116602, 98874, 99962, 102138, 66682, 68858, 73210, 81272, 106174, 81212, 81182, 72894, 81342, 97648, 114364, 97592, 114334, 97564, 97550, 81084, 97724, 81054, 97694, 97464, 114270, 97436, 97422, 80990, 97502, 97372, 97358, 97326, 114868, 114866, 98676, 98674, 66292, 66290, 123098, 114842, 115130, 98618, 99194, 66170, 67322, 69310, 73404, 73374, 81592, 106334, 81564, 81550, 73310, 81630, 97968, 114524, 97944, 114510, 97932, 97926, 81500, 98012, 81486, 97998, 97880, 114478, 97868, 97862, 81454, 97902, 97836, 97830, 69470, 73564, 73550, 81752, 106414, 81740, 81734, 73518, 81774, 81708, 81702]), $a([109536, 120312, 86976, 109040, 120060, 86496, 108792, 119934, 86256, 108668, 86136, 129744, 89056, 110072, 129736, 88560, 109820, 129732, 88312, 109694, 129730, 88188, 128464, 129772, 89592, 128456, 129766, 89340, 128452, 89214, 128450, 125904, 128492, 125896, 128486, 125892, 125890, 120784, 125932, 120776, 125926, 120772, 120770, 110544, 120812, 110536, 120806, 110532, 84928, 108016, 119548, 84448, 107768, 119422, 84208, 107644, 84088, 107582, 84028, 129640, 85488, 108284, 129636, 85240, 108158, 129634, 85116, 85054, 128232, 129654, 85756, 128228, 85630, 128226, 125416, 128246, 125412, 125410, 119784, 125430, 119780, 119778, 108520, 119798, 108516, 108514, 83424, 107256, 119166, 83184, 107132, 83064, 107070, 83004, 82974, 129588, 83704, 107390, 129586, 83580, 83518, 128116, 83838, 128114, 125172, 125170, 119284, 119282, 107508, 107506, 82672, 106876, 82552, 106814, 82492, 82462, 129562, 82812, 82750, 128058, 125050, 119034, 82296, 106686, 82236, 82206, 82366, 82108, 82078, 76736, 103920, 117500, 76256, 103672, 117374, 76016, 103548, 75896, 103486, 75836, 129384, 77296, 104188, 129380, 77048, 104062, 129378, 76924, 76862, 127720, 129398, 77564, 127716, 77438, 127714, 124392, 127734, 124388, 124386, 117736, 124406, 117732, 117730, 104424, 117750, 104420, 104418, 112096, 121592, 126334, 92608, 111856, 121468, 92384, 111736, 121406, 92272, 111676, 92216, 111646, 92188, 75232, 103160, 117118, 93664, 74992, 103036, 93424, 112252, 102974, 93304, 74812, 93244, 74782, 93214, 129332, 75512, 103294, 129908, 129330, 93944, 75388, 129906, 93820, 75326, 93758, 127604, 75646, 128756, 127602, 94078, 128754, 124148, 126452, 124146, 126450, 117236, 121844, 117234, 121842, 103412, 103410, 91584, 111344, 121212, 91360, 111224, 121150, 91248, 111164, 91192, 111134, 91164, 91150, 74480, 102780, 91888, 74360, 102718, 91768, 111422, 91708, 74270, 91678, 129306, 74620, 129850, 92028, 74558, 91966, 127546, 128634, 124026, 126202, 116986, 121338, 102906, 90848, 110968, 121022, 90736, 110908, 90680, 110878, 90652, 90638, 74104, 102590, 91000, 74044, 90940, 74014, 90910, 74174, 91070, 90480, 110780, 90424, 110750, 90396, 90382, 73916, 90556, 73886, 90526, 90296, 110686, 90268, 90254, 73822, 90334, 90204, 90190, 71136, 101112, 116094, 70896, 100988, 70776, 100926, 70716, 70686, 129204, 71416, 101246, 129202, 71292, 71230, 127348, 71550, 127346, 123636, 123634, 116212, 116210, 101364, 101362, 79296, 105200, 118140, 79072, 105080, 118078, 78960, 105020, 78904, 104990, 78876, 78862, 70384, 100732, 79600, 70264, 100670, 79480, 105278, 79420, 70174, 79390, 129178, 70524, 129466, 79740, 70462, 79678, 127290, 127866, 123514, 124666, 115962, 118266, 100858, 113376, 122232, 126654, 95424, 113264, 122172, 95328, 113208, 122142, 95280, 113180, 95256, 113166, 95244, 78560, 104824, 117950, 95968, 78448, 104764, 95856, 113468, 104734, 95800, 78364, 95772, 78350, 95758, 70008, 100542, 78712, 69948, 96120, 78652, 69918, 96060, 78622, 96030, 70078, 78782, 96190, 94912, 113008, 122044, 94816, 112952, 122014, 94768, 112924, 94744, 112910, 94732, 94726, 78192, 104636, 95088, 78136, 104606, 95032, 113054, 95004, 78094, 94990, 69820, 78268, 69790, 95164, 78238, 95134, 94560, 112824, 121950, 94512, 112796, 94488, 112782, 94476, 94470, 78008, 104542, 94648, 77980, 94620, 77966, 94606, 69726, 78046, 94686, 94384, 112732, 94360, 112718, 94348, 94342, 77916, 94428, 77902, 94414, 94296, 112686, 94284, 94278, 77870, 94318, 94252, 94246, 68336, 99708, 68216, 99646, 68156, 68126, 68476, 68414, 127162, 123258, 115450, 99834, 72416, 101752, 116414, 72304, 101692, 72248, 101662, 72220, 72206, 67960, 99518, 72568, 67900, 72508, 67870, 72478, 68030, 72638, 80576, 105840, 118460, 80480, 105784, 118430, 80432, 105756, 80408, 105742, 80396, 80390, 72048, 101564, 80752, 71992, 101534, 80696, 71964, 80668, 71950, 80654, 67772, 72124, 67742, 80828, 72094, 80798, 114016, 122552, 126814, 96832, 113968, 122524, 96800, 113944, 122510, 96784, 113932, 96776, 113926, 96772, 80224, 105656, 118366, 97120, 80176, 105628, 97072, 114076, 105614, 97048, 80140, 97036, 80134, 97030, 71864, 101470, 80312, 71836, 97208, 80284, 71822, 97180, 80270, 97166, 67678, 71902, 80350, 97246, 96576, 113840, 122460, 96544, 113816, 122446, 96528, 113804, 96520, 113798, 96516, 96514, 80048, 105564, 96688, 80024, 105550, 96664, 113870, 96652, 80006, 96646, 71772, 80092, 71758, 96732, 80078, 96718, 96416, 113752, 122414, 96400, 113740, 96392, 113734, 96388, 96386, 79960, 105518, 96472, 79948, 96460, 79942, 96454, 71726, 79982, 96494, 96336, 113708, 96328, 113702, 96324, 96322, 79916, 96364, 79910, 96358, 96296, 113686, 96292, 96290, 79894, 96310, 66936, 99006, 66876, 66846, 67006, 68976, 100028, 68920, 99998, 68892, 68878, 66748, 69052, 66718, 69022, 73056, 102072, 116574, 73008, 102044, 72984, 102030, 72972, 72966, 68792, 99934, 73144, 68764, 73116, 68750, 73102, 66654, 68830, 73182, 81216, 106160, 118620, 81184, 106136, 118606, 81168, 106124, 81160, 106118, 81156, 81154, 72880, 101980, 81328, 72856, 101966, 81304, 106190, 81292, 72838, 81286, 68700, 72924, 68686, 81372, 72910, 81358, 114336, 122712, 126894, 114320, 122700, 114312, 122694, 114308, 114306, 81056, 106072, 118574, 97696, 81040, 106060, 97680, 114380, 106054, 97672, 81028, 97668, 81026, 97666, 72792, 101934, 81112, 72780, 97752, 81100, 72774, 97740, 81094, 97734, 68654, 72814, 81134, 97774, 114256, 122668, 114248, 122662, 114244, 114242, 80976, 106028, 97488, 80968, 106022, 97480, 114278, 97476, 80962, 97474, 72748, 81004, 72742, 97516, 80998, 97510, 114216, 122646, 114212, 114210, 80936, 106006, 97384, 80932, 97380, 80930, 97378, 72726, 80950, 97398, 114196, 114194, 80916, 97332, 80914, 97330, 66236, 66206, 67256, 99166, 67228, 67214, 66142, 67294, 69296, 100188, 69272, 100174, 69260, 69254, 67164, 69340, 67150, 69326, 73376, 102232, 116654, 73360, 102220, 73352, 102214, 73348, 73346, 69208, 100142, 73432, 102254, 73420, 69190, 73414, 67118, 69230, 73454, 106320, 118700, 106312, 118694, 106308, 106306, 73296, 102188, 81616, 106348, 102182, 81608, 73284, 81604, 73282, 81602, 69164, 73324, 69158, 81644, 73318, 81638, 122792, 126934, 122788, 122786, 106280, 118678, 114536, 106276, 114532, 106274, 114530, 73256, 102166, 81512, 73252, 98024, 81508, 73250, 98020, 81506, 98018, 69142, 73270, 81526, 98038, 122772, 122770, 106260, 114484, 106258, 114482, 73236, 81460, 73234, 97908, 81458, 97906, 122762, 106250, 114458, 73226, 81434, 97850, 66396, 66382, 67416, 99246, 67404, 67398, 66350, 67438, 69456, 100268, 69448, 100262, 69444, 69442, 67372, 69484, 67366, 69478, 102312, 116694, 102308, 102306, 69416, 100246, 73576, 102326, 73572, 69410, 73570, 67350, 69430, 73590, 118740, 118738, 102292, 106420, 102290, 106418, 69396, 73524, 69394, 81780, 73522, 81778, 118730, 102282, 106394, 69386, 73498, 81722, 66476, 66470, 67496, 99286, 67492, 67490, 66454, 67510, 100308, 100306, 67476, 69556, 67474, 69554, 116714])]); /*14876*/
		$1.raps = $a([$a([802, 930, 946, 818, 882, 890, 826, 954, 922, 986, 970, 906, 778, 794, 786, 914, 978, 982, 980, 916, 948, 932, 934, 942, 940, 936, 808, 812, 814, 806, 822, 950, 918, 790, 788, 820, 884, 868, 870, 878, 876, 872, 840, 856, 860, 862, 846, 844, 836, 838, 834, 866]), $a([718, 590, 622, 558, 550, 566, 534, 530, 538, 570, 562, 546, 610, 626, 634, 762, 754, 758, 630, 628, 612, 614, 582, 578, 706, 738, 742, 740, 748, 620, 556, 552, 616, 744, 712, 716, 708, 710, 646, 654, 652, 668, 664, 696, 688, 656, 720, 592, 600, 604, 732, 734])]); /*14891*/
		$1.cwtobits = function() {
			var _FI = $get($1.clusters, $k[--$j]); /*14895*/
			$1.v = $get(_FI, $k[--$j]); /*14895*/
			$k[$j++] = Infinity; /*14896*/
			for (var _FL = 0, _FM = 17; _FL < _FM; _FL++) { /*14896*/
				$k[$j++] = 0; /*14896*/
			} /*14896*/
			var _FP = $cvrs($s(17), $1.v, 2); /*14896*/
			for (var _FQ = 0, _FR = _FP.length; _FQ < _FR; _FQ++) { /*14896*/
				$k[$j++] = $get(_FP, _FQ) - 48; /*14896*/
			} /*14896*/
			var _FT = $a(); /*14896*/
			$k[$j++] = $geti(_FT, _FT.length - 17, 17); /*14897*/
		}; /*14898*/
		$1.raptobits = function() {
			var _FX = $get($1.raps, $k[--$j]); /*14902*/
			$1.v = $get(_FX, $k[--$j]); /*14902*/
			$k[$j++] = Infinity; /*14903*/
			for (var _Fa = 0, _Fb = 10; _Fa < _Fb; _Fa++) { /*14903*/
				$k[$j++] = 0; /*14903*/
			} /*14903*/
			var _Fe = $cvrs($s(10), $1.v, 2); /*14903*/
			for (var _Ff = 0, _Fg = _Fe.length; _Ff < _Fg; _Ff++) { /*14903*/
				$k[$j++] = $get(_Fe, _Ff) - 48; /*14903*/
			} /*14903*/
			var _Fi = $a(); /*14903*/
			$k[$j++] = $geti(_Fi, _Fi.length - 10, 10); /*14904*/
		}; /*14905*/
		$1.rwid = $get($a([38, 55, 82, 99]), $1.c - 1); /*14908*/
		if (($1.c == 3) && $1.cca) { /*14909*/
			$1.rwid = 72; /*14909*/
		} /*14909*/
		$1.pixs = $a($1.rwid * $1.r); /*14910*/
		for (var _Fu = 0, _Ft = $1.r - 1; _Fu <= _Ft; _Fu += 1) { /*14948*/
			$1.i = _Fu; /*14913*/
			$1.clst = (($1.i + $1.rapl) - 1) % 3; /*14914*/
			$k[$j++] = $1.pixs; /*14946*/
			$k[$j++] = $1.rwid * $1.i; /*14946*/
			$k[$j++] = Infinity; /*14946*/
			if ($1.c == 1) { /*14920*/
				$k[$j++] = (($1.i + $1.rapl) - 1) % 52; /*14917*/
				$k[$j++] = 0; /*14917*/
				$1.raptobits(); /*14917*/
				$aload($k[--$j]); /*14917*/
				$k[$j++] = $get($1.cws, $1.i); /*14918*/
				$k[$j++] = $1.clst; /*14918*/
				$1.cwtobits(); /*14918*/
				$aload($k[--$j]); /*14918*/
				$k[$j++] = (($1.i + $1.rapr) - 1) % 52; /*14919*/
				$k[$j++] = 0; /*14919*/
				$1.raptobits(); /*14919*/
				$aload($k[--$j]); /*14919*/
			} /*14919*/
			if ($1.c == 2) { /*14926*/
				$k[$j++] = (($1.i + $1.rapl) - 1) % 52; /*14922*/
				$k[$j++] = 0; /*14922*/
				$1.raptobits(); /*14922*/
				$aload($k[--$j]); /*14922*/
				$k[$j++] = $get($1.cws, $1.i * 2); /*14923*/
				$k[$j++] = $1.clst; /*14923*/
				$1.cwtobits(); /*14923*/
				$aload($k[--$j]); /*14923*/
				$k[$j++] = $get($1.cws, ($1.i * 2) + 1); /*14924*/
				$k[$j++] = $1.clst; /*14924*/
				$1.cwtobits(); /*14924*/
				$aload($k[--$j]); /*14924*/
				$k[$j++] = (($1.i + $1.rapr) - 1) % 52; /*14925*/
				$k[$j++] = 0; /*14925*/
				$1.raptobits(); /*14925*/
				$aload($k[--$j]); /*14925*/
			} /*14925*/
			if ($1.c == 3) { /*14936*/
				if (!$1.cca) { /*14930*/
					$k[$j++] = (($1.i + $1.rapl) - 1) % 52; /*14929*/
					$k[$j++] = 0; /*14929*/
					$1.raptobits(); /*14929*/
					$aload($k[--$j]); /*14929*/
				} /*14929*/
				$k[$j++] = $get($1.cws, $1.i * 3); /*14931*/
				$k[$j++] = $1.clst; /*14931*/
				$1.cwtobits(); /*14931*/
				$aload($k[--$j]); /*14931*/
				$k[$j++] = (($1.i + $1.rapc) - 1) % 52; /*14932*/
				$k[$j++] = 1; /*14932*/
				$1.raptobits(); /*14932*/
				$aload($k[--$j]); /*14932*/
				$k[$j++] = $get($1.cws, ($1.i * 3) + 1); /*14933*/
				$k[$j++] = $1.clst; /*14933*/
				$1.cwtobits(); /*14933*/
				$aload($k[--$j]); /*14933*/
				$k[$j++] = $get($1.cws, ($1.i * 3) + 2); /*14934*/
				$k[$j++] = $1.clst; /*14934*/
				$1.cwtobits(); /*14934*/
				$aload($k[--$j]); /*14934*/
				$k[$j++] = (($1.i + $1.rapr) - 1) % 52; /*14935*/
				$k[$j++] = 0; /*14935*/
				$1.raptobits(); /*14935*/
				$aload($k[--$j]); /*14935*/
			} /*14935*/
			if ($1.c == 4) { /*14945*/
				$k[$j++] = (($1.i + $1.rapl) - 1) % 52; /*14938*/
				$k[$j++] = 0; /*14938*/
				$1.raptobits(); /*14938*/
				$aload($k[--$j]); /*14938*/
				$k[$j++] = $get($1.cws, $1.i * 4); /*14939*/
				$k[$j++] = $1.clst; /*14939*/
				$1.cwtobits(); /*14939*/
				$aload($k[--$j]); /*14939*/
				$k[$j++] = $get($1.cws, ($1.i * 4) + 1); /*14940*/
				$k[$j++] = $1.clst; /*14940*/
				$1.cwtobits(); /*14940*/
				$aload($k[--$j]); /*14940*/
				$k[$j++] = (($1.i + $1.rapc) - 1) % 52; /*14941*/
				$k[$j++] = 1; /*14941*/
				$1.raptobits(); /*14941*/
				$aload($k[--$j]); /*14941*/
				$k[$j++] = $get($1.cws, ($1.i * 4) + 2); /*14942*/
				$k[$j++] = $1.clst; /*14942*/
				$1.cwtobits(); /*14942*/
				$aload($k[--$j]); /*14942*/
				$k[$j++] = $get($1.cws, ($1.i * 4) + 3); /*14943*/
				$k[$j++] = $1.clst; /*14943*/
				$1.cwtobits(); /*14943*/
				$aload($k[--$j]); /*14943*/
				$k[$j++] = (($1.i + $1.rapr) - 1) % 52; /*14944*/
				$k[$j++] = 0; /*14944*/
				$1.raptobits(); /*14944*/
				$aload($k[--$j]); /*14944*/
			} /*14944*/
			$k[$j++] = 1; /*14946*/
			var _HN = $a(); /*14946*/
			var _HO = $k[--$j]; /*14947*/
			$puti($k[--$j], _HO, _HN); /*14947*/
		} /*14947*/
		var _HX = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.rwid,
			pixy: $1.r,
			height: ($1.r / 72) * $1.rowmult,
			width: $1.rwid / 72,
			opt: $1.options
		}; /*14958*/
		$k[$j++] = _HX; /*14961*/
		if (!$1.dontdraw) { /*14961*/
			$0.renmatrix(); /*14961*/
		} /*14961*/
	};
	$0.datamatrix = function() {
		var $1 = {}; /*14988*/
		$1.options = $k[--$j]; /*14990*/
		$1.barcode = $k[--$j]; /*14991*/
		$1.dontdraw = false; /*14993*/
		$1.columns = 0; /*14994*/
		$1.rows = 0; /*14995*/
		$1.format = "square"; /*14996*/
		$1.version = "unset"; /*14997*/
		$1.parse = false; /*14998*/
		$1.parsefnc = false; /*14999*/
		$1.dmre = false; /*15000*/
		$forall($1.options, function() { /*15011*/
			var _3 = $k[--$j]; /*15011*/
			$1[$k[--$j]] = _3; /*15011*/
		}); /*15011*/
		if ($ne($1.version, "unset")) { /*15017*/
			$search($1.version, "x"); /*15014*/
			$j--; /*15015*/
			$1.rows = $k[--$j]; /*15015*/
			$j--; /*15016*/
			$1.columns = $k[--$j]; /*15016*/
		} /*15016*/
		$1.columns = ~~$z($1.columns); /*15019*/
		$1.rows = ~~$z($1.rows); /*15020*/
		$1.mac05comp = false; /*15044*/
		$1.mac06comp = false; /*15045*/
		if ($1.barcode.length >= 9) { /*15054*/
			var _D = $geti($1.barcode, 0, 7); /*15047*/
			if ((($eq(_D, "[)>03605035")) || ($eq(_D, "[)>03606035"))) && $eq($geti($1.barcode, $1.barcode.length - 2, 2), "036004")) { /*15053*/
				if ($get($1.barcode, 5) == 53) { /*15051*/
					$k[$j++] = "mac05comp"; /*15051*/
				} else { /*15051*/
					$k[$j++] = "mac06comp"; /*15051*/
				} /*15051*/
				$1[$k[--$j]] = true; /*15051*/
				$1.barcode = $geti($1.barcode, 7, $1.barcode.length - 9); /*15052*/
			} /*15052*/
		} /*15052*/
		$1.barlen = $1.barcode.length; /*15056*/
		$1.fnc1 = -1; /*15059*/
		$1.prog = -2; /*15059*/
		$1.m05 = -3; /*15059*/
		$1.m06 = -4; /*15059*/
		var _S = {
			FNC1: $1.fnc1,
			PROG: $1.prog,
			MAC5: $1.m05,
			MAC6: $1.m06
		}; /*15064*/
		$1.fncvals = _S; /*15065*/
		$1.msg = $a($1.barlen); /*15066*/
		$1.i = 0; /*15067*/
		$1.j = 0; /*15067*/
		for (;;) { /*15081*/
			if ($1.i == $1.barlen) { /*15068*/
				break; /*15068*/
			} /*15068*/
			$1.char = $get($1.barcode, $1.i); /*15069*/
			if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*15077*/
				if ($get($1.barcode, $1.i + 1) != 94) { /*15075*/
					$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*15072*/
					$1.i = $1.i + 4; /*15073*/
				} else { /*15075*/
					$1.i = $1.i + 1; /*15075*/
				} /*15075*/
			} /*15075*/
			$put($1.msg, $1.j, $1.char); /*15078*/
			$1.i = $1.i + 1; /*15079*/
			$1.j = $1.j + 1; /*15080*/
		} /*15080*/
		$1.msg = $geti($1.msg, 0, $1.j); /*15082*/
		if ($1.mac05comp) { /*15085*/
			$k[$j++] = Infinity; /*15085*/
			$k[$j++] = $1.m05; /*15085*/
			$aload($1.msg); /*15085*/
			$1.msg = $a(); /*15085*/
		} /*15085*/
		if ($1.mac06comp) { /*15086*/
			$k[$j++] = Infinity; /*15086*/
			$k[$j++] = $1.m06; /*15086*/
			$aload($1.msg); /*15086*/
			$1.msg = $a(); /*15086*/
		} /*15086*/
		$1.msglen = $1.msg.length; /*15088*/
		$k[$j++] = Infinity; /*15137*/
		$k[$j++] = $a([10, 10, 1, 1, 5, 1]); /*15121*/
		$k[$j++] = $a([12, 12, 1, 1, 7, 1]); /*15121*/
		$k[$j++] = $a([14, 14, 1, 1, 10, 1]); /*15121*/
		$k[$j++] = $a([16, 16, 1, 1, 12, 1]); /*15121*/
		$k[$j++] = $a([18, 18, 1, 1, 14, 1]); /*15121*/
		$k[$j++] = $a([20, 20, 1, 1, 18, 1]); /*15121*/
		$k[$j++] = $a([22, 22, 1, 1, 20, 1]); /*15121*/
		$k[$j++] = $a([24, 24, 1, 1, 24, 1]); /*15121*/
		$k[$j++] = $a([26, 26, 1, 1, 28, 1]); /*15121*/
		$k[$j++] = $a([32, 32, 2, 2, 36, 1]); /*15121*/
		$k[$j++] = $a([36, 36, 2, 2, 42, 1]); /*15121*/
		$k[$j++] = $a([40, 40, 2, 2, 48, 1]); /*15121*/
		$k[$j++] = $a([44, 44, 2, 2, 56, 1]); /*15121*/
		$k[$j++] = $a([48, 48, 2, 2, 68, 1]); /*15121*/
		$k[$j++] = $a([52, 52, 2, 2, 84, 2]); /*15121*/
		$k[$j++] = $a([64, 64, 4, 4, 112, 2]); /*15121*/
		$k[$j++] = $a([72, 72, 4, 4, 144, 4]); /*15121*/
		$k[$j++] = $a([80, 80, 4, 4, 192, 4]); /*15121*/
		$k[$j++] = $a([88, 88, 4, 4, 224, 4]); /*15121*/
		$k[$j++] = $a([96, 96, 4, 4, 272, 4]); /*15121*/
		$k[$j++] = $a([104, 104, 4, 4, 336, 6]); /*15121*/
		$k[$j++] = $a([120, 120, 6, 6, 408, 6]); /*15121*/
		$k[$j++] = $a([132, 132, 6, 6, 496, 8]); /*15121*/
		$k[$j++] = $a([144, 144, 6, 6, 620, 10]); /*15121*/
		$k[$j++] = $a([8, 18, 1, 1, 7, 1]); /*15121*/
		$k[$j++] = $a([8, 32, 1, 2, 11, 1]); /*15121*/
		if ($1.dmre) { /*15121*/
			$k[$j++] = $a([8, 48, 1, 2, 15, 1]); /*15121*/
		} /*15121*/
		if ($1.dmre) { /*15122*/
			$k[$j++] = $a([8, 64, 1, 4, 18, 1]); /*15122*/
		} /*15122*/
		$k[$j++] = $a([12, 26, 1, 1, 14, 1]); /*15125*/
		$k[$j++] = $a([12, 36, 1, 2, 18, 1]); /*15125*/
		if ($1.dmre) { /*15125*/
			$k[$j++] = $a([12, 64, 1, 4, 27, 1]); /*15125*/
		} /*15125*/
		$k[$j++] = $a([16, 36, 1, 2, 24, 1]); /*15128*/
		$k[$j++] = $a([16, 48, 1, 2, 28, 1]); /*15128*/
		if ($1.dmre) { /*15128*/
			$k[$j++] = $a([16, 64, 1, 4, 36, 1]); /*15128*/
		} /*15128*/
		if ($1.dmre) { /*15129*/
			$k[$j++] = $a([24, 32, 1, 2, 28, 1]); /*15129*/
		} /*15129*/
		if ($1.dmre) { /*15130*/
			$k[$j++] = $a([24, 36, 1, 2, 33, 1]); /*15130*/
		} /*15130*/
		if ($1.dmre) { /*15131*/
			$k[$j++] = $a([24, 48, 1, 2, 41, 1]); /*15131*/
		} /*15131*/
		if ($1.dmre) { /*15132*/
			$k[$j++] = $a([24, 64, 1, 4, 46, 1]); /*15132*/
		} /*15132*/
		if ($1.dmre) { /*15133*/
			$k[$j++] = $a([26, 32, 1, 2, 32, 1]); /*15133*/
		} /*15133*/
		if ($1.dmre) { /*15134*/
			$k[$j++] = $a([26, 40, 1, 2, 38, 1]); /*15134*/
		} /*15134*/
		if ($1.dmre) { /*15135*/
			$k[$j++] = $a([26, 48, 1, 2, 42, 1]); /*15135*/
		} /*15135*/
		if ($1.dmre) { /*15136*/
			$k[$j++] = $a([26, 64, 1, 4, 50, 1]); /*15136*/
		} /*15136*/
		$1.metrics = $a(); /*15137*/
		$1.urows = $1.rows; /*15140*/
		$1.ucols = $1.columns; /*15141*/
		$1.fullcws = $a([]); /*15142*/
		var _21 = $1.metrics; /*15143*/
		for (var _22 = 0, _23 = _21.length; _22 < _23; _22++) { /*15160*/
			$1.m = $get(_21, _22); /*15144*/
			$1.rows = $get($1.m, 0); /*15145*/
			$1.cols = $get($1.m, 1); /*15146*/
			$1.regh = $get($1.m, 2); /*15147*/
			$1.regv = $get($1.m, 3); /*15148*/
			$1.rscw = $get($1.m, 4); /*15149*/
			$1.rsbl = $get($1.m, 5); /*15150*/
			$1.mrows = $1.rows - (2 * $1.regh); /*15151*/
			$1.mcols = $1.cols - (2 * $1.regv); /*15152*/
			$1.ncws = (~~(($1.mrows * $1.mcols) / 8)) - $1.rscw; /*15153*/
			$1.okay = true; /*15154*/
			if (($1.urows != 0) && ($1.urows != $1.rows)) { /*15155*/
				$1.okay = false; /*15155*/
			} /*15155*/
			if (($1.ucols != 0) && ($1.ucols != $1.cols)) { /*15156*/
				$1.okay = false; /*15156*/
			} /*15156*/
			if ($eq($1.format, "square") && $ne($1.rows, $1.cols)) { /*15157*/
				$1.okay = false; /*15157*/
			} /*15157*/
			if ($eq($1.format, "rectangle") && $eq($1.rows, $1.cols)) { /*15158*/
				$1.okay = false; /*15158*/
			} /*15158*/
			if ($1.okay) { /*15159*/
				$k[$j++] = Infinity; /*15159*/
				$aload($1.fullcws); /*15159*/
				$k[$j++] = $1.ncws; /*15159*/
				$1.fullcws = $a(); /*15159*/
			} /*15159*/
		} /*15159*/
		$k[$j++] = Infinity; /*15161*/
		for (var _2e = 0, _2f = 1558; _2e < _2f; _2e++) { /*15161*/
			$k[$j++] = 10000; /*15161*/
		} /*15161*/
		$1.numremcws = $a(); /*15161*/
		var _2h = $1.fullcws; /*15162*/
		for (var _2i = 0, _2j = _2h.length; _2i < _2j; _2i++) { /*15162*/
			$put($1.numremcws, $get(_2h, _2i) - 1, 1); /*15162*/
		} /*15162*/
		for (var _2m = 1556; _2m >= 0; _2m -= 1) { /*15168*/
			$1.i = _2m; /*15164*/
			if ($get($1.numremcws, $1.i) != 1) { /*15167*/
				$put($1.numremcws, $1.i, $get($1.numremcws, $1.i + 1) + 1); /*15166*/
			} /*15166*/
		} /*15166*/
		$1.lC = -5; /*15171*/
		$1.lB = -6; /*15171*/
		$1.lX = -7; /*15171*/
		$1.lT = -8; /*15171*/
		$1.lE = -9; /*15171*/
		$1.unl = -10; /*15171*/
		$1.sapp = -11; /*15172*/
		$1.usft = -12; /*15172*/
		$1.sft1 = -13; /*15172*/
		$1.sft2 = -14; /*15172*/
		$1.sft3 = -15; /*15172*/
		$1.eci = -16; /*15172*/
		$1.pad = -17; /*15172*/
		$1.unlcw = 254; /*15173*/
		$k[$j++] = "Avals"; /*15182*/
		$k[$j++] = Infinity; /*15182*/
		for (var _2v = 0; _2v <= 128; _2v += 1) { /*15176*/
			$k[$j++] = _2v; /*15176*/
			$k[$j++] = _2v + 1; /*15176*/
		} /*15176*/
		$k[$j++] = $1.pad; /*15181*/
		$k[$j++] = 129; /*15181*/
		for (var _2x = 0; _2x <= 99; _2x += 1) { /*15181*/
			var _2z = $cvrs($s(2), _2x, 10); /*15179*/
			var _31 = $strcpy($s(2), "00"); /*15179*/
			$puti(_31, 2 - _2z.length, _2z); /*15179*/
			$k[$j++] = _31; /*15180*/
			$k[$j++] = _2x + 130; /*15180*/
		} /*15180*/
		var _3E = $a([$1.lC, $1.lB, $1.fnc1, $1.sapp, $1.prog, $1.usft, $1.m05, $1.m06, $1.lX, $1.lT, $1.lE, $1.eci]); /*15182*/
		$k[$j++] = 229; /*15182*/
		for (var _3F = 0, _3G = _3E.length; _3F < _3G; _3F++) { /*15182*/
			var _3J = $k[--$j] + 1; /*15182*/
			$k[$j++] = $get(_3E, _3F); /*15182*/
			$k[$j++] = _3J; /*15182*/
			$k[$j++] = _3J; /*15182*/
		} /*15182*/
		$j--; /*15182*/
		var _3K = $d(); /*15182*/
		$1[$k[--$j]] = _3K; /*15183*/
		$k[$j++] = "Avals"; /*15185*/
		$k[$j++] = Infinity; /*15185*/
		$forall($1.Avals, function() { /*15185*/
			$k[$j++] = Infinity; /*15185*/
			var _3N = $k[--$j]; /*15185*/
			var _3O = $k[--$j]; /*15185*/
			$k[$j++] = _3N; /*15185*/
			$k[$j++] = _3O; /*15185*/
			var _3P = $a(); /*15185*/
			$k[$j++] = _3P; /*15185*/
		}); /*15185*/
		var _3Q = $d(); /*15185*/
		$1[$k[--$j]] = _3Q; /*15186*/
		$k[$j++] = "CNvals"; /*15194*/
		$k[$j++] = Infinity; /*15194*/
		$k[$j++] = $1.sft1; /*15193*/
		$k[$j++] = 0; /*15193*/
		$k[$j++] = $1.sft2; /*15193*/
		$k[$j++] = 1; /*15193*/
		$k[$j++] = $1.sft3; /*15193*/
		$k[$j++] = 2; /*15193*/
		$k[$j++] = 32; /*15193*/
		$k[$j++] = 3; /*15193*/
		for (var _3V = 48; _3V <= 57; _3V += 1) { /*15193*/
			$k[$j++] = _3V; /*15193*/
			$k[$j++] = _3V - 44; /*15193*/
		} /*15193*/
		for (var _3W = 65; _3W <= 90; _3W += 1) { /*15194*/
			$k[$j++] = _3W; /*15194*/
			$k[$j++] = _3W - 51; /*15194*/
		} /*15194*/
		var _3X = $d(); /*15194*/
		$1[$k[--$j]] = _3X; /*15195*/
		$k[$j++] = "C1vals"; /*15196*/
		$k[$j++] = Infinity; /*15196*/
		for (var _3Z = 0; _3Z <= 31; _3Z += 1) { /*15196*/
			$k[$j++] = _3Z; /*15196*/
			$k[$j++] = _3Z; /*15196*/
		} /*15196*/
		var _3a = $d(); /*15196*/
		$1[$k[--$j]] = _3a; /*15196*/
		$k[$j++] = "C2vals"; /*15202*/
		$k[$j++] = Infinity; /*15202*/
		for (var _3c = 33; _3c <= 47; _3c += 1) { /*15198*/
			$k[$j++] = _3c; /*15198*/
			$k[$j++] = _3c - 33; /*15198*/
		} /*15198*/
		for (var _3d = 58; _3d <= 64; _3d += 1) { /*15199*/
			$k[$j++] = _3d; /*15199*/
			$k[$j++] = _3d - 43; /*15199*/
		} /*15199*/
		for (var _3e = 91; _3e <= 95; _3e += 1) { /*15200*/
			$k[$j++] = _3e; /*15200*/
			$k[$j++] = _3e - 69; /*15200*/
		} /*15200*/
		$k[$j++] = $1.fnc1; /*15202*/
		$k[$j++] = 27; /*15202*/
		$k[$j++] = $1.usft; /*15202*/
		$k[$j++] = 30; /*15202*/
		var _3h = $d(); /*15202*/
		$1[$k[--$j]] = _3h; /*15203*/
		$k[$j++] = "C3vals"; /*15204*/
		$k[$j++] = Infinity; /*15204*/
		for (var _3j = 96; _3j <= 127; _3j += 1) { /*15204*/
			$k[$j++] = _3j; /*15204*/
			$k[$j++] = _3j - 96; /*15204*/
		} /*15204*/
		var _3k = $d(); /*15204*/
		$1[$k[--$j]] = _3k; /*15204*/
		$k[$j++] = "Cvals"; /*15209*/
		$k[$j++] = Infinity; /*15209*/
		$forall($1.CNvals, function() { /*15206*/
			$k[$j++] = Infinity; /*15206*/
			var _3n = $k[--$j]; /*15206*/
			var _3o = $k[--$j]; /*15206*/
			$k[$j++] = _3n; /*15206*/
			$k[$j++] = _3o; /*15206*/
			var _3p = $a(); /*15206*/
			$k[$j++] = _3p; /*15206*/
		}); /*15206*/
		$forall($1.C1vals, function() { /*15207*/
			$k[$j++] = Infinity; /*15207*/
			var _3r = $k[--$j]; /*15207*/
			var _3s = $k[--$j]; /*15207*/
			$k[$j++] = _3r; /*15207*/
			$k[$j++] = $get($1.CNvals, $1.sft1); /*15207*/
			$k[$j++] = _3s; /*15207*/
			var _3w = $a(); /*15207*/
			$k[$j++] = _3w; /*15207*/
		}); /*15207*/
		$forall($1.C2vals, function() { /*15208*/
			$k[$j++] = Infinity; /*15208*/
			var _3y = $k[--$j]; /*15208*/
			var _3z = $k[--$j]; /*15208*/
			$k[$j++] = _3y; /*15208*/
			$k[$j++] = $get($1.CNvals, $1.sft2); /*15208*/
			$k[$j++] = _3z; /*15208*/
			var _43 = $a(); /*15208*/
			$k[$j++] = _43; /*15208*/
		}); /*15208*/
		$forall($1.C3vals, function() { /*15209*/
			$k[$j++] = Infinity; /*15209*/
			var _45 = $k[--$j]; /*15209*/
			var _46 = $k[--$j]; /*15209*/
			$k[$j++] = _45; /*15209*/
			$k[$j++] = $get($1.CNvals, $1.sft3); /*15209*/
			$k[$j++] = _46; /*15209*/
			var _4A = $a(); /*15209*/
			$k[$j++] = _4A; /*15209*/
		}); /*15209*/
		var _4B = $d(); /*15209*/
		$1[$k[--$j]] = _4B; /*15210*/
		$k[$j++] = "TNvals"; /*15218*/
		$k[$j++] = Infinity; /*15218*/
		$k[$j++] = $1.sft1; /*15217*/
		$k[$j++] = 0; /*15217*/
		$k[$j++] = $1.sft2; /*15217*/
		$k[$j++] = 1; /*15217*/
		$k[$j++] = $1.sft3; /*15217*/
		$k[$j++] = 2; /*15217*/
		$k[$j++] = 32; /*15217*/
		$k[$j++] = 3; /*15217*/
		for (var _4G = 48; _4G <= 57; _4G += 1) { /*15217*/
			$k[$j++] = _4G; /*15217*/
			$k[$j++] = _4G - 44; /*15217*/
		} /*15217*/
		for (var _4H = 97; _4H <= 122; _4H += 1) { /*15218*/
			$k[$j++] = _4H; /*15218*/
			$k[$j++] = _4H - 83; /*15218*/
		} /*15218*/
		var _4I = $d(); /*15218*/
		$1[$k[--$j]] = _4I; /*15219*/
		$k[$j++] = "T1vals"; /*15220*/
		$k[$j++] = Infinity; /*15220*/
		for (var _4K = 0; _4K <= 31; _4K += 1) { /*15220*/
			$k[$j++] = _4K; /*15220*/
			$k[$j++] = _4K; /*15220*/
		} /*15220*/
		var _4L = $d(); /*15220*/
		$1[$k[--$j]] = _4L; /*15220*/
		$k[$j++] = "T2vals"; /*15226*/
		$k[$j++] = Infinity; /*15226*/
		for (var _4N = 33; _4N <= 47; _4N += 1) { /*15222*/
			$k[$j++] = _4N; /*15222*/
			$k[$j++] = _4N - 33; /*15222*/
		} /*15222*/
		for (var _4O = 58; _4O <= 64; _4O += 1) { /*15223*/
			$k[$j++] = _4O; /*15223*/
			$k[$j++] = _4O - 43; /*15223*/
		} /*15223*/
		for (var _4P = 91; _4P <= 95; _4P += 1) { /*15224*/
			$k[$j++] = _4P; /*15224*/
			$k[$j++] = _4P - 69; /*15224*/
		} /*15224*/
		$k[$j++] = $1.fnc1; /*15226*/
		$k[$j++] = 27; /*15226*/
		$k[$j++] = $1.usft; /*15226*/
		$k[$j++] = 30; /*15226*/
		var _4S = $d(); /*15226*/
		$1[$k[--$j]] = _4S; /*15227*/
		$k[$j++] = "T3vals"; /*15231*/
		$k[$j++] = Infinity; /*15231*/
		$k[$j++] = 96; /*15230*/
		$k[$j++] = 0; /*15230*/
		for (var _4U = 65; _4U <= 90; _4U += 1) { /*15230*/
			$k[$j++] = _4U; /*15230*/
			$k[$j++] = _4U - 64; /*15230*/
		} /*15230*/
		for (var _4V = 123; _4V <= 127; _4V += 1) { /*15231*/
			$k[$j++] = _4V; /*15231*/
			$k[$j++] = _4V - 96; /*15231*/
		} /*15231*/
		var _4W = $d(); /*15231*/
		$1[$k[--$j]] = _4W; /*15232*/
		$k[$j++] = "Tvals"; /*15237*/
		$k[$j++] = Infinity; /*15237*/
		$forall($1.TNvals, function() { /*15234*/
			$k[$j++] = Infinity; /*15234*/
			var _4Z = $k[--$j]; /*15234*/
			var _4a = $k[--$j]; /*15234*/
			$k[$j++] = _4Z; /*15234*/
			$k[$j++] = _4a; /*15234*/
			var _4b = $a(); /*15234*/
			$k[$j++] = _4b; /*15234*/
		}); /*15234*/
		$forall($1.T1vals, function() { /*15235*/
			$k[$j++] = Infinity; /*15235*/
			var _4d = $k[--$j]; /*15235*/
			var _4e = $k[--$j]; /*15235*/
			$k[$j++] = _4d; /*15235*/
			$k[$j++] = $get($1.TNvals, $1.sft1); /*15235*/
			$k[$j++] = _4e; /*15235*/
			var _4i = $a(); /*15235*/
			$k[$j++] = _4i; /*15235*/
		}); /*15235*/
		$forall($1.T2vals, function() { /*15236*/
			$k[$j++] = Infinity; /*15236*/
			var _4k = $k[--$j]; /*15236*/
			var _4l = $k[--$j]; /*15236*/
			$k[$j++] = _4k; /*15236*/
			$k[$j++] = $get($1.TNvals, $1.sft2); /*15236*/
			$k[$j++] = _4l; /*15236*/
			var _4p = $a(); /*15236*/
			$k[$j++] = _4p; /*15236*/
		}); /*15236*/
		$forall($1.T3vals, function() { /*15237*/
			$k[$j++] = Infinity; /*15237*/
			var _4r = $k[--$j]; /*15237*/
			var _4s = $k[--$j]; /*15237*/
			$k[$j++] = _4r; /*15237*/
			$k[$j++] = $get($1.TNvals, $1.sft3); /*15237*/
			$k[$j++] = _4s; /*15237*/
			var _4w = $a(); /*15237*/
			$k[$j++] = _4w; /*15237*/
		}); /*15237*/
		var _4x = $d(); /*15237*/
		$1[$k[--$j]] = _4x; /*15238*/
		for (var _4z = 128; _4z <= 255; _4z += 1) { /*15246*/
			$1.i = _4z; /*15242*/
			$k[$j++] = $1.Avals; /*15243*/
			$k[$j++] = $1.i; /*15243*/
			$k[$j++] = Infinity; /*15243*/
			$aload($get($1.Avals, $1.usft)); /*15243*/
			$aload($get($1.Avals, $1.i - 128)); /*15243*/
			var _58 = $a(); /*15243*/
			var _59 = $k[--$j]; /*15243*/
			$put($k[--$j], _59, _58); /*15243*/
			$k[$j++] = $1.Cvals; /*15244*/
			$k[$j++] = $1.i; /*15244*/
			$k[$j++] = Infinity; /*15244*/
			$aload($get($1.Cvals, $1.usft)); /*15244*/
			$aload($get($1.Cvals, $1.i - 128)); /*15244*/
			var _5J = $a(); /*15244*/
			var _5K = $k[--$j]; /*15244*/
			$put($k[--$j], _5K, _5J); /*15244*/
			$k[$j++] = $1.Tvals; /*15245*/
			$k[$j++] = $1.i; /*15245*/
			$k[$j++] = Infinity; /*15245*/
			$aload($get($1.Tvals, $1.usft)); /*15245*/
			$aload($get($1.Tvals, $1.i - 128)); /*15245*/
			var _5U = $a(); /*15245*/
			var _5V = $k[--$j]; /*15245*/
			$put($k[--$j], _5V, _5U); /*15245*/
		} /*15245*/
		$k[$j++] = "Xvals"; /*15254*/
		$k[$j++] = Infinity; /*15254*/
		$k[$j++] = 13; /*15253*/
		$k[$j++] = 0; /*15253*/
		$k[$j++] = 42; /*15253*/
		$k[$j++] = 1; /*15253*/
		$k[$j++] = 62; /*15253*/
		$k[$j++] = 2; /*15253*/
		$k[$j++] = 32; /*15253*/
		$k[$j++] = 3; /*15253*/
		for (var _5X = 48; _5X <= 57; _5X += 1) { /*15253*/
			$k[$j++] = _5X; /*15253*/
			$k[$j++] = _5X - 44; /*15253*/
		} /*15253*/
		for (var _5Y = 65; _5Y <= 90; _5Y += 1) { /*15254*/
			$k[$j++] = _5Y; /*15254*/
			$k[$j++] = _5Y - 51; /*15254*/
		} /*15254*/
		var _5Z = $d(); /*15254*/
		$1[$k[--$j]] = _5Z; /*15255*/
		$k[$j++] = "Xvals"; /*15257*/
		$k[$j++] = Infinity; /*15257*/
		$forall($1.Xvals, function() { /*15257*/
			$k[$j++] = Infinity; /*15257*/
			var _5c = $k[--$j]; /*15257*/
			var _5d = $k[--$j]; /*15257*/
			$k[$j++] = _5c; /*15257*/
			$k[$j++] = _5d; /*15257*/
			var _5e = $a(); /*15257*/
			$k[$j++] = _5e; /*15257*/
		}); /*15257*/
		var _5f = $d(); /*15257*/
		$1[$k[--$j]] = _5f; /*15258*/
		$k[$j++] = "Evals"; /*15263*/
		$k[$j++] = Infinity; /*15263*/
		for (var _5h = 64; _5h <= 94; _5h += 1) { /*15261*/
			$k[$j++] = _5h; /*15261*/
			$k[$j++] = _5h - 64; /*15261*/
		} /*15261*/
		$k[$j++] = $1.unl; /*15263*/
		$k[$j++] = 31; /*15263*/
		for (var _5j = 32; _5j <= 63; _5j += 1) { /*15263*/
			$k[$j++] = _5j; /*15263*/
			$k[$j++] = _5j; /*15263*/
		} /*15263*/
		var _5k = $d(); /*15263*/
		$1[$k[--$j]] = _5k; /*15264*/
		$k[$j++] = "Evals"; /*15266*/
		$k[$j++] = Infinity; /*15266*/
		$forall($1.Evals, function() { /*15266*/
			$k[$j++] = Infinity; /*15266*/
			var _5n = $k[--$j]; /*15266*/
			var _5o = $k[--$j]; /*15266*/
			$k[$j++] = _5n; /*15266*/
			$k[$j++] = _5o; /*15266*/
			var _5p = $a(); /*15266*/
			$k[$j++] = _5p; /*15266*/
		}); /*15266*/
		var _5q = $d(); /*15266*/
		$1[$k[--$j]] = _5q; /*15267*/
		$k[$j++] = "Bvals"; /*15270*/
		$k[$j++] = Infinity; /*15270*/
		for (var _5s = 0; _5s <= 255; _5s += 1) { /*15270*/
			$k[$j++] = _5s; /*15270*/
			$k[$j++] = _5s; /*15270*/
		} /*15270*/
		var _5t = $d(); /*15270*/
		$1[$k[--$j]] = _5t; /*15271*/
		$k[$j++] = "Bvals"; /*15273*/
		$k[$j++] = Infinity; /*15273*/
		$forall($1.Bvals, function() { /*15273*/
			$k[$j++] = Infinity; /*15273*/
			var _5w = $k[--$j]; /*15273*/
			var _5x = $k[--$j]; /*15273*/
			$k[$j++] = _5w; /*15273*/
			$k[$j++] = _5x; /*15273*/
			var _5y = $a(); /*15273*/
			$k[$j++] = _5y; /*15273*/
		}); /*15273*/
		var _5z = $d(); /*15273*/
		$1[$k[--$j]] = _5z; /*15274*/
		$1.encvals = $a([$1.Avals, $1.Cvals, $1.Tvals, $1.Xvals, $1.Evals, $1.Bvals]); /*15276*/
		$k[$j++] = Infinity; /*15278*/
		for (var _69 = 0, _6A = $1.msglen; _69 < _6A; _69++) { /*15278*/
			$k[$j++] = 0; /*15278*/
		} /*15278*/
		$k[$j++] = 0; /*15278*/
		$1.numD = $a(); /*15278*/
		$k[$j++] = Infinity; /*15279*/
		for (var _6D = 0, _6E = $1.msglen; _6D < _6E; _6D++) { /*15279*/
			$k[$j++] = 0; /*15279*/
		} /*15279*/
		$k[$j++] = 9999; /*15279*/
		$1.nextXterm = $a(); /*15279*/
		$k[$j++] = Infinity; /*15280*/
		for (var _6H = 0, _6I = $1.msglen; _6H < _6I; _6H++) { /*15280*/
			$k[$j++] = 0; /*15280*/
		} /*15280*/
		$k[$j++] = 9999; /*15280*/
		$1.nextNonX = $a(); /*15280*/
		for (var _6L = $1.msglen - 1; _6L >= 0; _6L -= 1) { /*15297*/
			$1.i = _6L; /*15282*/
			$1.barchar = $get($1.msg, $1.i); /*15283*/
			if (($1.barchar >= 48) && ($1.barchar <= 57)) { /*15286*/
				$put($1.numD, $1.i, $get($1.numD, $1.i + 1) + 1); /*15285*/
			} /*15285*/
			if ((($1.barchar == 13) || ($1.barchar == 42)) || ($1.barchar == 62)) { /*15290*/
				$put($1.nextXterm, $1.i, 0); /*15288*/
			} else { /*15290*/
				$put($1.nextXterm, $1.i, $get($1.nextXterm, $1.i + 1) + 1); /*15290*/
			} /*15290*/
			var _6i = $get($1.Xvals, $1.barchar) !== undefined; /*15292*/
			if (!_6i) { /*15295*/
				$put($1.nextNonX, $1.i, 0); /*15293*/
			} else { /*15295*/
				$put($1.nextNonX, $1.i, $get($1.nextNonX, $1.i + 1) + 1); /*15295*/
			} /*15295*/
		} /*15295*/
		$k[$j++] = Infinity; /*15298*/
		var _6q = $1.nextXterm; /*15298*/
		for (var _6r = 0, _6s = _6q.length; _6r < _6s; _6r++) { /*15298*/
			var _6t = $get(_6q, _6r); /*15298*/
			$k[$j++] = _6t; /*15298*/
			if (_6t > 10000) { /*15298*/
				$j--; /*15298*/
				$k[$j++] = 10000; /*15298*/
			} /*15298*/
		} /*15298*/
		$1.nextXterm = $a(); /*15298*/
		$k[$j++] = Infinity; /*15299*/
		var _6v = $1.nextNonX; /*15299*/
		for (var _6w = 0, _6x = _6v.length; _6w < _6x; _6w++) { /*15299*/
			var _6y = $get(_6v, _6w); /*15299*/
			$k[$j++] = _6y; /*15299*/
			if (_6y > 10000) { /*15299*/
				$j--; /*15299*/
				$k[$j++] = 10000; /*15299*/
			} /*15299*/
		} /*15299*/
		$1.nextNonX = $a(); /*15299*/
		$1.isD = function() {
			$k[$j++] = ($1.char >= 48) && ($1.char <= 57); /*15301*/
		}; /*15301*/
		$1.isC = function() {
			var _74 = $get($1.CNvals, $1.char) !== undefined; /*15302*/
			$k[$j++] = _74; /*15302*/
		}; /*15302*/
		$1.isT = function() {
			var _77 = $get($1.TNvals, $1.char) !== undefined; /*15303*/
			$k[$j++] = _77; /*15303*/
		}; /*15303*/
		$1.isX = function() {
			var _7A = $get($1.Xvals, $1.char) !== undefined; /*15304*/
			$k[$j++] = _7A; /*15304*/
		}; /*15304*/
		$1.isE = function() {
			var _7D = $get($1.Evals, $1.char) !== undefined; /*15305*/
			$k[$j++] = _7D; /*15305*/
		}; /*15305*/
		$1.isEA = function() {
			$k[$j++] = $1.char > 127; /*15306*/
		}; /*15306*/
		$1.isFN = function() {
			$k[$j++] = $1.char < 0; /*15307*/
		}; /*15307*/
		$1.XtermFirst = function() {
			var _7G = $k[--$j]; /*15308*/
			$k[$j++] = $lt($get($1.nextXterm, _7G), $get($1.nextNonX, _7G)); /*15308*/
		}; /*15308*/
		$1.A = 0; /*15310*/
		$1.C = 1; /*15310*/
		$1.T = 2; /*15310*/
		$1.X = 3; /*15310*/
		$1.E = 4; /*15310*/
		$1.B = 5; /*15310*/
		$1.lookup = function() {
			$1.ac = 1; /*15313*/
			$1.cc = 2; /*15313*/
			$1.tc = 2; /*15313*/
			$1.xc = 2; /*15313*/
			$1.ec = 2; /*15313*/
			$1.bc = 2.25; /*15313*/
			if ($1.mode == $1.A) { /*15314*/
				$1.ac = 0; /*15314*/
				$1.cc = 1; /*15314*/
				$1.tc = 1; /*15314*/
				$1.xc = 1; /*15314*/
				$1.ec = 1; /*15314*/
				$1.bc = 1.25; /*15314*/
			} /*15314*/
			if ($1.mode == $1.C) { /*15315*/
				$1.cc = 0; /*15315*/
			} /*15315*/
			if ($1.mode == $1.T) { /*15316*/
				$1.tc = 0; /*15316*/
			} /*15316*/
			if ($1.mode == $1.X) { /*15317*/
				$1.xc = 0; /*15317*/
			} /*15317*/
			if ($1.mode == $1.E) { /*15318*/
				$1.ec = 0; /*15318*/
			} /*15318*/
			if ($1.mode == $1.B) { /*15319*/
				$1.bc = 0; /*15319*/
			} /*15319*/
			for (var _7X = 0, _7Y = 1; _7X < _7Y; _7X++) { /*15352*/
				$1.k = 0; /*15321*/
				for (;;) { /*15351*/
					if (($1.i + $1.k) == $1.msglen) { /*15330*/
						var _7c = $a(["ac", "cc", "tc", "xc", "ec", "bc"]); /*15323*/
						for (var _7d = 0, _7e = _7c.length; _7d < _7e; _7d++) { /*15323*/
							var _7f = $get(_7c, _7d); /*15323*/
							$1[_7f] = Math.ceil($1[_7f]); /*15323*/
						} /*15323*/
						var _7m = $a([$1.cc, $1.tc, $1.xc, $1.ec, $1.bc]); /*15324*/
						$k[$j++] = true; /*15324*/
						for (var _7n = 0, _7o = _7m.length; _7n < _7o; _7n++) { /*15324*/
							var _7r = $k[--$j]; /*15324*/
							$k[$j++] = _7r && ($1.ac <= $get(_7m, _7n)); /*15324*/
						} /*15324*/
						if ($k[--$j]) { /*15324*/
							$k[$j++] = $1.A; /*15324*/
							break; /*15324*/
						} /*15324*/
						var _7z = $a([$1.ac, $1.cc, $1.tc, $1.xc, $1.ec]); /*15325*/
						$k[$j++] = true; /*15325*/
						for (var _80 = 0, _81 = _7z.length; _80 < _81; _80++) { /*15325*/
							var _84 = $k[--$j]; /*15325*/
							$k[$j++] = _84 && ($1.bc < $get(_7z, _80)); /*15325*/
						} /*15325*/
						if ($k[--$j]) { /*15325*/
							$k[$j++] = $1.B; /*15325*/
							break; /*15325*/
						} /*15325*/
						var _8C = $a([$1.ac, $1.cc, $1.tc, $1.xc, $1.bc]); /*15326*/
						$k[$j++] = true; /*15326*/
						for (var _8D = 0, _8E = _8C.length; _8D < _8E; _8D++) { /*15326*/
							var _8H = $k[--$j]; /*15326*/
							$k[$j++] = _8H && ($1.ec < $get(_8C, _8D)); /*15326*/
						} /*15326*/
						if ($k[--$j]) { /*15326*/
							$k[$j++] = $1.E; /*15326*/
							break; /*15326*/
						} /*15326*/
						var _8P = $a([$1.ac, $1.cc, $1.xc, $1.ec, $1.bc]); /*15327*/
						$k[$j++] = true; /*15327*/
						for (var _8Q = 0, _8R = _8P.length; _8Q < _8R; _8Q++) { /*15327*/
							var _8U = $k[--$j]; /*15327*/
							$k[$j++] = _8U && ($1.tc < $get(_8P, _8Q)); /*15327*/
						} /*15327*/
						if ($k[--$j]) { /*15327*/
							$k[$j++] = $1.T; /*15327*/
							break; /*15327*/
						} /*15327*/
						var _8c = $a([$1.ac, $1.cc, $1.tc, $1.ec, $1.bc]); /*15328*/
						$k[$j++] = true; /*15328*/
						for (var _8d = 0, _8e = _8c.length; _8d < _8e; _8d++) { /*15328*/
							var _8h = $k[--$j]; /*15328*/
							$k[$j++] = _8h && ($1.xc < $get(_8c, _8d)); /*15328*/
						} /*15328*/
						if ($k[--$j]) { /*15328*/
							$k[$j++] = $1.X; /*15328*/
							break; /*15328*/
						} /*15328*/
						$k[$j++] = $1.C; /*15329*/
						break; /*15329*/
					} /*15329*/
					$1.char = $get($1.msg, $1.i + $1.k); /*15331*/
					$k[$j++] = "ac"; /*15332*/
					$k[$j++] = $1.ac; /*15332*/
					$1.isD(); /*15332*/
					if ($k[--$j]) { /*15332*/
						var _8r = $k[--$j]; /*15332*/
						$k[$j++] = _8r + (1 / 2); /*15332*/
					} else { /*15332*/
						$1.isEA(); /*15332*/
						if ($k[--$j]) { /*15332*/
							var _8t = $k[--$j]; /*15332*/
							$k[$j++] = Math.ceil(_8t) + 2; /*15332*/
						} else { /*15332*/
							var _8u = $k[--$j]; /*15332*/
							$k[$j++] = Math.ceil(_8u) + 1; /*15332*/
						} /*15332*/
					} /*15332*/
					var _8v = $k[--$j]; /*15332*/
					$1[$k[--$j]] = _8v; /*15332*/
					$k[$j++] = "cc"; /*15333*/
					$k[$j++] = $1.cc; /*15333*/
					$1.isC(); /*15333*/
					if ($k[--$j]) { /*15333*/
						var _8z = $k[--$j]; /*15333*/
						$k[$j++] = _8z + (2 / 3); /*15333*/
					} else { /*15333*/
						$1.isEA(); /*15333*/
						if ($k[--$j]) { /*15333*/
							var _91 = $k[--$j]; /*15333*/
							$k[$j++] = _91 + (8 / 3); /*15333*/
						} else { /*15333*/
							var _92 = $k[--$j]; /*15333*/
							$k[$j++] = _92 + (4 / 3); /*15333*/
						} /*15333*/
					} /*15333*/
					var _93 = $k[--$j]; /*15333*/
					$1[$k[--$j]] = _93; /*15333*/
					$k[$j++] = "tc"; /*15334*/
					$k[$j++] = $1.tc; /*15334*/
					$1.isT(); /*15334*/
					if ($k[--$j]) { /*15334*/
						var _97 = $k[--$j]; /*15334*/
						$k[$j++] = _97 + (2 / 3); /*15334*/
					} else { /*15334*/
						$1.isEA(); /*15334*/
						if ($k[--$j]) { /*15334*/
							var _99 = $k[--$j]; /*15334*/
							$k[$j++] = _99 + (8 / 3); /*15334*/
						} else { /*15334*/
							var _9A = $k[--$j]; /*15334*/
							$k[$j++] = _9A + (4 / 3); /*15334*/
						} /*15334*/
					} /*15334*/
					var _9B = $k[--$j]; /*15334*/
					$1[$k[--$j]] = _9B; /*15334*/
					$k[$j++] = "xc"; /*15335*/
					$k[$j++] = $1.xc; /*15335*/
					$1.isX(); /*15335*/
					if ($k[--$j]) { /*15335*/
						var _9F = $k[--$j]; /*15335*/
						$k[$j++] = _9F + (2 / 3); /*15335*/
					} else { /*15335*/
						$1.isEA(); /*15335*/
						if ($k[--$j]) { /*15335*/
							var _9H = $k[--$j]; /*15335*/
							$k[$j++] = _9H + (13 / 3); /*15335*/
						} else { /*15335*/
							var _9I = $k[--$j]; /*15335*/
							$k[$j++] = _9I + (10 / 3); /*15335*/
						} /*15335*/
					} /*15335*/
					var _9J = $k[--$j]; /*15335*/
					$1[$k[--$j]] = _9J; /*15335*/
					$k[$j++] = "ec"; /*15336*/
					$k[$j++] = $1.ec; /*15336*/
					$1.isE(); /*15336*/
					if ($k[--$j]) { /*15336*/
						var _9N = $k[--$j]; /*15336*/
						$k[$j++] = _9N + (3 / 4); /*15336*/
					} else { /*15336*/
						$1.isEA(); /*15336*/
						if ($k[--$j]) { /*15336*/
							var _9P = $k[--$j]; /*15336*/
							$k[$j++] = _9P + (17 / 4); /*15336*/
						} else { /*15336*/
							var _9Q = $k[--$j]; /*15336*/
							$k[$j++] = _9Q + (13 / 4); /*15336*/
						} /*15336*/
					} /*15336*/
					var _9R = $k[--$j]; /*15336*/
					$1[$k[--$j]] = _9R; /*15336*/
					$k[$j++] = "bc"; /*15337*/
					$k[$j++] = $1.bc; /*15337*/
					$1.isFN(); /*15337*/
					if ($k[--$j]) { /*15337*/
						var _9V = $k[--$j]; /*15337*/
						$k[$j++] = _9V + 4; /*15337*/
					} else { /*15337*/
						var _9W = $k[--$j]; /*15337*/
						$k[$j++] = _9W + 1; /*15337*/
					} /*15337*/
					var _9X = $k[--$j]; /*15337*/
					$1[$k[--$j]] = _9X; /*15337*/
					if ($1.k >= 4) { /*15349*/
						var _9f = $a([$1.cc, $1.tc, $1.xc, $1.ec, $1.bc]); /*15339*/
						$k[$j++] = true; /*15339*/
						for (var _9g = 0, _9h = _9f.length; _9g < _9h; _9g++) { /*15339*/
							var _9k = $k[--$j]; /*15339*/
							$k[$j++] = _9k && (($1.ac + 1) <= $get(_9f, _9g)); /*15339*/
						} /*15339*/
						if ($k[--$j]) { /*15339*/
							$k[$j++] = $1.A; /*15339*/
							break; /*15339*/
						} /*15339*/
						if (($1.bc + 1) <= $1.ac) { /*15340*/
							$k[$j++] = $1.B; /*15340*/
							break; /*15340*/
						} /*15340*/
						var _9u = $a([$1.cc, $1.tc, $1.xc, $1.ec]); /*15341*/
						$k[$j++] = true; /*15341*/
						for (var _9v = 0, _9w = _9u.length; _9v < _9w; _9v++) { /*15341*/
							var _9z = $k[--$j]; /*15341*/
							$k[$j++] = _9z && (($1.bc + 1) < $get(_9u, _9v)); /*15341*/
						} /*15341*/
						if ($k[--$j]) { /*15341*/
							$k[$j++] = $1.B; /*15341*/
							break; /*15341*/
						} /*15341*/
						var _A7 = $a([$1.ac, $1.cc, $1.tc, $1.xc, $1.bc]); /*15342*/
						$k[$j++] = true; /*15342*/
						for (var _A8 = 0, _A9 = _A7.length; _A8 < _A9; _A8++) { /*15342*/
							var _AC = $k[--$j]; /*15342*/
							$k[$j++] = _AC && (($1.ec + 1) < $get(_A7, _A8)); /*15342*/
						} /*15342*/
						if ($k[--$j]) { /*15342*/
							$k[$j++] = $1.E; /*15342*/
							break; /*15342*/
						} /*15342*/
						var _AK = $a([$1.ac, $1.cc, $1.xc, $1.ec, $1.bc]); /*15343*/
						$k[$j++] = true; /*15343*/
						for (var _AL = 0, _AM = _AK.length; _AL < _AM; _AL++) { /*15343*/
							var _AP = $k[--$j]; /*15343*/
							$k[$j++] = _AP && (($1.tc + 1) < $get(_AK, _AL)); /*15343*/
						} /*15343*/
						if ($k[--$j]) { /*15343*/
							$k[$j++] = $1.T; /*15343*/
							break; /*15343*/
						} /*15343*/
						var _AX = $a([$1.ac, $1.cc, $1.tc, $1.ec, $1.bc]); /*15344*/
						$k[$j++] = true; /*15344*/
						for (var _AY = 0, _AZ = _AX.length; _AY < _AZ; _AY++) { /*15344*/
							var _Ac = $k[--$j]; /*15344*/
							$k[$j++] = _Ac && (($1.xc + 1) < $get(_AX, _AY)); /*15344*/
						} /*15344*/
						if ($k[--$j]) { /*15344*/
							$k[$j++] = $1.X; /*15344*/
							break; /*15344*/
						} /*15344*/
						var _Aj = $a([$1.ac, $1.tc, $1.ec, $1.bc]); /*15345*/
						$k[$j++] = true; /*15345*/
						for (var _Ak = 0, _Al = _Aj.length; _Ak < _Al; _Ak++) { /*15345*/
							var _Ao = $k[--$j]; /*15345*/
							$k[$j++] = _Ao && (($1.cc + 1) < $get(_Aj, _Ak)); /*15345*/
						} /*15345*/
						if ($k[--$j]) { /*15348*/
							if ($1.cc < $1.xc) { /*15346*/
								$k[$j++] = $1.C; /*15346*/
								break; /*15346*/
							} /*15346*/
							if ($1.cc == $1.xc) { /*15347*/
								$k[$j++] = ($1.i + $1.k) + 1; /*15347*/
								$1.XtermFirst(); /*15347*/
								if ($k[--$j]) { /*15347*/
									$k[$j++] = $1.X; /*15347*/
									break; /*15347*/
								} else { /*15347*/
									$k[$j++] = $1.C; /*15347*/
									break; /*15347*/
								} /*15347*/
							} /*15347*/
						} /*15347*/
					} /*15347*/
					$1.k = $1.k + 1; /*15350*/
				} /*15350*/
			} /*15350*/
		}; /*15353*/
		$1.addtocws = function() {
			var _B1 = $k[--$j]; /*15356*/
			$puti($1.cws, $1.j, _B1); /*15356*/
			$1.j = _B1.length + $1.j; /*15357*/
		}; /*15358*/
		$1.encA = function() {
			for (var _B5 = 0, _B6 = 1; _B5 < _B6; _B5++) { /*15376*/
				if ($get($1.numD, $1.i) >= 2) { /*15366*/
					var _BA = $s(2); /*15363*/
					$put(_BA, 0, $get($1.msg, $1.i)); /*15363*/
					$put(_BA, 1, $get($1.msg, $1.i + 1)); /*15363*/
					$k[$j++] = $get($1.Avals, _BA); /*15363*/
					$1.addtocws(); /*15363*/
					$1.i = $1.i + 2; /*15364*/
					break; /*15365*/
				} /*15365*/
				$k[$j++] = "newmode"; /*15367*/
				$1.lookup(); /*15367*/
				var _BK = $k[--$j]; /*15367*/
				$1[$k[--$j]] = _BK; /*15367*/
				if ($1.newmode != $1.mode) { /*15372*/
					$k[$j++] = $get($1.Avals, $get($a([-1, $1.lC, $1.lT, $1.lX, $1.lE, $1.lB]), $1.newmode)); /*15369*/
					$1.addtocws(); /*15369*/
					$1.mode = $1.newmode; /*15370*/
					break; /*15371*/
				} /*15371*/
				$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*15373*/
				$1.addtocws(); /*15373*/
				$1.i = $1.i + 1; /*15374*/
				break; /*15375*/
			} /*15375*/
		}; /*15377*/
		$1.CTXvalstocws = function() {
			$1.in = $k[--$j]; /*15380*/
			$k[$j++] = Infinity; /*15381*/
			for (var _Bi = 0, _Bh = $1.in.length - 1; _Bi <= _Bh; _Bi += 3) { /*15385*/
				$k[$j++] = 0; /*15383*/
				$forall($geti($1.in, _Bi, 3), function() { /*15383*/
					var _Bl = $k[--$j]; /*15383*/
					var _Bm = $k[--$j]; /*15383*/
					$k[$j++] = (_Bm + _Bl) * 40; /*15383*/
				}); /*15383*/
				var _Bo = (~~($k[--$j] / 40)) + 1; /*15384*/
				$k[$j++] = ~~(_Bo / 256); /*15384*/
				$k[$j++] = _Bo % 256; /*15384*/
			} /*15384*/
			$astore($a($counttomark())); /*15386*/
			var _Br = $k[--$j]; /*15386*/
			var _Bs = $k[--$j]; /*15386*/
			$k[$j++] = _Br; /*15386*/
		}; /*15387*/
		$1.encCTX = function() {
			$1.p = 0; /*15390*/
			$1.ctxvals = $a(2500); /*15391*/
			for (;;) { /*15459*/
				if ($1.i == $1.msglen) { /*15395*/
					break; /*15395*/
				} /*15395*/
				var _C2 = $get($get($1.encvals, $1.mode), $get($1.msg, $1.i)) !== undefined; /*15396*/
				if (!_C2) { /*15396*/
					break; /*15396*/
				} /*15396*/
				if (($1.p % 3) == 0) { /*15454*/
					$1.lookup(); /*15398*/
					if ($ne($k[--$j], $1.mode)) { /*15403*/
						$k[$j++] = $geti($1.ctxvals, 0, $1.p); /*15399*/
						$1.CTXvalstocws(); /*15399*/
						$1.addtocws(); /*15399*/
						$k[$j++] = $a([$1.unlcw]); /*15400*/
						$1.addtocws(); /*15400*/
						$1.mode = $1.A; /*15401*/
						break; /*15402*/
					} /*15402*/
					if (($1.msglen - $1.i) <= 3) { /*15453*/
						$1.remcws = $get($1.numremcws, $1.j + ((~~($1.p / 3)) * 2)); /*15405*/
						$k[$j++] = Infinity; /*15414*/
						$forall($geti($1.msg, $1.i, $1.msglen - $1.i), function() { /*15413*/
							var _CN = $k[--$j]; /*15408*/
							var _CR = $get($get($1.encvals, $1.mode), _CN) !== undefined; /*15408*/
							$k[$j++] = _CN; /*15412*/
							if (_CR) { /*15411*/
								$aload($get($get($1.encvals, $1.mode), $k[--$j])); /*15409*/
							} else { /*15411*/
								$j--; /*15411*/
								$k[$j++] = -1; /*15411*/
								$k[$j++] = -1; /*15411*/
								$k[$j++] = -1; /*15411*/
								$k[$j++] = -1; /*15411*/
							} /*15411*/
						}); /*15411*/
						$1.remvals = $a(); /*15414*/
						if (($1.remcws == 2) && ($1.remvals.length == 3)) { /*15424*/
							$k[$j++] = Infinity; /*15419*/
							$aload($geti($1.ctxvals, 0, $1.p)); /*15418*/
							$aload($1.remvals); /*15419*/
							var _Ce = $a(); /*15419*/
							$k[$j++] = _Ce; /*15420*/
							$1.CTXvalstocws(); /*15420*/
							$1.addtocws(); /*15420*/
							$1.mode = $1.A; /*15421*/
							$1.i = $1.msglen; /*15422*/
							break; /*15423*/
						} /*15423*/
						if ((($1.remcws == 2) && ($1.remvals.length == 2)) && ($1.mode != $1.X)) { /*15435*/
							$k[$j++] = Infinity; /*15430*/
							$aload($geti($1.ctxvals, 0, $1.p)); /*15428*/
							$aload($1.remvals); /*15429*/
							$aload($get($get($1.encvals, $1.mode), $1.sft1)); /*15430*/
							var _Cu = $a(); /*15430*/
							$k[$j++] = _Cu; /*15431*/
							$1.CTXvalstocws(); /*15431*/
							$1.addtocws(); /*15431*/
							$1.mode = $1.A; /*15432*/
							$1.i = $1.msglen; /*15433*/
							break; /*15434*/
						} /*15434*/
						if (($1.remcws == 2) && ($1.remvals.length == 1)) { /*15444*/
							$k[$j++] = $geti($1.ctxvals, 0, $1.p); /*15438*/
							$1.CTXvalstocws(); /*15438*/
							$1.addtocws(); /*15438*/
							$k[$j++] = $a([$1.unlcw]); /*15439*/
							$1.addtocws(); /*15439*/
							$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*15440*/
							$1.addtocws(); /*15440*/
							$1.mode = $1.A; /*15441*/
							$1.i = $1.msglen; /*15442*/
							break; /*15443*/
						} /*15443*/
						if (($1.remcws == 1) && ($1.remvals.length == 1)) { /*15452*/
							$k[$j++] = $geti($1.ctxvals, 0, $1.p); /*15447*/
							$1.CTXvalstocws(); /*15447*/
							$1.addtocws(); /*15447*/
							$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*15448*/
							$1.addtocws(); /*15448*/
							$1.mode = $1.A; /*15449*/
							$1.i = $1.msglen; /*15450*/
							break; /*15451*/
						} /*15451*/
					} /*15451*/
				} /*15451*/
				var _DT = $get($get($1.encvals, $1.mode), $get($1.msg, $1.i)); /*15455*/
				$puti($1.ctxvals, $1.p, _DT); /*15456*/
				$1.p = _DT.length + $1.p; /*15457*/
				$1.i = $1.i + 1; /*15458*/
			} /*15458*/
			if ($1.mode != $1.A) { /*15483*/
				for (;;) { /*15467*/
					if (($1.p % 3) == 0) { /*15464*/
						break; /*15464*/
					} /*15464*/
					$1.i = $1.i - 1; /*15465*/
					$1.p = $1.p - $get($get($1.encvals, $1.mode), $get($1.msg, $1.i)).length; /*15466*/
				} /*15466*/
				$k[$j++] = Infinity; /*15469*/
				$aload($geti($1.ctxvals, 0, $1.p)); /*15469*/
				var _Dn = $a(); /*15469*/
				$k[$j++] = _Dn; /*15470*/
				$1.CTXvalstocws(); /*15470*/
				$1.addtocws(); /*15470*/
				$k[$j++] = $a([$1.unlcw]); /*15471*/
				$1.addtocws(); /*15471*/
				$1.mode = $1.A; /*15472*/
				if ($1.i != $1.msglen) { /*15482*/
					if ($get($1.numD, $1.i) >= 2) { /*15480*/
						var _Dw = $s(2); /*15476*/
						$put(_Dw, 0, $get($1.msg, $1.i)); /*15476*/
						$put(_Dw, 1, $get($1.msg, $1.i + 1)); /*15476*/
						$k[$j++] = $get($1.Avals, _Dw); /*15476*/
						$1.addtocws(); /*15476*/
						$1.i = $1.i + 2; /*15477*/
					} else { /*15480*/
						$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*15479*/
						$1.addtocws(); /*15479*/
						$1.i = $1.i + 1; /*15480*/
					} /*15480*/
				} /*15480*/
			} /*15480*/
		}; /*15485*/
		$1.Evalstocws = function() {
			$1.in = $k[--$j]; /*15488*/
			$1.inlen = $1.in.length; /*15489*/
			$1.outlen = ~~(Math.ceil(($1.in.length / 4) * 3)); /*15490*/
			$k[$j++] = Infinity; /*15491*/
			$aload($1.in); /*15491*/
			$k[$j++] = 0; /*15491*/
			$k[$j++] = 0; /*15491*/
			$k[$j++] = 0; /*15491*/
			$1.in = $a(); /*15491*/
			$k[$j++] = Infinity; /*15492*/
			for (var _EJ = 0, _EI = $1.inlen - 1; _EJ <= _EI; _EJ += 4) { /*15498*/
				$k[$j++] = 0; /*15494*/
				$forall($geti($1.in, _EJ, 4), function() { /*15494*/
					var _EM = $k[--$j]; /*15494*/
					var _EN = $k[--$j]; /*15494*/
					$k[$j++] = $or(_EN, _EM) << 6; /*15494*/
				}); /*15494*/
				var _EP = $k[--$j] >>> 6; /*15495*/
				$k[$j++] = (_EP >>> 16) & 255; /*15497*/
				$k[$j++] = (_EP >>> 8) & 255; /*15497*/
				$k[$j++] = _EP & 255; /*15497*/
			} /*15497*/
			$astore($a($counttomark())); /*15499*/
			var _ES = $k[--$j]; /*15499*/
			var _ET = $k[--$j]; /*15499*/
			$k[$j++] = $geti(_ES, 0, $1.outlen); /*15500*/
		}; /*15501*/
		$1.encE = function() {
			$1.p = 0; /*15504*/
			$1.edifactvals = $a(2100); /*15505*/
			for (;;) { /*15547*/
				if ($1.i == $1.msglen) { /*15509*/
					break; /*15509*/
				} /*15509*/
				var _Ed = $get($1.Evals, $get($1.msg, $1.i)) !== undefined; /*15510*/
				if (!_Ed) { /*15510*/
					break; /*15510*/
				} /*15510*/
				if (($1.p % 4) == 0) { /*15542*/
					$1.lookup(); /*15512*/
					if ($k[--$j] != $1.mode) { /*15512*/
						break; /*15512*/
					} /*15512*/
					if (($1.msglen - $1.i) <= 2) { /*15541*/
						$1.remcws = $get($1.numremcws, $1.j + ((~~($1.p / 4)) * 3)); /*15514*/
						$k[$j++] = Infinity; /*15523*/
						$forall($geti($1.msg, $1.i, $1.msglen - $1.i), function() { /*15522*/
							var _Es = $k[--$j]; /*15517*/
							var _Eu = $get($1.Evals, _Es) !== undefined; /*15517*/
							$k[$j++] = _Es; /*15521*/
							if (_Eu) { /*15520*/
								$aload($get($1.Evals, $k[--$j])); /*15518*/
							} else { /*15520*/
								$j--; /*15520*/
								$k[$j++] = -1; /*15520*/
								$k[$j++] = -1; /*15520*/
								$k[$j++] = -1; /*15520*/
								$k[$j++] = -1; /*15520*/
								$k[$j++] = -1; /*15520*/
							} /*15520*/
						}); /*15520*/
						$1.remvals = $a(); /*15523*/
						if (($1.remcws == 2) && ($1.remvals.length == 2)) { /*15532*/
							$k[$j++] = $geti($1.edifactvals, 0, $1.p); /*15526*/
							$1.Evalstocws(); /*15526*/
							$1.addtocws(); /*15526*/
							$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*15527*/
							$1.addtocws(); /*15527*/
							$k[$j++] = $get($1.Avals, $get($1.msg, $1.i + 1)); /*15528*/
							$1.addtocws(); /*15528*/
							$1.mode = $1.A; /*15529*/
							$1.i = $1.msglen; /*15530*/
							break; /*15531*/
						} /*15531*/
						if ((($1.remcws == 2) || ($1.remcws == 1)) && ($1.remvals.length == 1)) { /*15540*/
							$k[$j++] = $geti($1.edifactvals, 0, $1.p); /*15535*/
							$1.Evalstocws(); /*15535*/
							$1.addtocws(); /*15535*/
							$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*15536*/
							$1.addtocws(); /*15536*/
							$1.mode = $1.A; /*15537*/
							$1.i = $1.msglen; /*15538*/
							break; /*15539*/
						} /*15539*/
					} /*15539*/
				} /*15539*/
				var _FX = $get($1.Evals, $get($1.msg, $1.i)); /*15543*/
				$puti($1.edifactvals, $1.p, _FX); /*15544*/
				$1.p = _FX.length + $1.p; /*15545*/
				$1.i = $1.i + 1; /*15546*/
			} /*15546*/
			if ($1.mode != $1.A) { /*15569*/
				$1.remcws = $get($1.numremcws, ($1.j + ((~~($1.p / 4)) * 3)) - 1) - 1; /*15551*/
				if ($1.remcws != 0) { /*15556*/
					var _Fl = $get($1.Evals, $1.unl); /*15553*/
					$puti($1.edifactvals, $1.p, _Fl); /*15554*/
					$1.p = _Fl.length + $1.p; /*15555*/
				} /*15555*/
				$k[$j++] = $geti($1.edifactvals, 0, $1.p); /*15557*/
				$1.Evalstocws(); /*15557*/
				$1.addtocws(); /*15557*/
				$1.mode = $1.A; /*15558*/
				if ($1.i != $1.msglen) { /*15568*/
					if ($get($1.numD, $1.i) >= 2) { /*15566*/
						var _Fy = $s(2); /*15562*/
						$put(_Fy, 0, $get($1.msg, $1.i)); /*15562*/
						$put(_Fy, 1, $get($1.msg, $1.i + 1)); /*15562*/
						$k[$j++] = $get($1.Avals, _Fy); /*15562*/
						$1.addtocws(); /*15562*/
						$1.i = $1.i + 2; /*15563*/
					} else { /*15566*/
						$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*15565*/
						$1.addtocws(); /*15565*/
						$1.i = $1.i + 1; /*15566*/
					} /*15566*/
				} /*15566*/
			} /*15566*/
		}; /*15571*/
		$1.encB = function() {
			$1.p = 0; /*15574*/
			$1.bvals = $a(1558); /*15574*/
			for (;;) { /*15580*/
				if ($1.i == $1.msglen) { /*15575*/
					break; /*15575*/
				} /*15575*/
				$1.lookup(); /*15576*/
				if ($k[--$j] != $1.mode) { /*15576*/
					break; /*15576*/
				} /*15576*/
				$put($1.bvals, $1.p, $get($1.msg, $1.i)); /*15577*/
				$1.p = $1.p + 1; /*15578*/
				$1.i = $1.i + 1; /*15579*/
			} /*15579*/
			$1.remcws = $get($1.numremcws, $1.j + $1.p) - 1; /*15581*/
			$k[$j++] = Infinity; /*15589*/
			if (($1.remcws == 0) && ($1.i == $1.msglen)) { /*15586*/
				$k[$j++] = 0; /*15584*/
			} else { /*15586*/
				if ($1.p < 250) { /*15586*/
					$k[$j++] = $1.p; /*15586*/
				} else { /*15586*/
					$k[$j++] = (~~($1.p / 250)) + 249; /*15586*/
					$k[$j++] = $1.p % 250; /*15586*/
				} /*15586*/
			} /*15586*/
			$aload($geti($1.bvals, 0, $1.p)); /*15588*/
			$1.bvals = $a(); /*15589*/
			for (var _Gh = 0, _Gg = $1.bvals.length - 1; _Gh <= _Gg; _Gh += 1) { /*15595*/
				$1.p = _Gh; /*15591*/
				var _Gn = ((((($1.j + $1.p) + 1) * 149) % 255) + 1) + $get($1.bvals, $1.p); /*15593*/
				$k[$j++] = _Gn; /*15593*/
				if (_Gn >= 256) { /*15593*/
					var _Go = $k[--$j]; /*15593*/
					$k[$j++] = _Go - 256; /*15593*/
				} /*15593*/
				$put($1.bvals, $1.p, $k[--$j]); /*15594*/
			} /*15594*/
			$k[$j++] = $1.bvals; /*15596*/
			$1.addtocws(); /*15596*/
			$1.mode = $1.A; /*15597*/
		}; /*15598*/
		$1.cws = $a(1558); /*15601*/
		$1.mode = $1.A; /*15602*/
		$1.i = 0; /*15602*/
		$1.j = 0; /*15602*/
		for (;;) { /*15605*/
			if ($1.i >= $1.msglen) { /*15603*/
				break; /*15603*/
			} /*15603*/
			$1[$get($a(["encA", "encCTX", "encCTX", "encCTX", "encE", "encB"]), $1.mode)](); /*15604*/
		} /*15604*/
		$1.cws = $geti($1.cws, 0, $1.j); /*15606*/
		$1.datlen = $1.cws.length; /*15609*/
		$1.remcws = $get($1.numremcws, $1.j - 1) - 1; /*15610*/
		if ($1.remcws > 0) { /*15619*/
			$k[$j++] = Infinity; /*15612*/
			$aload($1.cws); /*15612*/
			for (var _HC = 0, _HD = $1.remcws; _HC < _HD; _HC++) { /*15612*/
				$k[$j++] = 129; /*15612*/
			} /*15612*/
			$1.cws = $a(); /*15612*/
			for (var _HJ = $1.datlen + 1, _HI = ($1.datlen + $1.remcws) - 1; _HJ <= _HI; _HJ += 1) { /*15618*/
				$1.i = _HJ; /*15614*/
				var _HL = (((($1.i + 1) * 149) % 253) + 1) + 129; /*15616*/
				$k[$j++] = _HL; /*15616*/
				if (_HL > 254) { /*15616*/
					var _HM = $k[--$j]; /*15616*/
					$k[$j++] = _HM - 254; /*15616*/
				} /*15616*/
				$put($1.cws, $1.i, $k[--$j]); /*15617*/
			} /*15617*/
		} /*15617*/
		$1.i = 0; /*15622*/
		for (;;) { /*15643*/
			$1.m = $get($1.metrics, $1.i); /*15623*/
			$1.rows = $get($1.m, 0); /*15624*/
			$1.cols = $get($1.m, 1); /*15625*/
			$1.regh = $get($1.m, 2); /*15626*/
			$1.regv = $get($1.m, 3); /*15627*/
			$1.rscw = $get($1.m, 4); /*15628*/
			$1.rsbl = $get($1.m, 5); /*15629*/
			$1.mrows = $1.rows - (2 * $1.regh); /*15630*/
			$1.mcols = $1.cols - (2 * $1.regv); /*15631*/
			$1.rrows = ~~($1.mrows / $1.regh); /*15632*/
			$1.rcols = ~~($1.mcols / $1.regv); /*15633*/
			$1.ncws = (~~(($1.mrows * $1.mcols) / 8)) - $1.rscw; /*15634*/
			$1.okay = true; /*15635*/
			if ($1.cws.length != $1.ncws) { /*15636*/
				$1.okay = false; /*15636*/
			} /*15636*/
			if (($1.urows != 0) && ($1.urows != $1.rows)) { /*15637*/
				$1.okay = false; /*15637*/
			} /*15637*/
			if (($1.ucols != 0) && ($1.ucols != $1.cols)) { /*15638*/
				$1.okay = false; /*15638*/
			} /*15638*/
			if ($eq($1.format, "square") && $ne($1.rows, $1.cols)) { /*15639*/
				$1.okay = false; /*15639*/
			} /*15639*/
			if ($eq($1.format, "rectangle") && $eq($1.rows, $1.cols)) { /*15640*/
				$1.okay = false; /*15640*/
			} /*15640*/
			if ($1.okay) { /*15641*/
				break; /*15641*/
			} /*15641*/
			$1.i = $1.i + 1; /*15642*/
		} /*15642*/
		$1.cwbs = $a($1.rsbl); /*15646*/
		$1.ecbs = $a($1.rsbl); /*15647*/
		for (var _IC = 0, _IB = $1.rsbl - 1; _IC <= _IB; _IC += 1) { /*15662*/
			$1.i = _IC; /*15649*/
			if ($1.cws.length != 1558) { /*15653*/
				$1.cwbsize = ~~($1.cws.length / $1.rsbl); /*15651*/
			} else { /*15653*/
				if ($1.i <= 7) { /*15653*/
					$1.cwbsize = 156; /*15653*/
				} else { /*15653*/
					$1.cwbsize = 155; /*15653*/
				} /*15653*/
			} /*15653*/
			$1.cwb = $a($1.cwbsize); /*15655*/
			for (var _IL = 0, _IK = $1.cwbsize - 1; _IL <= _IK; _IL += 1) { /*15659*/
				$1.j = _IL; /*15657*/
				$put($1.cwb, $1.j, $get($1.cws, ($1.j * $1.rsbl) + $1.i)); /*15658*/
			} /*15658*/
			$put($1.cwbs, $1.i, $1.cwb); /*15660*/
			$k[$j++] = $1.ecbs; /*15661*/
			$k[$j++] = $1.i; /*15661*/
			$k[$j++] = Infinity; /*15661*/
			for (var _Ia = 0, _Ib = ~~($1.rscw / $1.rsbl); _Ia < _Ib; _Ia++) { /*15661*/
				$k[$j++] = 0; /*15661*/
			} /*15661*/
			var _Ic = $a(); /*15661*/
			var _Id = $k[--$j]; /*15661*/
			$put($k[--$j], _Id, _Ic); /*15661*/
		} /*15661*/
		$k[$j++] = Infinity; /*15665*/
		$k[$j++] = 1; /*15665*/
		for (var _If = 0, _Ig = 255; _If < _Ig; _If++) { /*15665*/
			var _Ih = $k[--$j]; /*15665*/
			var _Ii = _Ih * 2; /*15665*/
			$k[$j++] = _Ih; /*15665*/
			$k[$j++] = _Ii; /*15665*/
			if (_Ii >= 256) { /*15665*/
				var _Ij = $k[--$j]; /*15665*/
				$k[$j++] = _Ij ^ 301; /*15665*/
			} /*15665*/
		} /*15665*/
		$1.rsalog = $a(); /*15665*/
		$1.rslog = $a(256); /*15666*/
		for (var _Im = 1; _Im <= 255; _Im += 1) { /*15667*/
			$put($1.rslog, $get($1.rsalog, _Im), _Im); /*15667*/
		} /*15667*/
		$1.rsprod = function() {
			var _Iq = $k[--$j]; /*15671*/
			var _Ir = $k[--$j]; /*15671*/
			$k[$j++] = _Ir; /*15675*/
			$k[$j++] = _Iq; /*15675*/
			if ((_Iq != 0) && (_Ir != 0)) { /*15674*/
				var _Iu = $get($1.rslog, $k[--$j]); /*15672*/
				var _Iz = $get($1.rsalog, (_Iu + $get($1.rslog, $k[--$j])) % 255); /*15672*/
				$k[$j++] = _Iz; /*15672*/
			} else { /*15674*/
				$j -= 2; /*15674*/
				$k[$j++] = 0; /*15674*/
			} /*15674*/
		}; /*15676*/
		$k[$j++] = Infinity; /*15679*/
		$k[$j++] = 1; /*15679*/
		for (var _J2 = 0, _J3 = ~~($1.rscw / $1.rsbl); _J2 < _J3; _J2++) { /*15679*/
			$k[$j++] = 0; /*15679*/
		} /*15679*/
		$1.coeffs = $a(); /*15679*/
		for (var _J8 = 1, _J7 = ~~($1.rscw / $1.rsbl); _J8 <= _J7; _J8 += 1) { /*15688*/
			$1.i = _J8; /*15681*/
			$put($1.coeffs, $1.i, $get($1.coeffs, $1.i - 1)); /*15682*/
			for (var _JF = $1.i - 1; _JF >= 1; _JF -= 1) { /*15686*/
				$1.j = _JF; /*15684*/
				$k[$j++] = $1.coeffs; /*15685*/
				$k[$j++] = $1.j; /*15685*/
				$k[$j++] = $get($1.coeffs, $1.j - 1); /*15685*/
				$k[$j++] = $get($1.coeffs, $1.j); /*15685*/
				$k[$j++] = $get($1.rsalog, $1.i); /*15685*/
				$1.rsprod(); /*15685*/
				var _JR = $k[--$j]; /*15685*/
				var _JS = $k[--$j]; /*15685*/
				var _JT = $k[--$j]; /*15685*/
				$put($k[--$j], _JT, $xo(_JS, _JR)); /*15685*/
			} /*15685*/
			$k[$j++] = $1.coeffs; /*15687*/
			$k[$j++] = 0; /*15687*/
			$k[$j++] = $get($1.coeffs, 0); /*15687*/
			$k[$j++] = $get($1.rsalog, $1.i); /*15687*/
			$1.rsprod(); /*15687*/
			var _Jb = $k[--$j]; /*15687*/
			var _Jc = $k[--$j]; /*15687*/
			$put($k[--$j], _Jc, _Jb); /*15687*/
		} /*15687*/
		$1.coeffs = $geti($1.coeffs, 0, $1.coeffs.length - 1); /*15689*/
		for (var _Jj = 0, _Ji = $1.cwbs.length - 1; _Jj <= _Ji; _Jj += 1) { /*15705*/
			$1.i = _Jj; /*15693*/
			$1.cwb = $get($1.cwbs, $1.i); /*15694*/
			$1.ecb = $get($1.ecbs, $1.i); /*15695*/
			for (var _Js = 0, _Jr = $1.cwb.length - 1; _Js <= _Jr; _Js += 1) { /*15704*/
				$1.t = $xo($get($1.cwb, _Js), $get($1.ecb, 0)); /*15697*/
				for (var _Jy = $1.ecb.length - 1; _Jy >= 0; _Jy -= 1) { /*15703*/
					$1.j = _Jy; /*15699*/
					$1.p = ($1.ecb.length - $1.j) - 1; /*15700*/
					$k[$j++] = $1.ecb; /*15701*/
					$k[$j++] = $1.p; /*15701*/
					$k[$j++] = $1.t; /*15701*/
					$k[$j++] = $get($1.coeffs, $1.j); /*15701*/
					$1.rsprod(); /*15701*/
					var _K7 = $k[--$j]; /*15701*/
					var _K8 = $k[--$j]; /*15701*/
					$put($k[--$j], _K8, _K7); /*15701*/
					if ($1.j > 0) { /*15702*/
						$put($1.ecb, $1.p, $xo($get($1.ecb, $1.p + 1), $get($1.ecb, $1.p))); /*15702*/
					} /*15702*/
				} /*15702*/
			} /*15702*/
		} /*15702*/
		if ($1.ncws == 1558) { /*15710*/
			$k[$j++] = Infinity; /*15709*/
			$forall($geti($1.ecbs, 8, 2)); /*15709*/
			$forall($geti($1.ecbs, 0, 8)); /*15709*/
			$1.ecbs = $a(); /*15709*/
		} /*15709*/
		$k[$j++] = Infinity; /*15713*/
		var _KP = $1.cws; /*15713*/
		for (var _KQ = 0, _KR = _KP.length; _KQ < _KR; _KQ++) { /*15713*/
			$k[$j++] = $get(_KP, _KQ); /*15713*/
		} /*15713*/
		for (var _KU = 0, _KV = $1.rscw; _KU < _KV; _KU++) { /*15713*/
			$k[$j++] = 0; /*15713*/
		} /*15713*/
		$1.cws = $a(); /*15713*/
		for (var _KZ = 0, _KY = $1.rscw - 1; _KZ <= _KY; _KZ += 1) { /*15717*/
			$1.i = _KZ; /*15715*/
			$put($1.cws, $1.ncws + $1.i, $get($get($1.ecbs, $1.i % $1.rsbl), ~~($1.i / $1.rsbl))); /*15716*/
		} /*15716*/
		$1.module = function() {
			var _Kk = $k[--$j]; /*15722*/
			var _Kl = $k[--$j]; /*15722*/
			var _Km = $k[--$j]; /*15722*/
			var _Kp = $strcpy($s(8), "00000000"); /*15723*/
			var _Kr = $cvrs($s(8), $k[--$j], 2); /*15723*/
			$puti(_Kp, 8 - _Kr.length, _Kr); /*15724*/
			$k[$j++] = _Km; /*15725*/
			$k[$j++] = _Kl; /*15725*/
			$k[$j++] = _Kk; /*15725*/
			$k[$j++] = _Kp; /*15725*/
			for (var _Ks = 7; _Ks >= 0; _Ks -= 1) { /*15725*/
				var _Kt = $k[--$j]; /*15725*/
				$k[$j++] = $get(_Kt, _Ks) - 48; /*15725*/
				$k[$j++] = _Kt; /*15725*/
			} /*15725*/
			$j--; /*15725*/
			var _Kv = $k[--$j]; /*15726*/
			var _Kw = $k[--$j]; /*15726*/
			var _Kx = $k[--$j]; /*15726*/
			var _Ky = $k[--$j]; /*15726*/
			var _Kz = $k[--$j]; /*15726*/
			var _L0 = $k[--$j]; /*15726*/
			var _L1 = $k[--$j]; /*15726*/
			var _L2 = $k[--$j]; /*15726*/
			var _L3 = $k[--$j]; /*15726*/
			var _L4 = $k[--$j]; /*15726*/
			var _L5 = $k[--$j]; /*15726*/
			$k[$j++] = _L2; /*15743*/
			$k[$j++] = _L1; /*15743*/
			$k[$j++] = _L0; /*15743*/
			$k[$j++] = _Kz; /*15743*/
			$k[$j++] = _Ky; /*15743*/
			$k[$j++] = _Kx; /*15743*/
			$k[$j++] = _Kw; /*15743*/
			$k[$j++] = _Kv; /*15743*/
			$k[$j++] = _L5; /*15743*/
			$k[$j++] = _L4; /*15743*/
			$forall(_L3, function() { /*15743*/
				$k[--$j](); /*15729*/
				var _L7 = $k[--$j]; /*15730*/
				var _L8 = $k[--$j]; /*15730*/
				$k[$j++] = _L8; /*15733*/
				$k[$j++] = _L7; /*15733*/
				if (_L8 < 0) { /*15733*/
					var _L9 = $k[--$j]; /*15731*/
					var _LA = $k[--$j]; /*15731*/
					$k[$j++] = _LA + $1.mrows; /*15732*/
					$k[$j++] = _L9 + (4 - (($1.mrows + 4) % 8)); /*15732*/
				} /*15732*/
				var _LD = $k[--$j]; /*15734*/
				$k[$j++] = _LD; /*15737*/
				if (_LD < 0) { /*15737*/
					var _LF = $k[--$j]; /*15735*/
					var _LG = $k[--$j]; /*15735*/
					$k[$j++] = _LG + (4 - (($1.mcols + 4) % 8)); /*15736*/
					$k[$j++] = _LF + $1.mcols; /*15736*/
				} /*15736*/
				var _LI = $k[--$j]; /*15738*/
				var _LJ = $k[--$j]; /*15738*/
				$k[$j++] = _LJ; /*15740*/
				$k[$j++] = _LI; /*15740*/
				if (_LJ >= $1.mrows) { /*15740*/
					var _LL = $k[--$j]; /*15739*/
					var _LM = $k[--$j]; /*15739*/
					$k[$j++] = _LM - $1.mrows; /*15739*/
					$k[$j++] = _LL; /*15739*/
				} /*15739*/
				var _LO = $k[--$j]; /*15741*/
				var _LP = $k[--$j]; /*15741*/
				var _LS = $k[--$j]; /*15742*/
				var _LT = $k[--$j]; /*15742*/
				$put($1.mmat, _LO + (_LP * $1.mcols), $k[--$j]); /*15742*/
				$k[$j++] = _LT; /*15742*/
				$k[$j++] = _LS; /*15742*/
			}); /*15742*/
		}; /*15744*/
		var _Ll = $a([function() {
			var _LV = $k[--$j]; /*15748*/
			var _LW = $k[--$j]; /*15748*/
			$k[$j++] = _LW; /*15748*/
			$k[$j++] = _LV; /*15748*/
			$k[$j++] = _LW - 2; /*15748*/
			$k[$j++] = _LV - 2; /*15748*/
		}, function() {
			var _LX = $k[--$j]; /*15748*/
			var _LY = $k[--$j]; /*15748*/
			$k[$j++] = _LY; /*15748*/
			$k[$j++] = _LX; /*15748*/
			$k[$j++] = _LY - 2; /*15748*/
			$k[$j++] = _LX - 1; /*15748*/
		}, function() {
			var _LZ = $k[--$j]; /*15749*/
			var _La = $k[--$j]; /*15749*/
			$k[$j++] = _La; /*15749*/
			$k[$j++] = _LZ; /*15749*/
			$k[$j++] = _La - 1; /*15749*/
			$k[$j++] = _LZ - 2; /*15749*/
		}, function() {
			var _Lb = $k[--$j]; /*15749*/
			var _Lc = $k[--$j]; /*15749*/
			$k[$j++] = _Lc; /*15749*/
			$k[$j++] = _Lb; /*15749*/
			$k[$j++] = _Lc - 1; /*15749*/
			$k[$j++] = _Lb - 1; /*15749*/
		}, function() {
			var _Ld = $k[--$j]; /*15750*/
			var _Le = $k[--$j]; /*15750*/
			$k[$j++] = _Le; /*15750*/
			$k[$j++] = _Ld; /*15750*/
			$k[$j++] = _Le - 1; /*15750*/
			$k[$j++] = _Ld; /*15750*/
		}, function() {
			var _Lf = $k[--$j]; /*15750*/
			var _Lg = $k[--$j]; /*15750*/
			$k[$j++] = _Lg; /*15750*/
			$k[$j++] = _Lf; /*15750*/
			$k[$j++] = _Lg; /*15750*/
			$k[$j++] = _Lf - 2; /*15750*/
		}, function() {
			var _Lh = $k[--$j]; /*15751*/
			var _Li = $k[--$j]; /*15751*/
			$k[$j++] = _Li; /*15751*/
			$k[$j++] = _Lh; /*15751*/
			$k[$j++] = _Li; /*15751*/
			$k[$j++] = _Lh - 1; /*15751*/
		}, function() {
			var _Lj = $k[--$j]; /*15751*/
			var _Lk = $k[--$j]; /*15751*/
			$k[$j++] = _Lk; /*15751*/
			$k[$j++] = _Lj; /*15751*/
			$k[$j++] = _Lk; /*15751*/
			$k[$j++] = _Lj; /*15751*/
		}]); /*15751*/
		$1.dmn = _Ll; /*15752*/
		var _Lu = $a([function() {
			$k[$j++] = $1.mrows - 1; /*15755*/
			$k[$j++] = 0; /*15755*/
		}, function() {
			$k[$j++] = $1.mrows - 1; /*15755*/
			$k[$j++] = 1; /*15755*/
		}, function() {
			$k[$j++] = $1.mrows - 1; /*15756*/
			$k[$j++] = 2; /*15756*/
		}, function() {
			$k[$j++] = 0; /*15756*/
			$k[$j++] = $1.mcols - 2; /*15756*/
		}, function() {
			$k[$j++] = 0; /*15757*/
			$k[$j++] = $1.mcols - 1; /*15757*/
		}, function() {
			$k[$j++] = 1; /*15757*/
			$k[$j++] = $1.mcols - 1; /*15757*/
		}, function() {
			$k[$j++] = 2; /*15758*/
			$k[$j++] = $1.mcols - 1; /*15758*/
		}, function() {
			$k[$j++] = 3; /*15758*/
			$k[$j++] = $1.mcols - 1; /*15758*/
		}]); /*15758*/
		$1.dmc1 = _Lu; /*15759*/
		var _M3 = $a([function() {
			$k[$j++] = $1.mrows - 3; /*15762*/
			$k[$j++] = 0; /*15762*/
		}, function() {
			$k[$j++] = $1.mrows - 2; /*15762*/
			$k[$j++] = 0; /*15762*/
		}, function() {
			$k[$j++] = $1.mrows - 1; /*15763*/
			$k[$j++] = 0; /*15763*/
		}, function() {
			$k[$j++] = 0; /*15763*/
			$k[$j++] = $1.mcols - 4; /*15763*/
		}, function() {
			$k[$j++] = 0; /*15764*/
			$k[$j++] = $1.mcols - 3; /*15764*/
		}, function() {
			$k[$j++] = 0; /*15764*/
			$k[$j++] = $1.mcols - 2; /*15764*/
		}, function() {
			$k[$j++] = 0; /*15765*/
			$k[$j++] = $1.mcols - 1; /*15765*/
		}, function() {
			$k[$j++] = 1; /*15765*/
			$k[$j++] = $1.mcols - 1; /*15765*/
		}]); /*15765*/
		$1.dmc2 = _M3; /*15766*/
		var _MC = $a([function() {
			$k[$j++] = $1.mrows - 3; /*15769*/
			$k[$j++] = 0; /*15769*/
		}, function() {
			$k[$j++] = $1.mrows - 2; /*15769*/
			$k[$j++] = 0; /*15769*/
		}, function() {
			$k[$j++] = $1.mrows - 1; /*15770*/
			$k[$j++] = 0; /*15770*/
		}, function() {
			$k[$j++] = 0; /*15770*/
			$k[$j++] = $1.mcols - 2; /*15770*/
		}, function() {
			$k[$j++] = 0; /*15771*/
			$k[$j++] = $1.mcols - 1; /*15771*/
		}, function() {
			$k[$j++] = 1; /*15771*/
			$k[$j++] = $1.mcols - 1; /*15771*/
		}, function() {
			$k[$j++] = 2; /*15772*/
			$k[$j++] = $1.mcols - 1; /*15772*/
		}, function() {
			$k[$j++] = 3; /*15772*/
			$k[$j++] = $1.mcols - 1; /*15772*/
		}]); /*15772*/
		$1.dmc3 = _MC; /*15773*/
		var _MM = $a([function() {
			$k[$j++] = $1.mrows - 1; /*15776*/
			$k[$j++] = 0; /*15776*/
		}, function() {
			$k[$j++] = $1.mrows - 1; /*15776*/
			$k[$j++] = $1.mcols - 1; /*15776*/
		}, function() {
			$k[$j++] = 0; /*15777*/
			$k[$j++] = $1.mcols - 3; /*15777*/
		}, function() {
			$k[$j++] = 0; /*15777*/
			$k[$j++] = $1.mcols - 2; /*15777*/
		}, function() {
			$k[$j++] = 0; /*15778*/
			$k[$j++] = $1.mcols - 1; /*15778*/
		}, function() {
			$k[$j++] = 1; /*15778*/
			$k[$j++] = $1.mcols - 3; /*15778*/
		}, function() {
			$k[$j++] = 1; /*15779*/
			$k[$j++] = $1.mcols - 2; /*15779*/
		}, function() {
			$k[$j++] = 1; /*15779*/
			$k[$j++] = $1.mcols - 1; /*15779*/
		}]); /*15779*/
		$1.dmc4 = _MM; /*15780*/
		$k[$j++] = Infinity; /*15782*/
		for (var _MP = 0, _MQ = $1.mrows * $1.mcols; _MP < _MQ; _MP++) { /*15782*/
			$k[$j++] = -1; /*15782*/
		} /*15782*/
		$1.mmat = $a(); /*15782*/
		for (var _MT = $1.cws.length - 1; _MT >= 0; _MT -= 1) { /*15783*/
			$k[$j++] = $get($1.cws, _MT); /*15783*/
		} /*15783*/
		$k[$j++] = 4; /*15823*/
		$k[$j++] = 0; /*15823*/
		for (;;) { /*15823*/
			var _MW = $k[--$j]; /*15786*/
			var _MX = $k[--$j]; /*15786*/
			$k[$j++] = _MX; /*15788*/
			$k[$j++] = _MW; /*15788*/
			if ((_MW == 0) && (_MX == $1.mrows)) { /*15788*/
				$k[$j++] = $1.dmc1; /*15787*/
				$1.module(); /*15787*/
			} /*15787*/
			var _Ma = $k[--$j]; /*15789*/
			var _Mb = $k[--$j]; /*15789*/
			$k[$j++] = _Mb; /*15791*/
			$k[$j++] = _Ma; /*15791*/
			if (((_Ma == 0) && (_Mb == ($1.mrows - 2))) && (($1.mcols % 4) != 0)) { /*15791*/
				$k[$j++] = $1.dmc2; /*15790*/
				$1.module(); /*15790*/
			} /*15790*/
			var _Mf = $k[--$j]; /*15792*/
			var _Mg = $k[--$j]; /*15792*/
			$k[$j++] = _Mg; /*15794*/
			$k[$j++] = _Mf; /*15794*/
			if (((_Mf == 0) && (_Mg == ($1.mrows - 2))) && (($1.mcols % 8) == 4)) { /*15794*/
				$k[$j++] = $1.dmc3; /*15793*/
				$1.module(); /*15793*/
			} /*15793*/
			var _Mk = $k[--$j]; /*15795*/
			var _Ml = $k[--$j]; /*15795*/
			$k[$j++] = _Ml; /*15797*/
			$k[$j++] = _Mk; /*15797*/
			if (((_Mk == 2) && (_Ml == ($1.mrows + 4))) && (($1.mcols % 8) == 0)) { /*15797*/
				$k[$j++] = $1.dmc4; /*15796*/
				$1.module(); /*15796*/
			} /*15796*/
			for (;;) { /*15807*/
				var _Mp = $k[--$j]; /*15800*/
				var _Mq = $k[--$j]; /*15800*/
				$k[$j++] = _Mq; /*15804*/
				$k[$j++] = _Mp; /*15804*/
				if ((_Mp >= 0) && (_Mq < $1.mrows)) { /*15804*/
					var _Ms = $k[--$j]; /*15801*/
					var _Mt = $k[--$j]; /*15801*/
					$k[$j++] = _Mt; /*15803*/
					$k[$j++] = _Ms; /*15803*/
					if ($get($1.mmat, _Ms + (_Mt * $1.mcols)) == -1) { /*15803*/
						$k[$j++] = $1.dmn; /*15802*/
						$1.module(); /*15802*/
					} /*15802*/
				} /*15802*/
				var _My = $k[--$j]; /*15805*/
				var _Mz = $k[--$j]; /*15805*/
				$k[$j++] = _Mz - 2; /*15806*/
				$k[$j++] = _My + 2; /*15806*/
				if (!(((_My + 2) < $1.mcols) && ((_Mz - 2) >= 0))) { /*15806*/
					break; /*15806*/
				} /*15806*/
			} /*15806*/
			var _N1 = $k[--$j]; /*15808*/
			var _N2 = $k[--$j]; /*15808*/
			$k[$j++] = _N2 + 1; /*15818*/
			$k[$j++] = _N1 + 3; /*15818*/
			for (;;) { /*15818*/
				var _N3 = $k[--$j]; /*15811*/
				var _N4 = $k[--$j]; /*15811*/
				$k[$j++] = _N4; /*15815*/
				$k[$j++] = _N3; /*15815*/
				if ((_N3 < $1.mcols) && (_N4 >= 0)) { /*15815*/
					var _N6 = $k[--$j]; /*15812*/
					var _N7 = $k[--$j]; /*15812*/
					$k[$j++] = _N7; /*15814*/
					$k[$j++] = _N6; /*15814*/
					if ($get($1.mmat, _N6 + (_N7 * $1.mcols)) == -1) { /*15814*/
						$k[$j++] = $1.dmn; /*15813*/
						$1.module(); /*15813*/
					} /*15813*/
				} /*15813*/
				var _NC = $k[--$j]; /*15816*/
				var _ND = $k[--$j]; /*15816*/
				$k[$j++] = _ND + 2; /*15817*/
				$k[$j++] = _NC - 2; /*15817*/
				if (!(((_NC - 2) >= 0) && ((_ND + 2) < $1.mrows))) { /*15817*/
					break; /*15817*/
				} /*15817*/
			} /*15817*/
			var _NF = $k[--$j]; /*15819*/
			var _NG = $k[--$j]; /*15819*/
			$k[$j++] = _NG + 3; /*15821*/
			$k[$j++] = _NF + 1; /*15821*/
			if (!(((_NF + 1) < $1.mcols) || ((_NG + 3) < $1.mrows))) { /*15821*/
				$j -= 2; /*15821*/
				break; /*15821*/
			} /*15821*/
		} /*15821*/
		if ($get($1.mmat, ($1.mrows * $1.mcols) - 1) == -1) { /*15829*/
			$puti($1.mmat, ($1.mrows * ($1.mcols - 1)) - 2, $a([1, 0])); /*15827*/
			$puti($1.mmat, ($1.mrows * $1.mcols) - 2, $a([0, 1])); /*15828*/
		} /*15828*/
		$1.pixs = $a($1.rows * $1.cols); /*15832*/
		$1.cwpos = 0; /*15833*/
		for (var _Na = 0, _NZ = $1.rows - 1; _Na <= _NZ; _Na += 1) { /*15849*/
			$1.i = _Na; /*15835*/
			if (($1.i % ($1.rrows + 2)) == 0) { /*15836*/
				$k[$j++] = $1.pixs; /*15836*/
				$k[$j++] = $1.i * $1.cols; /*15836*/
				$k[$j++] = Infinity; /*15836*/
				for (var _Nh = 0, _Ni = ~~($1.cols / 2); _Nh < _Ni; _Nh++) { /*15836*/
					$k[$j++] = 1; /*15836*/
					$k[$j++] = 0; /*15836*/
				} /*15836*/
				var _Nj = $a(); /*15836*/
				var _Nk = $k[--$j]; /*15836*/
				$puti($k[--$j], _Nk, _Nj); /*15836*/
			} /*15836*/
			if (($1.i % ($1.rrows + 2)) == ($1.rrows + 1)) { /*15837*/
				$k[$j++] = $1.pixs; /*15837*/
				$k[$j++] = $1.i * $1.cols; /*15837*/
				$k[$j++] = Infinity; /*15837*/
				for (var _Nt = 0, _Nu = $1.cols; _Nt < _Nu; _Nt++) { /*15837*/
					$k[$j++] = 1; /*15837*/
				} /*15837*/
				var _Nv = $a(); /*15837*/
				var _Nw = $k[--$j]; /*15837*/
				$puti($k[--$j], _Nw, _Nv); /*15837*/
			} /*15837*/
			if ((($1.i % ($1.rrows + 2)) != 0) && (($1.i % ($1.rrows + 2)) != ($1.rrows + 1))) { /*15848*/
				for (var _O5 = 0, _O4 = $1.cols - 1; _O5 <= _O4; _O5 += 1) { /*15847*/
					$1.j = _O5; /*15840*/
					if (($1.j % ($1.rcols + 2)) == 0) { /*15841*/
						$put($1.pixs, ($1.i * $1.cols) + $1.j, 1); /*15841*/
					} /*15841*/
					if (($1.j % ($1.rcols + 2)) == ($1.rcols + 1)) { /*15842*/
						$put($1.pixs, ($1.i * $1.cols) + $1.j, $1.i % 2); /*15842*/
					} /*15842*/
					if ((($1.j % ($1.rcols + 2)) != 0) && (($1.j % ($1.rcols + 2)) != ($1.rcols + 1))) { /*15846*/
						$put($1.pixs, ($1.i * $1.cols) + $1.j, $get($1.mmat, $1.cwpos)); /*15844*/
						$1.cwpos = $1.cwpos + 1; /*15845*/
					} /*15845*/
				} /*15845*/
			} /*15845*/
		} /*15845*/
		var _Od = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.cols,
			pixy: $1.rows,
			height: ($1.rows * 2) / 72,
			width: ($1.cols * 2) / 72,
			opt: $1.options
		}; /*15859*/
		$k[$j++] = _Od; /*15862*/
		if (!$1.dontdraw) { /*15862*/
			$0.renmatrix(); /*15862*/
		} /*15862*/
	};
	$0.datamatrixrectangular = function() {
		var $1 = {}; /*15890*/
		$1.options = $k[--$j]; /*15892*/
		$1.barcode = $k[--$j]; /*15893*/
		$1.dontdraw = false; /*15895*/
		$forall($1.options, function() { /*15906*/
			var _3 = $k[--$j]; /*15906*/
			$1[$k[--$j]] = _3; /*15906*/
		}); /*15906*/
		$1.options.dontdraw = true; /*15909*/
		$1.options.format = "rectangle"; /*15910*/
		$k[$j++] = "args"; /*15912*/
		$k[$j++] = $1.barcode; /*15912*/
		$k[$j++] = $1.options; /*15912*/
		$0.datamatrix(); /*15912*/
		var _9 = $k[--$j]; /*15912*/
		$1[$k[--$j]] = _9; /*15912*/
		$1.args.opt = $1.options; /*15914*/
		$k[$j++] = $1.args; /*15917*/
		if (!$1.dontdraw) { /*15917*/
			$0.renmatrix(); /*15917*/
		} /*15917*/
	};
	$0.qrcode = function() {
		var $1 = {}; /*15944*/
		$1.options = $k[--$j]; /*15946*/
		$1.barcode = $k[--$j]; /*15947*/
		$1.dontdraw = false; /*15949*/
		$1.format = "full"; /*15950*/
		$1.version = "unset"; /*15951*/
		$1.eclevel = "unset"; /*15952*/
		$1.parse = false; /*15953*/
		$1.parsefnc = false; /*15954*/
		$1.mask = -1; /*15955*/
		$forall($1.options, function() { /*15966*/
			var _3 = $k[--$j]; /*15966*/
			$1[$k[--$j]] = _3; /*15966*/
		}); /*15966*/
		$1.mask = ~~$1.mask; /*15968*/
		$1.barlen = $1.barcode.length; /*15991*/
		$1.fn1 = -1; /*15994*/
		var _8 = {
			FNC1: $1.fn1
		}; /*15996*/
		$1.fncvals = _8; /*15997*/
		$1.msg = $a($1.barlen); /*15998*/
		$1.i = 0; /*15999*/
		$1.j = 0; /*15999*/
		for (;;) { /*16013*/
			if ($1.i == $1.barlen) { /*16000*/
				break; /*16000*/
			} /*16000*/
			$1.char = $get($1.barcode, $1.i); /*16001*/
			if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*16009*/
				if ($get($1.barcode, $1.i + 1) != 94) { /*16007*/
					$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*16004*/
					$1.i = $1.i + 4; /*16005*/
				} else { /*16007*/
					$1.i = $1.i + 1; /*16007*/
				} /*16007*/
			} /*16007*/
			$put($1.msg, $1.j, $1.char); /*16010*/
			$1.i = $1.i + 1; /*16011*/
			$1.j = $1.j + 1; /*16012*/
		} /*16012*/
		$1.msg = $geti($1.msg, 0, $1.j); /*16014*/
		$1.msglen = $1.msg.length; /*16015*/
		$1.fnc1first = false; /*16018*/
		if ($1.msglen > 0) { /*16025*/
			if ($get($1.msg, 0) == $1.fn1) { /*16024*/
				$1.fnc1first = true; /*16021*/
				$k[$j++] = Infinity; /*16022*/
				$forall($geti($1.msg, 1, $1.msglen - 1), function() { /*16022*/
					var _k = $k[--$j]; /*16022*/
					$k[$j++] = _k; /*16022*/
					if (_k == 37) { /*16022*/
						var _l = $k[--$j]; /*16022*/
						$k[$j++] = _l; /*16022*/
						$k[$j++] = _l; /*16022*/
					} /*16022*/
				}); /*16022*/
				$1.msg = $a(); /*16022*/
				$1.msglen = $1.msg.length; /*16023*/
			} /*16023*/
		} /*16023*/
		if ($eq($1.eclevel, "unset")) { /*16028*/
			$k[$j++] = "eclevel"; /*16028*/
			if ($eq($1.format, "full")) { /*16028*/
				$k[$j++] = "M"; /*16028*/
			} else { /*16028*/
				$k[$j++] = "L"; /*16028*/
			} /*16028*/
			var _q = $k[--$j]; /*16028*/
			$1[$k[--$j]] = _q; /*16028*/
		} /*16028*/
		$1.N = 0; /*16031*/
		$1.A = 1; /*16031*/
		$1.B = 2; /*16031*/
		$1.K = 3; /*16031*/
		$k[$j++] = "Nexcl"; /*16036*/
		$k[$j++] = Infinity; /*16036*/
		$k[$j++] = Infinity; /*16035*/
		for (var _s = 48; _s <= 57; _s += 1) { /*16035*/
			$k[$j++] = _s; /*16035*/
		} /*16035*/
		var _t = $a(); /*16035*/
		for (var _u = 0, _v = _t.length; _u < _v; _u++) { /*16036*/
			$k[$j++] = $get(_t, _u); /*16036*/
			$k[$j++] = -1; /*16036*/
		} /*16036*/
		var _x = $d(); /*16036*/
		$1[$k[--$j]] = _x; /*16037*/
		$k[$j++] = "Aexcl"; /*16044*/
		$k[$j++] = Infinity; /*16044*/
		$k[$j++] = Infinity; /*16043*/
		$k[$j++] = 32; /*16042*/
		$k[$j++] = 36; /*16042*/
		$k[$j++] = 37; /*16042*/
		$k[$j++] = 42; /*16042*/
		$k[$j++] = 43; /*16042*/
		$k[$j++] = 45; /*16042*/
		$k[$j++] = 46; /*16042*/
		$k[$j++] = 47; /*16042*/
		$k[$j++] = 58; /*16042*/
		for (var _z = 65; _z <= 90; _z += 1) { /*16042*/
			$k[$j++] = _z; /*16042*/
		} /*16042*/
		$k[$j++] = $1.fn1; /*16043*/
		var _11 = $a(); /*16043*/
		for (var _12 = 0, _13 = _11.length; _12 < _13; _12++) { /*16044*/
			$k[$j++] = $get(_11, _12); /*16044*/
			$k[$j++] = -1; /*16044*/
		} /*16044*/
		var _15 = $d(); /*16044*/
		$1[$k[--$j]] = _15; /*16045*/
		$k[$j++] = "Bexcl"; /*16054*/
		$k[$j++] = Infinity; /*16054*/
		$k[$j++] = Infinity; /*16053*/
		for (var _17 = 0; _17 <= 31; _17 += 1) { /*16049*/
			$k[$j++] = _17; /*16049*/
		} /*16049*/
		$k[$j++] = 33; /*16051*/
		$k[$j++] = 34; /*16051*/
		$k[$j++] = 35; /*16051*/
		$k[$j++] = 38; /*16051*/
		$k[$j++] = 39; /*16051*/
		$k[$j++] = 40; /*16051*/
		$k[$j++] = 41; /*16051*/
		$k[$j++] = 44; /*16051*/
		for (var _18 = 59; _18 <= 64; _18 += 1) { /*16051*/
			$k[$j++] = _18; /*16051*/
		} /*16051*/
		for (var _19 = 91; _19 <= 127; _19 += 1) { /*16052*/
			$k[$j++] = _19; /*16052*/
		} /*16052*/
		for (var _1A = 160; _1A <= 223; _1A += 1) { /*16053*/
			$k[$j++] = _1A; /*16053*/
		} /*16053*/
		var _1B = $a(); /*16053*/
		for (var _1C = 0, _1D = _1B.length; _1C < _1D; _1C++) { /*16054*/
			$k[$j++] = $get(_1B, _1C); /*16054*/
			$k[$j++] = -1; /*16054*/
		} /*16054*/
		var _1F = $d(); /*16054*/
		$1[$k[--$j]] = _1F; /*16055*/
		$k[$j++] = "Kexcl"; /*16061*/
		$k[$j++] = Infinity; /*16061*/
		$k[$j++] = Infinity; /*16060*/
		for (var _1H = 129; _1H <= 159; _1H += 1) { /*16059*/
			$k[$j++] = _1H; /*16059*/
		} /*16059*/
		for (var _1I = 224; _1I <= 235; _1I += 1) { /*16060*/
			$k[$j++] = _1I; /*16060*/
		} /*16060*/
		var _1J = $a(); /*16060*/
		for (var _1K = 0, _1L = _1J.length; _1K < _1L; _1K++) { /*16061*/
			$k[$j++] = $get(_1J, _1K); /*16061*/
			$k[$j++] = -1; /*16061*/
		} /*16061*/
		var _1N = $d(); /*16061*/
		$1[$k[--$j]] = _1N; /*16062*/
		$1.mids = $a([$a(["0001", "0010", "0100", "1000"]), $a(["0001", "0010", "0100", "1000"]), $a(["0001", "0010", "0100", "1000"]), $a(["", -1, -1, -1]), $a(["0", "1", -1, -1]), $a(["00", "01", "10", "11"]), $a(["000", "001", "010", "011"])]); /*16072*/
		$1.cclens = $a([$a([10, 9, 8, 8]), $a([12, 11, 16, 10]), $a([14, 13, 16, 12]), $a([3, -1, -1, -1]), $a([4, 3, -1, -1]), $a([5, 4, 4, 3]), $a([6, 5, 5, 4])]); /*16082*/
		$1.termlens = $a([4, 4, 4, 3, 5, 7, 9]); /*16084*/
		$1.tobin = function() {
			var _1h = $s($k[--$j]); /*16088*/
			$k[$j++] = _1h; /*16088*/
			for (var _1j = 0, _1i = _1h.length - 1; _1j <= _1i; _1j += 1) { /*16088*/
				var _1k = $k[--$j]; /*16088*/
				$put(_1k, _1j, 48); /*16088*/
				$k[$j++] = _1k; /*16088*/
			} /*16088*/
			var _1l = $k[--$j]; /*16089*/
			var _1o = $cvrs($s(_1l.length), $k[--$j], 2); /*16089*/
			$puti(_1l, _1l.length - _1o.length, _1o); /*16089*/
			$k[$j++] = _1l; /*16089*/
		}; /*16090*/
		$1.charmap = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:"; /*16093*/
		$1.charvals = {}; /*16094*/
		for (var _1p = 0; _1p <= 44; _1p += 1) { /*16095*/
			$put($1.charvals, $get($1.charmap, _1p), _1p); /*16095*/
		} /*16095*/
		$1.encA = function() {
			$1.in = $k[--$j]; /*16098*/
			if ($1.fnc1first) { /*16101*/
				$k[$j++] = Infinity; /*16100*/
				$forall($1.in, function() { /*16100*/
					var _1w = $k[--$j]; /*16100*/
					$k[$j++] = _1w; /*16100*/
					if (_1w == -1) { /*16100*/
						$j--; /*16100*/
						$k[$j++] = 37; /*16100*/
					} /*16100*/
				}); /*16100*/
				$1.in = $a(); /*16100*/
			} /*16100*/
			$1.out = $s((~~(($1.in.length * 11) / 2)) + 1); /*16102*/
			$1.k = 0; /*16103*/
			$1.m = 0; /*16103*/
			for (;;) { /*16114*/
				if ($1.k == $1.in.length) { /*16104*/
					break; /*16104*/
				} /*16104*/
				if ($1.k < ($1.in.length - 1)) { /*16110*/
					$k[$j++] = ($get($1.charvals, $get($1.in, $1.k)) * 45) + $get($1.charvals, $get($1.in, $1.k + 1)); /*16106*/
					$k[$j++] = 11; /*16106*/
					$1.tobin(); /*16106*/
					$1.k = $1.k + 2; /*16107*/
				} else { /*16110*/
					$k[$j++] = $get($1.charvals, $get($1.in, $1.k)); /*16109*/
					$k[$j++] = 6; /*16109*/
					$1.tobin(); /*16109*/
					$1.k = $1.k + 1; /*16110*/
				} /*16110*/
				var _2L = $k[--$j]; /*16112*/
				$puti($1.out, $1.m, _2L); /*16112*/
				$1.m = _2L.length + $1.m; /*16113*/
			} /*16113*/
			$k[$j++] = $geti($1.out, 0, $1.m); /*16115*/
		}; /*16116*/
		$1.encN = function() {
			$1.in = $k[--$j]; /*16119*/
			$1.out = $s((~~(($1.in.length * 10) / 3)) + 1); /*16120*/
			$1.k = 0; /*16121*/
			$1.m = 0; /*16121*/
			for (;;) { /*16137*/
				if ($1.k == $1.in.length) { /*16122*/
					break; /*16122*/
				} /*16122*/
				if ($1.k < ($1.in.length - 2)) { /*16132*/
					$k[$j++] = 0; /*16124*/
					$forall($geti($1.in, $1.k, 3), function() { /*16124*/
						var _2c = $k[--$j]; /*16124*/
						var _2d = $k[--$j]; /*16124*/
						$k[$j++] = _2c + ((_2d * 10) - 48); /*16124*/
					}); /*16124*/
					$k[$j++] = 10; /*16124*/
					$1.tobin(); /*16124*/
					$1.k = $1.k + 3; /*16125*/
				} else { /*16132*/
					if ($1.k == ($1.in.length - 2)) { /*16132*/
						$k[$j++] = 0; /*16128*/
						$forall($geti($1.in, $1.k, 2), function() { /*16128*/
							var _2k = $k[--$j]; /*16128*/
							var _2l = $k[--$j]; /*16128*/
							$k[$j++] = _2k + ((_2l * 10) - 48); /*16128*/
						}); /*16128*/
						$k[$j++] = 7; /*16128*/
						$1.tobin(); /*16128*/
						$1.k = $1.k + 2; /*16129*/
					} else { /*16132*/
						$k[$j++] = 0; /*16131*/
						$forall($geti($1.in, $1.k, 1), function() { /*16131*/
							var _2q = $k[--$j]; /*16131*/
							var _2r = $k[--$j]; /*16131*/
							$k[$j++] = _2q + ((_2r * 10) - 48); /*16131*/
						}); /*16131*/
						$k[$j++] = 4; /*16131*/
						$1.tobin(); /*16131*/
						$1.k = $1.k + 1; /*16132*/
					} /*16132*/
				} /*16132*/
				var _2t = $k[--$j]; /*16135*/
				$puti($1.out, $1.m, _2t); /*16135*/
				$1.m = _2t.length + $1.m; /*16136*/
			} /*16136*/
			$k[$j++] = $geti($1.out, 0, $1.m); /*16138*/
		}; /*16139*/
		$1.encB = function() {
			$1.in = $k[--$j]; /*16142*/
			if ($1.fnc1first) { /*16145*/
				$k[$j++] = Infinity; /*16144*/
				$forall($1.in, function() { /*16144*/
					var _33 = $k[--$j]; /*16144*/
					$k[$j++] = _33; /*16144*/
					if (_33 == -1) { /*16144*/
						$j--; /*16144*/
						$k[$j++] = 29; /*16144*/
					} /*16144*/
				}); /*16144*/
				$1.in = $a(); /*16144*/
			} /*16144*/
			$1.out = $s($1.in.length * 8); /*16146*/
			for (var _39 = 0, _38 = $1.in.length - 1; _39 <= _38; _39 += 1) { /*16151*/
				$1.k = _39; /*16148*/
				$k[$j++] = ~~$z($get($1.in, $1.k)); /*16149*/
				$k[$j++] = 8; /*16149*/
				$1.tobin(); /*16149*/
				$puti($1.out, $1.k * 8, $k[--$j]); /*16150*/
			} /*16150*/
			$k[$j++] = $1.out; /*16152*/
		}; /*16153*/
		$1.encK = function() {
			$1.in = $k[--$j]; /*16156*/
			$1.out = $s((~~($1.in.length / 2)) * 13); /*16157*/
			$1.k = 0; /*16158*/
			$1.m = 0; /*16158*/
			for (;;) { /*16166*/
				if ($1.k == $1.in.length) { /*16159*/
					break; /*16159*/
				} /*16159*/
				var _3S = ($get($1.in, $1.k) * 256) + $get($1.in, $1.k + 1); /*16161*/
				$k[$j++] = _3S; /*16161*/
				if (_3S < 57408) { /*16161*/
					$k[$j++] = 33088; /*16161*/
				} else { /*16161*/
					$k[$j++] = 49472; /*16161*/
				} /*16161*/
				var _3T = $k[--$j]; /*16161*/
				var _3V = $k[--$j] - _3T; /*16162*/
				$k[$j++] = ((_3V >>> 8) * 192) + (_3V & 255); /*16163*/
				$k[$j++] = 13; /*16163*/
				$1.tobin(); /*16163*/
				var _3W = $k[--$j]; /*16163*/
				$puti($1.out, $1.m, _3W); /*16163*/
				$1.m = _3W.length + $1.m; /*16164*/
				$1.k = $1.k + 2; /*16165*/
			} /*16165*/
			$k[$j++] = $1.out; /*16167*/
		}; /*16168*/
		$1.encfuncs = $a(["encN", "encA", "encB", "encK"]); /*16170*/
		$1.addtobits = function() {
			var _3d = $k[--$j]; /*16173*/
			$puti($1.bits, $1.j, _3d); /*16173*/
			$1.j = _3d.length + $1.j; /*16174*/
		}; /*16175*/
		$k[$j++] = Infinity; /*16177*/
		for (var _3i = 0, _3j = $1.msglen; _3i < _3j; _3i++) { /*16177*/
			$k[$j++] = 0; /*16177*/
		} /*16177*/
		$k[$j++] = 0; /*16177*/
		$1.numNs = $a(); /*16177*/
		$k[$j++] = Infinity; /*16178*/
		for (var _3m = 0, _3n = $1.msglen; _3m < _3n; _3m++) { /*16178*/
			$k[$j++] = 0; /*16178*/
		} /*16178*/
		$k[$j++] = 0; /*16178*/
		$1.numAs = $a(); /*16178*/
		$k[$j++] = Infinity; /*16179*/
		for (var _3q = 0, _3r = $1.msglen; _3q < _3r; _3q++) { /*16179*/
			$k[$j++] = 0; /*16179*/
		} /*16179*/
		$k[$j++] = 0; /*16179*/
		$1.numBs = $a(); /*16179*/
		$k[$j++] = Infinity; /*16180*/
		for (var _3u = 0, _3v = $1.msglen; _3u < _3v; _3u++) { /*16180*/
			$k[$j++] = 0; /*16180*/
		} /*16180*/
		$k[$j++] = -1; /*16180*/
		$1.numKs = $a(); /*16180*/
		$k[$j++] = Infinity; /*16181*/
		for (var _3y = 0, _3z = $1.msglen; _3y < _3z; _3y++) { /*16181*/
			$k[$j++] = 0; /*16181*/
		} /*16181*/
		$k[$j++] = 9999; /*16181*/
		$1.nextNs = $a(); /*16181*/
		$k[$j++] = Infinity; /*16182*/
		for (var _42 = 0, _43 = $1.msglen; _42 < _43; _42++) { /*16182*/
			$k[$j++] = 0; /*16182*/
		} /*16182*/
		$k[$j++] = 9999; /*16182*/
		$1.nextBs = $a(); /*16182*/
		$k[$j++] = Infinity; /*16183*/
		for (var _46 = 0, _47 = $1.msglen; _46 < _47; _46++) { /*16183*/
			$k[$j++] = 0; /*16183*/
		} /*16183*/
		$k[$j++] = 9999; /*16183*/
		$1.nextAs = $a(); /*16183*/
		$k[$j++] = Infinity; /*16184*/
		for (var _4A = 0, _4B = $1.msglen; _4A < _4B; _4A++) { /*16184*/
			$k[$j++] = 0; /*16184*/
		} /*16184*/
		$k[$j++] = 9999; /*16184*/
		$1.nextKs = $a(); /*16184*/
		for (var _4E = $1.msglen - 1; _4E >= 0; _4E -= 1) { /*16212*/
			$1.i = _4E; /*16186*/
			$1.barchar = $get($1.msg, $1.i); /*16187*/
			var _4K = $get($1.Kexcl, $1.barchar) !== undefined; /*16188*/
			if (_4K) { /*16192*/
				$put($1.nextKs, $1.i, 0); /*16189*/
				$put($1.numKs, $1.i, $get($1.numKs, $1.i + 1) + 1); /*16190*/
			} else { /*16192*/
				$put($1.nextKs, $1.i, $get($1.nextKs, $1.i + 1) + 1); /*16192*/
			} /*16192*/
			var _4Z = $get($1.Nexcl, $1.barchar) !== undefined; /*16194*/
			if (_4Z) { /*16198*/
				$put($1.nextNs, $1.i, 0); /*16195*/
				$put($1.numNs, $1.i, $get($1.numNs, $1.i + 1) + 1); /*16196*/
			} else { /*16198*/
				$put($1.nextNs, $1.i, $get($1.nextNs, $1.i + 1) + 1); /*16198*/
			} /*16198*/
			var _4o = $get($1.Bexcl, $1.barchar) !== undefined; /*16200*/
			if (_4o) { /*16204*/
				$put($1.nextBs, $1.i, 0); /*16201*/
				$put($1.numBs, $1.i, $get($1.numBs, $1.i + 1) + 1); /*16202*/
			} else { /*16204*/
				$put($1.nextBs, $1.i, $get($1.nextBs, $1.i + 1) + 1); /*16204*/
			} /*16204*/
			var _53 = $get($1.Aexcl, $1.barchar) !== undefined; /*16206*/
			if (_53) { /*16210*/
				$put($1.nextAs, $1.i, 0); /*16207*/
				$put($1.numAs, $1.i, $get($1.numAs, $1.i + 1) + 1); /*16208*/
			} else { /*16210*/
				$put($1.nextAs, $1.i, $get($1.nextAs, $1.i + 1) + 1); /*16210*/
			} /*16210*/
		} /*16210*/
		$k[$j++] = Infinity; /*16213*/
		var _5G = $1.numKs; /*16213*/
		for (var _5H = 0, _5I = _5G.length; _5H < _5I; _5H++) { /*16213*/
			$k[$j++] = ~~(($get(_5G, _5H) + 1) / 2); /*16213*/
		} /*16213*/
		$1.numKs = $a(); /*16213*/
		$1.KbeforeB = function() {
			var _5O = $get($k[--$j], $1.ver); /*16215*/
			$k[$j++] = $ge($1.numK, _5O) && ($get($1.nextBs, ($1.numK * 2) + $1.i) == 0); /*16215*/
		}; /*16215*/
		$1.KbeforeA = function() {
			var _5W = $get($k[--$j], $1.ver); /*16216*/
			$k[$j++] = $ge($1.numK, _5W) && ($get($1.nextAs, ($1.numK * 2) + $1.i) == 0); /*16216*/
		}; /*16216*/
		$1.KbeforeN = function() {
			var _5e = $get($k[--$j], $1.ver); /*16217*/
			$k[$j++] = $ge($1.numK, _5e) && ($get($1.nextNs, ($1.numK * 2) + $1.i) == 0); /*16217*/
		}; /*16217*/
		$1.KbeforeE = function() {
			var _5m = $get($k[--$j], $1.ver); /*16218*/
			$k[$j++] = $ge($1.numK, _5m) && ((($1.numK * 2) + $1.i) == $1.msglen); /*16218*/
		}; /*16218*/
		$1.AbeforeK = function() {
			var _5t = $get($k[--$j], $1.ver); /*16219*/
			$k[$j++] = $ge($1.numA, _5t) && ($get($1.nextKs, $1.numA + $1.i) == 0); /*16219*/
		}; /*16219*/
		$1.AbeforeB = function() {
			var _61 = $get($k[--$j], $1.ver); /*16220*/
			$k[$j++] = $ge($1.numA, _61) && ($get($1.nextBs, $1.numA + $1.i) == 0); /*16220*/
		}; /*16220*/
		$1.AbeforeN = function() {
			var _69 = $get($k[--$j], $1.ver); /*16221*/
			$k[$j++] = $ge($1.numA, _69) && ($get($1.nextNs, $1.numA + $1.i) == 0); /*16221*/
		}; /*16221*/
		$1.AbeforeE = function() {
			var _6H = $get($k[--$j], $1.ver); /*16222*/
			$k[$j++] = $ge($1.numA, _6H) && (($1.numA + $1.i) == $1.msglen); /*16222*/
		}; /*16222*/
		$1.NbeforeK = function() {
			var _6O = $get($k[--$j], $1.ver); /*16223*/
			$k[$j++] = $ge($1.numN, _6O) && ($get($1.nextKs, $1.numN + $1.i) == 0); /*16223*/
		}; /*16223*/
		$1.NbeforeB = function() {
			var _6W = $get($k[--$j], $1.ver); /*16224*/
			$k[$j++] = $ge($1.numN, _6W) && ($get($1.nextBs, $1.numN + $1.i) == 0); /*16224*/
		}; /*16224*/
		$1.NbeforeA = function() {
			var _6e = $get($k[--$j], $1.ver); /*16225*/
			$k[$j++] = $ge($1.numN, _6e) && ($get($1.nextAs, $1.numN + $1.i) == 0); /*16225*/
		}; /*16225*/
		$1.NbeforeE = function() {
			var _6m = $get($k[--$j], $1.ver); /*16226*/
			$k[$j++] = $ge($1.numN, _6m) && (($1.numN + $1.i) == $1.msglen); /*16226*/
		}; /*16226*/
		$1.msgbits = $a([-1, -1, -1, -1, -1, -1, -1]); /*16229*/
		$1.v1to9 = 0; /*16230*/
		$1.v10to26 = 1; /*16230*/
		$1.v27to40 = 2; /*16230*/
		$1.vM1 = 3; /*16230*/
		$1.vM2 = 4; /*16230*/
		$1.vM3 = 5; /*16230*/
		$1.vM4 = 6; /*16230*/
		$1.e = 10000; /*16231*/
		var _6y = $a([$1.v1to9, $1.v10to26, $1.v27to40, $1.vM1, $1.vM2, $1.vM3, $1.vM4]); /*16232*/
		for (var _6z = 0, _70 = _6y.length; _6z < _70; _6z++) { /*16349*/
			$1.ver = $get(_6y, _6z); /*16233*/
			$1.mode = -1; /*16236*/
			$1.seq = $a([]); /*16236*/
			$1.i = 0; /*16236*/
			for (;;) { /*16323*/
				if ($1.i >= $1.msglen) { /*16237*/
					break; /*16237*/
				} /*16237*/
				$1.numK = $get($1.numKs, $1.i); /*16238*/
				$1.numB = $get($1.numBs, $1.i); /*16239*/
				$1.numA = $get($1.numAs, $1.i); /*16240*/
				$1.numN = $get($1.numNs, $1.i); /*16241*/
				if (($1.ver == $1.vM1) && ($1.numA >= 1)) { /*16242*/
					$1.seq = -1; /*16242*/
					break; /*16242*/
				} /*16242*/
				if (($1.ver == $1.vM1) && ($1.numB >= 1)) { /*16243*/
					$1.seq = -1; /*16243*/
					break; /*16243*/
				} /*16243*/
				if (($1.ver == $1.vM1) && ($1.numK >= 1)) { /*16244*/
					$1.seq = -1; /*16244*/
					break; /*16244*/
				} /*16244*/
				if (($1.ver == $1.vM2) && ($1.numB >= 1)) { /*16245*/
					$1.seq = -1; /*16245*/
					break; /*16245*/
				} /*16245*/
				if (($1.ver == $1.vM2) && ($1.numK >= 1)) { /*16246*/
					$1.seq = -1; /*16246*/
					break; /*16246*/
				} /*16246*/
				for (;;) { /*16304*/
					if ($1.mode == -1) { /*16265*/
						$k[$j++] = $a([1, 1, 1, $1.e, $1.e, 1, 1]); /*16249*/
						$1.KbeforeA(); /*16249*/
						if ($k[--$j]) { /*16249*/
							$k[$j++] = $1.K; /*16249*/
							break; /*16249*/
						} /*16249*/
						$k[$j++] = $a([1, 1, 1, $1.e, $1.e, 1, 1]); /*16250*/
						$1.KbeforeN(); /*16250*/
						if ($k[--$j]) { /*16250*/
							$k[$j++] = $1.K; /*16250*/
							break; /*16250*/
						} /*16250*/
						$k[$j++] = $a([5, 5, 6, $1.e, $1.e, 2, 3]); /*16251*/
						$1.KbeforeB(); /*16251*/
						if ($k[--$j]) { /*16251*/
							$k[$j++] = $1.K; /*16251*/
							break; /*16251*/
						} /*16251*/
						$k[$j++] = $a([1, 1, 1, $1.e, $1.e, 1, 1]); /*16252*/
						$1.KbeforeE(); /*16252*/
						if ($k[--$j]) { /*16252*/
							$k[$j++] = $1.K; /*16252*/
							break; /*16252*/
						} /*16252*/
						if ($1.numK >= 1) { /*16253*/
							$k[$j++] = $1.B; /*16253*/
							break; /*16253*/
						} /*16253*/
						$k[$j++] = $a([6, 7, 8, $1.e, $1.e, 3, 4]); /*16254*/
						$1.AbeforeB(); /*16254*/
						if ($k[--$j]) { /*16254*/
							$k[$j++] = $1.A; /*16254*/
							break; /*16254*/
						} /*16254*/
						$k[$j++] = $a([1, 1, 1, $1.e, 1, 1, 1]); /*16255*/
						$1.AbeforeE(); /*16255*/
						if ($k[--$j]) { /*16255*/
							$k[$j++] = $1.A; /*16255*/
							break; /*16255*/
						} /*16255*/
						if ($1.numA >= 1) { /*16258*/
							if ($1.ver != $1.vM2) { /*16257*/
								$k[$j++] = $1.B; /*16257*/
							} else { /*16257*/
								$k[$j++] = $1.A; /*16257*/
							} /*16257*/
							break; /*16257*/
						} /*16257*/
						$k[$j++] = $a([4, 4, 5, $1.e, $1.e, 2, 3]); /*16259*/
						$1.NbeforeB(); /*16259*/
						if ($k[--$j]) { /*16259*/
							$k[$j++] = $1.N; /*16259*/
							break; /*16259*/
						} /*16259*/
						$k[$j++] = $a([1, 1, 1, $1.e, $1.e, 1, 1]); /*16260*/
						$1.NbeforeB(); /*16260*/
						if ($k[--$j]) { /*16260*/
							$k[$j++] = $1.B; /*16260*/
							break; /*16260*/
						} /*16260*/
						$k[$j++] = $a([7, 8, 9, $1.e, 3, 4, 5]); /*16261*/
						$1.NbeforeA(); /*16261*/
						if ($k[--$j]) { /*16261*/
							$k[$j++] = $1.N; /*16261*/
							break; /*16261*/
						} /*16261*/
						$k[$j++] = $a([1, 1, 1, $1.e, 1, 1, 1]); /*16262*/
						$1.NbeforeA(); /*16262*/
						if ($k[--$j]) { /*16262*/
							$k[$j++] = $1.A; /*16262*/
							break; /*16262*/
						} /*16262*/
						if ($1.numN >= 1) { /*16263*/
							$k[$j++] = $1.N; /*16263*/
							break; /*16263*/
						} /*16263*/
						$k[$j++] = $1.B; /*16264*/
						break; /*16264*/
					} /*16264*/
					if ($1.mode == $1.B) { /*16280*/
						$k[$j++] = $a([9, 12, 13, $1.e, $1.e, 4, 5]); /*16267*/
						$1.KbeforeB(); /*16267*/
						if ($k[--$j]) { /*16267*/
							$k[$j++] = $1.K; /*16267*/
							break; /*16267*/
						} /*16267*/
						$k[$j++] = $a([9, 10, 12, $1.e, $1.e, 4, 5]); /*16268*/
						$1.KbeforeA(); /*16268*/
						if ($k[--$j]) { /*16268*/
							$k[$j++] = $1.K; /*16268*/
							break; /*16268*/
						} /*16268*/
						$k[$j++] = $a([9, 10, 11, $1.e, $1.e, 5, 6]); /*16269*/
						$1.KbeforeN(); /*16269*/
						if ($k[--$j]) { /*16269*/
							$k[$j++] = $1.K; /*16269*/
							break; /*16269*/
						} /*16269*/
						$k[$j++] = $a([4, 5, 6, $1.e, $1.e, 2, 3]); /*16270*/
						$1.KbeforeE(); /*16270*/
						if ($k[--$j]) { /*16270*/
							$k[$j++] = $1.K; /*16270*/
							break; /*16270*/
						} /*16270*/
						$k[$j++] = $a([11, 12, 14, $1.e, $1.e, 5, 7]); /*16271*/
						$1.AbeforeK(); /*16271*/
						if ($k[--$j]) { /*16271*/
							$k[$j++] = $1.A; /*16271*/
							break; /*16271*/
						} /*16271*/
						$k[$j++] = $a([11, 15, 16, $1.e, $1.e, 6, 7]); /*16272*/
						$1.AbeforeB(); /*16272*/
						if ($k[--$j]) { /*16272*/
							$k[$j++] = $1.A; /*16272*/
							break; /*16272*/
						} /*16272*/
						$k[$j++] = $a([12, 13, 15, $1.e, $1.e, 6, 8]); /*16273*/
						$1.AbeforeN(); /*16273*/
						if ($k[--$j]) { /*16273*/
							$k[$j++] = $1.A; /*16273*/
							break; /*16273*/
						} /*16273*/
						$k[$j++] = $a([6, 7, 8, $1.e, $1.e, 3, 4]); /*16274*/
						$1.AbeforeE(); /*16274*/
						if ($k[--$j]) { /*16274*/
							$k[$j++] = $1.A; /*16274*/
							break; /*16274*/
						} /*16274*/
						$k[$j++] = $a([6, 7, 8, $1.e, $1.e, 3, 4]); /*16275*/
						$1.NbeforeK(); /*16275*/
						if ($k[--$j]) { /*16275*/
							$k[$j++] = $1.N; /*16275*/
							break; /*16275*/
						} /*16275*/
						$k[$j++] = $a([6, 8, 9, $1.e, $1.e, 3, 4]); /*16276*/
						$1.NbeforeB(); /*16276*/
						if ($k[--$j]) { /*16276*/
							$k[$j++] = $1.N; /*16276*/
							break; /*16276*/
						} /*16276*/
						$k[$j++] = $a([6, 7, 8, $1.e, $1.e, 3, 4]); /*16277*/
						$1.NbeforeA(); /*16277*/
						if ($k[--$j]) { /*16277*/
							$k[$j++] = $1.N; /*16277*/
							break; /*16277*/
						} /*16277*/
						$k[$j++] = $a([3, 4, 5, $1.e, $1.e, 2, 3]); /*16278*/
						$1.NbeforeE(); /*16278*/
						if ($k[--$j]) { /*16278*/
							$k[$j++] = $1.N; /*16278*/
							break; /*16278*/
						} /*16278*/
						$k[$j++] = $1.B; /*16279*/
						break; /*16279*/
					} /*16279*/
					if ($1.mode == $1.A) { /*16289*/
						if ($1.numK >= 1) { /*16282*/
							$k[$j++] = $1.K; /*16282*/
							break; /*16282*/
						} /*16282*/
						if ($1.numB >= 1) { /*16283*/
							$k[$j++] = $1.B; /*16283*/
							break; /*16283*/
						} /*16283*/
						$k[$j++] = $a([13, 15, 17, $1.e, 5, 7, 9]); /*16284*/
						$1.NbeforeA(); /*16284*/
						if ($k[--$j]) { /*16284*/
							$k[$j++] = $1.N; /*16284*/
							break; /*16284*/
						} /*16284*/
						$k[$j++] = $a([13, 17, 18, $1.e, $1.e, 7, 9]); /*16285*/
						$1.NbeforeB(); /*16285*/
						if ($k[--$j]) { /*16285*/
							$k[$j++] = $1.N; /*16285*/
							break; /*16285*/
						} /*16285*/
						$k[$j++] = $a([7, 8, 9, $1.e, 3, 4, 5]); /*16286*/
						$1.NbeforeE(); /*16286*/
						if ($k[--$j]) { /*16286*/
							$k[$j++] = $1.N; /*16286*/
							break; /*16286*/
						} /*16286*/
						if (($1.numA >= 1) || ($1.numN >= 1)) { /*16287*/
							$k[$j++] = $1.A; /*16287*/
							break; /*16287*/
						} /*16287*/
						$k[$j++] = $1.B; /*16288*/
						break; /*16288*/
					} /*16288*/
					if ($1.mode == $1.N) { /*16296*/
						if ($1.numK >= 1) { /*16291*/
							$k[$j++] = $1.K; /*16291*/
							break; /*16291*/
						} /*16291*/
						if ($1.numB >= 1) { /*16292*/
							$k[$j++] = $1.B; /*16292*/
							break; /*16292*/
						} /*16292*/
						if ($1.numA >= 1) { /*16293*/
							$k[$j++] = $1.A; /*16293*/
							break; /*16293*/
						} /*16293*/
						if ($1.numN >= 1) { /*16294*/
							$k[$j++] = $1.N; /*16294*/
							break; /*16294*/
						} /*16294*/
						$k[$j++] = $1.B; /*16295*/
						break; /*16295*/
					} /*16295*/
					if ($1.mode == $1.K) { /*16303*/
						if ($1.numB >= 1) { /*16298*/
							$k[$j++] = $1.B; /*16298*/
							break; /*16298*/
						} /*16298*/
						if ($1.numA >= 1) { /*16299*/
							$k[$j++] = $1.A; /*16299*/
							break; /*16299*/
						} /*16299*/
						if ($1.numN >= 1) { /*16300*/
							$k[$j++] = $1.N; /*16300*/
							break; /*16300*/
						} /*16300*/
						if ($1.numK >= 1) { /*16301*/
							$k[$j++] = $1.K; /*16301*/
							break; /*16301*/
						} /*16301*/
						$k[$j++] = $1.B; /*16302*/
						break; /*16302*/
					} /*16302*/
				} /*16302*/
				var _AC = $k[--$j]; /*16305*/
				$k[$j++] = _AC; /*16305*/
				if ((_AC == $1.K) && $1.fnc1first) { /*16305*/
					$j--; /*16305*/
					$k[$j++] = $1.B; /*16305*/
				} /*16305*/
				var _AG = $k[--$j]; /*16306*/
				$k[$j++] = _AG; /*16321*/
				if (_AG == $1.mode) { /*16320*/
					$j--; /*16307*/
					var _AM = ($1.mode == $1.K) ? 2 : 1; /*16308*/
					$1.dat = $geti($1.msg, $1.i, _AM); /*16308*/
					$k[$j++] = Infinity; /*16312*/
					$aload($1.seq); /*16310*/
					$k[$j++] = Infinity; /*16311*/
					var _AP = $k[--$j]; /*16311*/
					var _AQ = $k[--$j]; /*16311*/
					$k[$j++] = _AP; /*16311*/
					$aload(_AQ); /*16311*/
					$aload($1.dat); /*16311*/
					var _AS = $a(); /*16311*/
					$k[$j++] = _AS; /*16311*/
					$1.seq = $a(); /*16312*/
				} else { /*16320*/
					$1.mode = $k[--$j]; /*16314*/
					if ($1.mode == $1.K) { /*16315*/
						$k[$j++] = $1.K; /*16315*/
						$k[$j++] = $geti($1.msg, $1.i, $1.numK * 2); /*16315*/
					} /*16315*/
					if ($1.mode == $1.B) { /*16316*/
						$k[$j++] = $1.B; /*16316*/
						$k[$j++] = $geti($1.msg, $1.i, $1.numB); /*16316*/
					} /*16316*/
					if ($1.mode == $1.A) { /*16317*/
						$k[$j++] = $1.A; /*16317*/
						$k[$j++] = $geti($1.msg, $1.i, $1.numA); /*16317*/
					} /*16317*/
					if ($1.mode == $1.N) { /*16318*/
						$k[$j++] = $1.N; /*16318*/
						$k[$j++] = $geti($1.msg, $1.i, $1.numN); /*16318*/
					} /*16318*/
					$1.dat = $k[--$j]; /*16319*/
					$1.sw = $k[--$j]; /*16319*/
					$k[$j++] = Infinity; /*16320*/
					$aload($1.seq); /*16320*/
					$k[$j++] = $1.sw; /*16320*/
					$k[$j++] = $1.dat; /*16320*/
					$1.seq = $a(); /*16320*/
				} /*16320*/
				$1.i = $1.i + $1.dat.length; /*16322*/
			} /*16322*/
			for (;;) { /*16348*/
				if ($1.seq == -1) { /*16327*/
					break; /*16327*/
				} /*16327*/
				$1.bits = $s(23648); /*16328*/
				$1.j = 0; /*16329*/
				if ($1.fnc1first) { /*16330*/
					$k[$j++] = "0101"; /*16330*/
					$1.addtobits(); /*16330*/
				} /*16330*/
				$1.abort = false; /*16331*/
				for (var _BA = 0, _B9 = $1.seq.length - 1; _BA <= _B9; _BA += 2) { /*16343*/
					$1.i = _BA; /*16333*/
					$1.mode = $get($1.seq, $1.i); /*16334*/
					$k[$j++] = $get($get($1.mids, $1.ver), $1.mode); /*16335*/
					$1.addtobits(); /*16335*/
					$1.cclen = $get($get($1.cclens, $1.ver), $1.mode); /*16336*/
					$1.chars = $get($1.seq, $1.i + 1); /*16337*/
					if ($1.chars.length >= (~~Math.pow(2, $1.cclen))) { /*16340*/
						$1.abort = true; /*16339*/
						break; /*16339*/
					} /*16339*/
					$k[$j++] = $1.chars.length; /*16341*/
					if ($1.mode == $1.K) { /*16341*/
						var _BW = $k[--$j]; /*16341*/
						$k[$j++] = ~~(_BW / 2); /*16341*/
					} /*16341*/
					$k[$j++] = $1.cclen; /*16341*/
					$1.tobin(); /*16341*/
					$1.addtobits(); /*16341*/
					$k[$j++] = $1.chars; /*16342*/
					$1[$get($1.encfuncs, $1.mode)](); /*16342*/
					$1.addtobits(); /*16342*/
				} /*16342*/
				if ($1.abort) { /*16344*/
					break; /*16344*/
				} /*16344*/
				$1.bits = $geti($1.bits, 0, $1.j); /*16345*/
				$put($1.msgbits, $1.ver, $1.bits); /*16346*/
				break; /*16347*/
			} /*16347*/
		} /*16347*/
		$1.metrics = $a([$a(["micro", "M1", $1.vM1, 11, 98, 99, 36, $a([2, 99, 99, 99]), $a([1, 0, -1, -1, -1, -1, -1, -1])]), $a(["micro", "M2", $1.vM2, 13, 98, 99, 80, $a([5, 6, 99, 99]), $a([1, 0, 1, 0, -1, -1, -1, -1])]), $a(["micro", "M3", $1.vM3, 15, 98, 99, 132, $a([6, 8, 99, 99]), $a([1, 0, 1, 0, -1, -1, -1, -1])]), $a(["micro", "M4", $1.vM4, 17, 98, 99, 192, $a([8, 10, 14, 99]), $a([1, 0, 1, 0, 1, 0, -1, -1])]), $a(["full", "1", $1.v1to9, 21, 98, 99, 208, $a([7, 10, 13, 17]), $a([1, 0, 1, 0, 1, 0, 1, 0])]), $a(["full", "2", $1.v1to9, 25, 18, 99, 359, $a([10, 16, 22, 28]), $a([1, 0, 1, 0, 1, 0, 1, 0])]), $a(["full", "3", $1.v1to9, 29, 22, 99, 567, $a([15, 26, 36, 44]), $a([1, 0, 1, 0, 2, 0, 2, 0])]), $a(["full", "4", $1.v1to9, 33, 26, 99, 807, $a([20, 36, 52, 64]), $a([1, 0, 2, 0, 2, 0, 4, 0])]), $a(["full", "5", $1.v1to9, 37, 30, 99, 1079, $a([26, 48, 72, 88]), $a([1, 0, 2, 0, 2, 2, 2, 2])]), $a(["full", "6", $1.v1to9, 41, 34, 99, 1383, $a([36, 64, 96, 112]), $a([2, 0, 4, 0, 4, 0, 4, 0])]), $a(["full", "7", $1.v1to9, 45, 22, 38, 1568, $a([40, 72, 108, 130]), $a([2, 0, 4, 0, 2, 4, 4, 1])]), $a(["full", "8", $1.v1to9, 49, 24, 42, 1936, $a([48, 88, 132, 156]), $a([2, 0, 2, 2, 4, 2, 4, 2])]), $a(["full", "9", $1.v1to9, 53, 26, 46, 2336, $a([60, 110, 160, 192]), $a([2, 0, 3, 2, 4, 4, 4, 4])]), $a(["full", "10", $1.v10to26, 57, 28, 50, 2768, $a([72, 130, 192, 224]), $a([2, 2, 4, 1, 6, 2, 6, 2])]), $a(["full", "11", $1.v10to26, 61, 30, 54, 3232, $a([80, 150, 224, 264]), $a([4, 0, 1, 4, 4, 4, 3, 8])]), $a(["full", "12", $1.v10to26, 65, 32, 58, 3728, $a([96, 176, 260, 308]), $a([2, 2, 6, 2, 4, 6, 7, 4])]), $a(["full", "13", $1.v10to26, 69, 34, 62, 4256, $a([104, 198, 288, 352]), $a([4, 0, 8, 1, 8, 4, 12, 4])]), $a(["full", "14", $1.v10to26, 73, 26, 46, 4651, $a([120, 216, 320, 384]), $a([3, 1, 4, 5, 11, 5, 11, 5])]), $a(["full", "15", $1.v10to26, 77, 26, 48, 5243, $a([132, 240, 360, 432]), $a([5, 1, 5, 5, 5, 7, 11, 7])]), $a(["full", "16", $1.v10to26, 81, 26, 50, 5867, $a([144, 280, 408, 480]), $a([5, 1, 7, 3, 15, 2, 3, 13])]), $a(["full", "17", $1.v10to26, 85, 30, 54, 6523, $a([168, 308, 448, 532]), $a([1, 5, 10, 1, 1, 15, 2, 17])]), $a(["full", "18", $1.v10to26, 89, 30, 56, 7211, $a([180, 338, 504, 588]), $a([5, 1, 9, 4, 17, 1, 2, 19])]), $a(["full", "19", $1.v10to26, 93, 30, 58, 7931, $a([196, 364, 546, 650]), $a([3, 4, 3, 11, 17, 4, 9, 16])]), $a(["full", "20", $1.v10to26, 97, 34, 62, 8683, $a([224, 416, 600, 700]), $a([3, 5, 3, 13, 15, 5, 15, 10])]), $a(["full", "21", $1.v10to26, 101, 28, 50, 9252, $a([224, 442, 644, 750]), $a([4, 4, 17, 0, 17, 6, 19, 6])]), $a(["full", "22", $1.v10to26, 105, 26, 50, 10068, $a([252, 476, 690, 816]), $a([2, 7, 17, 0, 7, 16, 34, 0])]), $a(["full", "23", $1.v10to26, 109, 30, 54, 10916, $a([270, 504, 750, 900]), $a([4, 5, 4, 14, 11, 14, 16, 14])]), $a(["full", "24", $1.v10to26, 113, 28, 54, 11796, $a([300, 560, 810, 960]), $a([6, 4, 6, 14, 11, 16, 30, 2])]), $a(["full", "25", $1.v10to26, 117, 32, 58, 12708, $a([312, 588, 870, 1050]), $a([8, 4, 8, 13, 7, 22, 22, 13])]), $a(["full", "26", $1.v10to26, 121, 30, 58, 13652, $a([336, 644, 952, 1110]), $a([10, 2, 19, 4, 28, 6, 33, 4])]), $a(["full", "27", $1.v27to40, 125, 34, 62, 14628, $a([360, 700, 1020, 1200]), $a([8, 4, 22, 3, 8, 26, 12, 28])]), $a(["full", "28", $1.v27to40, 129, 26, 50, 15371, $a([390, 728, 1050, 1260]), $a([3, 10, 3, 23, 4, 31, 11, 31])]), $a(["full", "29", $1.v27to40, 133, 30, 54, 16411, $a([420, 784, 1140, 1350]), $a([7, 7, 21, 7, 1, 37, 19, 26])]), $a(["full", "30", $1.v27to40, 137, 26, 52, 17483, $a([450, 812, 1200, 1440]), $a([5, 10, 19, 10, 15, 25, 23, 25])]), $a(["full", "31", $1.v27to40, 141, 30, 56, 18587, $a([480, 868, 1290, 1530]), $a([13, 3, 2, 29, 42, 1, 23, 28])]), $a(["full", "32", $1.v27to40, 145, 34, 60, 19723, $a([510, 924, 1350, 1620]), $a([17, 0, 10, 23, 10, 35, 19, 35])]), $a(["full", "33", $1.v27to40, 149, 30, 58, 20891, $a([540, 980, 1440, 1710]), $a([17, 1, 14, 21, 29, 19, 11, 46])]), $a(["full", "34", $1.v27to40, 153, 34, 62, 22091, $a([570, 1036, 1530, 1800]), $a([13, 6, 14, 23, 44, 7, 59, 1])]), $a(["full", "35", $1.v27to40, 157, 30, 54, 23008, $a([570, 1064, 1590, 1890]), $a([12, 7, 12, 26, 39, 14, 22, 41])]), $a(["full", "36", $1.v27to40, 161, 24, 50, 24272, $a([600, 1120, 1680, 1980]), $a([6, 14, 6, 34, 46, 10, 2, 64])]), $a(["full", "37", $1.v27to40, 165, 28, 54, 25568, $a([630, 1204, 1770, 2100]), $a([17, 4, 29, 14, 49, 10, 24, 46])]), $a(["full", "38", $1.v27to40, 169, 32, 58, 26896, $a([660, 1260, 1860, 2220]), $a([4, 18, 13, 32, 48, 14, 42, 32])]), $a(["full", "39", $1.v27to40, 173, 26, 54, 28256, $a([720, 1316, 1950, 2310]), $a([20, 4, 40, 7, 43, 22, 10, 67])]), $a(["full", "40", $1.v27to40, 177, 30, 58, 29648, $a([750, 1372, 2040, 2430]), $a([19, 6, 18, 31, 34, 34, 20, 61])])]); /*16399*/
		$k[$j++] = "eclval"; /*16400*/
		$search("LMQH", $1.eclevel); /*16400*/
		$j--; /*16400*/
		var _Ec = $k[--$j]; /*16400*/
		var _Ed = $k[--$j]; /*16400*/
		var _Ee = $k[--$j]; /*16400*/
		$1[$k[--$j]] = _Ec.length; /*16400*/
		for (var _Eg = 0; _Eg <= 43; _Eg += 1) { /*16437*/
			$1.i = _Eg; /*16402*/
			$1.m = $get($1.metrics, $1.i); /*16403*/
			$1.frmt = $get($1.m, 0); /*16404*/
			$1.vers = $get($1.m, 1); /*16405*/
			$1.vergrp = $get($1.m, 2); /*16406*/
			$1.size = $get($1.m, 3); /*16407*/
			$1.asp2 = $get($1.m, 4); /*16408*/
			$1.asp3 = $get($1.m, 5); /*16409*/
			$1.nmod = $get($1.m, 6); /*16410*/
			$1.ncws = ~~($1.nmod / 8); /*16411*/
			$1.rbit = $1.nmod % 8; /*16412*/
			$1.lc4b = false; /*16413*/
			if (($1.size == 11) || ($1.size == 15)) { /*16418*/
				$1.ncws = $1.ncws + 1; /*16415*/
				$1.rbit = 0; /*16416*/
				$1.lc4b = true; /*16417*/
			} /*16417*/
			$1.ecws = $get($get($1.m, 7), $1.eclval); /*16419*/
			$1.dcws = $1.ncws - $1.ecws; /*16420*/
			var _FB = $1.lc4b ? 4 : 0; /*16421*/
			$1.dmod = ($1.dcws * 8) - _FB; /*16421*/
			$1.ecb1 = $get($get($1.m, 8), $1.eclval * 2); /*16422*/
			$1.ecb2 = $get($get($1.m, 8), ($1.eclval * 2) + 1); /*16423*/
			$1.okay = true; /*16424*/
			if ($ne($1.format, "any") && $ne($1.format, $1.frmt)) { /*16425*/
				$1.okay = false; /*16425*/
			} /*16425*/
			if ($eq($1.frmt, "micro") && $1.fnc1first) { /*16426*/
				$1.okay = false; /*16426*/
			} /*16426*/
			if ($ne($1.version, "unset") && $ne($1.version, $1.vers)) { /*16427*/
				$1.okay = false; /*16427*/
			} /*16427*/
			if (($1.ecb1 == -1) || ($1.ecb2 == -1)) { /*16428*/
				$1.okay = false; /*16428*/
			} /*16428*/
			$1.verbits = $get($1.msgbits, $1.vergrp); /*16429*/
			if ($1.verbits == -1) { /*16433*/
				$1.okay = false; /*16431*/
			} else { /*16433*/
				if ($1.verbits.length > $1.dmod) { /*16433*/
					$1.okay = false; /*16433*/
				} /*16433*/
			} /*16433*/
			$1.term = $geti("000000000", 0, $get($1.termlens, $1.vergrp)); /*16435*/
			if ($1.okay) { /*16436*/
				break; /*16436*/
			} /*16436*/
		} /*16436*/
		if (!$1.okay) { /*16441*/
			$k[$j++] = "bwipp.qrcodeNoValidSymbol"; /*16440*/
			$k[$j++] = "No valid symbol available"; /*16440*/
			$0.raiseerror(); /*16440*/
		} /*16440*/
		$1.format = $1.frmt; /*16443*/
		$1.version = $1.vers; /*16444*/
		$1.msgbits = $1.verbits; /*16445*/
		$1.dcpb = ~~($1.dcws / ($1.ecb1 + $1.ecb2)); /*16446*/
		$1.ecpb = (~~($1.ncws / ($1.ecb1 + $1.ecb2))) - $1.dcpb; /*16447*/
		var _Fq = $1.term; /*16450*/
		var _Fr = $1.dmod; /*16450*/
		var _Fs = $1.msgbits; /*16450*/
		var _Ft = $1.term; /*16450*/
		var _Fu = _Ft.length; /*16450*/
		var _Fv = _Fr - _Fs.length; /*16450*/
		if ((_Fr - _Fs.length) > _Ft.length) { /*16450*/
			var _ = _Fu; /*16450*/
			_Fu = _Fv; /*16450*/
			_Fv = _; /*16450*/
		} /*16450*/
		$1.term = $geti(_Fq, 0, _Fv); /*16450*/
		var _Fz = $s($1.msgbits.length + $1.term.length); /*16451*/
		$puti(_Fz, 0, $1.msgbits); /*16452*/
		$puti(_Fz, $1.msgbits.length, $1.term); /*16453*/
		$1.msgbits = _Fz; /*16454*/
		$1.pad = $s($1.dmod); /*16457*/
		for (var _G7 = 0, _G6 = $1.pad.length - 1; _G7 <= _G6; _G7 += 1) { /*16458*/
			$put($1.pad, _G7, 48); /*16458*/
		} /*16458*/
		$puti($1.pad, 0, $1.msgbits); /*16459*/
		$1.padstrs = $a(["11101100", "00010001"]); /*16460*/
		$1.padnum = 0; /*16461*/
		var _GF = $1.lc4b ? 5 : 1; /*16462*/
		for (var _GH = ~~(Math.ceil($1.msgbits.length / 8) * 8), _GG = $1.dmod - _GF; _GH <= _GG; _GH += 8) { /*16465*/
			$puti($1.pad, _GH, $get($1.padstrs, $1.padnum)); /*16463*/
			$1.padnum = ($1.padnum + 1) % 2; /*16464*/
		} /*16464*/
		$1.cws = $a($1.dcws); /*16468*/
		for (var _GR = 0, _GQ = $1.cws.length - 1; _GR <= _GQ; _GR += 1) { /*16480*/
			$1.c = _GR; /*16470*/
			$1.bpcw = 8; /*16471*/
			if ($1.lc4b && ($1.c == ($1.cws.length - 1))) { /*16472*/
				$1.bpcw = 4; /*16472*/
			} /*16472*/
			$1.cwb = $geti($1.pad, $1.c * 8, $1.bpcw); /*16473*/
			$1.cw = 0; /*16474*/
			for (var _Gb = 0, _Ga = $1.bpcw - 1; _Gb <= _Ga; _Gb += 1) { /*16478*/
				$1.i = _Gb; /*16476*/
				$1.cw = $1.cw + ((~~(Math.pow(2, ($1.bpcw - $1.i) - 1))) * ($get($1.cwb, $1.i) - 48)); /*16477*/
			} /*16477*/
			$put($1.cws, $1.c, $1.cw); /*16479*/
		} /*16479*/
		if ($1.lc4b) { /*16483*/
			var _Gm = $1.cws; /*16483*/
			var _Gn = $1.cws; /*16483*/
			$put(_Gm, _Gn.length - 1, $get(_Gm, _Gn.length - 1) << 4); /*16483*/
		} /*16483*/
		$k[$j++] = Infinity; /*16486*/
		$k[$j++] = 1; /*16486*/
		for (var _Gp = 0, _Gq = 255; _Gp < _Gq; _Gp++) { /*16486*/
			var _Gr = $k[--$j]; /*16486*/
			var _Gs = _Gr * 2; /*16486*/
			$k[$j++] = _Gr; /*16486*/
			$k[$j++] = _Gs; /*16486*/
			if (_Gs >= 256) { /*16486*/
				var _Gt = $k[--$j]; /*16486*/
				$k[$j++] = _Gt ^ 285; /*16486*/
			} /*16486*/
		} /*16486*/
		$1.rsalog = $a(); /*16486*/
		$1.rslog = $a(256); /*16487*/
		for (var _Gw = 1; _Gw <= 255; _Gw += 1) { /*16488*/
			$put($1.rslog, $get($1.rsalog, _Gw), _Gw); /*16488*/
		} /*16488*/
		$1.rsprod = function() {
			var _H0 = $k[--$j]; /*16492*/
			var _H1 = $k[--$j]; /*16492*/
			$k[$j++] = _H1; /*16496*/
			$k[$j++] = _H0; /*16496*/
			if ((_H0 != 0) && (_H1 != 0)) { /*16495*/
				var _H4 = $get($1.rslog, $k[--$j]); /*16493*/
				var _H9 = $get($1.rsalog, (_H4 + $get($1.rslog, $k[--$j])) % 255); /*16493*/
				$k[$j++] = _H9; /*16493*/
			} else { /*16495*/
				$j -= 2; /*16495*/
				$k[$j++] = 0; /*16495*/
			} /*16495*/
		}; /*16497*/
		$k[$j++] = Infinity; /*16500*/
		$k[$j++] = 1; /*16500*/
		for (var _HB = 0, _HC = $1.ecpb; _HB < _HC; _HB++) { /*16500*/
			$k[$j++] = 0; /*16500*/
		} /*16500*/
		$1.coeffs = $a(); /*16500*/
		for (var _HG = 0, _HF = $1.ecpb - 1; _HG <= _HF; _HG += 1) { /*16509*/
			$1.i = _HG; /*16502*/
			$put($1.coeffs, $1.i + 1, $get($1.coeffs, $1.i)); /*16503*/
			for (var _HN = $1.i; _HN >= 1; _HN -= 1) { /*16507*/
				$1.j = _HN; /*16505*/
				$k[$j++] = $1.coeffs; /*16506*/
				$k[$j++] = $1.j; /*16506*/
				$k[$j++] = $get($1.coeffs, $1.j - 1); /*16506*/
				$k[$j++] = $get($1.coeffs, $1.j); /*16506*/
				$k[$j++] = $get($1.rsalog, $1.i); /*16506*/
				$1.rsprod(); /*16506*/
				var _HZ = $k[--$j]; /*16506*/
				var _Ha = $k[--$j]; /*16506*/
				var _Hb = $k[--$j]; /*16506*/
				$put($k[--$j], _Hb, $xo(_Ha, _HZ)); /*16506*/
			} /*16506*/
			$k[$j++] = $1.coeffs; /*16508*/
			$k[$j++] = 0; /*16508*/
			$k[$j++] = $get($1.coeffs, 0); /*16508*/
			$k[$j++] = $get($1.rsalog, $1.i); /*16508*/
			$1.rsprod(); /*16508*/
			var _Hj = $k[--$j]; /*16508*/
			var _Hk = $k[--$j]; /*16508*/
			$put($k[--$j], _Hk, _Hj); /*16508*/
		} /*16508*/
		$1.coeffs = $geti($1.coeffs, 0, $1.coeffs.length - 1); /*16510*/
		$1.rscodes = function() {
			$1.rscws = $k[--$j]; /*16514*/
			$1.rsnd = $1.rscws.length; /*16515*/
			$k[$j++] = Infinity; /*16516*/
			$forall($1.rscws); /*16516*/
			for (var _Ht = 0, _Hu = $1.ecpb; _Ht < _Hu; _Ht++) { /*16516*/
				$k[$j++] = 0; /*16516*/
			} /*16516*/
			$1.rscws = $a(); /*16516*/
			for (var _Hy = 0, _Hx = $1.rsnd - 1; _Hy <= _Hx; _Hy += 1) { /*16524*/
				$1.m = _Hy; /*16518*/
				$1.k = $get($1.rscws, $1.m); /*16519*/
				for (var _I4 = 0, _I3 = $1.ecpb - 1; _I4 <= _I3; _I4 += 1) { /*16523*/
					$1.j = _I4; /*16521*/
					$k[$j++] = $1.rscws; /*16522*/
					$k[$j++] = ($1.m + $1.j) + 1; /*16522*/
					$k[$j++] = $get($1.coeffs, ($1.ecpb - $1.j) - 1); /*16522*/
					$k[$j++] = $1.k; /*16522*/
					$1.rsprod(); /*16522*/
					var _IH = $k[--$j]; /*16522*/
					var _II = $k[--$j]; /*16522*/
					$put($k[--$j], _II, $xo(_IH, $get($1.rscws, ($1.m + $1.j) + 1))); /*16522*/
				} /*16522*/
			} /*16522*/
			$k[$j++] = $geti($1.rscws, $1.rsnd, $1.ecpb); /*16525*/
		}; /*16526*/
		$1.dcwsb = $a($1.ecb1 + $1.ecb2); /*16529*/
		$1.ecwsb = $a($1.ecb1 + $1.ecb2); /*16530*/
		for (var _IW = 0, _IV = $1.ecb1 - 1; _IW <= _IV; _IW += 1) { /*16535*/
			$1.i = _IW; /*16532*/
			$put($1.dcwsb, $1.i, $geti($1.cws, $1.i * $1.dcpb, $1.dcpb)); /*16533*/
			$k[$j++] = $1.ecwsb; /*16534*/
			$k[$j++] = $1.i; /*16534*/
			$k[$j++] = $get($1.dcwsb, $1.i); /*16534*/
			$1.rscodes(); /*16534*/
			var _Ij = $k[--$j]; /*16534*/
			var _Ik = $k[--$j]; /*16534*/
			$put($k[--$j], _Ik, _Ij); /*16534*/
		} /*16534*/
		for (var _Io = 0, _In = $1.ecb2 - 1; _Io <= _In; _Io += 1) { /*16540*/
			$1.i = _Io; /*16537*/
			$put($1.dcwsb, $1.ecb1 + $1.i, $geti($1.cws, ($1.ecb1 * $1.dcpb) + ($1.i * ($1.dcpb + 1)), $1.dcpb + 1)); /*16538*/
			$k[$j++] = $1.ecwsb; /*16539*/
			$k[$j++] = $1.ecb1 + $1.i; /*16539*/
			$k[$j++] = $get($1.dcwsb, $1.ecb1 + $1.i); /*16539*/
			$1.rscodes(); /*16539*/
			var _J6 = $k[--$j]; /*16539*/
			var _J7 = $k[--$j]; /*16539*/
			$put($k[--$j], _J7, _J6); /*16539*/
		} /*16539*/
		$1.cws = $a($1.ncws); /*16543*/
		$1.cw = 0; /*16544*/
		for (var _JD = 0, _JC = $1.dcpb; _JD <= _JC; _JD += 1) { /*16554*/
			$1.i = _JD; /*16546*/
			for (var _JH = 0, _JG = ($1.ecb1 + $1.ecb2) - 1; _JH <= _JG; _JH += 1) { /*16553*/
				$1.j = _JH; /*16548*/
				if ($1.i < $get($1.dcwsb, $1.j).length) { /*16552*/
					$put($1.cws, $1.cw, $get($get($1.dcwsb, $1.j), $1.i)); /*16550*/
					$1.cw = $1.cw + 1; /*16551*/
				} /*16551*/
			} /*16551*/
		} /*16551*/
		for (var _JW = 0, _JV = $1.ecpb - 1; _JW <= _JV; _JW += 1) { /*16562*/
			$1.i = _JW; /*16556*/
			for (var _Ja = 0, _JZ = ($1.ecb1 + $1.ecb2) - 1; _Ja <= _JZ; _Ja += 1) { /*16561*/
				$1.j = _Ja; /*16558*/
				$put($1.cws, $1.cw, $get($get($1.ecwsb, $1.j), $1.i)); /*16559*/
				$1.cw = $1.cw + 1; /*16560*/
			} /*16560*/
		} /*16560*/
		if ($1.rbit > 0) { /*16570*/
			$1.pad = $a($1.cws.length + 1); /*16566*/
			$puti($1.pad, 0, $1.cws); /*16567*/
			$put($1.pad, $1.pad.length - 1, 0); /*16568*/
			$1.cws = $1.pad; /*16569*/
		} /*16569*/
		if ($1.lc4b) { /*16581*/
			var _Js = $1.cws; /*16574*/
			var _Jt = $1.dcws; /*16574*/
			$put(_Js, _Jt - 1, $get(_Js, _Jt - 1) >>> 4); /*16574*/
			for (var _Jy = $1.dcws - 1, _Jx = $1.ncws - 2; _Jy <= _Jx; _Jy += 1) { /*16579*/
				$1.i = _Jy; /*16576*/
				$put($1.cws, $1.i, ($get($1.cws, $1.i) & 15) << 4); /*16577*/
				$put($1.cws, $1.i, (($get($1.cws, $1.i + 1) >>> 4) & 15) | $get($1.cws, $1.i)); /*16578*/
			} /*16578*/
			$put($1.cws, $1.ncws - 1, ($get($1.cws, $1.ncws - 1) & 15) << 4); /*16580*/
		} /*16580*/
		$k[$j++] = Infinity; /*16584*/
		for (var _KJ = 0, _KK = $1.size * $1.size; _KJ < _KK; _KJ++) { /*16584*/
			$k[$j++] = -1; /*16584*/
		} /*16584*/
		$1.pixs = $a(); /*16584*/
		$1.qmv = function() {
			var _KN = $k[--$j]; /*16585*/
			var _KO = $k[--$j]; /*16585*/
			$k[$j++] = _KO + (_KN * $1.size); /*16585*/
		}; /*16585*/
		$1.fpat = $a([$a([1, 1, 1, 1, 1, 1, 1, 0]), $a([1, 0, 0, 0, 0, 0, 1, 0]), $a([1, 0, 1, 1, 1, 0, 1, 0]), $a([1, 0, 1, 1, 1, 0, 1, 0]), $a([1, 0, 1, 1, 1, 0, 1, 0]), $a([1, 0, 0, 0, 0, 0, 1, 0]), $a([1, 1, 1, 1, 1, 1, 1, 0]), $a([0, 0, 0, 0, 0, 0, 0, 0])]); /*16597*/
		for (var _Ka = 0, _KZ = $1.fpat.length - 1; _Ka <= _KZ; _Ka += 1) { /*16609*/
			$1.y = _Ka; /*16599*/
			for (var _Ke = 0, _Kd = $get($1.fpat, 0).length - 1; _Ke <= _Kd; _Ke += 1) { /*16608*/
				$1.x = _Ke; /*16601*/
				$1.fpb = $get($get($1.fpat, $1.y), $1.x); /*16602*/
				$k[$j++] = $1.pixs; /*16603*/
				$k[$j++] = $1.x; /*16603*/
				$k[$j++] = $1.y; /*16603*/
				$1.qmv(); /*16603*/
				var _Ko = $k[--$j]; /*16603*/
				$put($k[--$j], _Ko, $1.fpb); /*16603*/
				if ($eq($1.format, "full")) { /*16607*/
					$k[$j++] = $1.pixs; /*16605*/
					$k[$j++] = ($1.size - $1.x) - 1; /*16605*/
					$k[$j++] = $1.y; /*16605*/
					$1.qmv(); /*16605*/
					var _Kw = $k[--$j]; /*16605*/
					$put($k[--$j], _Kw, $1.fpb); /*16605*/
					$k[$j++] = $1.pixs; /*16606*/
					$k[$j++] = $1.x; /*16606*/
					$k[$j++] = ($1.size - $1.y) - 1; /*16606*/
					$1.qmv(); /*16606*/
					var _L3 = $k[--$j]; /*16606*/
					$put($k[--$j], _L3, $1.fpb); /*16606*/
				} /*16606*/
			} /*16606*/
		} /*16606*/
		$1.algnpat = $a([$a([1, 1, 1, 1, 1]), $a([1, 0, 0, 0, 1]), $a([1, 0, 1, 0, 1]), $a([1, 0, 0, 0, 1]), $a([1, 1, 1, 1, 1])]); /*16618*/
		$1.putalgnpat = function() {
			$1.py = $k[--$j]; /*16620*/
			$1.px = $k[--$j]; /*16621*/
			for (var _LD = 0; _LD <= 4; _LD += 1) { /*16628*/
				$1.pb = _LD; /*16623*/
				for (var _LE = 0; _LE <= 4; _LE += 1) { /*16627*/
					$1.pa = _LE; /*16625*/
					$k[$j++] = $1.pixs; /*16626*/
					$k[$j++] = $1.px + $1.pa; /*16626*/
					$k[$j++] = $1.py + $1.pb; /*16626*/
					$1.qmv(); /*16626*/
					var _LP = $k[--$j]; /*16626*/
					$put($k[--$j], _LP, $get($get($1.algnpat, $1.pb), $1.pa)); /*16626*/
				} /*16626*/
			} /*16626*/
		}; /*16629*/
		for (var _LW = $1.asp2 - 2, _LX = $1.asp3 - $1.asp2, _LV = $1.size - 13; _LX < 0 ? _LW >= _LV : _LW <= _LV; _LW += _LX) { /*16634*/
			$1.i = _LW; /*16631*/
			$k[$j++] = $1.i; /*16632*/
			$k[$j++] = 4; /*16632*/
			$1.putalgnpat(); /*16632*/
			$k[$j++] = 4; /*16633*/
			$k[$j++] = $1.i; /*16633*/
			$1.putalgnpat(); /*16633*/
		} /*16633*/
		for (var _Lf = $1.asp2 - 2, _Lg = $1.asp3 - $1.asp2, _Le = $1.size - 9; _Lg < 0 ? _Lf >= _Le : _Lf <= _Le; _Lf += _Lg) { /*16641*/
			$1.x = _Lf; /*16636*/
			for (var _Lm = $1.asp2 - 2, _Ln = $1.asp3 - $1.asp2, _Ll = $1.size - 9; _Ln < 0 ? _Lm >= _Ll : _Lm <= _Ll; _Lm += _Ln) { /*16640*/
				$1.y = _Lm; /*16638*/
				$k[$j++] = $1.x; /*16639*/
				$k[$j++] = $1.y; /*16639*/
				$1.putalgnpat(); /*16639*/
			} /*16639*/
		} /*16639*/
		if ($eq($1.format, "full")) { /*16654*/
			for (var _Lt = 8, _Ls = $1.size - 9; _Lt <= _Ls; _Lt += 1) { /*16649*/
				$1.i = _Lt; /*16646*/
				$k[$j++] = $1.pixs; /*16647*/
				$k[$j++] = $1.i; /*16647*/
				$k[$j++] = 6; /*16647*/
				$1.qmv(); /*16647*/
				var _Lx = $k[--$j]; /*16647*/
				$put($k[--$j], _Lx, ($1.i + 1) % 2); /*16647*/
				$k[$j++] = $1.pixs; /*16648*/
				$k[$j++] = 6; /*16648*/
				$k[$j++] = $1.i; /*16648*/
				$1.qmv(); /*16648*/
				var _M2 = $k[--$j]; /*16648*/
				$put($k[--$j], _M2, ($1.i + 1) % 2); /*16648*/
			} /*16648*/
		} else { /*16654*/
			for (var _M6 = 8, _M5 = $1.size - 1; _M6 <= _M5; _M6 += 1) { /*16655*/
				$1.i = _M6; /*16652*/
				$k[$j++] = $1.pixs; /*16653*/
				$k[$j++] = $1.i; /*16653*/
				$k[$j++] = 0; /*16653*/
				$1.qmv(); /*16653*/
				var _MA = $k[--$j]; /*16653*/
				$put($k[--$j], _MA, ($1.i + 1) % 2); /*16653*/
				$k[$j++] = $1.pixs; /*16654*/
				$k[$j++] = 0; /*16654*/
				$k[$j++] = $1.i; /*16654*/
				$1.qmv(); /*16654*/
				var _MF = $k[--$j]; /*16654*/
				$put($k[--$j], _MF, ($1.i + 1) % 2); /*16654*/
			} /*16654*/
		} /*16654*/
		if ($eq($1.format, "full")) { /*16672*/
			$1.formatmap = $a([$a([$a([0, 8]), $a([8, $1.size - 1])]), $a([$a([1, 8]), $a([8, $1.size - 2])]), $a([$a([2, 8]), $a([8, $1.size - 3])]), $a([$a([3, 8]), $a([8, $1.size - 4])]), $a([$a([4, 8]), $a([8, $1.size - 5])]), $a([$a([5, 8]), $a([8, $1.size - 6])]), $a([$a([7, 8]), $a([8, $1.size - 7])]), $a([$a([8, 8]), $a([$1.size - 8, 8])]), $a([$a([8, 7]), $a([$1.size - 7, 8])]), $a([$a([8, 5]), $a([$1.size - 6, 8])]), $a([$a([8, 4]), $a([$1.size - 5, 8])]), $a([$a([8, 3]), $a([$1.size - 4, 8])]), $a([$a([8, 2]), $a([$1.size - 3, 8])]), $a([$a([8, 1]), $a([$1.size - 2, 8])]), $a([$a([8, 0]), $a([$1.size - 1, 8])])]); /*16666*/
		} else { /*16672*/
			$1.formatmap = $a([$a([$a([1, 8])]), $a([$a([2, 8])]), $a([$a([3, 8])]), $a([$a([4, 8])]), $a([$a([5, 8])]), $a([$a([6, 8])]), $a([$a([7, 8])]), $a([$a([8, 8])]), $a([$a([8, 7])]), $a([$a([8, 6])]), $a([$a([8, 5])]), $a([$a([8, 4])]), $a([$a([8, 3])]), $a([$a([8, 2])]), $a([$a([8, 1])])]); /*16672*/
		} /*16672*/
		var _Nm = $1.formatmap; /*16674*/
		for (var _Nn = 0, _No = _Nm.length; _Nn < _No; _Nn++) { /*16676*/
			$forall($get(_Nm, _Nn), function() { /*16675*/
				$forall($k[--$j]); /*16675*/
				$1.qmv(); /*16675*/
				$put($1.pixs, $k[--$j], 0); /*16675*/
			}); /*16675*/
		} /*16675*/
		if ($1.size >= 45) { /*16692*/
			$1.versionmap = $a([$a([$a([$1.size - 9, 5]), $a([5, $1.size - 9])]), $a([$a([$1.size - 10, 5]), $a([5, $1.size - 10])]), $a([$a([$1.size - 11, 5]), $a([5, $1.size - 11])]), $a([$a([$1.size - 9, 4]), $a([4, $1.size - 9])]), $a([$a([$1.size - 10, 4]), $a([4, $1.size - 10])]), $a([$a([$1.size - 11, 4]), $a([4, $1.size - 11])]), $a([$a([$1.size - 9, 3]), $a([3, $1.size - 9])]), $a([$a([$1.size - 10, 3]), $a([3, $1.size - 10])]), $a([$a([$1.size - 11, 3]), $a([3, $1.size - 11])]), $a([$a([$1.size - 9, 2]), $a([2, $1.size - 9])]), $a([$a([$1.size - 10, 2]), $a([2, $1.size - 10])]), $a([$a([$1.size - 11, 2]), $a([2, $1.size - 11])]), $a([$a([$1.size - 9, 1]), $a([1, $1.size - 9])]), $a([$a([$1.size - 10, 1]), $a([1, $1.size - 10])]), $a([$a([$1.size - 11, 1]), $a([1, $1.size - 11])]), $a([$a([$1.size - 9, 0]), $a([0, $1.size - 9])]), $a([$a([$1.size - 10, 0]), $a([0, $1.size - 10])]), $a([$a([$1.size - 11, 0]), $a([0, $1.size - 11])])]); /*16690*/
		} else { /*16692*/
			$1.versionmap = $a([]); /*16692*/
		} /*16692*/
		var _PO = $1.versionmap; /*16694*/
		for (var _PP = 0, _PQ = _PO.length; _PP < _PQ; _PP++) { /*16696*/
			$forall($get(_PO, _PP), function() { /*16695*/
				$forall($k[--$j]); /*16695*/
				$1.qmv(); /*16695*/
				$put($1.pixs, $k[--$j], 0); /*16695*/
			}); /*16695*/
		} /*16695*/
		if ($eq($1.format, "full")) { /*16701*/
			$k[$j++] = $1.pixs; /*16700*/
			$k[$j++] = 8; /*16700*/
			$k[$j++] = $1.size - 8; /*16700*/
			$1.qmv(); /*16700*/
			var _PY = $k[--$j]; /*16700*/
			$put($k[--$j], _PY, 0); /*16700*/
		} /*16700*/
		if ($eq($1.format, "full")) { /*16721*/
			var _Ps = $a([function() {
				var _Pb = $k[--$j]; /*16706*/
				var _Pc = $k[--$j]; /*16706*/
				$k[$j++] = (_Pc + _Pb) % 2; /*16706*/
			}, function() {
				var _Pd = $k[--$j]; /*16707*/
				var _Pe = $k[--$j]; /*16707*/
				$k[$j++] = _Pd % 2; /*16707*/
			}, function() {
				$j--; /*16708*/
				var _Pf = $k[--$j]; /*16708*/
				$k[$j++] = _Pf % 3; /*16708*/
			}, function() {
				var _Pg = $k[--$j]; /*16709*/
				var _Ph = $k[--$j]; /*16709*/
				$k[$j++] = (_Ph + _Pg) % 3; /*16709*/
			}, function() {
				var _Pi = $k[--$j]; /*16710*/
				var _Pj = $k[--$j]; /*16710*/
				$k[$j++] = ((~~(_Pi / 2)) + (~~(_Pj / 3))) % 2; /*16710*/
			}, function() {
				var _Pk = $k[--$j]; /*16711*/
				var _Pm = $k[--$j] * _Pk; /*16711*/
				$k[$j++] = (_Pm % 2) + (_Pm % 3); /*16711*/
			}, function() {
				var _Pn = $k[--$j]; /*16712*/
				var _Pp = $k[--$j] * _Pn; /*16712*/
				$k[$j++] = ((_Pp % 2) + (_Pp % 3)) % 2; /*16712*/
			}, function() {
				var _Pq = $k[--$j]; /*16713*/
				var _Pr = $k[--$j]; /*16713*/
				$k[$j++] = (((_Pr * _Pq) % 3) + ((_Pr + _Pq) % 2)) % 2; /*16713*/
			}]); /*16713*/
			$1.maskfuncs = _Ps; /*16714*/
		} else { /*16721*/
			var _Q2 = $a([function() {
				var _Pt = $k[--$j]; /*16717*/
				var _Pu = $k[--$j]; /*16717*/
				$k[$j++] = _Pt % 2; /*16717*/
			}, function() {
				var _Pv = $k[--$j]; /*16718*/
				var _Pw = $k[--$j]; /*16718*/
				$k[$j++] = ((~~(_Pv / 2)) + (~~(_Pw / 3))) % 2; /*16718*/
			}, function() {
				var _Px = $k[--$j]; /*16719*/
				var _Pz = $k[--$j] * _Px; /*16719*/
				$k[$j++] = ((_Pz % 2) + (_Pz % 3)) % 2; /*16719*/
			}, function() {
				var _Q0 = $k[--$j]; /*16720*/
				var _Q1 = $k[--$j]; /*16720*/
				$k[$j++] = (((_Q1 * _Q0) % 3) + ((_Q1 + _Q0) % 2)) % 2; /*16720*/
			}]); /*16720*/
			$1.maskfuncs = _Q2; /*16721*/
		} /*16721*/
		if ($1.mask != -1) { /*16726*/
			$1.maskfuncs = $a([$get($1.maskfuncs, $1.mask - 1)]); /*16724*/
			$1.bestmaskval = $1.mask - 1; /*16725*/
		} /*16725*/
		$1.masks = $a($1.maskfuncs.length); /*16727*/
		for (var _QD = 0, _QC = $1.masks.length - 1; _QD <= _QC; _QD += 1) { /*16741*/
			$1.m = _QD; /*16729*/
			$1.mask = $a($1.size * $1.size); /*16730*/
			for (var _QJ = 0, _QI = $1.size - 1; _QJ <= _QI; _QJ += 1) { /*16739*/
				$1.j = _QJ; /*16732*/
				for (var _QM = 0, _QL = $1.size - 1; _QM <= _QL; _QM += 1) { /*16738*/
					$1.i = _QM; /*16734*/
					$k[$j++] = $1.i; /*16735*/
					$k[$j++] = $1.j; /*16735*/
					$get($1.maskfuncs, $1.m)(); /*16735*/
					var _QS = $k[--$j]; /*16735*/
					$k[$j++] = _QS == 0; /*16736*/
					$k[$j++] = $1.pixs; /*16736*/
					$k[$j++] = $1.i; /*16736*/
					$k[$j++] = $1.j; /*16736*/
					$1.qmv(); /*16736*/
					var _QW = $k[--$j]; /*16736*/
					var _QY = $get($k[--$j], _QW); /*16736*/
					var _Qa = ($k[--$j] && (_QY == -1)) ? 1 : 0; /*16736*/
					$k[$j++] = _Qa; /*16737*/
					$k[$j++] = $1.mask; /*16737*/
					$k[$j++] = $1.i; /*16737*/
					$k[$j++] = $1.j; /*16737*/
					$1.qmv(); /*16737*/
					var _Qe = $k[--$j]; /*16737*/
					var _Qf = $k[--$j]; /*16737*/
					$put(_Qf, _Qe, $k[--$j]); /*16737*/
				} /*16737*/
			} /*16737*/
			$put($1.masks, $1.m, $1.mask); /*16740*/
		} /*16740*/
		$1.posx = $1.size - 1; /*16744*/
		$1.posy = $1.size - 1; /*16745*/
		$1.dir = -1; /*16746*/
		$1.col = 1; /*16747*/
		$1.num = 0; /*16748*/
		for (;;) { /*16771*/
			if ($1.posx < 0) { /*16750*/
				break; /*16750*/
			} /*16750*/
			$k[$j++] = $1.pixs; /*16751*/
			$k[$j++] = $1.posx; /*16751*/
			$k[$j++] = $1.posy; /*16751*/
			$1.qmv(); /*16751*/
			var _Qq = $k[--$j]; /*16751*/
			if ($get($k[--$j], _Qq) == -1) { /*16755*/
				var _Qv = $get($1.cws, ~~($1.num / 8)); /*16752*/
				var _Qx = -(7 - ($1.num % 8)); /*16752*/
				$k[$j++] = ((_Qx < 0 ? _Qv >>> -_Qx : _Qv << _Qx)) & 1; /*16753*/
				$k[$j++] = $1.pixs; /*16753*/
				$k[$j++] = $1.posx; /*16753*/
				$k[$j++] = $1.posy; /*16753*/
				$1.qmv(); /*16753*/
				var _R1 = $k[--$j]; /*16753*/
				var _R2 = $k[--$j]; /*16753*/
				$put(_R2, _R1, $k[--$j]); /*16753*/
				$1.num = $1.num + 1; /*16754*/
			} /*16754*/
			if ($1.col == 1) { /*16768*/
				$1.col = 0; /*16757*/
				$1.posx = $1.posx - 1; /*16758*/
			} else { /*16768*/
				$1.col = 1; /*16760*/
				$1.posx = $1.posx + 1; /*16761*/
				$1.posy = $1.posy + $1.dir; /*16762*/
				if (($1.posy < 0) || ($1.posy >= $1.size)) { /*16769*/
					$1.dir = $1.dir * -1; /*16764*/
					$1.posy = $1.posy + $1.dir; /*16765*/
					$1.posx = $1.posx - 2; /*16766*/
					if ($eq($1.format, "full") && ($1.posx == 6)) { /*16768*/
						$1.posx = $1.posx - 1; /*16768*/
					} /*16768*/
				} /*16768*/
			} /*16768*/
		} /*16768*/
		$1.evalfulln1n3 = function() {
			$1.scrle = $k[--$j]; /*16775*/
			$k[$j++] = "scr1"; /*16777*/
			$k[$j++] = 0; /*16777*/
			$forall($1.scrle, function() { /*16777*/
				var _RM = $k[--$j]; /*16777*/
				$k[$j++] = _RM; /*16777*/
				if (_RM >= 5) { /*16777*/
					var _RN = $k[--$j]; /*16777*/
					var _RP = ($k[--$j] + _RN) - 2; /*16777*/
					$k[$j++] = _RP; /*16777*/
					$k[$j++] = _RP; /*16777*/
				} /*16777*/
				$j--; /*16777*/
			}); /*16777*/
			var _RQ = $k[--$j]; /*16777*/
			$1[$k[--$j]] = _RQ; /*16777*/
			$1.scr3 = 0; /*16779*/
			for (var _RU = 3, _RT = $1.scrle.length - 3; _RU <= _RT; _RU += 2) { /*16794*/
				$1.j = _RU; /*16781*/
				if (($get($1.scrle, $1.j) % 3) == 0) { /*16793*/
					$1.fact = ~~($get($1.scrle, $1.j) / 3); /*16783*/
					$forall($geti($1.scrle, $1.j - 2, 5), function() { /*16784*/
						var _Rf = $k[--$j]; /*16784*/
						$k[$j++] = _Rf == $1.fact; /*16784*/
					}); /*16784*/
					var _Rg = $k[--$j]; /*16784*/
					var _Rh = $k[--$j]; /*16784*/
					var _Ri = $k[--$j]; /*16784*/
					var _Rj = $k[--$j]; /*16784*/
					if ($k[--$j] && (_Rj && (_Rh && _Rg))) { /*16792*/
						if (($1.j == 3) || (($1.j + 4) >= $1.scrle.length)) { /*16789*/
							$1.scr3 = $1.scr3 + 40; /*16786*/
						} else { /*16789*/
							if (($get($1.scrle, $1.j - 3) >= 4) || ($get($1.scrle, $1.j + 3) >= 4)) { /*16790*/
								$1.scr3 = $1.scr3 + 40; /*16789*/
							} /*16789*/
						} /*16789*/
					} /*16789*/
				} /*16789*/
			} /*16789*/
			$k[$j++] = $1.scr1; /*16795*/
			$k[$j++] = $1.scr3; /*16795*/
		}; /*16796*/
		$1.evalfull = function() {
			$1.sym = $k[--$j]; /*16800*/
			$1.n1 = 0; /*16802*/
			$1.n2 = 0; /*16802*/
			$1.n3 = 0; /*16802*/
			$1.rle = $a($1.size + 1); /*16803*/
			$1.lastpairs = $a($1.size); /*16804*/
			$1.thispairs = $a($1.size); /*16805*/
			$1.sizeadd1 = $1.size + 1; /*16806*/
			for (var _S8 = 0, _S7 = $1.size - 1; _S8 <= _S7; _S8 += 1) { /*16845*/
				$1.i = _S8; /*16808*/
				$k[$j++] = Infinity; /*16811*/
				var _SA = $1.size; /*16812*/
				$k[$j++] = 0; /*16814*/
				$k[$j++] = 0; /*16814*/
				for (var _SC = $1.i, _SD = _SA, _SB = (_SA * _SA) - 1; _SD < 0 ? _SC >= _SB : _SC <= _SB; _SC += _SD) { /*16814*/
					var _SF = $get($1.sym, _SC); /*16813*/
					var _SG = $k[--$j]; /*16813*/
					$k[$j++] = _SF; /*16813*/
					if ($eq(_SG, _SF)) { /*16813*/
						var _SH = $k[--$j]; /*16813*/
						var _SI = $k[--$j]; /*16813*/
						$k[$j++] = _SI + 1; /*16813*/
						$k[$j++] = _SH; /*16813*/
					} else { /*16813*/
						var _SJ = $k[--$j]; /*16813*/
						$k[$j++] = 1; /*16813*/
						$k[$j++] = _SJ; /*16813*/
					} /*16813*/
				} /*16813*/
				$j--; /*16815*/
				var _SL = $counttomark() + 2; /*16816*/
				$astore($geti($1.rle, 0, _SL - 2)); /*16816*/
				$1.evalfulln1n3(); /*16817*/
				$1.n3 = $k[--$j] + $1.n3; /*16817*/
				$1.n1 = $k[--$j] + $1.n1; /*16817*/
				$j--; /*16818*/
				$1.symrow = $geti($1.sym, $1.i * $1.size, $1.size); /*16821*/
				$k[$j++] = Infinity; /*16822*/
				$k[$j++] = 0; /*16825*/
				$k[$j++] = 0; /*16825*/
				$forall($1.symrow, function() { /*16825*/
					var _SX = $k[--$j]; /*16824*/
					var _SY = $k[--$j]; /*16824*/
					$k[$j++] = _SX; /*16824*/
					if ($eq(_SY, _SX)) { /*16824*/
						var _SZ = $k[--$j]; /*16824*/
						var _Sa = $k[--$j]; /*16824*/
						$k[$j++] = _Sa + 1; /*16824*/
						$k[$j++] = _SZ; /*16824*/
					} else { /*16824*/
						var _Sb = $k[--$j]; /*16824*/
						$k[$j++] = 1; /*16824*/
						$k[$j++] = _Sb; /*16824*/
					} /*16824*/
				}); /*16824*/
				$j--; /*16826*/
				var _Sd = $counttomark() + 2; /*16827*/
				$astore($geti($1.rle, 0, _Sd - 2)); /*16827*/
				$1.evalfulln1n3(); /*16828*/
				$1.n3 = $k[--$j] + $1.n3; /*16828*/
				$1.n1 = $k[--$j] + $1.n1; /*16828*/
				$j--; /*16829*/
				var _Sj = $1.thispairs; /*16832*/
				$1.thispairs = $1.lastpairs; /*16832*/
				$1.lastpairs = _Sj; /*16832*/
				var _Sn = ($get($1.symrow, 0) == 1) ? 0 : 1; /*16833*/
				$k[$j++] = _Sn; /*16834*/
				$forall($1.symrow, function() { /*16834*/
					var _Sp = $k[--$j]; /*16834*/
					var _Sq = $k[--$j]; /*16834*/
					$k[$j++] = _Sq + _Sp; /*16834*/
					$k[$j++] = _Sp; /*16834*/
				}); /*16834*/
				$j--; /*16835*/
				$astore($1.thispairs); /*16836*/
				$j--; /*16836*/
				if ($1.i > 0) { /*16843*/
					$k[$j++] = Infinity; /*16838*/
					$aload($1.lastpairs); /*16839*/
					$aload($1.thispairs); /*16839*/
					$k[$j++] = $1.n2; /*16840*/
					for (var _Sx = 0, _Sy = $1.size; _Sx < _Sy; _Sx++) { /*16840*/
						var _Sz = $k[--$j]; /*16840*/
						var _T0 = $k[--$j]; /*16840*/
						$k[$j++] = _Sz; /*16840*/
						$k[$j++] = _T0; /*16840*/
						var _T2 = $k[$j - 1 - $1.sizeadd1]; /*16840*/
						if ((($k[--$j] + _T2) & 3) == 0) { /*16840*/
							var _T4 = $k[--$j]; /*16840*/
							$k[$j++] = _T4 + 3; /*16840*/
						} /*16840*/
					} /*16840*/
					$1.n2 = $k[--$j]; /*16841*/
					$cleartomark(); /*16842*/
				} /*16842*/
			} /*16842*/
			$k[$j++] = "dark"; /*16848*/
			$k[$j++] = 0; /*16848*/
			$forall($1.sym, function() { /*16848*/
				var _T7 = $k[--$j]; /*16848*/
				var _T8 = $k[--$j]; /*16848*/
				$k[$j++] = _T8 + _T7; /*16848*/
			}); /*16848*/
			var _T9 = $k[--$j]; /*16848*/
			$1[$k[--$j]] = _T9; /*16848*/
			var _TC = $1.size; /*16849*/
			$1.n4 = (~~((Math.abs((($1.dark * 100) / (_TC * _TC)) - 50)) / 5)) * 10; /*16849*/
			$k[$j++] = (($1.n1 + $1.n2) + $1.n3) + $1.n4; /*16851*/
		}; /*16852*/
		$1.evalmicro = function() {
			$1.sym = $k[--$j]; /*16856*/
			$1.dkrhs = 0; /*16857*/
			$1.dkbot = 0; /*16857*/
			for (var _TK = 1, _TJ = $1.size - 1; _TK <= _TJ; _TK += 1) { /*16862*/
				$1.i = _TK; /*16859*/
				$k[$j++] = "dkrhs"; /*16860*/
				$k[$j++] = $1.dkrhs; /*16860*/
				$k[$j++] = $1.sym; /*16860*/
				$k[$j++] = $1.size - 1; /*16860*/
				$k[$j++] = $1.i; /*16860*/
				$1.qmv(); /*16860*/
				var _TP = $k[--$j]; /*16860*/
				var _TR = $get($k[--$j], _TP); /*16860*/
				var _TS = $k[--$j]; /*16860*/
				$1[$k[--$j]] = _TS + _TR; /*16860*/
				$k[$j++] = "dkbot"; /*16861*/
				$k[$j++] = $1.dkbot; /*16861*/
				$k[$j++] = $1.sym; /*16861*/
				$k[$j++] = $1.i; /*16861*/
				$k[$j++] = $1.size - 1; /*16861*/
				$1.qmv(); /*16861*/
				var _TY = $k[--$j]; /*16861*/
				var _Ta = $get($k[--$j], _TY); /*16861*/
				var _Tb = $k[--$j]; /*16861*/
				$1[$k[--$j]] = _Tb + _Ta; /*16861*/
			} /*16861*/
			if ($1.dkrhs <= $1.dkbot) { /*16866*/
				$k[$j++] = -(($1.dkrhs * 16) + $1.dkbot); /*16864*/
			} else { /*16866*/
				$k[$j++] = -(($1.dkbot * 16) + $1.dkrhs); /*16866*/
			} /*16866*/
		}; /*16868*/
		$1.bestscore = 999999999; /*16871*/
		for (var _Tl = 0, _Tk = $1.masks.length - 1; _Tl <= _Tk; _Tl += 1) { /*16893*/
			$1.m = _Tl; /*16873*/
			$1.masksym = $a($1.size * $1.size); /*16874*/
			for (var _Ts = 0, _Tr = ($1.size * $1.size) - 1; _Ts <= _Tr; _Ts += 1) { /*16878*/
				$1.i = _Ts; /*16876*/
				$put($1.masksym, $1.i, $xo($get($1.pixs, $1.i), $get($get($1.masks, $1.m), $1.i))); /*16877*/
			} /*16877*/
			if ($1.masks.length != 1) { /*16891*/
				if ($eq($1.format, "full")) { /*16883*/
					$k[$j++] = $1.masksym; /*16881*/
					$1.evalfull(); /*16881*/
					$1.score = $k[--$j]; /*16881*/
				} else { /*16883*/
					$k[$j++] = $1.masksym; /*16883*/
					$1.evalmicro(); /*16883*/
					$1.score = $k[--$j]; /*16883*/
				} /*16883*/
				if ($1.score < $1.bestscore) { /*16889*/
					$1.bestsym = $1.masksym; /*16886*/
					$1.bestmaskval = $1.m; /*16887*/
					$1.bestscore = $1.score; /*16888*/
				} /*16888*/
			} else { /*16891*/
				$1.bestsym = $1.masksym; /*16891*/
			} /*16891*/
		} /*16891*/
		$1.pixs = $1.bestsym; /*16894*/
		if ($eq($1.format, "full")) { /*16899*/
			$k[$j++] = $1.pixs; /*16898*/
			$k[$j++] = 8; /*16898*/
			$k[$j++] = $1.size - 8; /*16898*/
			$1.qmv(); /*16898*/
			var _UJ = $k[--$j]; /*16898*/
			$put($k[--$j], _UJ, 1); /*16898*/
		} /*16898*/
		if ($eq($1.format, "full")) { /*16919*/
			$1.fmtvals = $a([21522, 20773, 24188, 23371, 17913, 16590, 20375, 19104, 30660, 29427, 32170, 30877, 26159, 25368, 27713, 26998, 5769, 5054, 7399, 6608, 1890, 597, 3340, 2107, 13663, 12392, 16177, 14854, 9396, 8579, 11994, 11245]); /*16908*/
			$k[$j++] = "ecid"; /*16909*/
			$search("MLHQ", $1.eclevel); /*16909*/
			$j--; /*16909*/
			var _UO = $k[--$j]; /*16909*/
			var _UP = $k[--$j]; /*16909*/
			var _UQ = $k[--$j]; /*16909*/
			$1[$k[--$j]] = _UO.length; /*16909*/
			$1.fmtval = $get($1.fmtvals, ($1.ecid << 3) + $1.bestmaskval); /*16910*/
		} else { /*16919*/
			$1.fmtvals = $a([17477, 16754, 20011, 19228, 21934, 20633, 24512, 23287, 26515, 25252, 28157, 26826, 30328, 29519, 31766, 31009, 1758, 1001, 3248, 2439, 5941, 4610, 7515, 6252, 9480, 8255, 12134, 10833, 13539, 12756, 16013, 15290]); /*16917*/
			$1.symid = $get($get($a([$a([0]), $a([1, 2]), $a([3, 4]), $a([5, 6, 7])]), ~~(($1.size - 11) / 2)), $1.eclval); /*16918*/
			$1.fmtval = $get($1.fmtvals, ($1.symid << 2) + $1.bestmaskval); /*16919*/
		} /*16919*/
		for (var _Um = 0, _Ul = $1.formatmap.length - 1; _Um <= _Ul; _Um += 1) { /*16926*/
			$1.i = _Um; /*16922*/
			$forall($get($1.formatmap, $1.i), function() { /*16925*/
				var _Ur = $k[--$j]; /*16924*/
				$k[$j++] = $1.pixs; /*16924*/
				$forall(_Ur); /*16924*/
				$1.qmv(); /*16924*/
				var _Us = $1.fmtval; /*16924*/
				var _Uu = -(14 - $1.i); /*16924*/
				var _Uv = $k[--$j]; /*16924*/
				$put($k[--$j], _Uv, ((_Uu < 0 ? _Us >>> -_Uu : _Us << _Uu)) & 1); /*16924*/
			}); /*16924*/
		} /*16924*/
		if ($1.size >= 45) { /*16944*/
			$1.vervals = $a([31892, 34236, 39577, 42195, 48118, 51042, 55367, 58893, 63784, 68472, 70749, 76311, 79154, 84390, 87683, 92361, 96236, 102084, 102881, 110507, 110734, 117786, 119615, 126325, 127568, 133589, 136957, 141498, 145311, 150283, 152622, 158308, 161089, 167017]); /*16936*/
			$1.verval = $get($1.vervals, (~~(($1.size - 17) / 4)) - 7); /*16937*/
			for (var _V4 = 0, _V3 = $1.versionmap.length - 1; _V4 <= _V3; _V4 += 1) { /*16943*/
				$1.i = _V4; /*16939*/
				$forall($get($1.versionmap, $1.i), function() { /*16942*/
					var _V9 = $k[--$j]; /*16941*/
					$k[$j++] = $1.pixs; /*16941*/
					$forall(_V9); /*16941*/
					$1.qmv(); /*16941*/
					var _VA = $1.verval; /*16941*/
					var _VC = -(17 - $1.i); /*16941*/
					var _VD = $k[--$j]; /*16941*/
					$put($k[--$j], _VD, ((_VC < 0 ? _VA >>> -_VC : _VA << _VC)) & 1); /*16941*/
				}); /*16941*/
			} /*16941*/
		} /*16941*/
		var _VL = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.size,
			pixy: $1.size,
			height: ($1.size * 2) / 72,
			width: ($1.size * 2) / 72,
			opt: $1.options
		}; /*16954*/
		$k[$j++] = _VL; /*16957*/
		if (!$1.dontdraw) { /*16957*/
			$0.renmatrix(); /*16957*/
		} /*16957*/
	};
	$0.microqrcode = function() {
		var $1 = {}; /*16985*/
		$1.options = $k[--$j]; /*16987*/
		$1.barcode = $k[--$j]; /*16988*/
		$1.dontdraw = false; /*16990*/
		$forall($1.options, function() { /*17001*/
			var _3 = $k[--$j]; /*17001*/
			$1[$k[--$j]] = _3; /*17001*/
		}); /*17001*/
		$1.options.dontdraw = true; /*17004*/
		$1.options.format = "micro"; /*17005*/
		$k[$j++] = "args"; /*17007*/
		$k[$j++] = $1.barcode; /*17007*/
		$k[$j++] = $1.options; /*17007*/
		$0.qrcode(); /*17007*/
		var _9 = $k[--$j]; /*17007*/
		$1[$k[--$j]] = _9; /*17007*/
		$1.args.opt = $1.options; /*17009*/
		$k[$j++] = $1.args; /*17012*/
		if (!$1.dontdraw) { /*17012*/
			$0.renmatrix(); /*17012*/
		} /*17012*/
	};
	$0.maxicode = function() {
		var $1 = {}; /*17039*/
		$1.options = $k[--$j]; /*17041*/
		$1.barcode = $k[--$j]; /*17042*/
		$1.dontdraw = false; /*17044*/
		$1.mode = -1; /*17045*/
		$1.sam = -1; /*17046*/
		$1.parse = false; /*17047*/
		$forall($1.options, function() { /*17058*/
			var _3 = $k[--$j]; /*17058*/
			$1[$k[--$j]] = _3; /*17058*/
		}); /*17058*/
		$1.mode = ~~$1.mode; /*17060*/
		$1.sam = ~~$1.sam; /*17061*/
		$1.msg = $1.barcode; /*17084*/
		$1.msglen = $1.msg.length; /*17085*/
		if (($1.mode == 2) || ($1.mode == 3)) { /*17111*/
			if ($eq($geti($1.msg, 0, 7), "\x5b\x29\x3e\x1e\x30\x31\x1d")) { /*17095*/
				$1.fid = $geti($1.msg, 0, 9); /*17092*/
				$1.msg = $geti($1.msg, 9, $1.msglen - 9); /*17093*/
			} else { /*17095*/
				$1.fid = ""; /*17095*/
			} /*17095*/
			$search($1.msg, "\x1d"); /*17099*/
			$j--; /*17099*/
			$1.pcode = $k[--$j]; /*17099*/
			$j--; /*17100*/
			$search($k[--$j], "\x1d"); /*17100*/
			$j--; /*17100*/
			$1.ccode = $k[--$j]; /*17100*/
			$j--; /*17101*/
			$search($k[--$j], "\x1d"); /*17101*/
			$j--; /*17101*/
			$1.scode = $k[--$j]; /*17101*/
			$j--; /*17102*/
			$1.msg = $k[--$j]; /*17102*/
			var _R = $s($1.msg.length + $1.fid.length); /*17105*/
			$puti(_R, 0, $1.fid); /*17106*/
			$puti(_R, $1.fid.length, $1.msg); /*17107*/
			$1.msg = _R; /*17108*/
			$1.msglen = $1.msg.length; /*17109*/
		} /*17109*/
		$1.eci = -1; /*17114*/
		$1.pad = -2; /*17114*/
		$1.ns = -3; /*17114*/
		$1.la = -4; /*17115*/
		$1.lb = -5; /*17115*/
		$1.sa = -6; /*17116*/
		$1.sb = -7; /*17116*/
		$1.sc = -8; /*17116*/
		$1.sd = -9; /*17116*/
		$1.se = -10; /*17116*/
		$1.sa2 = -11; /*17117*/
		$1.sa3 = -12; /*17117*/
		$1.lkc = -13; /*17118*/
		$1.lkd = -14; /*17118*/
		$1.lke = -15; /*17118*/
		$1.pd2 = -16; /*17119*/
		$1.pd3 = -17; /*17119*/
		$1.charmaps = $a([$a([13, "`", 192, 224, 0]), $a(["A", "a", 193, 225, 1]), $a(["B", "b", 194, 226, 2]), $a(["C", "c", 195, 227, 3]), $a(["D", "d", 196, 228, 4]), $a(["E", "e", 197, 229, 5]), $a(["F", "f", 198, 230, 6]), $a(["G", "g", 199, 231, 7]), $a(["H", "h", 200, 232, 8]), $a(["I", "i", 201, 233, 9]), $a(["J", "j", 202, 234, 10]), $a(["K", "k", 203, 235, 11]), $a(["L", "l", 204, 236, 12]), $a(["M", "m", 205, 237, 13]), $a(["N", "n", 206, 238, 14]), $a(["O", "o", 207, 239, 15]), $a(["P", "p", 208, 240, 16]), $a(["Q", "q", 209, 241, 17]), $a(["R", "r", 210, 242, 18]), $a(["S", "s", 211, 243, 19]), $a(["T", "t", 212, 244, 20]), $a(["U", "u", 213, 245, 21]), $a(["V", "v", 214, 246, 22]), $a(["W", "w", 215, 247, 23]), $a(["X", "x", 216, 248, 24]), $a(["Y", "y", 217, 249, 25]), $a(["Z", "z", 218, 250, 26]), $a([$1.eci, $1.eci, $1.eci, $1.eci, $1.eci]), $a([28, 28, 28, 28, $1.pad]), $a([29, 29, 29, 29, $1.pad]), $a([30, 30, 30, 30, 27]), $a([$1.ns, $1.ns, $1.ns, $1.ns, $1.ns]), $a([" ", "{", 219, 251, 28]), $a([$1.pad, $1.pad, 220, 252, 29]), $a(["\"", "}", 221, 253, 30]), $a(["#", "~", 222, 254, 31]), $a(["$", 127, 223, 255, 159]), $a(["%", ";", 170, 161, 160]), $a(["&", "<", 172, 168, 162]), $a(["'", "=", 177, 171, 163]), $a([40, ">", 178, 175, 164]), $a([41, "?", 179, 176, 165]), $a(["*", "[", 181, 180, 166]), $a(["+", 92, 185, 183, 167]), $a([",", "]", 186, 184, 169]), $a(["-", "^", 188, 187, 173]), $a([".", "_", 189, 191, 174]), $a(["/", " ", 190, 138, 182]), $a(["0", ",", 128, 139, 149]), $a(["1", ".", 129, 140, 150]), $a(["2", "/", 130, 141, 151]), $a(["3", ":", 131, 142, 152]), $a(["4", "@", 132, 143, 153]), $a(["5", "!", 133, 144, 154]), $a(["6", "|", 134, 145, 155]), $a(["7", $1.pd2, 135, 146, 156]), $a(["8", $1.sa2, 136, 147, 157]), $a(["9", $1.sa3, 137, 148, 158]), $a([":", $1.pd3, $1.la, $1.la, $1.la]), $a([$1.sb, $1.sa, " ", " ", " "]), $a([$1.sc, $1.sc, $1.lkc, $1.sc, $1.sc]), $a([$1.sd, $1.sd, $1.sd, $1.lkd, $1.sd]), $a([$1.se, $1.se, $1.se, $1.se, $1.lke]), $a([$1.lb, $1.la, $1.lb, $1.lb, $1.lb])]); /*17188*/
		$1.charvals = $a([{}, {}, {}, {}, {}]); /*17191*/
		for (var _2J = 0, _2I = $1.charmaps.length - 1; _2J <= _2I; _2J += 1) { /*17200*/
			$1.i = _2J; /*17193*/
			$1.encs = $get($1.charmaps, $1.i); /*17194*/
			for (var _2N = 0; _2N <= 4; _2N += 1) { /*17199*/
				$1.j = _2N; /*17196*/
				var _2Q = $get($1.encs, $1.j); /*17197*/
				$k[$j++] = _2Q; /*17197*/
				if ($eq($type(_2Q), "stringtype")) { /*17197*/
					var _2T = $get($k[--$j], 0); /*17197*/
					$k[$j++] = _2T; /*17197*/
				} /*17197*/
				$put($get($1.charvals, $1.j), $k[--$j], $1.i); /*17198*/
			} /*17198*/
		} /*17198*/
		$1.seta = $get($1.charvals, 0); /*17201*/
		$1.setb = $get($1.charvals, 1); /*17202*/
		$1.setc = $get($1.charvals, 2); /*17203*/
		$1.setd = $get($1.charvals, 3); /*17204*/
		$1.sete = $get($1.charvals, 4); /*17205*/
		$k[$j++] = Infinity; /*17208*/
		for (var _2k = 0, _2l = $1.msglen + 1; _2k < _2l; _2k++) { /*17208*/
			$k[$j++] = 0; /*17208*/
		} /*17208*/
		$1.nseq = $a(); /*17208*/
		for (var _2o = $1.msglen - 1; _2o >= 0; _2o -= 1) { /*17216*/
			$1.i = _2o; /*17210*/
			var _2r = $get($1.msg, $1.i); /*17211*/
			if ((_2r >= 48) && (_2r <= 57)) { /*17214*/
				$put($1.nseq, $1.i, $get($1.nseq, $1.i + 1) + 1); /*17212*/
			} else { /*17214*/
				$put($1.nseq, $1.i, 0); /*17214*/
			} /*17214*/
		} /*17214*/
		$1.nseq = $geti($1.nseq, 0, $1.msglen); /*17217*/
		$1.prefixinset = function() {
			$k[$j++] = 0; /*17224*/
			for (;;) { /*17224*/
				var _32 = $k[--$j]; /*17222*/
				var _33 = $k[--$j]; /*17222*/
				$k[$j++] = _33; /*17222*/
				$k[$j++] = _32; /*17222*/
				if (_32 >= _33.length) { /*17222*/
					break; /*17222*/
				} /*17222*/
				var _34 = $k[--$j]; /*17223*/
				var _35 = $k[--$j]; /*17223*/
				var _37 = $k[--$j]; /*17223*/
				var _38 = $get(_37, $get(_35, _34)) !== undefined; /*17223*/
				$k[$j++] = _37; /*17223*/
				$k[$j++] = _35; /*17223*/
				$k[$j++] = _34; /*17223*/
				if (_38) { /*17223*/
					var _39 = $k[--$j]; /*17223*/
					$k[$j++] = _39 + 1; /*17223*/
				} else { /*17223*/
					break; /*17223*/
				} /*17223*/
			} /*17223*/
			var _3A = $k[--$j]; /*17225*/
			var _3B = $k[--$j]; /*17225*/
			var _3C = $k[--$j]; /*17225*/
			$k[$j++] = _3A; /*17225*/
		}; /*17226*/
		$1.enc = function() {
			var _3D = $k[--$j]; /*17229*/
			$put($1.out, $1.j, $get(_3D, $k[--$j])); /*17229*/
			$1.j = $1.j + 1; /*17230*/
		}; /*17231*/
		$1.out = $a(144); /*17233*/
		$1.i = 0; /*17234*/
		$1.j = 0; /*17234*/
		$1.cset = "seta"; /*17234*/
		for (;;) { /*17357*/
			if ($1.i == $1.msglen) { /*17243*/
				if ($ne($1.cset, "seta") && $ne($1.cset, "setb")) { /*17241*/
					$k[$j++] = $1.la; /*17239*/
					$k[$j++] = $1[$1.cset]; /*17239*/
					$1.enc(); /*17239*/
					$1.cset = "seta"; /*17240*/
				} /*17240*/
				break; /*17242*/
			} /*17242*/
			for (;;) { /*17356*/
				if ($get($1.nseq, $1.i) >= 9) { /*17254*/
					$k[$j++] = ~~$z($geti($1.msg, $1.i, 9)); /*17248*/
					for (var _3X = 0, _3Y = 4; _3X < _3Y; _3X++) { /*17248*/
						var _3Z = $k[--$j]; /*17248*/
						$k[$j++] = _3Z & 63; /*17248*/
						$k[$j++] = _3Z >>> 6; /*17248*/
					} /*17248*/
					$k[$j++] = $get($1[$1.cset], $1.ns); /*17249*/
					for (var _3e = 0; _3e <= 10; _3e += 2) { /*17249*/
						var _3f = $k[$j - 1 - _3e]; /*17249*/
						$k[$j++] = _3f; /*17249*/
					} /*17249*/
					$astore($a(6)); /*17249*/
					var _3h = $k[--$j]; /*17249*/
					var _3i = $k[--$j]; /*17249*/
					var _3j = $k[--$j]; /*17249*/
					var _3k = $k[--$j]; /*17249*/
					var _3l = $k[--$j]; /*17249*/
					var _3m = $k[--$j]; /*17249*/
					var _3n = $k[--$j]; /*17249*/
					$k[$j++] = _3h; /*17249*/
					$k[$j++] = _3n; /*17249*/
					$k[$j++] = _3m; /*17249*/
					$k[$j++] = _3l; /*17249*/
					$k[$j++] = _3k; /*17249*/
					$k[$j++] = _3j; /*17249*/
					$k[$j++] = _3i; /*17249*/
					for (var _3o = 0, _3p = 6; _3o < _3p; _3o++) { /*17249*/
						$j--; /*17249*/
					} /*17249*/
					$puti($1.out, $1.j, $k[--$j]); /*17250*/
					$1.i = $1.i + 9; /*17251*/
					$1.j = $1.j + 6; /*17252*/
					break; /*17253*/
				} /*17253*/
				$1.char1 = $get($1.msg, $1.i); /*17257*/
				$k[$j++] = "char2"; /*17258*/
				if (($1.i + 1) < $1.msglen) { /*17258*/
					$k[$j++] = $get($1.msg, $1.i + 1); /*17258*/
				} else { /*17258*/
					$k[$j++] = -99; /*17258*/
				} /*17258*/
				var _43 = $k[--$j]; /*17258*/
				$1[$k[--$j]] = _43; /*17258*/
				$k[$j++] = "char3"; /*17259*/
				if (($1.i + 2) < $1.msglen) { /*17259*/
					$k[$j++] = $get($1.msg, $1.i + 2); /*17259*/
				} else { /*17259*/
					$k[$j++] = -99; /*17259*/
				} /*17259*/
				var _4A = $k[--$j]; /*17259*/
				$1[$k[--$j]] = _4A; /*17259*/
				var _4F = $get($1[$1.cset], $1.char1) !== undefined; /*17262*/
				if (_4F) { /*17266*/
					$k[$j++] = $1.char1; /*17263*/
					$k[$j++] = $1[$1.cset]; /*17263*/
					$1.enc(); /*17263*/
					$1.i = $1.i + 1; /*17264*/
					break; /*17265*/
				} /*17265*/
				var _4N = $get($1.setb, $1.char1) !== undefined; /*17269*/
				if ($eq($1.cset, "seta") && _4N) { /*17279*/
					var _4Q = $get($1.setb, $1.char2) !== undefined; /*17270*/
					if (_4Q) { /*17276*/
						$k[$j++] = $1.lb; /*17271*/
						$k[$j++] = $1.seta; /*17271*/
						$1.enc(); /*17271*/
						$1.cset = "setb"; /*17272*/
					} else { /*17276*/
						$k[$j++] = $1.sb; /*17274*/
						$k[$j++] = $1.seta; /*17274*/
						$1.enc(); /*17274*/
						$k[$j++] = $1.char1; /*17275*/
						$k[$j++] = $1.setb; /*17275*/
						$1.enc(); /*17275*/
						$1.i = $1.i + 1; /*17276*/
					} /*17276*/
					break; /*17278*/
				} /*17278*/
				var _4b = $get($1.seta, $1.char1) !== undefined; /*17282*/
				if ($eq($1.cset, "setb") && _4b) { /*17307*/
					var _4c = $1.seta; /*17283*/
					var _4d = $1.msg; /*17283*/
					var _4e = $1.i; /*17283*/
					var _4f = $1.msglen; /*17283*/
					var _4g = $1.i; /*17283*/
					var _4h = _4f - _4g; /*17283*/
					var _4i = 4; /*17283*/
					if (4 > (_4f - _4g)) { /*17283*/
						var _ = _4h; /*17283*/
						_4h = _4i; /*17283*/
						_4i = _; /*17283*/
					} /*17283*/
					$k[$j++] = "p"; /*17283*/
					$k[$j++] = _4c; /*17283*/
					$k[$j++] = $geti(_4d, _4e, _4i); /*17283*/
					$1.prefixinset(); /*17283*/
					var _4k = $k[--$j]; /*17283*/
					$1[$k[--$j]] = _4k; /*17283*/
					if ($1.p == 1) { /*17288*/
						$k[$j++] = $1.sa; /*17285*/
						$k[$j++] = $1.setb; /*17285*/
						$1.enc(); /*17285*/
						$k[$j++] = $1.char1; /*17286*/
						$k[$j++] = $1.seta; /*17286*/
						$1.enc(); /*17286*/
						$1.i = $1.i + 1; /*17287*/
					} /*17287*/
					if ($1.p == 2) { /*17294*/
						$k[$j++] = $1.sa2; /*17290*/
						$k[$j++] = $1.setb; /*17290*/
						$1.enc(); /*17290*/
						$k[$j++] = $1.char1; /*17291*/
						$k[$j++] = $1.seta; /*17291*/
						$1.enc(); /*17291*/
						$k[$j++] = $1.char2; /*17292*/
						$k[$j++] = $1.seta; /*17292*/
						$1.enc(); /*17292*/
						$1.i = $1.i + 2; /*17293*/
					} /*17293*/
					if ($1.p == 3) { /*17301*/
						$k[$j++] = $1.sa3; /*17296*/
						$k[$j++] = $1.setb; /*17296*/
						$1.enc(); /*17296*/
						$k[$j++] = $1.char1; /*17297*/
						$k[$j++] = $1.seta; /*17297*/
						$1.enc(); /*17297*/
						$k[$j++] = $1.char2; /*17298*/
						$k[$j++] = $1.seta; /*17298*/
						$1.enc(); /*17298*/
						$k[$j++] = $1.char3; /*17299*/
						$k[$j++] = $1.seta; /*17299*/
						$1.enc(); /*17299*/
						$1.i = $1.i + 3; /*17300*/
					} /*17300*/
					if ($1.p >= 4) { /*17305*/
						$k[$j++] = $1.la; /*17303*/
						$k[$j++] = $1.setb; /*17303*/
						$1.enc(); /*17303*/
						$1.cset = "seta"; /*17304*/
					} /*17304*/
					break; /*17306*/
				} /*17306*/
				var _5F = $get($1.seta, $1.char1) !== undefined; /*17310*/
				if (_5F) { /*17314*/
					$k[$j++] = $1.la; /*17311*/
					$k[$j++] = $1[$1.cset]; /*17311*/
					$1.enc(); /*17311*/
					$1.cset = "seta"; /*17312*/
					break; /*17313*/
				} /*17313*/
				var _5L = $get($1.setb, $1.char1) !== undefined; /*17315*/
				if (_5L) { /*17319*/
					$k[$j++] = $1.lb; /*17316*/
					$k[$j++] = $1[$1.cset]; /*17316*/
					$1.enc(); /*17316*/
					$1.cset = "setb"; /*17317*/
					break; /*17318*/
				} /*17318*/
				var _5R = $get($1.setc, $1.char1) !== undefined; /*17322*/
				if (_5R) { /*17322*/
					$1.setx = "setc"; /*17322*/
					$1.sx = $1.sc; /*17322*/
					$1.lkx = $1.lkc; /*17322*/
				} /*17322*/
				var _5W = $get($1.setd, $1.char1) !== undefined; /*17323*/
				if (_5W) { /*17323*/
					$1.setx = "setd"; /*17323*/
					$1.sx = $1.sd; /*17323*/
					$1.lkx = $1.lkd; /*17323*/
				} /*17323*/
				var _5b = $get($1.sete, $1.char1) !== undefined; /*17324*/
				if (_5b) { /*17324*/
					$1.setx = "sete"; /*17324*/
					$1.sx = $1.se; /*17324*/
					$1.lkx = $1.lke; /*17324*/
				} /*17324*/
				var _5f = $1[$1.setx]; /*17327*/
				var _5g = $1.msg; /*17327*/
				var _5h = $1.i; /*17327*/
				var _5i = $1.msglen; /*17327*/
				var _5j = $1.i; /*17327*/
				var _5k = _5i - _5j; /*17327*/
				var _5l = 4; /*17327*/
				if (4 > (_5i - _5j)) { /*17327*/
					var _ = _5k; /*17327*/
					_5k = _5l; /*17327*/
					_5l = _; /*17327*/
				} /*17327*/
				$k[$j++] = "p"; /*17327*/
				$k[$j++] = _5f; /*17327*/
				$k[$j++] = $geti(_5g, _5h, _5l); /*17327*/
				$1.prefixinset(); /*17327*/
				var _5n = $k[--$j]; /*17327*/
				$1[$k[--$j]] = _5n; /*17327*/
				if ($1.p == 1) { /*17332*/
					$k[$j++] = $1.sx; /*17329*/
					$k[$j++] = $1[$1.cset]; /*17329*/
					$1.enc(); /*17329*/
					$k[$j++] = $1.char1; /*17330*/
					$k[$j++] = $1[$1.setx]; /*17330*/
					$1.enc(); /*17330*/
					$1.i = $1.i + 1; /*17331*/
				} /*17331*/
				if ($1.p == 2) { /*17339*/
					$k[$j++] = $1.sx; /*17334*/
					$k[$j++] = $1[$1.cset]; /*17334*/
					$1.enc(); /*17334*/
					$k[$j++] = $1.char1; /*17335*/
					$k[$j++] = $1[$1.setx]; /*17335*/
					$1.enc(); /*17335*/
					$k[$j++] = $1.sx; /*17336*/
					$k[$j++] = $1[$1.cset]; /*17336*/
					$1.enc(); /*17336*/
					$k[$j++] = $1.char2; /*17337*/
					$k[$j++] = $1[$1.setx]; /*17337*/
					$1.enc(); /*17337*/
					$1.i = $1.i + 2; /*17338*/
				} /*17338*/
				if ($1.p == 3) { /*17348*/
					$k[$j++] = $1.sx; /*17341*/
					$k[$j++] = $1[$1.cset]; /*17341*/
					$1.enc(); /*17341*/
					$k[$j++] = $1.char1; /*17342*/
					$k[$j++] = $1[$1.setx]; /*17342*/
					$1.enc(); /*17342*/
					$k[$j++] = $1.sx; /*17343*/
					$k[$j++] = $1[$1.cset]; /*17343*/
					$1.enc(); /*17343*/
					$k[$j++] = $1.char2; /*17344*/
					$k[$j++] = $1[$1.setx]; /*17344*/
					$1.enc(); /*17344*/
					$k[$j++] = $1.sx; /*17345*/
					$k[$j++] = $1[$1.cset]; /*17345*/
					$1.enc(); /*17345*/
					$k[$j++] = $1.char3; /*17346*/
					$k[$j++] = $1[$1.setx]; /*17346*/
					$1.enc(); /*17346*/
					$1.i = $1.i + 3; /*17347*/
				} /*17347*/
				if ($1.p >= 4) { /*17353*/
					$k[$j++] = $1.sx; /*17350*/
					$k[$j++] = $1[$1.cset]; /*17350*/
					$1.enc(); /*17350*/
					$k[$j++] = $1.lkx; /*17351*/
					$k[$j++] = $1[$1.setx]; /*17351*/
					$1.enc(); /*17351*/
					$1.cset = $1.setx; /*17352*/
				} /*17352*/
				break; /*17355*/
			} /*17355*/
		} /*17355*/
		$1.encmsg = $geti($1.out, 0, $1.j); /*17358*/
		$1.padval = $get($1[$1.cset], $1.pad); /*17359*/
		$1.sami = $a([]); /*17362*/
		if ($1.sam != -1) { /*17367*/
			$1.sami = $a(2); /*17364*/
			$put($1.sami, 0, $get($1.seta, $1.pad)); /*17365*/
			$put($1.sami, 1, (((~~($1.sam / 10)) - 1) * 8) + (($1.sam % 10) - 1)); /*17366*/
		} /*17366*/
		$k[$j++] = Infinity; /*17368*/
		$aload($1.sami); /*17368*/
		$aload($1.encmsg); /*17368*/
		$1.encmsg = $a(); /*17368*/
		if (($1.mode == 2) || ($1.mode == 3)) { /*17423*/
			var _70 = $strcpy($s(4), "0000"); /*17374*/
			var _73 = $cvrs($s(4), ~~$1.mode, 2); /*17374*/
			$puti(_70, 4 - _73.length, _73); /*17374*/
			$1.mdb = _70; /*17374*/
			var _75 = $strcpy($s(10), "0000000000"); /*17375*/
			var _78 = $cvrs($s(10), ~~$z($1.ccode), 2); /*17375*/
			$puti(_75, 10 - _78.length, _78); /*17375*/
			$1.ccb = _75; /*17375*/
			var _7A = $strcpy($s(10), "0000000000"); /*17376*/
			var _7D = $cvrs($s(10), ~~$z($1.scode), 2); /*17376*/
			$puti(_7A, 10 - _7D.length, _7D); /*17376*/
			$1.scb = _7A; /*17376*/
			$1.pcb = $strcpy($s(36), "000000000000000000000000000000000000"); /*17377*/
			if ($1.mode == 2) { /*17390*/
				var _7K = $cvrs($s(6), $1.pcode.length, 2); /*17380*/
				$puti($1.pcb, 6 - _7K.length, _7K); /*17380*/
				var _7O = $cvrs($s(30), ~~$z($1.pcode), 2); /*17381*/
				$puti($1.pcb, 36 - _7O.length, _7O); /*17381*/
			} else { /*17390*/
				$k[$j++] = Infinity; /*17387*/
				var _7Q = $strcpy($s(6), "      "); /*17385*/
				$k[$j++] = _7Q; /*17385*/
				$k[$j++] = _7Q; /*17385*/
				$k[$j++] = 0; /*17385*/
				if ($1.pcode.length > 6) { /*17385*/
					$k[$j++] = $geti($1.pcode, 0, 6); /*17385*/
				} else { /*17385*/
					$k[$j++] = $1.pcode; /*17385*/
				} /*17385*/
				var _7V = $k[--$j]; /*17385*/
				var _7W = $k[--$j]; /*17385*/
				$puti($k[--$j], _7W, _7V); /*17385*/
				$forall($k[--$j], function() { /*17386*/
					var _7b = $get($1.seta, $k[--$j]); /*17386*/
					$k[$j++] = _7b; /*17386*/
				}); /*17386*/
				$1.pccw = $a(); /*17387*/
				for (var _7d = 0; _7d <= 5; _7d += 1) { /*17391*/
					$1.i = _7d; /*17389*/
					var _7j = $cvrs($s(6), $get($1.pccw, $1.i), 2); /*17390*/
					$puti($1.pcb, ((6 * $1.i) + 6) - _7j.length, _7j); /*17390*/
				} /*17390*/
			} /*17390*/
			$1.scm = $s(60); /*17395*/
			$puti($1.scm, 2, $1.mdb); /*17396*/
			$puti($1.scm, 38, $geti($1.pcb, 0, 4)); /*17397*/
			$puti($1.scm, 30, $geti($1.pcb, 4, 6)); /*17398*/
			$puti($1.scm, 24, $geti($1.pcb, 10, 6)); /*17399*/
			$puti($1.scm, 18, $geti($1.pcb, 16, 6)); /*17400*/
			$puti($1.scm, 12, $geti($1.pcb, 22, 6)); /*17401*/
			$puti($1.scm, 6, $geti($1.pcb, 28, 6)); /*17402*/
			$puti($1.scm, 0, $geti($1.pcb, 34, 2)); /*17403*/
			$puti($1.scm, 52, $geti($1.ccb, 0, 2)); /*17404*/
			$puti($1.scm, 42, $geti($1.ccb, 2, 6)); /*17405*/
			$puti($1.scm, 36, $geti($1.ccb, 8, 2)); /*17406*/
			$puti($1.scm, 54, $geti($1.scb, 0, 6)); /*17407*/
			$puti($1.scm, 48, $geti($1.scb, 6, 4)); /*17408*/
			$1.pri = $a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]); /*17411*/
			for (var _8P = 0; _8P <= 59; _8P += 1) { /*17417*/
				$1.i = _8P; /*17413*/
				$1.ps = ~~($1.i / 6); /*17414*/
				$1.ep = (~~(Math.pow(2, 5 - ($1.i % 6)))) * ($get($1.scm, $1.i) - 48); /*17415*/
				$put($1.pri, $1.ps, $get($1.pri, $1.ps) + $1.ep); /*17416*/
			} /*17416*/
			$k[$j++] = Infinity; /*17420*/
			for (var _8b = 0, _8c = 84; _8b < _8c; _8b++) { /*17420*/
				$k[$j++] = $1.padval; /*17420*/
			} /*17420*/
			$1.sec = $a(); /*17420*/
			$puti($1.sec, 0, $1.encmsg); /*17421*/
		} /*17421*/
		if (((($1.mode == 4) || ($1.mode == 5)) || ($1.mode == 6)) || ($1.mode == -1)) { /*17442*/
			if ($1.mode == -1) { /*17431*/
				var _8n = ($1.encmsg.length <= 77) ? 5 : 4; /*17430*/
				$1.mode = _8n; /*17430*/
			} /*17430*/
			$k[$j++] = Infinity; /*17434*/
			var _8p = ($1.mode == 5) ? 78 : 94; /*17434*/
			for (var _8q = 0, _8r = _8p; _8q < _8r; _8q++) { /*17434*/
				$k[$j++] = $1.padval; /*17434*/
			} /*17434*/
			$1.cws = $a(); /*17434*/
			$put($1.cws, 0, $1.mode); /*17435*/
			$puti($1.cws, 1, $1.encmsg); /*17436*/
			$1.pri = $geti($1.cws, 0, 10); /*17439*/
			$1.sec = $geti($1.cws, 10, $1.cws.length - 10); /*17440*/
		} /*17440*/
		$k[$j++] = Infinity; /*17445*/
		$k[$j++] = 1; /*17445*/
		for (var _93 = 0, _94 = 63; _93 < _94; _93++) { /*17445*/
			var _95 = $k[--$j]; /*17445*/
			var _96 = _95 * 2; /*17445*/
			$k[$j++] = _95; /*17445*/
			$k[$j++] = _96; /*17445*/
			if (_96 >= 64) { /*17445*/
				var _97 = $k[--$j]; /*17445*/
				$k[$j++] = _97 ^ 67; /*17445*/
			} /*17445*/
		} /*17445*/
		$1.rsalog = $a(); /*17445*/
		$1.rslog = $a(64); /*17446*/
		for (var _9A = 1; _9A <= 63; _9A += 1) { /*17447*/
			$put($1.rslog, $get($1.rsalog, _9A), _9A); /*17447*/
		} /*17447*/
		$1.rsprod = function() {
			var _9E = $k[--$j]; /*17451*/
			var _9F = $k[--$j]; /*17451*/
			$k[$j++] = _9F; /*17455*/
			$k[$j++] = _9E; /*17455*/
			if ((_9E != 0) && (_9F != 0)) { /*17454*/
				var _9I = $get($1.rslog, $k[--$j]); /*17452*/
				var _9N = $get($1.rsalog, (_9I + $get($1.rslog, $k[--$j])) % 63); /*17452*/
				$k[$j++] = _9N; /*17452*/
			} else { /*17454*/
				$j -= 2; /*17454*/
				$k[$j++] = 0; /*17454*/
			} /*17454*/
		}; /*17456*/
		$1.rscodes = function() {
			$1.rsnum = $k[--$j]; /*17461*/
			$1.cwb = $k[--$j]; /*17462*/
			$k[$j++] = Infinity; /*17465*/
			$k[$j++] = 1; /*17465*/
			for (var _9R = 0, _9S = $1.rsnum; _9R < _9S; _9R++) { /*17465*/
				$k[$j++] = 0; /*17465*/
			} /*17465*/
			$1.coeffs = $a(); /*17465*/
			for (var _9W = 1, _9V = $1.rsnum; _9W <= _9V; _9W += 1) { /*17474*/
				$1.i = _9W; /*17467*/
				$put($1.coeffs, $1.i, $get($1.coeffs, $1.i - 1)); /*17468*/
				for (var _9d = $1.i - 1; _9d >= 1; _9d -= 1) { /*17472*/
					$1.j = _9d; /*17470*/
					$k[$j++] = $1.coeffs; /*17471*/
					$k[$j++] = $1.j; /*17471*/
					$k[$j++] = $get($1.coeffs, $1.j - 1); /*17471*/
					$k[$j++] = $get($1.coeffs, $1.j); /*17471*/
					$k[$j++] = $get($1.rsalog, $1.i); /*17471*/
					$1.rsprod(); /*17471*/
					var _9p = $k[--$j]; /*17471*/
					var _9q = $k[--$j]; /*17471*/
					var _9r = $k[--$j]; /*17471*/
					$put($k[--$j], _9r, $xo(_9q, _9p)); /*17471*/
				} /*17471*/
				$k[$j++] = $1.coeffs; /*17473*/
				$k[$j++] = 0; /*17473*/
				$k[$j++] = $get($1.coeffs, 0); /*17473*/
				$k[$j++] = $get($1.rsalog, $1.i); /*17473*/
				$1.rsprod(); /*17473*/
				var _9z = $k[--$j]; /*17473*/
				var _A0 = $k[--$j]; /*17473*/
				$put($k[--$j], _A0, _9z); /*17473*/
			} /*17473*/
			$1.coeffs = $geti($1.coeffs, 0, $1.coeffs.length - 1); /*17475*/
			$k[$j++] = Infinity; /*17478*/
			for (var _A6 = 0, _A7 = $1.rsnum; _A6 < _A7; _A6++) { /*17478*/
				$k[$j++] = 0; /*17478*/
			} /*17478*/
			$1.ecb = $a(); /*17478*/
			for (var _AB = 0, _AA = $1.cwb.length - 1; _AB <= _AA; _AB += 1) { /*17487*/
				$1.t = $xo($get($1.cwb, _AB), $get($1.ecb, 0)); /*17480*/
				for (var _AH = $1.ecb.length - 1; _AH >= 0; _AH -= 1) { /*17486*/
					$1.i = _AH; /*17482*/
					$1.p = ($1.ecb.length - $1.i) - 1; /*17483*/
					$k[$j++] = $1.ecb; /*17484*/
					$k[$j++] = $1.p; /*17484*/
					$k[$j++] = $1.t; /*17484*/
					$k[$j++] = $get($1.coeffs, $1.i); /*17484*/
					$1.rsprod(); /*17484*/
					var _AQ = $k[--$j]; /*17484*/
					var _AR = $k[--$j]; /*17484*/
					$put($k[--$j], _AR, _AQ); /*17484*/
					if ($1.i > 0) { /*17485*/
						$put($1.ecb, $1.p, $xo($get($1.ecb, $1.p + 1), $get($1.ecb, $1.p))); /*17485*/
					} /*17485*/
				} /*17485*/
			} /*17485*/
			$k[$j++] = $1.ecb; /*17489*/
		}; /*17491*/
		$k[$j++] = Infinity; /*17494*/
		for (var _Af = 0, _Ae = $1.sec.length - 1; _Af <= _Ae; _Af += 2) { /*17494*/
			$k[$j++] = $get($1.sec, _Af); /*17494*/
		} /*17494*/
		$1.seco = $a(); /*17494*/
		$k[$j++] = Infinity; /*17495*/
		for (var _Al = 1, _Ak = $1.sec.length - 1; _Al <= _Ak; _Al += 2) { /*17495*/
			$k[$j++] = $get($1.sec, _Al); /*17495*/
		} /*17495*/
		$1.sece = $a(); /*17495*/
		var _Aq = ($1.sec.length == 84) ? 20 : 28; /*17498*/
		$1.scodes = _Aq; /*17498*/
		$k[$j++] = "secochk"; /*17499*/
		$k[$j++] = $1.seco; /*17499*/
		$k[$j++] = $1.scodes; /*17499*/
		$1.rscodes(); /*17499*/
		var _At = $k[--$j]; /*17499*/
		$1[$k[--$j]] = _At; /*17499*/
		$k[$j++] = "secechk"; /*17500*/
		$k[$j++] = $1.sece; /*17500*/
		$k[$j++] = $1.scodes; /*17500*/
		$1.rscodes(); /*17500*/
		var _Ax = $k[--$j]; /*17500*/
		$1[$k[--$j]] = _Ax; /*17500*/
		$k[$j++] = Infinity; /*17503*/
		for (var _B1 = 0, _B0 = $1.scodes - 1; _B1 <= _B0; _B1 += 1) { /*17503*/
			$k[$j++] = $get($1.secochk, _B1); /*17503*/
			$k[$j++] = $get($1.secechk, _B1); /*17503*/
		} /*17503*/
		$1.secchk = $a(); /*17503*/
		$k[$j++] = Infinity; /*17511*/
		$aload($1.pri); /*17507*/
		$k[$j++] = $1.pri; /*17508*/
		$k[$j++] = 10; /*17508*/
		$1.rscodes(); /*17508*/
		$aload($k[--$j]); /*17508*/
		$aload($1.sec); /*17509*/
		$aload($1.secchk); /*17510*/
		$1.codewords = $a(); /*17511*/
		$k[$j++] = Infinity; /*17514*/
		for (var _BD = 0, _BE = 864; _BD < _BE; _BD++) { /*17514*/
			$k[$j++] = 0; /*17514*/
		} /*17514*/
		$1.mods = $a(); /*17514*/
		for (var _BG = 0; _BG <= 143; _BG += 1) { /*17519*/
			$1.i = _BG; /*17516*/
			$k[$j++] = Infinity; /*17517*/
			var _BL = $cvrs($s(6), $get($1.codewords, $1.i), 2); /*17517*/
			for (var _BM = 0, _BN = _BL.length; _BM < _BN; _BM++) { /*17517*/
				$k[$j++] = $get(_BL, _BM) - 48; /*17517*/
			} /*17517*/
			$1.cw = $a(); /*17517*/
			$puti($1.mods, (6 * $1.i) + (6 - $1.cw.length), $1.cw); /*17518*/
		} /*17518*/
		$1.modmap = $a([469, 529, 286, 316, 347, 346, 673, 672, 703, 702, 647, 676, 283, 282, 313, 312, 370, 610, 618, 379, 378, 409, 408, 439, 705, 704, 559, 589, 588, 619, 458, 518, 640, 701, 675, 674, 285, 284, 315, 314, 310, 340, 531, 289, 288, 319, 349, 348, 456, 486, 517, 516, 471, 470, 369, 368, 399, 398, 429, 428, 549, 548, 579, 578, 609, 608, 649, 648, 679, 678, 709, 708, 639, 638, 669, 668, 699, 698, 279, 278, 309, 308, 339, 338, 381, 380, 411, 410, 441, 440, 561, 560, 591, 590, 621, 620, 547, 546, 577, 576, 607, 606, 367, 366, 397, 396, 427, 426, 291, 290, 321, 320, 351, 350, 651, 650, 681, 680, 711, 710, 1, 0, 31, 30, 61, 60, 3, 2, 33, 32, 63, 62, 5, 4, 35, 34, 65, 64, 7, 6, 37, 36, 67, 66, 9, 8, 39, 38, 69, 68, 11, 10, 41, 40, 71, 70, 13, 12, 43, 42, 73, 72, 15, 14, 45, 44, 75, 74, 17, 16, 47, 46, 77, 76, 19, 18, 49, 48, 79, 78, 21, 20, 51, 50, 81, 80, 23, 22, 53, 52, 83, 82, 25, 24, 55, 54, 85, 84, 27, 26, 57, 56, 87, 86, 117, 116, 147, 146, 177, 176, 115, 114, 145, 144, 175, 174, 113, 112, 143, 142, 173, 172, 111, 110, 141, 140, 171, 170, 109, 108, 139, 138, 169, 168, 107, 106, 137, 136, 167, 166, 105, 104, 135, 134, 165, 164, 103, 102, 133, 132, 163, 162, 101, 100, 131, 130, 161, 160, 99, 98, 129, 128, 159, 158, 97, 96, 127, 126, 157, 156, 95, 94, 125, 124, 155, 154, 93, 92, 123, 122, 153, 152, 91, 90, 121, 120, 151, 150, 181, 180, 211, 210, 241, 240, 183, 182, 213, 212, 243, 242, 185, 184, 215, 214, 245, 244, 187, 186, 217, 216, 247, 246, 189, 188, 219, 218, 249, 248, 191, 190, 221, 220, 251, 250, 193, 192, 223, 222, 253, 252, 195, 194, 225, 224, 255, 254, 197, 196, 227, 226, 257, 256, 199, 198, 229, 228, 259, 258, 201, 200, 231, 230, 261, 260, 203, 202, 233, 232, 263, 262, 205, 204, 235, 234, 265, 264, 207, 206, 237, 236, 267, 266, 297, 296, 327, 326, 357, 356, 295, 294, 325, 324, 355, 354, 293, 292, 323, 322, 353, 352, 277, 276, 307, 306, 337, 336, 275, 274, 305, 304, 335, 334, 273, 272, 303, 302, 333, 332, 271, 270, 301, 300, 331, 330, 361, 360, 391, 390, 421, 420, 363, 362, 393, 392, 423, 422, 365, 364, 395, 394, 425, 424, 383, 382, 413, 412, 443, 442, 385, 384, 415, 414, 445, 444, 387, 386, 417, 416, 447, 446, 477, 476, 507, 506, 537, 536, 475, 474, 505, 504, 535, 534, 473, 472, 503, 502, 533, 532, 455, 454, 485, 484, 515, 514, 453, 452, 483, 482, 513, 512, 451, 450, 481, 480, 511, 510, 541, 540, 571, 570, 601, 600, 543, 542, 573, 572, 603, 602, 545, 544, 575, 574, 605, 604, 563, 562, 593, 592, 623, 622, 565, 564, 595, 594, 625, 624, 567, 566, 597, 596, 627, 626, 657, 656, 687, 686, 717, 716, 655, 654, 685, 684, 715, 714, 653, 652, 683, 682, 713, 712, 637, 636, 667, 666, 697, 696, 635, 634, 665, 664, 695, 694, 633, 632, 663, 662, 693, 692, 631, 630, 661, 660, 691, 690, 721, 720, 751, 750, 781, 780, 723, 722, 753, 752, 783, 782, 725, 724, 755, 754, 785, 784, 727, 726, 757, 756, 787, 786, 729, 728, 759, 758, 789, 788, 731, 730, 761, 760, 791, 790, 733, 732, 763, 762, 793, 792, 735, 734, 765, 764, 795, 794, 737, 736, 767, 766, 797, 796, 739, 738, 769, 768, 799, 798, 741, 740, 771, 770, 801, 800, 743, 742, 773, 772, 803, 802, 745, 744, 775, 774, 805, 804, 747, 746, 777, 776, 807, 806, 837, 836, 867, 866, 897, 896, 835, 834, 865, 864, 895, 894, 833, 832, 863, 862, 893, 892, 831, 830, 861, 860, 891, 890, 829, 828, 859, 858, 889, 888, 827, 826, 857, 856, 887, 886, 825, 824, 855, 854, 885, 884, 823, 822, 853, 852, 883, 882, 821, 820, 851, 850, 881, 880, 819, 818, 849, 848, 879, 878, 817, 816, 847, 846, 877, 876, 815, 814, 845, 844, 875, 874, 813, 812, 843, 842, 873, 872, 811, 810, 841, 840, 871, 870, 901, 900, 931, 930, 961, 960, 903, 902, 933, 932, 963, 962, 905, 904, 935, 934, 965, 964, 907, 906, 937, 936, 967, 966, 909, 908, 939, 938, 969, 968, 911, 910, 941, 940, 971, 970, 913, 912, 943, 942, 973, 972, 915, 914, 945, 944, 975, 974, 917, 916, 947, 946, 977, 976, 919, 918, 949, 948, 979, 978, 921, 920, 951, 950, 981, 980, 923, 922, 953, 952, 983, 982, 925, 924, 955, 954, 985, 984, 927, 926, 957, 956, 987, 986, 58, 89, 88, 118, 149, 148, 178, 209, 208, 238, 269, 268, 298, 329, 328, 358, 389, 388, 418, 449, 448, 478, 509, 508, 538, 569, 568, 598, 629, 628, 658, 689, 688, 718, 749, 748, 778, 809, 808, 838, 869, 868, 898, 929, 928, 958, 989, 988]); /*17567*/
		$1.pixs = $a(864); /*17570*/
		$1.j = 0; /*17571*/
		for (var _BY = 0, _BX = $1.mods.length - 1; _BY <= _BX; _BY += 1) { /*17578*/
			$1.i = _BY; /*17573*/
			if ($get($1.mods, $1.i) == 1) { /*17577*/
				$put($1.pixs, $1.j, $get($1.modmap, $1.i)); /*17575*/
				$1.j = $1.j + 1; /*17576*/
			} /*17576*/
		} /*17576*/
		$k[$j++] = Infinity; /*17579*/
		$forall($geti($1.pixs, 0, $1.j)); /*17579*/
		$k[$j++] = 28; /*17579*/
		$k[$j++] = 29; /*17579*/
		$k[$j++] = 280; /*17579*/
		$k[$j++] = 281; /*17579*/
		$k[$j++] = 311; /*17579*/
		$k[$j++] = 457; /*17579*/
		$k[$j++] = 488; /*17579*/
		$k[$j++] = 500; /*17579*/
		$k[$j++] = 530; /*17579*/
		$k[$j++] = 670; /*17579*/
		$k[$j++] = 700; /*17579*/
		$k[$j++] = 677; /*17579*/
		$k[$j++] = 707; /*17579*/
		$1.pixs = $a(); /*17579*/
		var _Bo = {
			ren: $0.renmaximatrix,
			pixs: $1.pixs,
			opt: $1.options
		}; /*17585*/
		$k[$j++] = _Bo; /*17588*/
		if (!$1.dontdraw) { /*17588*/
			$0.renmaximatrix(); /*17588*/
		} /*17588*/
	};
	$0.azteccode = function() {
		var $1 = {}; /*17615*/
		$1.options = $k[--$j]; /*17617*/
		$1.barcode = $k[--$j]; /*17618*/
		$1.dontdraw = false; /*17620*/
		$1.format = "unset"; /*17621*/
		$1.readerinit = false; /*17622*/
		$1.layers = -1; /*17623*/
		$1.eclevel = 23; /*17624*/
		$1.ecaddchars = 3; /*17625*/
		$1.raw = false; /*17626*/
		$1.parse = false; /*17627*/
		$forall($1.options, function() { /*17638*/
			var _3 = $k[--$j]; /*17638*/
			$1[$k[--$j]] = _3; /*17638*/
		}); /*17638*/
		$1.layers = ~~$1.layers; /*17640*/
		$1.eclevel = +$1.eclevel; /*17641*/
		$1.ecaddchars = ~~$1.ecaddchars; /*17642*/
		$1.msgbits = ""; /*17666*/
		if ($ne($1.format, "rune") && $1.raw) { /*17667*/
			$1.msgbits = $1.barcode; /*17667*/
		} /*17667*/
		if ($ne($1.format, "rune") && (!$1.raw)) { /*17964*/
			$1.U = 0; /*17671*/
			$1.L = 1; /*17671*/
			$1.M = 2; /*17671*/
			$1.P = 3; /*17671*/
			$1.D = 4; /*17671*/
			$1.B = 5; /*17671*/
			$1.lu = -1; /*17674*/
			$1.ll = -2; /*17674*/
			$1.lm = -3; /*17674*/
			$1.lp = -4; /*17675*/
			$1.ld = -5; /*17675*/
			$1.su = -6; /*17675*/
			$1.sp = -7; /*17676*/
			$1.sb = -8; /*17676*/
			$1.fl = -9; /*17676*/
			$1.p2 = -10; /*17677*/
			$1.p3 = -11; /*17677*/
			$1.p4 = -12; /*17677*/
			$1.p5 = -13; /*17677*/
			$1.charmaps = $a([$a([$1.sp, $1.sp, $1.sp, $1.fl, $1.sp]), $a([32, 32, 32, 13, 32]), $a(["A", "a", 1, $1.p2, "0"]), $a(["B", "b", 2, $1.p3, "1"]), $a(["C", "c", 3, $1.p4, "2"]), $a(["D", "d", 4, $1.p5, "3"]), $a(["E", "e", 5, "!", "4"]), $a(["F", "f", 6, "\"", "5"]), $a(["G", "g", 7, "#", "6"]), $a(["H", "h", 8, "$", "7"]), $a(["I", "i", 9, "%", "8"]), $a(["J", "j", 10, "&", "9"]), $a(["K", "k", 11, "'", ","]), $a(["L", "l", 12, 40, "."]), $a(["M", "m", 13, 41, $1.lu]), $a(["N", "n", 27, "*", $1.su]), $a(["O", "o", 28, "+", -99]), $a(["P", "p", 29, ",", -99]), $a(["Q", "q", 30, "-", -99]), $a(["R", "r", 31, ".", -99]), $a(["S", "s", "@", "/", -99]), $a(["T", "t", 92, ":", -99]), $a(["U", "u", "^", ";", -99]), $a(["V", "v", "_", "<", -99]), $a(["W", "w", "`", "=", -99]), $a(["X", "x", "|", ">", -99]), $a(["Y", "y", "~", "?", -99]), $a(["Z", "z", 127, "[", -99]), $a([$1.ll, $1.su, $1.ll, "]", -99]), $a([$1.lm, $1.lm, $1.lu, "{", -99]), $a([$1.ld, $1.ld, $1.lp, "}", -99]), $a([$1.sb, $1.sb, $1.sb, $1.lu, -99])]); /*17714*/
			$1.charvals = $a([{}, {}, {}, {}, {}]); /*17717*/
			for (var _1B = 0, _1A = $1.charmaps.length - 1; _1B <= _1A; _1B += 1) { /*17726*/
				$1.i = _1B; /*17719*/
				$1.encs = $get($1.charmaps, $1.i); /*17720*/
				for (var _1F = 0; _1F <= 4; _1F += 1) { /*17725*/
					$1.j = _1F; /*17722*/
					var _1I = $get($1.encs, $1.j); /*17723*/
					$k[$j++] = _1I; /*17723*/
					if ($eq($type(_1I), "stringtype")) { /*17723*/
						var _1L = $get($k[--$j], 0); /*17723*/
						$k[$j++] = _1L; /*17723*/
					} /*17723*/
					$put($get($1.charvals, $1.j), $k[--$j], $1.i); /*17724*/
				} /*17724*/
			} /*17724*/
			var _1V = {
				"\x0d\x0a": $1.p2,
				". ": $1.p3,
				", ": $1.p4,
				": ": $1.p5
			}; /*17733*/
			$1.pcomp = _1V; /*17734*/
			$1.e = 10000; /*17736*/
			$1.latlen = $a([$a([0, 5, 5, 10, 5, 10]), $a([9, 0, 5, 10, 5, 10]), $a([5, 5, 0, 5, 10, 10]), $a([5, 10, 10, 0, 10, 15]), $a([4, 9, 9, 14, 0, 14]), $a([0, 0, 0, 0, 0, 0])]); /*17746*/
			$1.latseq = $a([$a([$a([]), $a([$1.ll]), $a([$1.lm]), $a([$1.lm, $1.lp]), $a([$1.ld]), $a([$1.sb])]), $a([$a([$1.ld, $1.lu]), $a([]), $a([$1.lm]), $a([$1.lm, $1.lp]), $a([$1.ld]), $a([$1.sb])]), $a([$a([$1.lu]), $a([$1.ll]), $a([]), $a([$1.lp]), $a([$1.lu, $1.ld]), $a([$1.sb])]), $a([$a([$1.lu]), $a([$1.lu, $1.ll]), $a([$1.lu, $1.lm]), $a([]), $a([$1.lu, $1.ld]), $a([$1.lu, $1.sb])]), $a([$a([$1.lu]), $a([$1.lu, $1.ll]), $a([$1.lu, $1.lm]), $a([$1.lu, $1.lm, $1.lp]), $a([]), $a([$1.lu, $1.sb])]), $a([$a([$1.lu]), $a([$1.ll]), $a([$1.lm]), $a([]), $a([]), $a([])])]); /*17756*/
			$1.shftlen = $a([$a([$1.e, $1.e, $1.e, 5, $1.e]), $a([5, $1.e, $1.e, 5, $1.e]), $a([$1.e, $1.e, $1.e, 5, $1.e]), $a([$1.e, $1.e, $1.e, $1.e, $1.e]), $a([4, $1.e, $1.e, 4, $1.e])]); /*17765*/
			$1.charsize = $a([5, 5, 5, 5, 4, 8]); /*17768*/
			$1.curlen = $a([0, $1.e, $1.e, $1.e, $1.e, $1.e]); /*17771*/
			$1.curseq = $a([$a([]), $a([]), $a([]), $a([]), $a([]), $a([])]); /*17772*/
			$1.backto = $1.U; /*17774*/
			$1.lastchar = ""; /*17775*/
			$forall($1.barcode, function() { /*17871*/
				$1.char = $k[--$j]; /*17780*/
				for (;;) { /*17806*/
					$1.imp = false; /*17784*/
					var _3l = $a([$1.U, $1.L, $1.M, $1.P, $1.D, $1.B]); /*17785*/
					for (var _3m = 0, _3n = _3l.length; _3m < _3n; _3m++) { /*17804*/
						$1.x = $get(_3l, _3m); /*17786*/
						var _3v = $a([$1.U, $1.L, $1.M, $1.P, $1.D, $1.B]); /*17787*/
						for (var _3w = 0, _3x = _3v.length; _3w < _3x; _3w++) { /*17803*/
							$1.y = $get(_3v, _3w); /*17788*/
							if (($1.x != $1.B) || ($1.y == $1.backto)) { /*17802*/
								$1.cost = $get($1.curlen, $1.x) + $get($get($1.latlen, $1.x), $1.y); /*17790*/
								if ($1.cost < $get($1.curlen, $1.y)) { /*17801*/
									$put($1.curlen, $1.y, $1.cost); /*17792*/
									$k[$j++] = $1.curseq; /*17795*/
									$k[$j++] = $1.y; /*17795*/
									$k[$j++] = Infinity; /*17795*/
									$aload($get($1.curseq, $1.x)); /*17794*/
									$aload($get($get($1.latseq, $1.x), $1.y)); /*17795*/
									var _4S = $a(); /*17795*/
									var _4T = $k[--$j]; /*17796*/
									$put($k[--$j], _4T, _4S); /*17796*/
									if ($1.y == $1.B) { /*17799*/
										$k[$j++] = "backto"; /*17798*/
										if (($1.x == $1.P) || ($1.x == $1.D)) { /*17798*/
											$k[$j++] = $1.U; /*17798*/
										} else { /*17798*/
											$k[$j++] = $1.x; /*17798*/
										} /*17798*/
										var _4d = $k[--$j]; /*17798*/
										$1[$k[--$j]] = _4d; /*17798*/
									} /*17798*/
									$1.imp = true; /*17800*/
								} /*17800*/
							} /*17800*/
						} /*17800*/
					} /*17800*/
					if (!$1.imp) { /*17805*/
						break; /*17805*/
					} /*17805*/
				} /*17805*/
				$1.nxtlen = $a([$1.e, $1.e, $1.e, $1.e, $1.e, $1.e]); /*17809*/
				$1.nxtseq = $a(6); /*17810*/
				var _4u = $a([$1.U, $1.L, $1.M, $1.P, $1.D, $1.B]); /*17812*/
				for (var _4v = 0, _4w = _4u.length; _4v < _4w; _4v++) { /*17847*/
					$1.x = $get(_4u, _4v); /*17813*/
					for (;;) { /*17845*/
						if ($1.x != $1.B) { /*17818*/
							var _54 = $get($get($1.charvals, $1.x), $1.char) !== undefined; /*17818*/
							if (!_54) { /*17818*/
								break; /*17818*/
							} /*17818*/
						} /*17818*/
						$1.cost = $get($1.curlen, $1.x) + $get($1.charsize, $1.x); /*17821*/
						if ($1.cost < $get($1.nxtlen, $1.x)) { /*17825*/
							$put($1.nxtlen, $1.x, $1.cost); /*17823*/
							$k[$j++] = $1.nxtseq; /*17824*/
							$k[$j++] = $1.x; /*17824*/
							$k[$j++] = Infinity; /*17824*/
							$aload($get($1.curseq, $1.x)); /*17824*/
							$k[$j++] = $1.char; /*17824*/
							var _5O = $a(); /*17824*/
							var _5P = $k[--$j]; /*17824*/
							$put($k[--$j], _5P, _5O); /*17824*/
						} /*17824*/
						if ($1.x == $1.B) { /*17828*/
							break; /*17828*/
						} /*17828*/
						var _5Y = $a([$1.U, $1.L, $1.M, $1.P, $1.D]); /*17829*/
						for (var _5Z = 0, _5a = _5Y.length; _5Z < _5a; _5Z++) { /*17842*/
							$1.y = $get(_5Y, _5Z); /*17830*/
							if ($ne($1.x, $1.y)) { /*17841*/
								$1.cost = ($get($1.curlen, $1.y) + $get($get($1.shftlen, $1.y), $1.x)) + $get($1.charsize, $1.x); /*17832*/
								if ($1.cost < $get($1.nxtlen, $1.y)) { /*17840*/
									$put($1.nxtlen, $1.y, $1.cost); /*17834*/
									$k[$j++] = $1.nxtseq; /*17838*/
									$k[$j++] = $1.y; /*17838*/
									$k[$j++] = Infinity; /*17838*/
									$aload($get($1.curseq, $1.y)); /*17836*/
									if ($1.x == $1.U) { /*17837*/
										$k[$j++] = $1.su; /*17837*/
									} else { /*17837*/
										$k[$j++] = $1.sp; /*17837*/
									} /*17837*/
									$k[$j++] = $1.char; /*17838*/
									var _66 = $a(); /*17838*/
									var _67 = $k[--$j]; /*17839*/
									$put($k[--$j], _67, _66); /*17839*/
								} /*17839*/
							} /*17839*/
						} /*17839*/
						break; /*17844*/
					} /*17844*/
				} /*17844*/
				if ($ne($1.lastchar, "")) { /*17858*/
					var _6A = $s(2); /*17851*/
					$put(_6A, 0, $1.lastchar); /*17851*/
					$put(_6A, 1, $1.char); /*17851*/
					$1.pchars = _6A; /*17851*/
					var _6F = $get($1.pcomp, $1.pchars) !== undefined; /*17852*/
					if (_6F) { /*17857*/
						if ($lt($get($1.curlen, $1.P), $get($1.nxtlen, $1.P))) { /*17856*/
							$put($1.nxtlen, $1.P, $get($1.curlen, $1.P)); /*17854*/
							$k[$j++] = $1.nxtseq; /*17855*/
							$k[$j++] = $1.P; /*17855*/
							$k[$j++] = Infinity; /*17855*/
							$aload($get($1.curseq, $1.P)); /*17855*/
							$j--; /*17855*/
							$k[$j++] = $get($1.pcomp, $1.pchars); /*17855*/
							var _6Z = $a(); /*17855*/
							var _6a = $k[--$j]; /*17855*/
							$put($k[--$j], _6a, _6Z); /*17855*/
						} /*17855*/
					} /*17855*/
				} /*17855*/
				$1.numbytes = 0; /*17861*/
				$forall($get($1.nxtseq, $1.B), function() { /*17864*/
					if ($k[--$j] == $1.sb) { /*17863*/
						$k[$j++] = 0; /*17863*/
					} else { /*17863*/
						$k[$j++] = $1.numbytes + 1; /*17863*/
					} /*17863*/
					$1.numbytes = $k[--$j]; /*17863*/
				}); /*17863*/
				if ($1.numbytes == 32) { /*17865*/
					$put($1.nxtlen, $1.B, $get($1.nxtlen, $1.B) + 11); /*17865*/
				} /*17865*/
				$1.curlen = $1.nxtlen; /*17867*/
				$1.curseq = $1.nxtseq; /*17868*/
				$1.lastchar = $1.char; /*17869*/
			}); /*17869*/
			$1.minseq = $1.e; /*17874*/
			var _6z = $a([$1.U, $1.L, $1.M, $1.P, $1.D, $1.B]); /*17875*/
			for (var _70 = 0, _71 = _6z.length; _70 < _71; _70++) { /*17881*/
				$1.i = $get(_6z, _70); /*17876*/
				if ($get($1.curlen, $1.i) < $1.minseq) { /*17880*/
					$1.minseq = $get($1.curlen, $1.i); /*17878*/
					$1.seq = $get($1.curseq, $1.i); /*17879*/
				} /*17879*/
			} /*17879*/
			$1.tobin = function() {
				var _7E = $s($k[--$j]); /*17885*/
				$k[$j++] = _7E; /*17885*/
				for (var _7G = 0, _7F = _7E.length - 1; _7G <= _7F; _7G += 1) { /*17885*/
					var _7H = $k[--$j]; /*17885*/
					$put(_7H, _7G, 48); /*17885*/
					$k[$j++] = _7H; /*17885*/
				} /*17885*/
				var _7I = $k[--$j]; /*17886*/
				var _7L = $cvrs($s(_7I.length), $k[--$j], 2); /*17886*/
				$puti(_7I, _7I.length - _7L.length, _7L); /*17886*/
				$k[$j++] = _7I; /*17886*/
			}; /*17887*/
			$1.encu = function() {
				var _7Q = $get($get($1.charvals, $1.U), $k[--$j]); /*17888*/
				$k[$j++] = _7Q; /*17888*/
				$k[$j++] = 5; /*17888*/
				$1.tobin(); /*17888*/
			}; /*17888*/
			$1.encl = function() {
				var _7V = $get($get($1.charvals, $1.L), $k[--$j]); /*17889*/
				$k[$j++] = _7V; /*17889*/
				$k[$j++] = 5; /*17889*/
				$1.tobin(); /*17889*/
			}; /*17889*/
			$1.encm = function() {
				var _7a = $get($get($1.charvals, $1.M), $k[--$j]); /*17890*/
				$k[$j++] = _7a; /*17890*/
				$k[$j++] = 5; /*17890*/
				$1.tobin(); /*17890*/
			}; /*17890*/
			$1.encp = function() {
				var _7f = $get($get($1.charvals, $1.P), $k[--$j]); /*17891*/
				$k[$j++] = _7f; /*17891*/
				$k[$j++] = 5; /*17891*/
				$1.tobin(); /*17891*/
			}; /*17891*/
			$1.encd = function() {
				var _7k = $get($get($1.charvals, $1.D), $k[--$j]); /*17892*/
				$k[$j++] = _7k; /*17892*/
				$k[$j++] = 4; /*17892*/
				$1.tobin(); /*17892*/
			}; /*17892*/
			$1.encfuncs = $a(["encu", "encl", "encm", "encp", "encd"]); /*17893*/
			$1.addtomsgbits = function() {
				$1.v = $k[--$j]; /*17895*/
				$puti($1.msgbits, $1.j, $1.v); /*17896*/
				$1.j = $1.j + $1.v.length; /*17897*/
			}; /*17898*/
			$1.state = $1.U; /*17901*/
			$1.msgbits = $s($1.minseq); /*17902*/
			$1.i = 0; /*17903*/
			$1.j = 0; /*17903*/
			for (;;) { /*17962*/
				if ($1.i >= $1.seq.length) { /*17904*/
					break; /*17904*/
				} /*17904*/
				if ($1.state != $1.B) { /*17957*/
					$1.char = $get($1.seq, $1.i); /*17908*/
					$k[$j++] = $1.char; /*17911*/
					$1[$get($1.encfuncs, $1.state)](); /*17911*/
					$1.addtomsgbits(); /*17911*/
					$1.i = $1.i + 1; /*17912*/
					if (($1.char == $1.su) || ($1.char == $1.sp)) { /*17918*/
						$k[$j++] = $get($1.seq, $1.i); /*17916*/
						if ($1.char == $1.su) { /*17916*/
							$1.encu(); /*17916*/
						} else { /*17916*/
							$1.encp(); /*17916*/
						} /*17916*/
						$1.addtomsgbits(); /*17916*/
						$1.i = $1.i + 1; /*17917*/
					} /*17917*/
					if ($1.char == $1.lu) { /*17921*/
						$1.state = $1.U; /*17921*/
					} /*17921*/
					if ($1.char == $1.ll) { /*17922*/
						$1.state = $1.L; /*17922*/
					} /*17922*/
					if ($1.char == $1.lm) { /*17923*/
						$1.state = $1.M; /*17923*/
					} /*17923*/
					if ($1.char == $1.lp) { /*17924*/
						$1.state = $1.P; /*17924*/
					} /*17924*/
					if ($1.char == $1.ld) { /*17925*/
						$1.state = $1.D; /*17925*/
					} /*17925*/
					if ($1.char == $1.sb) { /*17926*/
						$1.state = $1.B; /*17926*/
					} /*17926*/
				} else { /*17957*/
					$1.numbytes = 0; /*17931*/
					for (;;) { /*17935*/
						if (($1.i + $1.numbytes) >= $1.seq.length) { /*17932*/
							break; /*17932*/
						} /*17932*/
						if ($get($1.seq, $1.i + $1.numbytes) < 0) { /*17933*/
							break; /*17933*/
						} /*17933*/
						$1.numbytes = $1.numbytes + 1; /*17934*/
					} /*17934*/
					if ($1.numbytes <= 31) { /*17942*/
						$k[$j++] = $1.numbytes; /*17939*/
						$k[$j++] = 5; /*17939*/
						$1.tobin(); /*17939*/
						$1.addtomsgbits(); /*17939*/
					} else { /*17942*/
						$k[$j++] = 0; /*17941*/
						$k[$j++] = 5; /*17941*/
						$1.tobin(); /*17941*/
						$1.addtomsgbits(); /*17941*/
						$k[$j++] = $1.numbytes - 31; /*17942*/
						$k[$j++] = 11; /*17942*/
						$1.tobin(); /*17942*/
						$1.addtomsgbits(); /*17942*/
					} /*17942*/
					for (var _8m = 0, _8n = $1.numbytes; _8m < _8n; _8m++) { /*17949*/
						$k[$j++] = $get($1.seq, $1.i); /*17947*/
						$k[$j++] = 8; /*17947*/
						$1.tobin(); /*17947*/
						$1.addtomsgbits(); /*17947*/
						$1.i = $1.i + 1; /*17948*/
					} /*17948*/
					if ($1.i < $1.seq.length) { /*17958*/
						$1.char = $get($1.seq, $1.i); /*17953*/
						$1.i = $1.i + 1; /*17954*/
						if ($1.char == $1.lu) { /*17955*/
							$1.state = $1.U; /*17955*/
						} /*17955*/
						if ($1.char == $1.ll) { /*17956*/
							$1.state = $1.L; /*17956*/
						} /*17956*/
						if ($1.char == $1.lm) { /*17957*/
							$1.state = $1.M; /*17957*/
						} /*17957*/
					} /*17957*/
				} /*17957*/
			} /*17957*/
		} /*17957*/
		$1.metrics = $a([$a(["rune", 0, 0, 0, 6]), $a(["compact", 1, 1, 17, 6]), $a(["full", 1, 1, 21, 6]), $a(["compact", 2, 0, 40, 6]), $a(["full", 2, 1, 48, 6]), $a(["compact", 3, 0, 51, 8]), $a(["full", 3, 1, 60, 8]), $a(["compact", 4, 0, 76, 8]), $a(["full", 4, 1, 88, 8]), $a(["full", 5, 1, 120, 8]), $a(["full", 6, 1, 156, 8]), $a(["full", 7, 1, 196, 8]), $a(["full", 8, 1, 240, 8]), $a(["full", 9, 1, 230, 10]), $a(["full", 10, 1, 272, 10]), $a(["full", 11, 1, 316, 10]), $a(["full", 12, 1, 364, 10]), $a(["full", 13, 1, 416, 10]), $a(["full", 14, 1, 470, 10]), $a(["full", 15, 1, 528, 10]), $a(["full", 16, 1, 588, 10]), $a(["full", 17, 1, 652, 10]), $a(["full", 18, 1, 720, 10]), $a(["full", 19, 1, 790, 10]), $a(["full", 20, 1, 864, 10]), $a(["full", 21, 1, 940, 10]), $a(["full", 22, 1, 1020, 10]), $a(["full", 23, 0, 920, 12]), $a(["full", 24, 0, 992, 12]), $a(["full", 25, 0, 1066, 12]), $a(["full", 26, 0, 1144, 12]), $a(["full", 27, 0, 1224, 12]), $a(["full", 28, 0, 1306, 12]), $a(["full", 29, 0, 1392, 12]), $a(["full", 30, 0, 1480, 12]), $a(["full", 31, 0, 1570, 12]), $a(["full", 32, 0, 1664, 12])]); /*17981*/
		$1.i = 0; /*17983*/
		for (;;) { /*18001*/
			$1.m = $get($1.metrics, $1.i); /*17985*/
			$1.frmt = $get($1.m, 0); /*17986*/
			$1.mlyr = $get($1.m, 1); /*17987*/
			$1.icap = $get($1.m, 2); /*17988*/
			$1.ncws = $get($1.m, 3); /*17989*/
			$1.bpcw = $get($1.m, 4); /*17990*/
			$1.numecw = ~~(Math.ceil((($1.ncws * $1.eclevel) / 100) + $1.ecaddchars)); /*17991*/
			if ($1.msgbits.length == 0) { /*17992*/
				$1.numecw = 0; /*17992*/
			} /*17992*/
			$1.numdcw = $1.ncws - $1.numecw; /*17993*/
			$1.okay = true; /*17994*/
			if ($ne($1.format, "unset") && $ne($1.format, $1.frmt)) { /*17995*/
				$1.okay = false; /*17995*/
			} /*17995*/
			if ($1.readerinit && ($1.icap != 1)) { /*17996*/
				$1.okay = false; /*17996*/
			} /*17996*/
			if (($1.layers != -1) && ($1.layers != $1.mlyr)) { /*17997*/
				$1.okay = false; /*17997*/
			} /*17997*/
			if ((~~Math.ceil($1.msgbits.length / $1.bpcw)) > $1.numdcw) { /*17998*/
				$1.okay = false; /*17998*/
			} /*17998*/
			if ($1.okay) { /*17999*/
				break; /*17999*/
			} /*17999*/
			$1.i = $1.i + 1; /*18000*/
		} /*18000*/
		$1.layers = $1.mlyr; /*18002*/
		$1.format = $1.frmt; /*18003*/
		$1.allzero = function() {
			var _AH = $k[--$j]; /*18006*/
			$k[$j++] = $eq(_AH, $geti("000000000000", 0, _AH.length)); /*18006*/
		}; /*18006*/
		$1.allones = function() {
			var _AJ = $k[--$j]; /*18007*/
			$k[$j++] = $eq(_AJ, $geti("111111111111", 0, _AJ.length)); /*18007*/
		}; /*18007*/
		$1.cws = $a($1.ncws); /*18008*/
		$1.m = 0; /*18009*/
		$1.c = 0; /*18009*/
		for (;;) { /*18036*/
			if ($1.msgbits.length <= $1.m) { /*18011*/
				break; /*18011*/
			} /*18011*/
			if (($1.msgbits.length - $1.m) >= $1.bpcw) { /*18025*/
				$1.cwb = $geti($1.msgbits, $1.m, $1.bpcw - 1); /*18013*/
				$1.cwf = $geti($1.msgbits, ($1.m + $1.bpcw) - 1, 1); /*18014*/
				$k[$j++] = $1.cwb; /*18015*/
				$1.allzero(); /*18015*/
				if ($k[--$j]) { /*18015*/
					$1.cwf = "1"; /*18015*/
					$1.m = $1.m - 1; /*18015*/
				} /*18015*/
				$k[$j++] = $1.cwb; /*18016*/
				$1.allones(); /*18016*/
				if ($k[--$j]) { /*18016*/
					$1.cwf = "0"; /*18016*/
					$1.m = $1.m - 1; /*18016*/
				} /*18016*/
				var _Ag = $s(12); /*18018*/
				$puti(_Ag, 0, $1.cwb); /*18018*/
				$puti(_Ag, $1.bpcw - 1, $1.cwf); /*18019*/
				$1.cwb = $geti(_Ag, 0, $1.bpcw); /*18021*/
			} else { /*18025*/
				$1.cwb = $geti($1.msgbits, $1.m, $1.msgbits.length - $1.m); /*18023*/
				var _As = $strcpy($s(12), "111111111111"); /*18024*/
				$puti(_As, 0, $1.cwb); /*18024*/
				$1.cwb = $geti(_As, 0, $1.bpcw); /*18024*/
				$k[$j++] = $1.cwb; /*18025*/
				$1.allones(); /*18025*/
				if ($k[--$j]) { /*18025*/
					$puti($1.cwb, $1.cwb.length - 1, "0"); /*18025*/
				} /*18025*/
			} /*18025*/
			$1.cw = 0; /*18028*/
			for (var _B2 = 0, _B1 = $1.bpcw - 1; _B2 <= _B1; _B2 += 1) { /*18032*/
				$1.i = _B2; /*18030*/
				$1.cw = $1.cw + ((~~(Math.pow(2, ($1.bpcw - $1.i) - 1))) * ($get($1.cwb, $1.i) - 48)); /*18031*/
			} /*18031*/
			$put($1.cws, $1.c, $1.cw); /*18033*/
			$1.m = $1.m + $1.bpcw; /*18034*/
			$1.c = $1.c + 1; /*18035*/
		} /*18035*/
		$1.cws = $geti($1.cws, 0, $1.c); /*18037*/
		$1.rscodes = function() {
			$1.rspm = $k[--$j]; /*18042*/
			$1.rsgf = $k[--$j]; /*18043*/
			$1.rsnc = $k[--$j]; /*18044*/
			$1.rscws = $k[--$j]; /*18045*/
			$k[$j++] = Infinity; /*18048*/
			$k[$j++] = 1; /*18048*/
			for (var _BN = 0, _BO = $1.rsgf - 1; _BN < _BO; _BN++) { /*18048*/
				var _BP = $k[--$j]; /*18048*/
				var _BQ = _BP * 2; /*18048*/
				$k[$j++] = _BP; /*18048*/
				$k[$j++] = _BQ; /*18048*/
				if (_BQ >= $1.rsgf) { /*18048*/
					var _BT = $k[--$j]; /*18048*/
					$k[$j++] = $xo(_BT, $1.rspm); /*18048*/
				} /*18048*/
			} /*18048*/
			$1.rsalog = $a(); /*18048*/
			$1.rslog = $a($1.rsgf); /*18049*/
			for (var _BZ = 1, _BY = $1.rsgf - 1; _BZ <= _BY; _BZ += 1) { /*18050*/
				$put($1.rslog, $get($1.rsalog, _BZ), _BZ); /*18050*/
			} /*18050*/
			$1.rsprod = function() {
				var _Bd = $k[--$j]; /*18054*/
				var _Be = $k[--$j]; /*18054*/
				$k[$j++] = _Be; /*18058*/
				$k[$j++] = _Bd; /*18058*/
				if ((_Bd != 0) && (_Be != 0)) { /*18057*/
					var _Bh = $get($1.rslog, $k[--$j]); /*18055*/
					var _Bn = $get($1.rsalog, (_Bh + $get($1.rslog, $k[--$j])) % ($1.rsgf - 1)); /*18055*/
					$k[$j++] = _Bn; /*18055*/
				} else { /*18057*/
					$j -= 2; /*18057*/
					$k[$j++] = 0; /*18057*/
				} /*18057*/
			}; /*18059*/
			$k[$j++] = Infinity; /*18062*/
			$k[$j++] = 1; /*18062*/
			for (var _Bp = 0, _Bq = $1.rsnc; _Bp < _Bq; _Bp++) { /*18062*/
				$k[$j++] = 0; /*18062*/
			} /*18062*/
			$1.coeffs = $a(); /*18062*/
			for (var _Bu = 1, _Bt = $1.rsnc; _Bu <= _Bt; _Bu += 1) { /*18071*/
				$1.i = _Bu; /*18064*/
				$put($1.coeffs, $1.i, $get($1.coeffs, $1.i - 1)); /*18065*/
				for (var _C1 = $1.i - 1; _C1 >= 1; _C1 -= 1) { /*18069*/
					$1.j = _C1; /*18067*/
					$k[$j++] = $1.coeffs; /*18068*/
					$k[$j++] = $1.j; /*18068*/
					$k[$j++] = $get($1.coeffs, $1.j - 1); /*18068*/
					$k[$j++] = $get($1.coeffs, $1.j); /*18068*/
					$k[$j++] = $get($1.rsalog, $1.i); /*18068*/
					$1.rsprod(); /*18068*/
					var _CD = $k[--$j]; /*18068*/
					var _CE = $k[--$j]; /*18068*/
					var _CF = $k[--$j]; /*18068*/
					$put($k[--$j], _CF, $xo(_CE, _CD)); /*18068*/
				} /*18068*/
				$k[$j++] = $1.coeffs; /*18070*/
				$k[$j++] = 0; /*18070*/
				$k[$j++] = $get($1.coeffs, 0); /*18070*/
				$k[$j++] = $get($1.rsalog, $1.i); /*18070*/
				$1.rsprod(); /*18070*/
				var _CN = $k[--$j]; /*18070*/
				var _CO = $k[--$j]; /*18070*/
				$put($k[--$j], _CO, _CN); /*18070*/
			} /*18070*/
			$1.nd = $1.rscws.length; /*18074*/
			$k[$j++] = Infinity; /*18075*/
			$forall($1.rscws); /*18075*/
			for (var _CT = 0, _CU = $1.rsnc; _CT < _CU; _CT++) { /*18075*/
				$k[$j++] = 0; /*18075*/
			} /*18075*/
			$k[$j++] = 0; /*18075*/
			$1.rscws = $a(); /*18075*/
			for (var _CY = 0, _CX = $1.nd - 1; _CY <= _CX; _CY += 1) { /*18082*/
				$1.k = $xo($get($1.rscws, _CY), $get($1.rscws, $1.nd)); /*18077*/
				for (var _Cg = 0, _Cf = $1.rsnc - 1; _Cg <= _Cf; _Cg += 1) { /*18081*/
					$1.j = _Cg; /*18079*/
					$k[$j++] = $1.rscws; /*18080*/
					$k[$j++] = $1.nd + $1.j; /*18080*/
					$k[$j++] = $get($1.rscws, ($1.nd + $1.j) + 1); /*18080*/
					$k[$j++] = $1.k; /*18080*/
					$k[$j++] = $get($1.coeffs, ($1.rsnc - $1.j) - 1); /*18080*/
					$1.rsprod(); /*18080*/
					var _Ct = $k[--$j]; /*18080*/
					var _Cu = $k[--$j]; /*18080*/
					var _Cv = $k[--$j]; /*18080*/
					$put($k[--$j], _Cv, $xo(_Cu, _Ct)); /*18080*/
				} /*18080*/
			} /*18080*/
			$k[$j++] = $geti($1.rscws, 0, $1.rscws.length - 1); /*18085*/
		}; /*18087*/
		if ($eq($1.format, "full")) { /*18100*/
			$1.mode = (($1.layers - 1) << 11) + ($1.cws.length - 1); /*18091*/
			if ($1.readerinit) { /*18092*/
				$1.mode = $1.mode | 1024; /*18092*/
			} /*18092*/
			$1.mode = $a([($1.mode & 61440) >>> 12, ($1.mode & 3840) >>> 8, ($1.mode & 240) >>> 4, $1.mode & 15]); /*18098*/
			$k[$j++] = "mode"; /*18099*/
			$k[$j++] = $1.mode; /*18099*/
			$k[$j++] = 6; /*18099*/
			$k[$j++] = 16; /*18099*/
			$k[$j++] = 19; /*18099*/
			$1.rscodes(); /*18099*/
			var _DB = $k[--$j]; /*18099*/
			$1[$k[--$j]] = _DB; /*18099*/
		} /*18099*/
		if ($eq($1.format, "compact")) { /*18109*/
			$1.mode = (($1.layers - 1) << 6) + ($1.cws.length - 1); /*18102*/
			if ($1.readerinit) { /*18103*/
				$1.mode = $1.mode | 32; /*18103*/
			} /*18103*/
			$1.mode = $a([($1.mode & 240) >>> 4, $1.mode & 15]); /*18107*/
			$k[$j++] = "mode"; /*18108*/
			$k[$j++] = $1.mode; /*18108*/
			$k[$j++] = 5; /*18108*/
			$k[$j++] = 16; /*18108*/
			$k[$j++] = 19; /*18108*/
			$1.rscodes(); /*18108*/
			var _DM = $k[--$j]; /*18108*/
			$1[$k[--$j]] = _DM; /*18108*/
		} /*18108*/
		if ($eq($1.format, "rune")) { /*18118*/
			$1.mode = ~~$z($1.barcode); /*18111*/
			$1.mode = $a([($1.mode & 240) >>> 4, $1.mode & 15]); /*18115*/
			$k[$j++] = "mode"; /*18116*/
			$k[$j++] = $1.mode; /*18116*/
			$k[$j++] = 5; /*18116*/
			$k[$j++] = 16; /*18116*/
			$k[$j++] = 19; /*18116*/
			$1.rscodes(); /*18116*/
			var _DU = $k[--$j]; /*18116*/
			$1[$k[--$j]] = _DU; /*18116*/
			$k[$j++] = Infinity; /*18117*/
			var _DW = $1.mode; /*18117*/
			for (var _DX = 0, _DY = _DW.length; _DX < _DY; _DX++) { /*18117*/
				$k[$j++] = $get(_DW, _DX) ^ 10; /*18117*/
			} /*18117*/
			$1.mode = $a(); /*18117*/
		} /*18117*/
		$1.modebits = $s($1.mode.length * 4); /*18119*/
		for (var _Df = 0, _De = $1.modebits.length - 1; _Df <= _De; _Df += 1) { /*18120*/
			$puti($1.modebits, _Df, "0"); /*18120*/
		} /*18120*/
		for (var _Dj = 0, _Di = $1.mode.length - 1; _Dj <= _Di; _Dj += 1) { /*18124*/
			$1.i = _Dj; /*18122*/
			var _Dp = $cvrs($s(4), $get($1.mode, $1.i), 2); /*18123*/
			$puti($1.modebits, (4 - _Dp.length) + (4 * $1.i), _Dp); /*18123*/
		} /*18123*/
		$1.rsparams = $a([$a([]), $a([]), $a([]), $a([]), $a([]), $a([]), $a([64, 67]), $a([]), $a([256, 301]), $a([]), $a([1024, 1033]), $a([]), $a([4096, 4201])]); /*18136*/
		$k[$j++] = "cws"; /*18137*/
		$k[$j++] = $1.cws; /*18137*/
		$k[$j++] = $1.ncws - $1.cws.length; /*18137*/
		$forall($get($1.rsparams, $1.bpcw)); /*18137*/
		$1.rscodes(); /*18137*/
		var _EB = $k[--$j]; /*18137*/
		$1[$k[--$j]] = _EB; /*18137*/
		if ($eq($1.format, "full")) { /*18141*/
			$1.databits = $s((($1.layers * $1.layers) * 16) + ($1.layers * 112)); /*18139*/
		} else { /*18141*/
			$1.databits = $s((($1.layers * $1.layers) * 16) + ($1.layers * 88)); /*18141*/
		} /*18141*/
		for (var _EO = 0, _EN = $1.databits.length - 1; _EO <= _EN; _EO += 1) { /*18143*/
			$puti($1.databits, _EO, "0"); /*18143*/
		} /*18143*/
		for (var _ES = 0, _ER = $1.ncws - 1; _ES <= _ER; _ES += 1) { /*18149*/
			$1.i = _ES; /*18145*/
			var _EZ = $cvrs($s($1.bpcw), $get($1.cws, $1.i), 2); /*18146*/
			$puti($1.databits, (($1.bpcw - _EZ.length) + ($1.bpcw * $1.i)) + ($1.databits.length - ($1.ncws * $1.bpcw)), _EZ); /*18148*/
		} /*18148*/
		$1.cmv = function() {
			var _Eh = $k[--$j]; /*18152*/
			var _Ei = $k[--$j]; /*18152*/
			$k[$j++] = (_Ei - (_Eh * $1.size)) + $1.mid; /*18152*/
		}; /*18152*/
		$1.lmv = function() {
			$1.lbit = $k[--$j]; /*18156*/
			$1.llyr = $k[--$j]; /*18157*/
			$1.lwid = $1.fw + ($1.llyr * 4); /*18158*/
			$1.ldir = ~~((~~($1.lbit / 2)) / $1.lwid); /*18159*/
			if ($1.ldir == 0) { /*18164*/
				$k[$j++] = ((-(~~(($1.lwid - 1) / 2))) + 1) + ((~~($1.lbit / 2)) % $1.lwid); /*18163*/
				$k[$j++] = ((~~(($1.fw - 1) / 2)) + ($1.llyr * 2)) + ($1.lbit % 2); /*18163*/
				$1.cmv(); /*18163*/
			} /*18163*/
			if ($1.ldir == 1) { /*18169*/
				$k[$j++] = ((~~($1.fw / 2)) + ($1.llyr * 2)) + ($1.lbit % 2); /*18168*/
				$k[$j++] = ((~~(($1.lwid - 1) / 2)) - 1) - ((~~($1.lbit / 2)) % $1.lwid); /*18168*/
				$1.cmv(); /*18168*/
			} /*18168*/
			if ($1.ldir == 2) { /*18174*/
				$k[$j++] = -(((-(~~($1.lwid / 2))) + 1) + ((~~($1.lbit / 2)) % $1.lwid)); /*18173*/
				$k[$j++] = -(((~~($1.fw / 2)) + ($1.llyr * 2)) + ($1.lbit % 2)); /*18173*/
				$1.cmv(); /*18173*/
			} /*18173*/
			if ($1.ldir == 3) { /*18179*/
				$k[$j++] = -(((~~(($1.fw - 1) / 2)) + ($1.llyr * 2)) + ($1.lbit % 2)); /*18178*/
				$k[$j++] = -(((~~($1.lwid / 2)) - 1) - ((~~($1.lbit / 2)) % $1.lwid)); /*18178*/
				$1.cmv(); /*18178*/
			} /*18178*/
		}; /*18180*/
		if ($eq($1.format, "full")) { /*18184*/
			$1.fw = 12; /*18184*/
		} else { /*18184*/
			$1.fw = 9; /*18184*/
		} /*18184*/
		$1.size = ($1.fw + ($1.layers * 4)) + 2; /*18185*/
		$k[$j++] = Infinity; /*18186*/
		for (var _FN = 0, _FO = $1.size * $1.size; _FN < _FO; _FN++) { /*18186*/
			$k[$j++] = -1; /*18186*/
		} /*18186*/
		$1.pixs = $a(); /*18186*/
		$1.mid = ((~~(($1.size - 1) / 2)) * $1.size) + (~~(($1.size - 1) / 2)); /*18187*/
		$1.i = 0; /*18190*/
		for (var _FV = 1, _FU = $1.layers; _FV <= _FU; _FV += 1) { /*18198*/
			$1.layer = _FV; /*18192*/
			for (var _FZ = 0, _FY = (($1.fw + ($1.layer * 4)) * 8) - 1; _FZ <= _FY; _FZ += 1) { /*18197*/
				$1.pos = _FZ; /*18194*/
				$k[$j++] = $1.pixs; /*18195*/
				$k[$j++] = $1.layer; /*18195*/
				$k[$j++] = $1.pos; /*18195*/
				$1.lmv(); /*18195*/
				var _Fh = $k[--$j]; /*18195*/
				$put($k[--$j], _Fh, $get($1.databits, ($1.databits.length - $1.i) - 1) - 48); /*18195*/
				$1.i = $1.i + 1; /*18196*/
			} /*18196*/
		} /*18196*/
		if ($eq($1.format, "full")) { /*18225*/
			$1.fw = 13; /*18202*/
			$1.size = (($1.fw + ($1.layers * 4)) + 2) + ((~~((($1.layers + 10.5) / 7.5) - 1)) * 2); /*18203*/
			$1.mid = ~~(($1.size * $1.size) / 2); /*18204*/
			$k[$j++] = Infinity; /*18205*/
			for (var _Fs = 0, _Ft = $1.size * $1.size; _Fs < _Ft; _Fs++) { /*18205*/
				$k[$j++] = -2; /*18205*/
			} /*18205*/
			$1.npixs = $a(); /*18205*/
			for (var _Fx = 0, _Fw = ~~($1.size / 2); _Fx <= _Fw; _Fx += 16) { /*18215*/
				$1.i = _Fx; /*18207*/
				for (var _G0 = 0, _Fz = $1.size - 1; _G0 <= _Fz; _G0 += 1) { /*18214*/
					$1.j = _G0; /*18209*/
					$k[$j++] = $1.npixs; /*18210*/
					$k[$j++] = (-(~~($1.size / 2))) + $1.j; /*18210*/
					$k[$j++] = $1.i; /*18210*/
					$1.cmv(); /*18210*/
					var _G9 = $k[--$j]; /*18210*/
					$puti($k[--$j], _G9, $a([((((~~($1.size / 2)) + $1.j) + $1.i) + 1) % 2])); /*18210*/
					$k[$j++] = $1.npixs; /*18211*/
					$k[$j++] = (-(~~($1.size / 2))) + $1.j; /*18211*/
					$k[$j++] = -$1.i; /*18211*/
					$1.cmv(); /*18211*/
					var _GJ = $k[--$j]; /*18211*/
					$puti($k[--$j], _GJ, $a([((((~~($1.size / 2)) + $1.j) + $1.i) + 1) % 2])); /*18211*/
					$k[$j++] = $1.npixs; /*18212*/
					$k[$j++] = $1.i; /*18212*/
					$k[$j++] = (-(~~($1.size / 2))) + $1.j; /*18212*/
					$1.cmv(); /*18212*/
					var _GT = $k[--$j]; /*18212*/
					$puti($k[--$j], _GT, $a([((((~~($1.size / 2)) + $1.j) + $1.i) + 1) % 2])); /*18212*/
					$k[$j++] = $1.npixs; /*18213*/
					$k[$j++] = -$1.i; /*18213*/
					$k[$j++] = (-(~~($1.size / 2))) + $1.j; /*18213*/
					$1.cmv(); /*18213*/
					var _Gd = $k[--$j]; /*18213*/
					$puti($k[--$j], _Gd, $a([((((~~($1.size / 2)) + $1.j) + $1.i) + 1) % 2])); /*18213*/
				} /*18213*/
			} /*18213*/
			$1.j = 0; /*18216*/
			for (var _Gh = 0, _Gg = $1.npixs.length - 1; _Gh <= _Gg; _Gh += 1) { /*18223*/
				$1.i = _Gh; /*18218*/
				if ($get($1.npixs, $1.i) == -2) { /*18222*/
					$put($1.npixs, $1.i, $get($1.pixs, $1.j)); /*18220*/
					$1.j = $1.j + 1; /*18221*/
				} /*18221*/
			} /*18221*/
			$1.pixs = $1.npixs; /*18224*/
		} /*18224*/
		$1.fw = ~~($1.fw / 2); /*18228*/
		for (var _Gw = -$1.fw, _Gv = $1.fw; _Gw <= _Gv; _Gw += 1) { /*18237*/
			$1.i = _Gw; /*18230*/
			for (var _H0 = -$1.fw, _Gz = $1.fw; _H0 <= _Gz; _H0 += 1) { /*18236*/
				$1.j = _H0; /*18232*/
				$k[$j++] = $1.pixs; /*18233*/
				$k[$j++] = $1.i; /*18233*/
				$k[$j++] = $1.j; /*18233*/
				$1.cmv(); /*18233*/
				if (Math.abs($1.i) > Math.abs($1.j)) { /*18234*/
					$k[$j++] = Math.abs($1.i); /*18234*/
				} else { /*18234*/
					$k[$j++] = Math.abs($1.j); /*18234*/
				} /*18234*/
				var _H8 = $k[--$j]; /*18234*/
				var _H9 = $k[--$j]; /*18235*/
				$put($k[--$j], _H9, (_H8 + 1) % 2); /*18235*/
			} /*18235*/
		} /*18235*/
		var _Hl = $a([$a([-($1.fw + 1), $1.fw, 1]), $a([-($1.fw + 1), $1.fw + 1, 1]), $a([-$1.fw, $1.fw + 1, 1]), $a([$1.fw + 1, $1.fw + 1, 1]), $a([$1.fw + 1, $1.fw, 1]), $a([$1.fw + 1, -$1.fw, 1]), $a([$1.fw, $1.fw + 1, 0]), $a([$1.fw + 1, -($1.fw + 1), 0]), $a([$1.fw, -($1.fw + 1), 0]), $a([-$1.fw, -($1.fw + 1), 0]), $a([-($1.fw + 1), -($1.fw + 1), 0]), $a([-($1.fw + 1), -$1.fw, 0])]); /*18245*/
		for (var _Hm = 0, _Hn = _Hl.length; _Hm < _Hn; _Hm++) { /*18246*/
			$k[$j++] = $1.pixs; /*18246*/
			$forall($get(_Hl, _Hm)); /*18246*/
			var _Hq = $k[--$j]; /*18246*/
			var _Hr = $k[--$j]; /*18246*/
			var _Hs = $k[--$j]; /*18246*/
			$k[$j++] = _Hq; /*18246*/
			$k[$j++] = _Hs; /*18246*/
			$k[$j++] = _Hr; /*18246*/
			$1.cmv(); /*18246*/
			var _Ht = $k[--$j]; /*18246*/
			var _Hu = $k[--$j]; /*18246*/
			$put($k[--$j], _Ht, _Hu); /*18246*/
		} /*18246*/
		if ($eq($1.format, "full")) { /*18262*/
			$1.modemap = $a([$a([-5, 7]), $a([-4, 7]), $a([-3, 7]), $a([-2, 7]), $a([-1, 7]), $a([1, 7]), $a([2, 7]), $a([3, 7]), $a([4, 7]), $a([5, 7]), $a([7, 5]), $a([7, 4]), $a([7, 3]), $a([7, 2]), $a([7, 1]), $a([7, -1]), $a([7, -2]), $a([7, -3]), $a([7, -4]), $a([7, -5]), $a([5, -7]), $a([4, -7]), $a([3, -7]), $a([2, -7]), $a([1, -7]), $a([-1, -7]), $a([-2, -7]), $a([-3, -7]), $a([-4, -7]), $a([-5, -7]), $a([-7, -5]), $a([-7, -4]), $a([-7, -3]), $a([-7, -2]), $a([-7, -1]), $a([-7, 1]), $a([-7, 2]), $a([-7, 3]), $a([-7, 4]), $a([-7, 5])]); /*18255*/
		} else { /*18262*/
			$1.modemap = $a([$a([-3, 5]), $a([-2, 5]), $a([-1, 5]), $a([0, 5]), $a([1, 5]), $a([2, 5]), $a([3, 5]), $a([5, 3]), $a([5, 2]), $a([5, 1]), $a([5, 0]), $a([5, -1]), $a([5, -2]), $a([5, -3]), $a([3, -5]), $a([2, -5]), $a([1, -5]), $a([0, -5]), $a([-1, -5]), $a([-2, -5]), $a([-3, -5]), $a([-5, -3]), $a([-5, -2]), $a([-5, -1]), $a([-5, 0]), $a([-5, 1]), $a([-5, 2]), $a([-5, 3])]); /*18262*/
		} /*18262*/
		for (var _J7 = 0, _J6 = $1.modemap.length - 1; _J7 <= _J6; _J7 += 1) { /*18267*/
			$1.i = _J7; /*18265*/
			$k[$j++] = $1.pixs; /*18266*/
			$forall($get($1.modemap, $1.i)); /*18266*/
			$1.cmv(); /*18266*/
			var _JF = $k[--$j]; /*18266*/
			$put($k[--$j], _JF, $get($1.modebits, $1.i) - 48); /*18266*/
		} /*18266*/
		var _JN = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.size,
			pixy: $1.size,
			height: ($1.size * 2) / 72,
			width: ($1.size * 2) / 72,
			opt: $1.options
		}; /*18276*/
		$k[$j++] = _JN; /*18279*/
		if (!$1.dontdraw) { /*18279*/
			$0.renmatrix(); /*18279*/
		} /*18279*/
	};
	$0.azteccodecompact = function() {
		var $1 = {}; /*18307*/
		$1.options = $k[--$j]; /*18309*/
		$1.barcode = $k[--$j]; /*18310*/
		$1.dontdraw = false; /*18312*/
		$forall($1.options, function() { /*18323*/
			var _3 = $k[--$j]; /*18323*/
			$1[$k[--$j]] = _3; /*18323*/
		}); /*18323*/
		$1.options.dontdraw = true; /*18326*/
		$1.options.format = "compact"; /*18327*/
		$k[$j++] = "args"; /*18329*/
		$k[$j++] = $1.barcode; /*18329*/
		$k[$j++] = $1.options; /*18329*/
		$0.azteccode(); /*18329*/
		var _9 = $k[--$j]; /*18329*/
		$1[$k[--$j]] = _9; /*18329*/
		$1.args.opt = $1.options; /*18331*/
		$k[$j++] = $1.args; /*18334*/
		if (!$1.dontdraw) { /*18334*/
			$0.renmatrix(); /*18334*/
		} /*18334*/
	};
	$0.aztecrune = function() {
		var $1 = {}; /*18362*/
		$1.options = $k[--$j]; /*18364*/
		$1.barcode = $k[--$j]; /*18365*/
		$1.dontdraw = false; /*18367*/
		$forall($1.options, function() { /*18378*/
			var _3 = $k[--$j]; /*18378*/
			$1[$k[--$j]] = _3; /*18378*/
		}); /*18378*/
		$1.options.dontdraw = true; /*18381*/
		$1.options.format = "rune"; /*18382*/
		$k[$j++] = "args"; /*18384*/
		$k[$j++] = $1.barcode; /*18384*/
		$k[$j++] = $1.options; /*18384*/
		$0.azteccode(); /*18384*/
		var _9 = $k[--$j]; /*18384*/
		$1[$k[--$j]] = _9; /*18384*/
		$1.args.opt = $1.options; /*18386*/
		$k[$j++] = $1.args; /*18389*/
		if (!$1.dontdraw) { /*18389*/
			$0.renmatrix(); /*18389*/
		} /*18389*/
	};
	$0.codeone = function() {
		var $1 = {}; /*18416*/
		$1.options = $k[--$j]; /*18418*/
		$1.barcode = $k[--$j]; /*18419*/
		$1.dontdraw = false; /*18421*/
		$1.version = "unset"; /*18422*/
		$1.parse = false; /*18423*/
		$1.parsefnc = false; /*18424*/
		$forall($1.options, function() { /*18435*/
			var _3 = $k[--$j]; /*18435*/
			$1[$k[--$j]] = _3; /*18435*/
		}); /*18435*/
		$1.barlen = $1.barcode.length; /*18458*/
		$1.stype = $eq($geti($1.version, 0, 1), "S"); /*18460*/
		if ($1.stype) { /*19050*/
			$1.vals = $a(["1", "1010", "1100100", "1111101000", "10011100010000", "11000011010100000", "11110100001001000000", "100110001001011010000000", "101111101011110000100000000", "111011100110101100101000000000", "1001010100000010111110010000000000", "1011101001000011101101110100000000000", "1110100011010100101001010001000000000000", "10010001100001001110011100101010000000000000", "10110101111001100010000011110100100000000000000", "11100011010111111010100100110001101000000000000000", "100011100001101111001001101111110000010000000000000000", "101100011010001010111100001011101100010100000000000000000"]); /*18482*/
			$1.normalize = function() {
				$1.base = $k[--$j]; /*18485*/
				$1.num = $k[--$j]; /*18486*/
				for (var _D = $1.num.length - 1; _D >= 1; _D -= 1) { /*18491*/
					$1.i = _D; /*18488*/
					var _E = $1.num; /*18489*/
					var _F = $1.i; /*18489*/
					$put(_E, _F - 1, $get(_E, _F - 1) + (~~($get($1.num, $1.i) / $1.base))); /*18489*/
					$put($1.num, $1.i, $get($1.num, $1.i) % $1.base); /*18490*/
				} /*18490*/
				for (;;) { /*18497*/
					if ($lt($get($1.num, 0), $1.base)) { /*18493*/
						break; /*18493*/
					} /*18493*/
					$k[$j++] = Infinity; /*18494*/
					$k[$j++] = 0; /*18494*/
					$forall($1.num); /*18494*/
					$1.num = $a(); /*18494*/
					$put($1.num, 0, $get($1.num, 0) + (~~($get($1.num, 1) / $1.base))); /*18495*/
					$put($1.num, 1, $get($1.num, 1) % $1.base); /*18496*/
				} /*18496*/
				$k[$j++] = Infinity; /*18499*/
				$1.i = true; /*18499*/
				var _g = $1.num; /*18499*/
				for (var _h = 0, _i = _g.length; _h < _i; _h++) { /*18499*/
					var _j = $get(_g, _h); /*18499*/
					$k[$j++] = _j; /*18499*/
					if ((_j == 0) && $1.i) { /*18499*/
						$j--; /*18499*/
					} else { /*18499*/
						$1.i = false; /*18499*/
					} /*18499*/
				} /*18499*/
				$1.num = $a(); /*18499*/
				if ($1.num.length == 0) { /*18500*/
					$1.num = $a([0]); /*18500*/
				} /*18500*/
				$k[$j++] = $1.num; /*18501*/
			}; /*18502*/
			$1.bigadd = function() {
				var _p = $k[--$j]; /*18505*/
				var _q = $k[--$j]; /*18505*/
				$1.offset = Math.abs(_p.length - _q.length); /*18506*/
				if (_p.length < _q.length) { /*18507*/
					var _ = _p; /*18507*/
					_p = _q; /*18507*/
					_q = _; /*18507*/
				} /*18507*/
				$1.a = _p; /*18508*/
				$1.b = _q; /*18508*/
				for (var _t = 0, _s = $1.b.length - 1; _t <= _s; _t += 1) { /*18511*/
					var _u = $1.a; /*18510*/
					var _v = $1.offset; /*18510*/
					$put(_u, _t + _v, $get(_u, _t + _v) + $get($1.b, _t)); /*18510*/
				} /*18510*/
				$k[$j++] = $1.a; /*18512*/
			}; /*18513*/
			$1.v = $a([1]); /*18516*/
			for (var _13 = 0, _12 = $1.barlen - 1; _13 <= _12; _13 += 1) { /*18521*/
				$1.i = _13; /*18518*/
				$k[$j++] = Infinity; /*18519*/
				$forall($get($1.vals, $1.i), function() { /*18519*/
					var _17 = $k[--$j]; /*18519*/
					$k[$j++] = (_17 - 48) * ($get($1.barcode, ($1.barlen - $1.i) - 1) - 48); /*18519*/
				}); /*18519*/
				var _1C = $a(); /*18519*/
				$k[$j++] = _1C; /*18520*/
				$k[$j++] = $1.v; /*18520*/
				$1.bigadd(); /*18520*/
				$1.v = $k[--$j]; /*18520*/
			} /*18520*/
			$k[$j++] = "v"; /*18522*/
			$k[$j++] = $1.v; /*18522*/
			$k[$j++] = 2; /*18522*/
			$1.normalize(); /*18522*/
			var _1G = $k[--$j]; /*18522*/
			$1[$k[--$j]] = _1G; /*18522*/
			$k[$j++] = Infinity; /*18525*/
			for (var _1J = 0, _1K = (5 - ($1.v.length % 5)) % 5; _1J < _1K; _1J++) { /*18525*/
				$k[$j++] = 0; /*18525*/
			} /*18525*/
			$aload($1.v); /*18525*/
			$1.v = $a(); /*18525*/
			$1.cws = $a(~~($1.v.length / 5)); /*18526*/
			for (var _1R = 0, _1Q = $1.cws.length - 1; _1R <= _1Q; _1R += 1) { /*18532*/
				$1.i = _1R; /*18528*/
				$k[$j++] = 0; /*18530*/
				$forall($geti($1.v, $1.i * 5, 5), function() { /*18530*/
					var _1V = $k[--$j]; /*18530*/
					var _1W = $k[--$j]; /*18530*/
					$k[$j++] = (_1W + _1V) * 2; /*18530*/
				}); /*18530*/
				$put($1.cws, $1.i, ~~($k[--$j] / 2)); /*18531*/
			} /*18531*/
			$1.metrics = $a([$a(["S-10", 8, 11, 10, 4, 4, 1, 99, 99, 99]), $a(["S-20", 8, 21, 20, 8, 8, 1, 99, 99, 99]), $a(["S-30", 8, 31, 30, 12, 12, 1, 99, 99, 99])]); /*18540*/
		} else { /*19050*/
			$1.fnc1 = -1; /*18545*/
			$1.fnc3 = -2; /*18545*/
			var _1g = {
				FNC1: $1.fnc1,
				FNC3: $1.fnc3
			}; /*18548*/
			$1.fncvals = _1g; /*18549*/
			$1.msg = $a($1.barlen); /*18550*/
			$1.i = 0; /*18551*/
			$1.j = 0; /*18551*/
			for (;;) { /*18565*/
				if ($1.i == $1.barlen) { /*18552*/
					break; /*18552*/
				} /*18552*/
				$1.char = $get($1.barcode, $1.i); /*18553*/
				if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*18561*/
					if ($get($1.barcode, $1.i + 1) != 94) { /*18559*/
						$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*18556*/
						$1.i = $1.i + 4; /*18557*/
					} else { /*18559*/
						$1.i = $1.i + 1; /*18559*/
					} /*18559*/
				} /*18559*/
				$put($1.msg, $1.j, $1.char); /*18562*/
				$1.i = $1.i + 1; /*18563*/
				$1.j = $1.j + 1; /*18564*/
			} /*18564*/
			$1.msg = $geti($1.msg, 0, $1.j); /*18566*/
			$1.msglen = $1.msg.length; /*18567*/
			$1.metrics = $a([$a(["A", 16, 18, 16, 10, 10, 1, 4, 99, 6]), $a(["B", 22, 22, 20, 19, 16, 1, 4, 99, 8]), $a(["C", 28, 32, 28, 44, 26, 1, 4, 22, 11]), $a(["D", 40, 42, 36, 91, 44, 1, 4, 16, 16]), $a(["E", 52, 54, 48, 182, 70, 1, 4, 22, 22]), $a(["F", 70, 76, 68, 370, 140, 2, 4, 22, 31]), $a(["G", 104, 98, 88, 732, 280, 4, 6, 21, 47]), $a(["H", 148, 134, 120, 1480, 560, 8, 6, 20, 69]), $a(["T-16", 16, 17, 16, 10, 10, 1, 99, 99, 99]), $a(["T-32", 16, 33, 32, 24, 16, 1, 99, 99, 99]), $a(["T-48", 16, 49, 48, 38, 22, 1, 99, 99, 99])]); /*18583*/
			$1.fullcws = $a([]); /*18586*/
			var _2O = $1.metrics; /*18587*/
			for (var _2P = 0, _2Q = _2O.length; _2P < _2Q; _2P++) { /*18598*/
				$1.m = $get(_2O, _2P); /*18588*/
				$1.vers = $get($1.m, 0); /*18589*/
				$1.dcws = $get($1.m, 4); /*18590*/
				$1.okay = true; /*18591*/
				if ($eq($1.version, "unset")) { /*18595*/
					if ($1.vers.length != 1) { /*18593*/
						$1.okay = false; /*18593*/
					} /*18593*/
				} else { /*18595*/
					if ($ne($1.version, $1.vers)) { /*18595*/
						$1.okay = false; /*18595*/
					} /*18595*/
				} /*18595*/
				if ($1.okay) { /*18597*/
					$k[$j++] = Infinity; /*18597*/
					$aload($1.fullcws); /*18597*/
					$k[$j++] = $1.dcws; /*18597*/
					$1.fullcws = $a(); /*18597*/
				} /*18597*/
			} /*18597*/
			$k[$j++] = Infinity; /*18599*/
			for (var _2e = 0, _2f = 1480; _2e < _2f; _2e++) { /*18599*/
				$k[$j++] = 10000; /*18599*/
			} /*18599*/
			$1.numremcws = $a(); /*18599*/
			var _2h = $1.fullcws; /*18600*/
			for (var _2i = 0, _2j = _2h.length; _2i < _2j; _2i++) { /*18600*/
				$put($1.numremcws, $get(_2h, _2i) - 1, 1); /*18600*/
			} /*18600*/
			for (var _2m = 1478; _2m >= 0; _2m -= 1) { /*18606*/
				$1.i = _2m; /*18602*/
				if ($get($1.numremcws, $1.i) != 1) { /*18605*/
					$put($1.numremcws, $1.i, $get($1.numremcws, $1.i + 1) + 1); /*18604*/
				} /*18604*/
			} /*18604*/
			$1.lC = -5; /*18609*/
			$1.lB = -6; /*18609*/
			$1.lX = -7; /*18609*/
			$1.lT = -8; /*18609*/
			$1.lD = -9; /*18609*/
			$1.unl = -10; /*18609*/
			$1.fnc2 = -11; /*18610*/
			$1.fnc4 = -12; /*18610*/
			$1.sft1 = -13; /*18610*/
			$1.sft2 = -14; /*18610*/
			$1.sft3 = -15; /*18610*/
			$1.eci = -16; /*18610*/
			$1.pad = -17; /*18610*/
			$1.fnc1lD = -18; /*18610*/
			$1.unlcw = 255; /*18611*/
			$k[$j++] = "Avals"; /*18622*/
			$k[$j++] = Infinity; /*18622*/
			for (var _2v = 0; _2v <= 128; _2v += 1) { /*18614*/
				$k[$j++] = _2v; /*18614*/
				$k[$j++] = _2v + 1; /*18614*/
			} /*18614*/
			$k[$j++] = $1.pad; /*18619*/
			$k[$j++] = 129; /*18619*/
			for (var _2x = 0; _2x <= 99; _2x += 1) { /*18619*/
				var _2z = $cvrs($s(2), _2x, 10); /*18617*/
				var _31 = $strcpy($s(2), "00"); /*18617*/
				$puti(_31, 2 - _2z.length, _2z); /*18617*/
				$k[$j++] = _31; /*18618*/
				$k[$j++] = _2x + 130; /*18618*/
			} /*18618*/
			var _39 = $a([$1.lC, $1.lB, $1.fnc1, $1.fnc2, $1.fnc3, $1.fnc4, $1.fnc1lD]); /*18620*/
			$k[$j++] = 229; /*18620*/
			for (var _3A = 0, _3B = _39.length; _3A < _3B; _3A++) { /*18620*/
				var _3E = $k[--$j] + 1; /*18620*/
				$k[$j++] = $get(_39, _3A); /*18620*/
				$k[$j++] = _3E; /*18620*/
				$k[$j++] = _3E; /*18620*/
			} /*18620*/
			$j--; /*18620*/
			$k[$j++] = $1.lX; /*18622*/
			$k[$j++] = 238; /*18622*/
			$k[$j++] = $1.lT; /*18622*/
			$k[$j++] = 239; /*18622*/
			var _3H = $d(); /*18622*/
			$1[$k[--$j]] = _3H; /*18624*/
			$k[$j++] = "Avals"; /*18626*/
			$k[$j++] = Infinity; /*18626*/
			$forall($1.Avals, function() { /*18626*/
				$k[$j++] = Infinity; /*18626*/
				var _3K = $k[--$j]; /*18626*/
				var _3L = $k[--$j]; /*18626*/
				$k[$j++] = _3K; /*18626*/
				$k[$j++] = _3L; /*18626*/
				var _3M = $a(); /*18626*/
				$k[$j++] = _3M; /*18626*/
			}); /*18626*/
			var _3N = $d(); /*18626*/
			$1[$k[--$j]] = _3N; /*18627*/
			$k[$j++] = "CNvals"; /*18635*/
			$k[$j++] = Infinity; /*18635*/
			$k[$j++] = $1.sft1; /*18634*/
			$k[$j++] = 0; /*18634*/
			$k[$j++] = $1.sft2; /*18634*/
			$k[$j++] = 1; /*18634*/
			$k[$j++] = $1.sft3; /*18634*/
			$k[$j++] = 2; /*18634*/
			$k[$j++] = 32; /*18634*/
			$k[$j++] = 3; /*18634*/
			for (var _3S = 48; _3S <= 57; _3S += 1) { /*18634*/
				$k[$j++] = _3S; /*18634*/
				$k[$j++] = _3S - 44; /*18634*/
			} /*18634*/
			for (var _3T = 65; _3T <= 90; _3T += 1) { /*18635*/
				$k[$j++] = _3T; /*18635*/
				$k[$j++] = _3T - 51; /*18635*/
			} /*18635*/
			var _3U = $d(); /*18635*/
			$1[$k[--$j]] = _3U; /*18636*/
			$k[$j++] = "C1vals"; /*18637*/
			$k[$j++] = Infinity; /*18637*/
			for (var _3W = 0; _3W <= 31; _3W += 1) { /*18637*/
				$k[$j++] = _3W; /*18637*/
				$k[$j++] = _3W; /*18637*/
			} /*18637*/
			var _3X = $d(); /*18637*/
			$1[$k[--$j]] = _3X; /*18637*/
			$k[$j++] = "C2vals"; /*18646*/
			$k[$j++] = Infinity; /*18646*/
			for (var _3Z = 33; _3Z <= 47; _3Z += 1) { /*18639*/
				$k[$j++] = _3Z; /*18639*/
				$k[$j++] = _3Z - 33; /*18639*/
			} /*18639*/
			for (var _3a = 58; _3a <= 64; _3a += 1) { /*18640*/
				$k[$j++] = _3a; /*18640*/
				$k[$j++] = _3a - 43; /*18640*/
			} /*18640*/
			for (var _3b = 91; _3b <= 95; _3b += 1) { /*18641*/
				$k[$j++] = _3b; /*18641*/
				$k[$j++] = _3b - 69; /*18641*/
			} /*18641*/
			$k[$j++] = $1.fnc1; /*18646*/
			$k[$j++] = 27; /*18646*/
			$k[$j++] = $1.fnc2; /*18646*/
			$k[$j++] = 28; /*18646*/
			$k[$j++] = $1.fnc3; /*18646*/
			$k[$j++] = 29; /*18646*/
			$k[$j++] = $1.fnc4; /*18646*/
			$k[$j++] = 30; /*18646*/
			$k[$j++] = $1.pad; /*18646*/
			$k[$j++] = 31; /*18646*/
			var _3h = $d(); /*18646*/
			$1[$k[--$j]] = _3h; /*18647*/
			$k[$j++] = "C3vals"; /*18648*/
			$k[$j++] = Infinity; /*18648*/
			for (var _3j = 96; _3j <= 127; _3j += 1) { /*18648*/
				$k[$j++] = _3j; /*18648*/
				$k[$j++] = _3j - 96; /*18648*/
			} /*18648*/
			var _3k = $d(); /*18648*/
			$1[$k[--$j]] = _3k; /*18648*/
			$k[$j++] = "Cvals"; /*18653*/
			$k[$j++] = Infinity; /*18653*/
			$forall($1.CNvals, function() { /*18650*/
				$k[$j++] = Infinity; /*18650*/
				var _3n = $k[--$j]; /*18650*/
				var _3o = $k[--$j]; /*18650*/
				$k[$j++] = _3n; /*18650*/
				$k[$j++] = _3o; /*18650*/
				var _3p = $a(); /*18650*/
				$k[$j++] = _3p; /*18650*/
			}); /*18650*/
			$forall($1.C1vals, function() { /*18651*/
				$k[$j++] = Infinity; /*18651*/
				var _3r = $k[--$j]; /*18651*/
				var _3s = $k[--$j]; /*18651*/
				$k[$j++] = _3r; /*18651*/
				$k[$j++] = $get($1.CNvals, $1.sft1); /*18651*/
				$k[$j++] = _3s; /*18651*/
				var _3w = $a(); /*18651*/
				$k[$j++] = _3w; /*18651*/
			}); /*18651*/
			$forall($1.C2vals, function() { /*18652*/
				$k[$j++] = Infinity; /*18652*/
				var _3y = $k[--$j]; /*18652*/
				var _3z = $k[--$j]; /*18652*/
				$k[$j++] = _3y; /*18652*/
				$k[$j++] = $get($1.CNvals, $1.sft2); /*18652*/
				$k[$j++] = _3z; /*18652*/
				var _43 = $a(); /*18652*/
				$k[$j++] = _43; /*18652*/
			}); /*18652*/
			$forall($1.C3vals, function() { /*18653*/
				$k[$j++] = Infinity; /*18653*/
				var _45 = $k[--$j]; /*18653*/
				var _46 = $k[--$j]; /*18653*/
				$k[$j++] = _45; /*18653*/
				$k[$j++] = $get($1.CNvals, $1.sft3); /*18653*/
				$k[$j++] = _46; /*18653*/
				var _4A = $a(); /*18653*/
				$k[$j++] = _4A; /*18653*/
			}); /*18653*/
			var _4B = $d(); /*18653*/
			$1[$k[--$j]] = _4B; /*18654*/
			$k[$j++] = "TNvals"; /*18662*/
			$k[$j++] = Infinity; /*18662*/
			$k[$j++] = $1.sft1; /*18661*/
			$k[$j++] = 0; /*18661*/
			$k[$j++] = $1.sft2; /*18661*/
			$k[$j++] = 1; /*18661*/
			$k[$j++] = $1.sft3; /*18661*/
			$k[$j++] = 2; /*18661*/
			$k[$j++] = 32; /*18661*/
			$k[$j++] = 3; /*18661*/
			for (var _4G = 48; _4G <= 57; _4G += 1) { /*18661*/
				$k[$j++] = _4G; /*18661*/
				$k[$j++] = _4G - 44; /*18661*/
			} /*18661*/
			for (var _4H = 97; _4H <= 122; _4H += 1) { /*18662*/
				$k[$j++] = _4H; /*18662*/
				$k[$j++] = _4H - 83; /*18662*/
			} /*18662*/
			var _4I = $d(); /*18662*/
			$1[$k[--$j]] = _4I; /*18663*/
			$k[$j++] = "T1vals"; /*18664*/
			$k[$j++] = Infinity; /*18664*/
			for (var _4K = 0; _4K <= 31; _4K += 1) { /*18664*/
				$k[$j++] = _4K; /*18664*/
				$k[$j++] = _4K; /*18664*/
			} /*18664*/
			var _4L = $d(); /*18664*/
			$1[$k[--$j]] = _4L; /*18664*/
			$k[$j++] = "T2vals"; /*18673*/
			$k[$j++] = Infinity; /*18673*/
			for (var _4N = 33; _4N <= 47; _4N += 1) { /*18666*/
				$k[$j++] = _4N; /*18666*/
				$k[$j++] = _4N - 33; /*18666*/
			} /*18666*/
			for (var _4O = 58; _4O <= 64; _4O += 1) { /*18667*/
				$k[$j++] = _4O; /*18667*/
				$k[$j++] = _4O - 43; /*18667*/
			} /*18667*/
			for (var _4P = 91; _4P <= 95; _4P += 1) { /*18668*/
				$k[$j++] = _4P; /*18668*/
				$k[$j++] = _4P - 69; /*18668*/
			} /*18668*/
			$k[$j++] = $1.fnc1; /*18673*/
			$k[$j++] = 27; /*18673*/
			$k[$j++] = $1.fnc2; /*18673*/
			$k[$j++] = 28; /*18673*/
			$k[$j++] = $1.fnc3; /*18673*/
			$k[$j++] = 29; /*18673*/
			$k[$j++] = $1.fnc4; /*18673*/
			$k[$j++] = 30; /*18673*/
			$k[$j++] = $1.pad; /*18673*/
			$k[$j++] = 31; /*18673*/
			var _4V = $d(); /*18673*/
			$1[$k[--$j]] = _4V; /*18674*/
			$k[$j++] = "T3vals"; /*18678*/
			$k[$j++] = Infinity; /*18678*/
			$k[$j++] = 96; /*18677*/
			$k[$j++] = 0; /*18677*/
			for (var _4X = 65; _4X <= 90; _4X += 1) { /*18677*/
				$k[$j++] = _4X; /*18677*/
				$k[$j++] = _4X - 64; /*18677*/
			} /*18677*/
			for (var _4Y = 123; _4Y <= 127; _4Y += 1) { /*18678*/
				$k[$j++] = _4Y; /*18678*/
				$k[$j++] = _4Y - 96; /*18678*/
			} /*18678*/
			var _4Z = $d(); /*18678*/
			$1[$k[--$j]] = _4Z; /*18679*/
			$k[$j++] = "Tvals"; /*18684*/
			$k[$j++] = Infinity; /*18684*/
			$forall($1.TNvals, function() { /*18681*/
				$k[$j++] = Infinity; /*18681*/
				var _4c = $k[--$j]; /*18681*/
				var _4d = $k[--$j]; /*18681*/
				$k[$j++] = _4c; /*18681*/
				$k[$j++] = _4d; /*18681*/
				var _4e = $a(); /*18681*/
				$k[$j++] = _4e; /*18681*/
			}); /*18681*/
			$forall($1.T1vals, function() { /*18682*/
				$k[$j++] = Infinity; /*18682*/
				var _4g = $k[--$j]; /*18682*/
				var _4h = $k[--$j]; /*18682*/
				$k[$j++] = _4g; /*18682*/
				$k[$j++] = $get($1.TNvals, $1.sft1); /*18682*/
				$k[$j++] = _4h; /*18682*/
				var _4l = $a(); /*18682*/
				$k[$j++] = _4l; /*18682*/
			}); /*18682*/
			$forall($1.T2vals, function() { /*18683*/
				$k[$j++] = Infinity; /*18683*/
				var _4n = $k[--$j]; /*18683*/
				var _4o = $k[--$j]; /*18683*/
				$k[$j++] = _4n; /*18683*/
				$k[$j++] = $get($1.TNvals, $1.sft2); /*18683*/
				$k[$j++] = _4o; /*18683*/
				var _4s = $a(); /*18683*/
				$k[$j++] = _4s; /*18683*/
			}); /*18683*/
			$forall($1.T3vals, function() { /*18684*/
				$k[$j++] = Infinity; /*18684*/
				var _4u = $k[--$j]; /*18684*/
				var _4v = $k[--$j]; /*18684*/
				$k[$j++] = _4u; /*18684*/
				$k[$j++] = $get($1.TNvals, $1.sft3); /*18684*/
				$k[$j++] = _4v; /*18684*/
				var _4z = $a(); /*18684*/
				$k[$j++] = _4z; /*18684*/
			}); /*18684*/
			var _50 = $d(); /*18684*/
			$1[$k[--$j]] = _50; /*18685*/
			for (var _52 = 128; _52 <= 255; _52 += 1) { /*18693*/
				$1.i = _52; /*18689*/
				$k[$j++] = $1.Avals; /*18690*/
				$k[$j++] = $1.i; /*18690*/
				$k[$j++] = Infinity; /*18690*/
				$aload($get($1.Avals, $1.fnc4)); /*18690*/
				$aload($get($1.Avals, $1.i - 128)); /*18690*/
				var _5B = $a(); /*18690*/
				var _5C = $k[--$j]; /*18690*/
				$put($k[--$j], _5C, _5B); /*18690*/
				$k[$j++] = $1.Cvals; /*18691*/
				$k[$j++] = $1.i; /*18691*/
				$k[$j++] = Infinity; /*18691*/
				$aload($get($1.Cvals, $1.fnc4)); /*18691*/
				$aload($get($1.Cvals, $1.i - 128)); /*18691*/
				var _5M = $a(); /*18691*/
				var _5N = $k[--$j]; /*18691*/
				$put($k[--$j], _5N, _5M); /*18691*/
				$k[$j++] = $1.Tvals; /*18692*/
				$k[$j++] = $1.i; /*18692*/
				$k[$j++] = Infinity; /*18692*/
				$aload($get($1.Tvals, $1.fnc4)); /*18692*/
				$aload($get($1.Tvals, $1.i - 128)); /*18692*/
				var _5X = $a(); /*18692*/
				var _5Y = $k[--$j]; /*18692*/
				$put($k[--$j], _5Y, _5X); /*18692*/
			} /*18692*/
			$k[$j++] = "Xvals"; /*18701*/
			$k[$j++] = Infinity; /*18701*/
			$k[$j++] = 13; /*18700*/
			$k[$j++] = 0; /*18700*/
			$k[$j++] = 42; /*18700*/
			$k[$j++] = 1; /*18700*/
			$k[$j++] = 62; /*18700*/
			$k[$j++] = 2; /*18700*/
			$k[$j++] = 32; /*18700*/
			$k[$j++] = 3; /*18700*/
			for (var _5a = 48; _5a <= 57; _5a += 1) { /*18700*/
				$k[$j++] = _5a; /*18700*/
				$k[$j++] = _5a - 44; /*18700*/
			} /*18700*/
			for (var _5b = 65; _5b <= 90; _5b += 1) { /*18701*/
				$k[$j++] = _5b; /*18701*/
				$k[$j++] = _5b - 51; /*18701*/
			} /*18701*/
			var _5c = $d(); /*18701*/
			$1[$k[--$j]] = _5c; /*18702*/
			$k[$j++] = "Xvals"; /*18704*/
			$k[$j++] = Infinity; /*18704*/
			$forall($1.Xvals, function() { /*18704*/
				$k[$j++] = Infinity; /*18704*/
				var _5f = $k[--$j]; /*18704*/
				var _5g = $k[--$j]; /*18704*/
				$k[$j++] = _5f; /*18704*/
				$k[$j++] = _5g; /*18704*/
				var _5h = $a(); /*18704*/
				$k[$j++] = _5h; /*18704*/
			}); /*18704*/
			var _5i = $d(); /*18704*/
			$1[$k[--$j]] = _5i; /*18705*/
			$k[$j++] = "Bvals"; /*18708*/
			$k[$j++] = Infinity; /*18708*/
			for (var _5k = 0; _5k <= 255; _5k += 1) { /*18708*/
				$k[$j++] = _5k; /*18708*/
				$k[$j++] = _5k; /*18708*/
			} /*18708*/
			var _5l = $d(); /*18708*/
			$1[$k[--$j]] = _5l; /*18709*/
			$k[$j++] = "Bvals"; /*18711*/
			$k[$j++] = Infinity; /*18711*/
			$forall($1.Bvals, function() { /*18711*/
				$k[$j++] = Infinity; /*18711*/
				var _5o = $k[--$j]; /*18711*/
				var _5p = $k[--$j]; /*18711*/
				$k[$j++] = _5o; /*18711*/
				$k[$j++] = _5p; /*18711*/
				var _5q = $a(); /*18711*/
				$k[$j++] = _5q; /*18711*/
			}); /*18711*/
			var _5r = $d(); /*18711*/
			$1[$k[--$j]] = _5r; /*18712*/
			$1.encvals = $a([$1.Avals, $1.Cvals, $1.Tvals, $1.Xvals, -1, $1.Bvals]); /*18714*/
			$k[$j++] = Infinity; /*18716*/
			for (var _60 = 0, _61 = $1.msglen; _60 < _61; _60++) { /*18716*/
				$k[$j++] = 0; /*18716*/
			} /*18716*/
			$k[$j++] = 0; /*18716*/
			$1.numD = $a(); /*18716*/
			$k[$j++] = Infinity; /*18717*/
			for (var _64 = 0, _65 = $1.msglen; _64 < _65; _64++) { /*18717*/
				$k[$j++] = 0; /*18717*/
			} /*18717*/
			$k[$j++] = 9999; /*18717*/
			$1.nextXterm = $a(); /*18717*/
			$k[$j++] = Infinity; /*18718*/
			for (var _68 = 0, _69 = $1.msglen; _68 < _69; _68++) { /*18718*/
				$k[$j++] = 0; /*18718*/
			} /*18718*/
			$k[$j++] = 9999; /*18718*/
			$1.nextNonX = $a(); /*18718*/
			for (var _6C = $1.msglen - 1; _6C >= 0; _6C -= 1) { /*18735*/
				$1.i = _6C; /*18720*/
				$1.barchar = $get($1.msg, $1.i); /*18721*/
				if (($1.barchar >= 48) && ($1.barchar <= 57)) { /*18724*/
					$put($1.numD, $1.i, $get($1.numD, $1.i + 1) + 1); /*18723*/
				} /*18723*/
				if ((($1.barchar == 13) || ($1.barchar == 42)) || ($1.barchar == 62)) { /*18728*/
					$put($1.nextXterm, $1.i, 0); /*18726*/
				} else { /*18728*/
					$put($1.nextXterm, $1.i, $get($1.nextXterm, $1.i + 1) + 1); /*18728*/
				} /*18728*/
				var _6Z = $get($1.Xvals, $1.barchar) !== undefined; /*18730*/
				if (!_6Z) { /*18733*/
					$put($1.nextNonX, $1.i, 0); /*18731*/
				} else { /*18733*/
					$put($1.nextNonX, $1.i, $get($1.nextNonX, $1.i + 1) + 1); /*18733*/
				} /*18733*/
			} /*18733*/
			$k[$j++] = Infinity; /*18736*/
			var _6h = $1.nextXterm; /*18736*/
			for (var _6i = 0, _6j = _6h.length; _6i < _6j; _6i++) { /*18736*/
				var _6k = $get(_6h, _6i); /*18736*/
				$k[$j++] = _6k; /*18736*/
				if (_6k > 10000) { /*18736*/
					$j--; /*18736*/
					$k[$j++] = 10000; /*18736*/
				} /*18736*/
			} /*18736*/
			$1.nextXterm = $a(); /*18736*/
			$k[$j++] = Infinity; /*18737*/
			var _6m = $1.nextNonX; /*18737*/
			for (var _6n = 0, _6o = _6m.length; _6n < _6o; _6n++) { /*18737*/
				var _6p = $get(_6m, _6n); /*18737*/
				$k[$j++] = _6p; /*18737*/
				if (_6p > 10000) { /*18737*/
					$j--; /*18737*/
					$k[$j++] = 10000; /*18737*/
				} /*18737*/
			} /*18737*/
			$1.nextNonX = $a(); /*18737*/
			$1.isD = function() {
				$k[$j++] = ($1.char >= 48) && ($1.char <= 57); /*18739*/
			}; /*18739*/
			$1.isC = function() {
				var _6v = $get($1.CNvals, $1.char) !== undefined; /*18740*/
				$k[$j++] = _6v; /*18740*/
			}; /*18740*/
			$1.isT = function() {
				var _6y = $get($1.TNvals, $1.char) !== undefined; /*18741*/
				$k[$j++] = _6y; /*18741*/
			}; /*18741*/
			$1.isX = function() {
				var _71 = $get($1.Xvals, $1.char) !== undefined; /*18742*/
				$k[$j++] = _71; /*18742*/
			}; /*18742*/
			$1.isEA = function() {
				$k[$j++] = $1.char > 127; /*18743*/
			}; /*18743*/
			$1.isFN = function() {
				$k[$j++] = $1.char < 0; /*18744*/
			}; /*18744*/
			$1.XtermFirst = function() {
				var _74 = $k[--$j]; /*18745*/
				$k[$j++] = $lt($get($1.nextXterm, _74), $get($1.nextNonX, _74)); /*18745*/
			}; /*18745*/
			$1.A = 0; /*18747*/
			$1.C = 1; /*18747*/
			$1.T = 2; /*18747*/
			$1.X = 3; /*18747*/
			$1.D = 4; /*18747*/
			$1.B = 5; /*18747*/
			$1.lookup = function() {
				$1.ac = 1; /*18750*/
				$1.cc = 2; /*18750*/
				$1.tc = 2; /*18750*/
				$1.xc = 2; /*18750*/
				$1.bc = 3; /*18750*/
				if ($1.mode == $1.A) { /*18751*/
					$1.ac = 0; /*18751*/
					$1.cc = 1; /*18751*/
					$1.tc = 1; /*18751*/
					$1.xc = 1; /*18751*/
					$1.bc = 2; /*18751*/
				} /*18751*/
				if ($1.mode == $1.C) { /*18752*/
					$1.cc = 0; /*18752*/
				} /*18752*/
				if ($1.mode == $1.T) { /*18753*/
					$1.tc = 0; /*18753*/
				} /*18753*/
				if ($1.mode == $1.X) { /*18754*/
					$1.xc = 0; /*18754*/
				} /*18754*/
				if ($1.mode == $1.B) { /*18755*/
					$1.bc = 0; /*18755*/
				} /*18755*/
				for (var _7J = 0, _7K = 1; _7J < _7K; _7J++) { /*18783*/
					$1.k = 0; /*18757*/
					for (;;) { /*18782*/
						if (($1.i + $1.k) == $1.msglen) { /*18764*/
							var _7S = $a([$1.ac, $1.cc, $1.tc, $1.xc]); /*18759*/
							$k[$j++] = true; /*18759*/
							for (var _7T = 0, _7U = _7S.length; _7T < _7U; _7T++) { /*18759*/
								var _7X = $k[--$j]; /*18759*/
								$k[$j++] = _7X && ($1.bc <= Math.ceil($get(_7S, _7T))); /*18759*/
							} /*18759*/
							if ($k[--$j]) { /*18759*/
								$k[$j++] = $1.B; /*18759*/
								break; /*18759*/
							} /*18759*/
							var _7e = $a([$1.cc, $1.tc, $1.xc, $1.bc]); /*18760*/
							$k[$j++] = true; /*18760*/
							for (var _7f = 0, _7g = _7e.length; _7f < _7g; _7f++) { /*18760*/
								var _7j = $k[--$j]; /*18760*/
								$k[$j++] = _7j && ($1.ac <= Math.ceil($get(_7e, _7f))); /*18760*/
							} /*18760*/
							if ($k[--$j]) { /*18760*/
								$k[$j++] = $1.A; /*18760*/
								break; /*18760*/
							} /*18760*/
							var _7o = $a([$1.tc, $1.xc]); /*18761*/
							$k[$j++] = true; /*18761*/
							for (var _7p = 0, _7q = _7o.length; _7p < _7q; _7p++) { /*18761*/
								var _7t = $k[--$j]; /*18761*/
								$k[$j++] = _7t && (Math.ceil($1.cc) <= Math.ceil($get(_7o, _7p))); /*18761*/
							} /*18761*/
							if ($k[--$j]) { /*18761*/
								$k[$j++] = $1.C; /*18761*/
								break; /*18761*/
							} /*18761*/
							var _7x = $a([$1.xc]); /*18762*/
							$k[$j++] = true; /*18762*/
							for (var _7y = 0, _7z = _7x.length; _7y < _7z; _7y++) { /*18762*/
								var _82 = $k[--$j]; /*18762*/
								$k[$j++] = _82 && (Math.ceil($1.tc) <= Math.ceil($get(_7x, _7y))); /*18762*/
							} /*18762*/
							if ($k[--$j]) { /*18762*/
								$k[$j++] = $1.T; /*18762*/
								break; /*18762*/
							} /*18762*/
							$k[$j++] = $1.X; /*18763*/
							break; /*18763*/
						} /*18763*/
						$1.char = $get($1.msg, $1.i + $1.k); /*18765*/
						$k[$j++] = "ac"; /*18766*/
						$k[$j++] = $1.ac; /*18766*/
						$1.isD(); /*18766*/
						if ($k[--$j]) { /*18766*/
							var _8C = $k[--$j]; /*18766*/
							$k[$j++] = _8C + (1 / 2); /*18766*/
						} else { /*18766*/
							$1.isEA(); /*18766*/
							if ($k[--$j]) { /*18766*/
								var _8E = $k[--$j]; /*18766*/
								$k[$j++] = Math.ceil(_8E) + 2; /*18766*/
							} else { /*18766*/
								var _8F = $k[--$j]; /*18766*/
								$k[$j++] = Math.ceil(_8F) + 1; /*18766*/
							} /*18766*/
						} /*18766*/
						var _8G = $k[--$j]; /*18766*/
						$1[$k[--$j]] = _8G; /*18766*/
						$k[$j++] = "cc"; /*18767*/
						$k[$j++] = $1.cc; /*18767*/
						$1.isC(); /*18767*/
						if ($k[--$j]) { /*18767*/
							var _8K = $k[--$j]; /*18767*/
							$k[$j++] = _8K + (2 / 3); /*18767*/
						} else { /*18767*/
							$1.isEA(); /*18767*/
							if ($k[--$j]) { /*18767*/
								var _8M = $k[--$j]; /*18767*/
								$k[$j++] = _8M + (8 / 3); /*18767*/
							} else { /*18767*/
								var _8N = $k[--$j]; /*18767*/
								$k[$j++] = _8N + (4 / 3); /*18767*/
							} /*18767*/
						} /*18767*/
						var _8O = $k[--$j]; /*18767*/
						$1[$k[--$j]] = _8O; /*18767*/
						$k[$j++] = "tc"; /*18768*/
						$k[$j++] = $1.tc; /*18768*/
						$1.isT(); /*18768*/
						if ($k[--$j]) { /*18768*/
							var _8S = $k[--$j]; /*18768*/
							$k[$j++] = _8S + (2 / 3); /*18768*/
						} else { /*18768*/
							$1.isEA(); /*18768*/
							if ($k[--$j]) { /*18768*/
								var _8U = $k[--$j]; /*18768*/
								$k[$j++] = _8U + (8 / 3); /*18768*/
							} else { /*18768*/
								var _8V = $k[--$j]; /*18768*/
								$k[$j++] = _8V + (4 / 3); /*18768*/
							} /*18768*/
						} /*18768*/
						var _8W = $k[--$j]; /*18768*/
						$1[$k[--$j]] = _8W; /*18768*/
						$k[$j++] = "xc"; /*18769*/
						$k[$j++] = $1.xc; /*18769*/
						$1.isX(); /*18769*/
						if ($k[--$j]) { /*18769*/
							var _8a = $k[--$j]; /*18769*/
							$k[$j++] = _8a + (2 / 3); /*18769*/
						} else { /*18769*/
							$1.isEA(); /*18769*/
							if ($k[--$j]) { /*18769*/
								var _8c = $k[--$j]; /*18769*/
								$k[$j++] = _8c + (13 / 3); /*18769*/
							} else { /*18769*/
								var _8d = $k[--$j]; /*18769*/
								$k[$j++] = _8d + (10 / 3); /*18769*/
							} /*18769*/
						} /*18769*/
						var _8e = $k[--$j]; /*18769*/
						$1[$k[--$j]] = _8e; /*18769*/
						$k[$j++] = "bc"; /*18770*/
						$k[$j++] = $1.bc; /*18770*/
						$1.isFN(); /*18770*/
						if ($k[--$j]) { /*18770*/
							var _8i = $k[--$j]; /*18770*/
							$k[$j++] = _8i + 3; /*18770*/
						} else { /*18770*/
							var _8j = $k[--$j]; /*18770*/
							$k[$j++] = _8j + 1; /*18770*/
						} /*18770*/
						var _8k = $k[--$j]; /*18770*/
						$1[$k[--$j]] = _8k; /*18770*/
						if ($1.k >= 3) { /*18780*/
							var _8r = $a([$1.ac, $1.cc, $1.tc, $1.xc]); /*18772*/
							$k[$j++] = true; /*18772*/
							for (var _8s = 0, _8t = _8r.length; _8s < _8t; _8s++) { /*18772*/
								var _8w = $k[--$j]; /*18772*/
								$k[$j++] = _8w && (($1.bc + 1) <= Math.ceil($get(_8r, _8s))); /*18772*/
							} /*18772*/
							if ($k[--$j]) { /*18772*/
								$k[$j++] = $1.B; /*18772*/
								break; /*18772*/
							} /*18772*/
							var _93 = $a([$1.cc, $1.tc, $1.xc, $1.bc]); /*18773*/
							$k[$j++] = true; /*18773*/
							for (var _94 = 0, _95 = _93.length; _94 < _95; _94++) { /*18773*/
								var _98 = $k[--$j]; /*18773*/
								$k[$j++] = _98 && (($1.ac + 1) <= Math.ceil($get(_93, _94))); /*18773*/
							} /*18773*/
							if ($k[--$j]) { /*18773*/
								$k[$j++] = $1.A; /*18773*/
								break; /*18773*/
							} /*18773*/
							var _9F = $a([$1.ac, $1.cc, $1.xc, $1.bc]); /*18774*/
							$k[$j++] = true; /*18774*/
							for (var _9G = 0, _9H = _9F.length; _9G < _9H; _9G++) { /*18774*/
								var _9K = $k[--$j]; /*18774*/
								$k[$j++] = _9K && (($1.tc + 1) <= Math.ceil($get(_9F, _9G))); /*18774*/
							} /*18774*/
							if ($k[--$j]) { /*18774*/
								$k[$j++] = $1.T; /*18774*/
								break; /*18774*/
							} /*18774*/
							var _9P = $a([$1.ac, $1.tc]); /*18775*/
							$k[$j++] = true; /*18775*/
							for (var _9Q = 0, _9R = _9P.length; _9Q < _9R; _9Q++) { /*18775*/
								var _9U = $k[--$j]; /*18775*/
								$k[$j++] = _9U && (($1.cc + 1) <= Math.ceil($get(_9P, _9Q))); /*18775*/
							} /*18775*/
							if ($k[--$j]) { /*18778*/
								if (Math.ceil($1.cc) < Math.ceil($1.xc)) { /*18776*/
									$k[$j++] = $1.C; /*18776*/
									break; /*18776*/
								} /*18776*/
								if ($1.cc == $1.xc) { /*18777*/
									$k[$j++] = ($1.i + $1.k) + 1; /*18777*/
									$1.XtermFirst(); /*18777*/
									if ($k[--$j]) { /*18777*/
										$k[$j++] = $1.X; /*18777*/
										break; /*18777*/
									} else { /*18777*/
										$k[$j++] = $1.C; /*18777*/
										break; /*18777*/
									} /*18777*/
								} /*18777*/
							} /*18777*/
							var _9k = $a([$1.ac, $1.cc, $1.tc, $1.bc]); /*18779*/
							$k[$j++] = true; /*18779*/
							for (var _9l = 0, _9m = _9k.length; _9l < _9m; _9l++) { /*18779*/
								var _9p = $k[--$j]; /*18779*/
								$k[$j++] = _9p && (($1.xc + 1) < $get(_9k, _9l)); /*18779*/
							} /*18779*/
							if ($k[--$j]) { /*18779*/
								$k[$j++] = $1.X; /*18779*/
								break; /*18779*/
							} /*18779*/
						} /*18779*/
						$1.k = $1.k + 1; /*18781*/
					} /*18781*/
				} /*18781*/
			}; /*18784*/
			$1.addtocws = function() {
				var _9t = $k[--$j]; /*18787*/
				$puti($1.cws, $1.j, _9t); /*18787*/
				$1.j = _9t.length + $1.j; /*18788*/
			}; /*18789*/
			$1.tobin = function() {
				var _9y = $s($k[--$j]); /*18792*/
				$k[$j++] = _9y; /*18792*/
				for (var _A0 = 0, _9z = _9y.length - 1; _A0 <= _9z; _A0 += 1) { /*18792*/
					var _A1 = $k[--$j]; /*18792*/
					$put(_A1, _A0, 48); /*18792*/
					$k[$j++] = _A1; /*18792*/
				} /*18792*/
				var _A2 = $k[--$j]; /*18793*/
				var _A5 = $cvrs($s(_A2.length), $k[--$j], 2); /*18793*/
				$puti(_A2, _A2.length - _A5.length, _A5); /*18793*/
				$k[$j++] = _A2; /*18794*/
				$k[$j++] = Infinity; /*18794*/
				var _A6 = $k[--$j]; /*18794*/
				var _A7 = $k[--$j]; /*18794*/
				$k[$j++] = _A6; /*18794*/
				$forall(_A7, function() { /*18794*/
					var _A8 = $k[--$j]; /*18794*/
					$k[$j++] = _A8 - 48; /*18794*/
				}); /*18794*/
				var _A9 = $a(); /*18794*/
				$k[$j++] = _A9; /*18794*/
			}; /*18795*/
			$1.encA = function() {
				for (var _AA = 0, _AB = 1; _AA < _AB; _AA++) { /*18839*/
					if ($get($1.numD, $1.i) >= 21) { /*18803*/
						$1.Dbits = $a([1, 1, 1, 1]); /*18800*/
						$1.mode = $1.D; /*18801*/
						break; /*18802*/
					} /*18802*/
					var _AJ = $get($1.numD, $1.i); /*18804*/
					if ((_AJ >= 13) && ((_AJ + $1.i) == $1.msglen)) { /*18808*/
						$1.Dbits = $a([1, 1, 1, 1]); /*18805*/
						$1.mode = $1.D; /*18806*/
						break; /*18807*/
					} /*18807*/
					if ($get($1.numD, $1.i) >= 2) { /*18813*/
						var _AR = $s(2); /*18810*/
						$put(_AR, 0, $get($1.msg, $1.i)); /*18810*/
						$put(_AR, 1, $get($1.msg, $1.i + 1)); /*18810*/
						$k[$j++] = $get($1.Avals, _AR); /*18810*/
						$1.addtocws(); /*18810*/
						$1.i = $1.i + 2; /*18811*/
						break; /*18812*/
					} /*18812*/
					if ($get($1.msg, $1.i) == $1.fnc1) { /*18829*/
						if ($get($1.numD, $1.i + 1) >= 15) { /*18821*/
							$k[$j++] = $get($1.Avals, $1.fnc1lD); /*18816*/
							$1.addtocws(); /*18816*/
							$1.i = $1.i + 1; /*18817*/
							$1.Dbits = $a([]); /*18818*/
							$1.mode = $1.D; /*18819*/
							break; /*18820*/
						} /*18820*/
						var _Aq = $get($1.numD, $1.i + 1); /*18822*/
						if ((_Aq >= 7) && (((_Aq + $1.i) + 1) == $1.msglen)) { /*18828*/
							$k[$j++] = $get($1.Avals, $1.fnc1lD); /*18823*/
							$1.addtocws(); /*18823*/
							$1.i = $1.i + 1; /*18824*/
							$1.Dbits = $a([]); /*18825*/
							$1.mode = $1.D; /*18826*/
							break; /*18827*/
						} /*18827*/
					} /*18827*/
					$k[$j++] = "newmode"; /*18830*/
					$1.lookup(); /*18830*/
					var _Az = $k[--$j]; /*18830*/
					$1[$k[--$j]] = _Az; /*18830*/
					if ($1.newmode != $1.mode) { /*18835*/
						$k[$j++] = $get($1.Avals, $get($a([-1, $1.lC, $1.lT, $1.lX, $1.lD, $1.lB]), $1.newmode)); /*18832*/
						$1.addtocws(); /*18832*/
						$1.mode = $1.newmode; /*18833*/
						break; /*18834*/
					} /*18834*/
					$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*18836*/
					$1.addtocws(); /*18836*/
					$1.i = $1.i + 1; /*18837*/
					break; /*18838*/
				} /*18838*/
			}; /*18840*/
			$1.CTXvalstocws = function() {
				$1.in = $k[--$j]; /*18843*/
				$k[$j++] = Infinity; /*18844*/
				for (var _BN = 0, _BM = $1.in.length - 1; _BN <= _BM; _BN += 3) { /*18848*/
					$k[$j++] = 0; /*18846*/
					$forall($geti($1.in, _BN, 3), function() { /*18846*/
						var _BQ = $k[--$j]; /*18846*/
						var _BR = $k[--$j]; /*18846*/
						$k[$j++] = (_BR + _BQ) * 40; /*18846*/
					}); /*18846*/
					var _BT = (~~($k[--$j] / 40)) + 1; /*18847*/
					$k[$j++] = ~~(_BT / 256); /*18847*/
					$k[$j++] = _BT % 256; /*18847*/
				} /*18847*/
				$astore($a($counttomark())); /*18849*/
				var _BW = $k[--$j]; /*18849*/
				var _BX = $k[--$j]; /*18849*/
				$k[$j++] = _BW; /*18849*/
			}; /*18850*/
			$1.encCTX = function() {
				$1.p = 0; /*18853*/
				$1.ctxvals = $a(2220); /*18854*/
				for (;;) { /*18932*/
					if ($1.i == $1.msglen) { /*18858*/
						break; /*18858*/
					} /*18858*/
					var _Bh = $get($get($1.encvals, $1.mode), $get($1.msg, $1.i)) !== undefined; /*18859*/
					if (!_Bh) { /*18859*/
						break; /*18859*/
					} /*18859*/
					if (($1.p % 3) == 0) { /*18927*/
						if ($get($1.numD, $1.i) >= 12) { /*18865*/
							$k[$j++] = $a([$1.unlcw]); /*18862*/
							$1.addtocws(); /*18862*/
							$1.mode = $1.A; /*18863*/
							break; /*18864*/
						} /*18864*/
						var _Br = $get($1.numD, $1.i); /*18866*/
						if ((_Br >= 8) && ((_Br + $1.i) == $1.msglen)) { /*18870*/
							$k[$j++] = $a([$1.unlcw]); /*18867*/
							$1.addtocws(); /*18867*/
							$1.mode = $1.A; /*18868*/
							break; /*18869*/
						} /*18869*/
						$1.lookup(); /*18871*/
						if ($k[--$j] != $1.mode) { /*18876*/
							$k[$j++] = $geti($1.ctxvals, 0, $1.p); /*18872*/
							$1.CTXvalstocws(); /*18872*/
							$1.addtocws(); /*18872*/
							$k[$j++] = $a([$1.unlcw]); /*18873*/
							$1.addtocws(); /*18873*/
							$1.mode = $1.A; /*18874*/
							break; /*18875*/
						} /*18875*/
						if (($1.msglen - $1.i) <= 3) { /*18926*/
							$1.remcws = $get($1.numremcws, $1.j + ((~~($1.p / 3)) * 2)); /*18878*/
							$k[$j++] = Infinity; /*18887*/
							$forall($geti($1.msg, $1.i, $1.msglen - $1.i), function() { /*18886*/
								var _CG = $k[--$j]; /*18881*/
								var _CK = $get($get($1.encvals, $1.mode), _CG) !== undefined; /*18881*/
								$k[$j++] = _CG; /*18885*/
								if (_CK) { /*18884*/
									$aload($get($get($1.encvals, $1.mode), $k[--$j])); /*18882*/
								} else { /*18884*/
									$j--; /*18884*/
									$k[$j++] = -1; /*18884*/
									$k[$j++] = -1; /*18884*/
									$k[$j++] = -1; /*18884*/
									$k[$j++] = -1; /*18884*/
								} /*18884*/
							}); /*18884*/
							$1.remvals = $a(); /*18887*/
							if (($1.remcws == 2) && ($1.remvals.length == 3)) { /*18897*/
								$k[$j++] = Infinity; /*18892*/
								$aload($geti($1.ctxvals, 0, $1.p)); /*18891*/
								$aload($1.remvals); /*18892*/
								var _CX = $a(); /*18892*/
								$k[$j++] = _CX; /*18893*/
								$1.CTXvalstocws(); /*18893*/
								$1.addtocws(); /*18893*/
								$1.mode = $1.A; /*18894*/
								$1.i = $1.msglen; /*18895*/
								break; /*18896*/
							} /*18896*/
							if ((($1.remcws == 2) && ($1.remvals.length == 2)) && ($1.mode != $1.X)) { /*18908*/
								$k[$j++] = Infinity; /*18903*/
								$aload($geti($1.ctxvals, 0, $1.p)); /*18901*/
								$aload($1.remvals); /*18902*/
								$aload($get($get($1.encvals, $1.mode), $1.sft1)); /*18903*/
								var _Cn = $a(); /*18903*/
								$k[$j++] = _Cn; /*18904*/
								$1.CTXvalstocws(); /*18904*/
								$1.addtocws(); /*18904*/
								$1.mode = $1.A; /*18905*/
								$1.i = $1.msglen; /*18906*/
								break; /*18907*/
							} /*18907*/
							if (($1.remcws == 2) && ($1.remvals.length == 1)) { /*18917*/
								$k[$j++] = $geti($1.ctxvals, 0, $1.p); /*18911*/
								$1.CTXvalstocws(); /*18911*/
								$1.addtocws(); /*18911*/
								$k[$j++] = $a([$1.unlcw]); /*18912*/
								$1.addtocws(); /*18912*/
								$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*18913*/
								$1.addtocws(); /*18913*/
								$1.mode = $1.A; /*18914*/
								$1.i = $1.msglen; /*18915*/
								break; /*18916*/
							} /*18916*/
							if (($1.remcws == 1) && ($1.remvals.length == 1)) { /*18925*/
								$k[$j++] = $geti($1.ctxvals, 0, $1.p); /*18920*/
								$1.CTXvalstocws(); /*18920*/
								$1.addtocws(); /*18920*/
								$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*18921*/
								$1.addtocws(); /*18921*/
								$1.mode = $1.A; /*18922*/
								$1.i = $1.msglen; /*18923*/
								break; /*18924*/
							} /*18924*/
						} /*18924*/
					} /*18924*/
					var _DM = $get($get($1.encvals, $1.mode), $get($1.msg, $1.i)); /*18928*/
					$puti($1.ctxvals, $1.p, _DM); /*18929*/
					$1.p = _DM.length + $1.p; /*18930*/
					$1.i = $1.i + 1; /*18931*/
				} /*18931*/
				if ($1.mode != $1.A) { /*18956*/
					for (;;) { /*18940*/
						if (($1.p % 3) == 0) { /*18937*/
							break; /*18937*/
						} /*18937*/
						$1.i = $1.i - 1; /*18938*/
						$1.p = $1.p - $get($get($1.encvals, $1.mode), $get($1.msg, $1.i)).length; /*18939*/
					} /*18939*/
					$k[$j++] = Infinity; /*18942*/
					$aload($geti($1.ctxvals, 0, $1.p)); /*18942*/
					var _Dg = $a(); /*18942*/
					$k[$j++] = _Dg; /*18943*/
					$1.CTXvalstocws(); /*18943*/
					$1.addtocws(); /*18943*/
					$k[$j++] = $a([$1.unlcw]); /*18944*/
					$1.addtocws(); /*18944*/
					$1.mode = $1.A; /*18945*/
					if ($1.i != $1.msglen) { /*18955*/
						if ($get($1.numD, $1.i) >= 2) { /*18953*/
							var _Dp = $s(2); /*18949*/
							$put(_Dp, 0, $get($1.msg, $1.i)); /*18949*/
							$put(_Dp, 1, $get($1.msg, $1.i + 1)); /*18949*/
							$k[$j++] = $get($1.Avals, _Dp); /*18949*/
							$1.addtocws(); /*18949*/
							$1.i = $1.i + 2; /*18950*/
						} else { /*18953*/
							$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*18952*/
							$1.addtocws(); /*18952*/
							$1.i = $1.i + 1; /*18953*/
						} /*18953*/
					} /*18953*/
				} /*18953*/
			}; /*18958*/
			$1.encD = function() {
				for (;;) { /*19011*/
					if ($get($1.numD, $1.i) < 3) { /*19001*/
						$1.Drem = (8 - ($1.Dbits.length % 8)) % 8; /*18966*/
						$1.remcws = $get($1.numremcws, $1.j + (~~($1.Dbits.length / 8))); /*18967*/
						if ((($get($1.numremcws, ($1.j + (~~($1.Dbits.length / 8))) - 1) - 1) == 0) && ($1.i == $1.msglen)) { /*18971*/
							break; /*18971*/
						} /*18971*/
						if (((($1.i == ($1.msglen - 1)) && ($get($1.numD, $1.i) == 1)) && ($1.remcws == 1)) && ($1.Drem == 0)) { /*18975*/
							break; /*18975*/
						} /*18975*/
						if (!(((($1.i == ($1.msglen - 1)) && ($get($1.numD, $1.i) == 1)) && ($1.remcws == 1)) && (($1.Drem == 4) || ($1.Drem == 6)))) { /*18982*/
							$k[$j++] = Infinity; /*18980*/
							$aload($1.Dbits); /*18980*/
							$k[$j++] = 1; /*18980*/
							$k[$j++] = 1; /*18980*/
							$k[$j++] = 1; /*18980*/
							$k[$j++] = 1; /*18980*/
							$k[$j++] = 1; /*18980*/
							$k[$j++] = 1; /*18980*/
							$1.Dbits = $a(); /*18980*/
							$1.Drem = (8 - ($1.Dbits.length % 8)) % 8; /*18981*/
						} /*18981*/
						if (($1.Drem == 4) || ($1.Drem == 6)) { /*18993*/
							if ($get($1.numD, $1.i) >= 1) { /*18990*/
								$k[$j++] = Infinity; /*18987*/
								$aload($1.Dbits); /*18987*/
								$k[$j++] = ($get($1.msg, $1.i) - 48) + 1; /*18987*/
								$k[$j++] = 4; /*18987*/
								$1.tobin(); /*18987*/
								$aload($k[--$j]); /*18987*/
								$1.Dbits = $a(); /*18987*/
								$1.i = $1.i + 1; /*18988*/
							} else { /*18990*/
								$k[$j++] = Infinity; /*18990*/
								$aload($1.Dbits); /*18990*/
								$k[$j++] = 1; /*18990*/
								$k[$j++] = 1; /*18990*/
								$k[$j++] = 1; /*18990*/
								$k[$j++] = 1; /*18990*/
								$1.Dbits = $a(); /*18990*/
							} /*18990*/
							$1.Drem = $1.Drem - 4; /*18992*/
						} /*18992*/
						if ($1.Drem == 2) { /*18997*/
							$k[$j++] = Infinity; /*18995*/
							$aload($1.Dbits); /*18995*/
							$k[$j++] = 0; /*18995*/
							$k[$j++] = 1; /*18995*/
							$1.Dbits = $a(); /*18995*/
							$1.Drem = 0; /*18996*/
						} /*18996*/
						break; /*18999*/
					} /*18999*/
					$k[$j++] = Infinity; /*19008*/
					$aload($1.Dbits); /*19005*/
					$k[$j++] = 0; /*19006*/
					$forall($geti($1.msg, $1.i, 3), function() { /*19006*/
						var _Ex = $k[--$j]; /*19006*/
						var _Ey = $k[--$j]; /*19006*/
						$k[$j++] = (_Ey + (_Ex - 48)) * 10; /*19006*/
					}); /*19006*/
					var _Ez = $k[--$j]; /*19006*/
					$k[$j++] = (~~(_Ez / 10)) + 1; /*19007*/
					$k[$j++] = 10; /*19007*/
					$1.tobin(); /*19007*/
					$aload($k[--$j]); /*19007*/
					$1.Dbits = $a(); /*19008*/
					$1.i = $1.i + 3; /*19009*/
				} /*19009*/
				$k[$j++] = Infinity; /*19013*/
				for (var _F5 = 0, _F4 = $1.Dbits.length - 1; _F5 <= _F4; _F5 += 8) { /*19016*/
					$k[$j++] = 0; /*19015*/
					$forall($geti($1.Dbits, _F5, 8), function() { /*19015*/
						var _F8 = $k[--$j]; /*19015*/
						var _F9 = $k[--$j]; /*19015*/
						$k[$j++] = (_F9 + _F8) * 2; /*19015*/
					}); /*19015*/
					var _FA = $k[--$j]; /*19015*/
					$k[$j++] = ~~(_FA / 2); /*19015*/
				} /*19015*/
				$astore($a($counttomark())); /*19017*/
				var _FD = $k[--$j]; /*19017*/
				var _FE = $k[--$j]; /*19017*/
				$k[$j++] = _FD; /*19017*/
				$1.addtocws(); /*19017*/
				$1.mode = $1.A; /*19018*/
			}; /*19020*/
			$1.encB = function() {
				$1.p = 0; /*19023*/
				$1.bvals = $a(1480); /*19023*/
				for (;;) { /*19030*/
					if ($1.i == $1.msglen) { /*19024*/
						break; /*19024*/
					} /*19024*/
					if ($get($1.msg, $1.i) < 0) { /*19025*/
						break; /*19025*/
					} /*19025*/
					$1.lookup(); /*19026*/
					if ($k[--$j] != $1.mode) { /*19026*/
						break; /*19026*/
					} /*19026*/
					$put($1.bvals, $1.p, $get($1.msg, $1.i)); /*19027*/
					$1.p = $1.p + 1; /*19028*/
					$1.i = $1.i + 1; /*19029*/
				} /*19029*/
				$1.remcws = $get($1.numremcws, $1.j + $1.p) - 1; /*19031*/
				$k[$j++] = Infinity; /*19039*/
				if (($1.remcws == 0) && ($1.i == $1.msglen)) { /*19036*/
					$k[$j++] = 0; /*19034*/
				} else { /*19036*/
					if ($1.p < 250) { /*19036*/
						$k[$j++] = $1.p; /*19036*/
					} else { /*19036*/
						$k[$j++] = (~~($1.p / 250)) + 249; /*19036*/
						$k[$j++] = $1.p % 250; /*19036*/
					} /*19036*/
				} /*19036*/
				$aload($geti($1.bvals, 0, $1.p)); /*19038*/
				$1.bvals = $a(); /*19039*/
				$k[$j++] = $1.bvals; /*19040*/
				$1.addtocws(); /*19040*/
				$1.mode = $1.A; /*19041*/
			}; /*19042*/
			$1.cws = $a(1480); /*19045*/
			$1.mode = $1.A; /*19046*/
			$1.i = 0; /*19046*/
			$1.j = 0; /*19046*/
			for (;;) { /*19049*/
				if ($1.i >= $1.msglen) { /*19047*/
					break; /*19047*/
				} /*19047*/
				$1[$get($a(["encA", "encCTX", "encCTX", "encCTX", "encD", "encB"]), $1.mode)](); /*19048*/
			} /*19048*/
			$1.cws = $geti($1.cws, 0, $1.j); /*19050*/
		} /*19050*/
		$1.i = 0; /*19055*/
		for (;;) { /*19075*/
			$1.m = $get($1.metrics, $1.i); /*19057*/
			$1.vers = $get($1.m, 0); /*19058*/
			$1.rows = $get($1.m, 1); /*19059*/
			$1.cols = $get($1.m, 2); /*19060*/
			$1.dcol = $get($1.m, 3); /*19061*/
			$1.dcws = $get($1.m, 4); /*19062*/
			$1.rscw = $get($1.m, 5); /*19063*/
			$1.rsbl = $get($1.m, 6); /*19064*/
			$1.riso = $get($1.m, 7); /*19065*/
			$1.risi = $get($1.m, 8); /*19066*/
			$1.risl = $get($1.m, 9); /*19067*/
			$1.dcpb = ~~($1.dcws / $1.rsbl); /*19068*/
			$1.ecpb = ~~($1.rscw / $1.rsbl); /*19069*/
			$1.okay = true; /*19070*/
			if ($ne($1.version, "unset") && $ne($1.version, $1.vers)) { /*19071*/
				$1.okay = false; /*19071*/
			} /*19071*/
			if ($1.cws.length > $1.dcws) { /*19072*/
				$1.okay = false; /*19072*/
			} /*19072*/
			if ($1.okay) { /*19073*/
				break; /*19073*/
			} /*19073*/
			$1.i = $1.i + 1; /*19074*/
		} /*19074*/
		if (!$1.stype) { /*19081*/
			$k[$j++] = Infinity; /*19079*/
			$aload($1.cws); /*19079*/
			for (var _GZ = 0, _Ga = $1.dcws - $1.cws.length; _GZ < _Ga; _GZ++) { /*19079*/
				$k[$j++] = 129; /*19079*/
			} /*19079*/
			$1.cws = $a(); /*19079*/
		} else { /*19081*/
			$k[$j++] = Infinity; /*19081*/
			for (var _Ge = 0, _Gf = $1.dcws - $1.cws.length; _Ge < _Gf; _Ge++) { /*19081*/
				$k[$j++] = 0; /*19081*/
			} /*19081*/
			$aload($1.cws); /*19081*/
			$1.cws = $a(); /*19081*/
		} /*19081*/
		$1.cwbs = $a($1.rsbl); /*19085*/
		$1.ecbs = $a($1.rsbl); /*19086*/
		for (var _Go = 0, _Gn = $1.rsbl - 1; _Go <= _Gn; _Go += 1) { /*19095*/
			$1.i = _Go; /*19088*/
			$1.cwb = $a($1.dcpb); /*19089*/
			for (var _Gt = 0, _Gs = $1.dcpb - 1; _Gt <= _Gs; _Gt += 1) { /*19093*/
				$1.j = _Gt; /*19091*/
				$put($1.cwb, $1.j, $get($1.cws, ($1.j * $1.rsbl) + $1.i)); /*19092*/
			} /*19092*/
			$put($1.cwbs, $1.i, $1.cwb); /*19094*/
		} /*19094*/
		var _H5 = $1.stype ? 32 : 256; /*19098*/
		$1.gf = _H5; /*19098*/
		$1["gf-1"] = $1.gf - 1; /*19099*/
		var _H8 = $1.stype ? 37 : 301; /*19100*/
		$1.pm = _H8; /*19100*/
		$k[$j++] = Infinity; /*19101*/
		$k[$j++] = 1; /*19101*/
		for (var _HA = 0, _HB = $1["gf-1"]; _HA < _HB; _HA++) { /*19101*/
			var _HC = $k[--$j]; /*19101*/
			var _HD = _HC * 2; /*19101*/
			$k[$j++] = _HC; /*19101*/
			$k[$j++] = _HD; /*19101*/
			if (_HD >= $1.gf) { /*19101*/
				var _HG = $k[--$j]; /*19101*/
				$k[$j++] = _HG ^ $1.pm; /*19101*/
			} /*19101*/
		} /*19101*/
		$1.rsalog = $a(); /*19101*/
		$1.rslog = $a($1.gf); /*19102*/
		for (var _HM = 1, _HL = $1["gf-1"]; _HM <= _HL; _HM += 1) { /*19103*/
			$put($1.rslog, $get($1.rsalog, _HM), _HM); /*19103*/
		} /*19103*/
		$1.rsprod = function() {
			var _HQ = $k[--$j]; /*19105*/
			var _HR = $k[--$j]; /*19105*/
			$k[$j++] = _HR; /*19109*/
			$k[$j++] = _HQ; /*19109*/
			if ((_HQ != 0) && (_HR != 0)) { /*19108*/
				var _HU = $get($1.rslog, $k[--$j]); /*19106*/
				var _Ha = $get($1.rsalog, (_HU + $get($1.rslog, $k[--$j])) % $1["gf-1"]); /*19106*/
				$k[$j++] = _Ha; /*19106*/
			} else { /*19108*/
				$j -= 2; /*19108*/
				$k[$j++] = 0; /*19108*/
			} /*19108*/
		}; /*19110*/
		$k[$j++] = Infinity; /*19113*/
		$k[$j++] = 1; /*19113*/
		for (var _Hc = 0, _Hd = $1.ecpb; _Hc < _Hd; _Hc++) { /*19113*/
			$k[$j++] = 0; /*19113*/
		} /*19113*/
		$1.coeffs = $a(); /*19113*/
		for (var _Hh = 0, _Hg = $1.ecpb - 1; _Hh <= _Hg; _Hh += 1) { /*19122*/
			$1.i = _Hh; /*19115*/
			$put($1.coeffs, $1.i + 1, $get($1.coeffs, $1.i)); /*19116*/
			for (var _Ho = $1.i; _Ho >= 1; _Ho -= 1) { /*19120*/
				$1.j = _Ho; /*19118*/
				$k[$j++] = $1.coeffs; /*19119*/
				$k[$j++] = $1.j; /*19119*/
				$k[$j++] = $get($1.coeffs, $1.j - 1); /*19119*/
				$k[$j++] = $get($1.coeffs, $1.j); /*19119*/
				$k[$j++] = $get($1.rsalog, $1.i); /*19119*/
				$1.rsprod(); /*19119*/
				var _I0 = $k[--$j]; /*19119*/
				var _I1 = $k[--$j]; /*19119*/
				var _I2 = $k[--$j]; /*19119*/
				$put($k[--$j], _I2, $xo(_I1, _I0)); /*19119*/
			} /*19119*/
			$k[$j++] = $1.coeffs; /*19121*/
			$k[$j++] = 0; /*19121*/
			$k[$j++] = $get($1.coeffs, 0); /*19121*/
			$k[$j++] = $get($1.rsalog, $1.i); /*19121*/
			$1.rsprod(); /*19121*/
			var _IA = $k[--$j]; /*19121*/
			var _IB = $k[--$j]; /*19121*/
			$put($k[--$j], _IB, _IA); /*19121*/
		} /*19121*/
		$1.coeffs = $geti($1.coeffs, 0, $1.coeffs.length - 1); /*19123*/
		for (var _II = 0, _IH = $1.cwbs.length - 1; _II <= _IH; _II += 1) { /*19138*/
			$1.i = _II; /*19127*/
			$k[$j++] = Infinity; /*19128*/
			$aload($get($1.cwbs, $1.i)); /*19128*/
			for (var _IN = 0, _IO = $1.ecpb; _IN < _IO; _IN++) { /*19128*/
				$k[$j++] = 0; /*19128*/
			} /*19128*/
			$1.rscws = $a(); /*19128*/
			for (var _IS = 0, _IR = $1.dcpb - 1; _IS <= _IR; _IS += 1) { /*19136*/
				$1.m = _IS; /*19130*/
				$1.k = $get($1.rscws, $1.m); /*19131*/
				for (var _IY = 0, _IX = $1.ecpb - 1; _IY <= _IX; _IY += 1) { /*19135*/
					$1.j = _IY; /*19133*/
					$k[$j++] = $1.rscws; /*19134*/
					$k[$j++] = ($1.m + $1.j) + 1; /*19134*/
					$k[$j++] = $get($1.coeffs, ($1.ecpb - $1.j) - 1); /*19134*/
					$k[$j++] = $1.k; /*19134*/
					$1.rsprod(); /*19134*/
					var _Il = $k[--$j]; /*19134*/
					var _Im = $k[--$j]; /*19134*/
					$put($k[--$j], _Im, $xo(_Il, $get($1.rscws, ($1.m + $1.j) + 1))); /*19134*/
				} /*19134*/
			} /*19134*/
			$put($1.ecbs, $1.i, $geti($1.rscws, $1.dcpb, $1.ecpb)); /*19137*/
		} /*19137*/
		$k[$j++] = Infinity; /*19141*/
		$aload($1.cws); /*19141*/
		for (var _Iw = 0, _Ix = $1.rscw; _Iw < _Ix; _Iw++) { /*19141*/
			$k[$j++] = 0; /*19141*/
		} /*19141*/
		$1.cws = $a(); /*19141*/
		for (var _J1 = 0, _J0 = $1.rscw - 1; _J1 <= _J0; _J1 += 1) { /*19145*/
			$1.i = _J1; /*19143*/
			$put($1.cws, $1.dcws + $1.i, $get($get($1.ecbs, $1.i % $1.rsbl), ~~($1.i / $1.rsbl))); /*19144*/
		} /*19144*/
		var _JF = $1.stype ? 5 : 8; /*19148*/
		$1.mmat = $a(($1.dcws + $1.rscw) * _JF); /*19148*/
		$1.r = 0; /*19149*/
		$1.c = 0; /*19149*/
		var _JI = $1.stype ? 2 : 1; /*19150*/
		for (var _JL = 0, _JM = _JI, _JK = $1.cws.length - 1; _JM < 0 ? _JL >= _JK : _JL <= _JK; _JL += _JM) { /*19171*/
			$1.i = _JL; /*19151*/
			if (!$1.stype) { /*19165*/
				var _JP = $strcpy($s(8), "00000000"); /*19153*/
				var _JU = $cvrs($s(8), $get($1.cws, $1.i), 2); /*19153*/
				$puti(_JP, 8 - _JU.length, _JU); /*19154*/
				$k[$j++] = _JP; /*19154*/
				$k[$j++] = Infinity; /*19154*/
				var _JV = $k[--$j]; /*19154*/
				var _JW = $k[--$j]; /*19154*/
				$k[$j++] = _JV; /*19154*/
				$forall(_JW, function() { /*19154*/
					var _JX = $k[--$j]; /*19154*/
					$k[$j++] = _JX - 48; /*19154*/
				}); /*19154*/
				var _JY = $a(); /*19154*/
				$1.top = $geti(_JY, 0, 4); /*19155*/
				$1.bot = $geti(_JY, 4, 4); /*19156*/
			} else { /*19165*/
				var _Jc = $strcpy($s(5), "00000"); /*19158*/
				var _Jh = $cvrs($s(5), $get($1.cws, $1.i), 2); /*19158*/
				$puti(_Jc, 5 - _Jh.length, _Jh); /*19159*/
				$k[$j++] = _Jc; /*19159*/
				$k[$j++] = Infinity; /*19159*/
				var _Ji = $k[--$j]; /*19159*/
				var _Jj = $k[--$j]; /*19159*/
				$k[$j++] = _Ji; /*19159*/
				$forall(_Jj, function() { /*19159*/
					var _Jk = $k[--$j]; /*19159*/
					$k[$j++] = _Jk - 48; /*19159*/
				}); /*19159*/
				$1.c1 = $a(); /*19160*/
				var _Jn = $strcpy($s(5), "00000"); /*19161*/
				var _Js = $cvrs($s(5), $get($1.cws, $1.i + 1), 2); /*19161*/
				$puti(_Jn, 5 - _Js.length, _Js); /*19162*/
				$k[$j++] = _Jn; /*19162*/
				$k[$j++] = Infinity; /*19162*/
				var _Jt = $k[--$j]; /*19162*/
				var _Ju = $k[--$j]; /*19162*/
				$k[$j++] = _Jt; /*19162*/
				$forall(_Ju, function() { /*19162*/
					var _Jv = $k[--$j]; /*19162*/
					$k[$j++] = _Jv - 48; /*19162*/
				}); /*19162*/
				$1.c2 = $a(); /*19163*/
				$k[$j++] = Infinity; /*19164*/
				$aload($geti($1.c1, 0, 3)); /*19164*/
				$aload($geti($1.c2, 0, 2)); /*19164*/
				$1.top = $a(); /*19164*/
				$k[$j++] = Infinity; /*19165*/
				$aload($geti($1.c1, 3, 2)); /*19165*/
				$aload($geti($1.c2, 2, 3)); /*19165*/
				$1.bot = $a(); /*19165*/
			} /*19165*/
			$puti($1.mmat, ($1.r * $1.dcol) + $1.c, $1.top); /*19167*/
			$puti($1.mmat, (($1.r + 1) * $1.dcol) + $1.c, $1.bot); /*19168*/
			$1.c = $1.c + $1.top.length; /*19169*/
			if ($1.c == $1.dcol) { /*19170*/
				$1.c = 0; /*19170*/
				$1.r = $1.r + 2; /*19170*/
			} /*19170*/
		} /*19170*/
		$1.mmv = function() {
			var _KN = $k[--$j]; /*19174*/
			var _KO = $k[--$j]; /*19174*/
			$k[$j++] = _KO + (_KN * $1.cols); /*19174*/
		}; /*19174*/
		$k[$j++] = Infinity; /*19175*/
		for (var _KR = 0, _KS = $1.rows * $1.cols; _KR < _KS; _KR++) { /*19175*/
			$k[$j++] = -1; /*19175*/
		} /*19175*/
		$1.pixs = $a(); /*19175*/
		var _Ky = $a([function() {
			for (var _KV = 0, _KW = $1.cols; _KV < _KW; _KV++) { /*19179*/
				$k[$j++] = 0; /*19179*/
			} /*19179*/
		}, function() {
			for (var _KY = 0, _KZ = $1.cols; _KY < _KZ; _KY++) { /*19180*/
				$k[$j++] = 1; /*19180*/
			} /*19180*/
		}, function() {
			$k[$j++] = 0; /*19181*/
			for (var _Kb = 0, _Kc = $1.cols - 2; _Kb < _Kc; _Kb++) { /*19181*/
				$k[$j++] = 1; /*19181*/
			} /*19181*/
			$k[$j++] = 0; /*19181*/
		}, function() {
			$k[$j++] = 0; /*19182*/
			$k[$j++] = 1; /*19182*/
			for (var _Ke = 0, _Kf = $1.cols - 4; _Ke < _Kf; _Ke++) { /*19182*/
				$k[$j++] = 0; /*19182*/
			} /*19182*/
			$k[$j++] = 1; /*19182*/
			$k[$j++] = 0; /*19182*/
		}, function() {
			for (var _Kh = 0, _Ki = ~~(($1.cols - 1) / 2); _Kh < _Ki; _Kh++) { /*19183*/
				$k[$j++] = -1; /*19183*/
			} /*19183*/
			$k[$j++] = 1; /*19183*/
			for (var _Kk = 0, _Kl = ~~(($1.cols - 1) / 2); _Kk < _Kl; _Kk++) { /*19183*/
				$k[$j++] = -1; /*19183*/
			} /*19183*/
		}, function() {
			for (var _Kn = 0, _Ko = ~~(($1.cols - 1) / 2); _Kn < _Ko; _Kn++) { /*19184*/
				$k[$j++] = -1; /*19184*/
			} /*19184*/
			$k[$j++] = 0; /*19184*/
			for (var _Kq = 0, _Kr = ~~(($1.cols - 1) / 2); _Kq < _Kr; _Kq++) { /*19184*/
				$k[$j++] = -1; /*19184*/
			} /*19184*/
		}, function() {
			$k[$j++] = 1; /*19185*/
			for (var _Kt = 0, _Ku = $1.cols - 2; _Kt < _Ku; _Kt++) { /*19185*/
				$k[$j++] = 0; /*19185*/
			} /*19185*/
			$k[$j++] = 1; /*19185*/
		}, function() {
			$k[$j++] = 1; /*19186*/
			$k[$j++] = 0; /*19186*/
			for (var _Kw = 0, _Kx = $1.cols - 4; _Kw < _Kx; _Kw++) { /*19186*/
				$k[$j++] = 1; /*19186*/
			} /*19186*/
			$k[$j++] = 0; /*19186*/
			$k[$j++] = 1; /*19186*/
		}]); /*19186*/
		$1.artifact = _Ky; /*19187*/
		var _Kz = {
			A: "121343",
			B: "12134343",
			C: "12121343",
			D: "1213434343",
			E: "1212134343",
			F: "1212121343",
			G: "121213434343",
			H: "121212134343",
			S: "56661278",
			T: "5666666666127878"
		}; /*19198*/
		$1.cpat = $get(_Kz, $geti($1.vers, 0, 1)); /*19199*/
		$k[$j++] = $1.pixs; /*19200*/
		$k[$j++] = 0; /*19200*/
		$k[$j++] = ~~(($1.rows - $1.cpat.length) / 2); /*19200*/
		$1.mmv(); /*19200*/
		$k[$j++] = Infinity; /*19201*/
		$forall($1.cpat, function() { /*19201*/
			$get($1.artifact, $k[--$j] - 49)(); /*19201*/
		}); /*19201*/
		var _LA = $a(); /*19201*/
		var _LB = $k[--$j]; /*19201*/
		$puti($k[--$j], _LB, _LA); /*19201*/
		for (var _LF = 0, _LE = $1.risl - 1; _LF <= _LE; _LF += 1) { /*19216*/
			$1.i = _LF; /*19205*/
			for (var _LK = $1.riso, _LL = $1.risi, _LJ = $1.cols - 1; _LL < 0 ? _LK >= _LJ : _LK <= _LJ; _LK += _LL) { /*19215*/
				$1.j = _LK; /*19207*/
				var _LN = (($1.i % 12) == 0) ? 1 : 0; /*19208*/
				var _LO = $a([1, _LN]); /*19208*/
				$k[$j++] = _LO; /*19209*/
				$k[$j++] = _LO; /*19209*/
				$k[$j++] = $1.pixs; /*19209*/
				$k[$j++] = $1.j; /*19209*/
				$k[$j++] = $1.i; /*19209*/
				$1.mmv(); /*19209*/
				var _LS = $k[--$j]; /*19210*/
				var _LT = $k[--$j]; /*19210*/
				$puti(_LT, _LS, $k[--$j]); /*19210*/
				if ($1.i != ($1.risl - 1)) { /*19214*/
					$k[$j++] = $1.pixs; /*19212*/
					$k[$j++] = ($1.cols - $1.j) - 2; /*19212*/
					$k[$j++] = ($1.rows - $1.i) - 1; /*19212*/
					$1.mmv(); /*19212*/
					var _Lc = $k[--$j]; /*19213*/
					var _Ld = $k[--$j]; /*19213*/
					$puti(_Ld, _Lc, $k[--$j]); /*19213*/
				} else { /*19214*/
					$j--; /*19214*/
				} /*19214*/
			} /*19214*/
		} /*19214*/
		var _MI = {
			A: $a([$a([12, 5])]),
			B: $a([$a([16, 7])]),
			C: $a([$a([26, 12])]),
			D: $a([]),
			E: $a([$a([26, 23])]),
			F: $a([$a([26, 32]), $a([70, 32]), $a([26, 34]), $a([70, 34])]),
			G: $a([$a([27, 48]), $a([69, 48])]),
			H: $a([$a([26, 70]), $a([66, 70]), $a([106, 70]), $a([26, 72]), $a([66, 72]), $a([106, 72])]),
			"S-10": $a([]),
			"S-20": $a([$a([10, 4])]),
			"S-30": $a([$a([15, 4]), $a([15, 6])]),
			"T-16": $a([$a([8, 10])]),
			"T-32": $a([$a([16, 10]), $a([16, 12])]),
			"T-48": $a([$a([24, 10]), $a([24, 12]), $a([24, 14])])
		}; /*19233*/
		$forall($get(_MI, $1.vers), function() { /*19234*/
			var _MM = $k[--$j]; /*19234*/
			$k[$j++] = $1.pixs; /*19234*/
			$aload(_MM); /*19234*/
			$1.mmv(); /*19234*/
			var _MN = $k[--$j]; /*19234*/
			$put($k[--$j], _MN, 1); /*19234*/
		}); /*19234*/
		$1.j = 0; /*19237*/
		for (var _MR = 0, _MQ = $1.pixs.length - 1; _MR <= _MQ; _MR += 1) { /*19244*/
			$1.i = _MR; /*19239*/
			if ($get($1.pixs, $1.i) == -1) { /*19243*/
				$put($1.pixs, $1.i, $get($1.mmat, $1.j)); /*19241*/
				$1.j = $1.j + 1; /*19242*/
			} /*19242*/
		} /*19242*/
		var _Mh = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.cols,
			pixy: $1.rows,
			height: ($1.rows / 72) * 2,
			width: ($1.cols / 72) * 2,
			opt: $1.options
		}; /*19254*/
		$k[$j++] = _Mh; /*19257*/
		if (!$1.dontdraw) { /*19257*/
			$0.renmatrix(); /*19257*/
		} /*19257*/
	};
	$0.hanxin = function() {
		var $1 = {}; /*19284*/
		$1.options = $k[--$j]; /*19286*/
		$1.barcode = $k[--$j]; /*19287*/
		$1.dontdraw = false; /*19289*/
		$1.version = "unset"; /*19290*/
		$1.eclevel = "unset"; /*19291*/
		$1.parse = false; /*19292*/
		$1.parsefnc = false; /*19293*/
		$1.mask = -1; /*19294*/
		$forall($1.options, function() { /*19305*/
			var _3 = $k[--$j]; /*19305*/
			$1[$k[--$j]] = _3; /*19305*/
		}); /*19305*/
		$1.mask = ~~$1.mask; /*19307*/
		$1.barlen = $1.barcode.length; /*19330*/
		var _7 = {

		}; /*19335*/
		$1.fncvals = _7; /*19335*/
		$1.msg = $a($1.barlen); /*19336*/
		$1.i = 0; /*19337*/
		$1.j = 0; /*19337*/
		for (;;) { /*19351*/
			if ($1.i == $1.barlen) { /*19338*/
				break; /*19338*/
			} /*19338*/
			$1.char = $get($1.barcode, $1.i); /*19339*/
			if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*19347*/
				if ($get($1.barcode, $1.i + 1) != 94) { /*19345*/
					$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*19342*/
					$1.i = $1.i + 4; /*19343*/
				} else { /*19345*/
					$1.i = $1.i + 1; /*19345*/
				} /*19345*/
			} /*19345*/
			$put($1.msg, $1.j, $1.char); /*19348*/
			$1.i = $1.i + 1; /*19349*/
			$1.j = $1.j + 1; /*19350*/
		} /*19350*/
		$1.msg = $geti($1.msg, 0, $1.j); /*19352*/
		$1.msglen = $1.msg.length; /*19353*/
		if ($eq($1.eclevel, "unset")) { /*19356*/
			$1.eclevel = "L2"; /*19356*/
		} /*19356*/
		$1.tobin = function() {
			var _e = $s($k[--$j]); /*19359*/
			$k[$j++] = _e; /*19359*/
			for (var _g = 0, _f = _e.length - 1; _g <= _f; _g += 1) { /*19359*/
				var _h = $k[--$j]; /*19359*/
				$put(_h, _g, 48); /*19359*/
				$k[$j++] = _h; /*19359*/
			} /*19359*/
			var _i = $k[--$j]; /*19360*/
			var _l = $cvrs($s(_i.length), $k[--$j], 2); /*19360*/
			$puti(_i, _i.length - _l.length, _l); /*19361*/
			$k[$j++] = _i; /*19361*/
		}; /*19362*/
		$1.bits = $s((4 + 13) + ($1.msglen * 8)); /*19365*/
		$puti($1.bits, 0, "0011"); /*19366*/
		$k[$j++] = $1.bits; /*19367*/
		$k[$j++] = 4; /*19367*/
		$k[$j++] = $1.msglen; /*19367*/
		$k[$j++] = 13; /*19367*/
		$1.tobin(); /*19367*/
		var _r = $k[--$j]; /*19367*/
		var _s = $k[--$j]; /*19367*/
		$puti($k[--$j], _s, _r); /*19367*/
		for (var _w = 0, _v = $1.msglen - 1; _w <= _v; _w += 1) { /*19371*/
			$1.i = _w; /*19369*/
			$k[$j++] = $1.bits; /*19370*/
			$k[$j++] = 17 + ($1.i * 8); /*19370*/
			$k[$j++] = $get($1.msg, $1.i); /*19370*/
			$k[$j++] = 8; /*19370*/
			$1.tobin(); /*19370*/
			var _12 = $k[--$j]; /*19370*/
			var _13 = $k[--$j]; /*19370*/
			$puti($k[--$j], _13, _12); /*19370*/
		} /*19370*/
		$1.metrics = $a([$a(["1", 23, -1, 0, 205, $a([1, 21, 4]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 17, 8]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 13, 12]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 9, 16]), $a([0, -1, -1]), $a([0, -1, -1])]), $a(["2", 25, -1, 0, 301, $a([1, 31, 6]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 25, 12]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 19, 18]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 15, 22]), $a([0, -1, -1]), $a([0, -1, -1])]), $a(["3", 27, -1, 0, 405, $a([1, 42, 8]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 34, 16]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 26, 24]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 20, 30]), $a([0, -1, -1]), $a([0, -1, -1])]), $a(["4", 29, 14, 1, 439, $a([1, 46, 8]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 38, 16]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 30, 24]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 22, 32]), $a([0, -1, -1]), $a([0, -1, -1])]), $a(["5", 31, 16, 1, 555, $a([1, 57, 12]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 49, 20]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 37, 32]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 14, 20]), $a([1, 13, 22]), $a([0, -1, -1])]), $a(["6", 33, 16, 1, 675, $a([1, 70, 14]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 58, 26]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 24, 20]), $a([1, 22, 18]), $a([0, -1, -1]), $a([1, 16, 24]), $a([1, 18, 26]), $a([0, -1, -1])]), $a(["7", 35, 17, 1, 805, $a([1, 84, 16]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 70, 30]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 26, 22]), $a([1, 28, 24]), $a([0, -1, -1]), $a([2, 14, 20]), $a([1, 12, 20]), $a([0, -1, -1])]), $a(["8", 37, 18, 1, 943, $a([1, 99, 18]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 40, 18]), $a([1, 41, 18]), $a([0, -1, -1]), $a([1, 31, 26]), $a([1, 32, 28]), $a([0, -1, -1]), $a([2, 16, 24]), $a([1, 15, 22]), $a([0, -1, -1])]), $a(["9", 39, 19, 1, 1089, $a([1, 114, 22]), $a([0, -1, -1]), $a([0, -1, -1]), $a([2, 48, 20]), $a([0, -1, -1]), $a([0, -1, -1]), $a([2, 24, 20]), $a([1, 26, 22]), $a([0, -1, -1]), $a([2, 18, 28]), $a([1, 18, 26]), $a([0, -1, -1])]), $a(["10", 41, 20, 1, 1243, $a([1, 131, 24]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 52, 22]), $a([1, 57, 24]), $a([0, -1, -1]), $a([2, 27, 24]), $a([1, 29, 24]), $a([0, -1, -1]), $a([2, 21, 32]), $a([1, 19, 30]), $a([0, -1, -1])]), $a(["11", 43, 14, 2, 1289, $a([1, 135, 26]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 56, 24]), $a([1, 57, 24]), $a([0, -1, -1]), $a([2, 28, 24]), $a([1, 31, 26]), $a([0, -1, -1]), $a([2, 22, 32]), $a([1, 21, 32]), $a([0, -1, -1])]), $a(["12", 45, 15, 2, 1455, $a([1, 153, 28]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 62, 26]), $a([1, 65, 28]), $a([0, -1, -1]), $a([2, 32, 28]), $a([1, 33, 28]), $a([0, -1, -1]), $a([3, 17, 26]), $a([1, 22, 30]), $a([0, -1, -1])]), $a(["13", 47, 16, 2, 1629, $a([1, 86, 16]), $a([1, 85, 16]), $a([0, -1, -1]), $a([1, 71, 30]), $a([1, 72, 30]), $a([0, -1, -1]), $a([2, 37, 32]), $a([1, 35, 30]), $a([0, -1, -1]), $a([3, 20, 30]), $a([1, 21, 32]), $a([0, -1, -1])]), $a(["14", 49, 16, 2, 1805, $a([1, 94, 18]), $a([1, 95, 18]), $a([0, -1, -1]), $a([2, 51, 22]), $a([1, 55, 24]), $a([0, -1, -1]), $a([3, 30, 26]), $a([1, 31, 26]), $a([0, -1, -1]), $a([4, 18, 28]), $a([1, 17, 24]), $a([0, -1, -1])]), $a(["15", 51, 17, 2, 1995, $a([1, 104, 20]), $a([1, 105, 20]), $a([0, -1, -1]), $a([2, 57, 24]), $a([1, 61, 26]), $a([0, -1, -1]), $a([3, 33, 28]), $a([1, 36, 30]), $a([0, -1, -1]), $a([4, 20, 30]), $a([1, 19, 30]), $a([0, -1, -1])]), $a(["16", 53, 17, 2, 2187, $a([1, 115, 22]), $a([1, 114, 22]), $a([0, -1, -1]), $a([2, 65, 28]), $a([1, 61, 26]), $a([0, -1, -1]), $a([3, 38, 32]), $a([1, 33, 30]), $a([0, -1, -1]), $a([5, 19, 28]), $a([1, 14, 24]), $a([0, -1, -1])]), $a(["17", 55, 18, 2, 2393, $a([1, 126, 24]), $a([1, 125, 24]), $a([0, -1, -1]), $a([2, 70, 30]), $a([1, 69, 30]), $a([0, -1, -1]), $a([4, 33, 28]), $a([1, 29, 26]), $a([0, -1, -1]), $a([5, 20, 30]), $a([1, 19, 30]), $a([0, -1, -1])]), $a(["18", 57, 19, 2, 2607, $a([1, 136, 26]), $a([1, 137, 26]), $a([0, -1, -1]), $a([3, 56, 24]), $a([1, 59, 26]), $a([0, -1, -1]), $a([5, 35, 30]), $a([0, -1, -1]), $a([0, -1, -1]), $a([6, 18, 28]), $a([1, 21, 28]), $a([0, -1, -1])]), $a(["19", 59, 20, 2, 2829, $a([1, 148, 28]), $a([1, 149, 28]), $a([0, -1, -1]), $a([3, 61, 26]), $a([1, 64, 28]), $a([0, -1, -1]), $a([7, 24, 20]), $a([1, 23, 22]), $a([0, -1, -1]), $a([6, 20, 30]), $a([1, 21, 32]), $a([0, -1, -1])]), $a(["20", 61, 20, 2, 3053, $a([3, 107, 20]), $a([0, -1, -1]), $a([0, -1, -1]), $a([3, 65, 28]), $a([1, 72, 30]), $a([0, -1, -1]), $a([7, 26, 22]), $a([1, 23, 22]), $a([0, -1, -1]), $a([7, 19, 28]), $a([1, 20, 32]), $a([0, -1, -1])]), $a(["21", 63, 21, 2, 3291, $a([3, 115, 22]), $a([0, -1, -1]), $a([0, -1, -1]), $a([4, 56, 24]), $a([1, 63, 28]), $a([0, -1, -1]), $a([7, 28, 24]), $a([1, 25, 22]), $a([0, -1, -1]), $a([8, 18, 28]), $a([1, 21, 22]), $a([0, -1, -1])]), $a(["22", 65, 16, 3, 3383, $a([2, 116, 22]), $a([1, 122, 24]), $a([0, -1, -1]), $a([4, 56, 24]), $a([1, 72, 30]), $a([0, -1, -1]), $a([7, 28, 24]), $a([1, 32, 26]), $a([0, -1, -1]), $a([8, 18, 28]), $a([1, 24, 30]), $a([0, -1, -1])]), $a(["23", 67, 17, 3, 3631, $a([3, 127, 24]), $a([0, -1, -1]), $a([0, -1, -1]), $a([5, 51, 22]), $a([1, 62, 26]), $a([0, -1, -1]), $a([7, 30, 26]), $a([1, 35, 26]), $a([0, -1, -1]), $a([8, 20, 30]), $a([1, 21, 32]), $a([0, -1, -1])]), $a(["24", 69, 17, 3, 3887, $a([2, 135, 26]), $a([1, 137, 26]), $a([0, -1, -1]), $a([5, 56, 24]), $a([1, 59, 26]), $a([0, -1, -1]), $a([7, 33, 28]), $a([1, 30, 28]), $a([0, -1, -1]), $a([11, 16, 24]), $a([1, 19, 26]), $a([0, -1, -1])]), $a(["25", 71, 18, 3, 4151, $a([3, 105, 20]), $a([1, 121, 22]), $a([0, -1, -1]), $a([5, 61, 26]), $a([1, 57, 26]), $a([0, -1, -1]), $a([9, 28, 24]), $a([1, 28, 22]), $a([0, -1, -1]), $a([10, 19, 28]), $a([1, 18, 30]), $a([0, -1, -1])]), $a(["26", 73, 18, 3, 4423, $a([2, 157, 30]), $a([1, 150, 28]), $a([0, -1, -1]), $a([5, 65, 28]), $a([1, 61, 26]), $a([0, -1, -1]), $a([8, 33, 28]), $a([1, 34, 30]), $a([0, -1, -1]), $a([10, 19, 28]), $a([2, 15, 26]), $a([0, -1, -1])]), $a(["27", 75, 19, 3, 4703, $a([3, 126, 24]), $a([1, 115, 22]), $a([0, -1, -1]), $a([7, 51, 22]), $a([1, 54, 22]), $a([0, -1, -1]), $a([8, 35, 30]), $a([1, 37, 30]), $a([0, -1, -1]), $a([15, 15, 22]), $a([1, 10, 22]), $a([0, -1, -1])]), $a(["28", 77, 19, 3, 4991, $a([4, 105, 20]), $a([1, 103, 20]), $a([0, -1, -1]), $a([7, 56, 24]), $a([1, 45, 18]), $a([0, -1, -1]), $a([10, 31, 26]), $a([1, 27, 26]), $a([0, -1, -1]), $a([10, 17, 26]), $a([3, 20, 28]), $a([1, 21, 28])]), $a(["29", 79, 20, 3, 5287, $a([3, 139, 26]), $a([1, 137, 28]), $a([0, -1, -1]), $a([6, 66, 28]), $a([1, 66, 30]), $a([0, -1, -1]), $a([9, 36, 30]), $a([1, 34, 32]), $a([0, -1, -1]), $a([13, 19, 28]), $a([1, 17, 32]), $a([0, -1, -1])]), $a(["30", 81, 20, 3, 5591, $a([6, 84, 16]), $a([1, 82, 16]), $a([0, -1, -1]), $a([6, 70, 30]), $a([1, 68, 30]), $a([0, -1, -1]), $a([7, 35, 30]), $a([3, 33, 28]), $a([1, 32, 28]), $a([13, 20, 30]), $a([1, 20, 28]), $a([0, -1, -1])]), $a(["31", 83, 21, 3, 5903, $a([5, 105, 20]), $a([1, 94, 18]), $a([0, -1, -1]), $a([6, 74, 32]), $a([1, 71, 30]), $a([0, -1, -1]), $a([11, 33, 28]), $a([1, 34, 32]), $a([0, -1, -1]), $a([13, 19, 28]), $a([3, 16, 26]), $a([0, -1, -1])]), $a(["32", 85, 17, 4, 6033, $a([4, 127, 24]), $a([1, 126, 24]), $a([0, -1, -1]), $a([7, 66, 28]), $a([1, 66, 30]), $a([0, -1, -1]), $a([12, 30, 24]), $a([1, 24, 28]), $a([1, 24, 30]), $a([15, 19, 28]), $a([1, 17, 32]), $a([0, -1, -1])]), $a(["33", 87, 17, 4, 6353, $a([7, 84, 16]), $a([1, 78, 16]), $a([0, -1, -1]), $a([7, 70, 30]), $a([1, 66, 28]), $a([0, -1, -1]), $a([12, 33, 28]), $a([1, 32, 30]), $a([0, -1, -1]), $a([14, 21, 32]), $a([1, 24, 28]), $a([0, -1, -1])]), $a(["34", 89, 18, 4, 6689, $a([5, 117, 22]), $a([1, 117, 24]), $a([0, -1, -1]), $a([8, 66, 28]), $a([1, 58, 26]), $a([0, -1, -1]), $a([11, 38, 32]), $a([1, 34, 32]), $a([0, -1, -1]), $a([15, 20, 30]), $a([2, 17, 26]), $a([0, -1, -1])]), $a(["35", 91, 18, 4, 7025, $a([4, 148, 28]), $a([1, 146, 28]), $a([0, -1, -1]), $a([8, 68, 30]), $a([1, 70, 24]), $a([0, -1, -1]), $a([10, 36, 32]), $a([3, 38, 28]), $a([0, -1, -1]), $a([16, 19, 28]), $a([3, 16, 26]), $a([0, -1, -1])]), $a(["36", 93, 19, 4, 7377, $a([4, 126, 24]), $a([2, 135, 26]), $a([0, -1, -1]), $a([8, 70, 28]), $a([2, 43, 26]), $a([0, -1, -1]), $a([13, 32, 28]), $a([2, 41, 30]), $a([0, -1, -1]), $a([17, 19, 28]), $a([3, 15, 26]), $a([0, -1, -1])]), $a(["37", 95, 19, 4, 7729, $a([5, 136, 26]), $a([1, 132, 24]), $a([0, -1, -1]), $a([5, 67, 30]), $a([4, 68, 28]), $a([1, 69, 28]), $a([14, 35, 30]), $a([1, 32, 24]), $a([0, -1, -1]), $a([18, 18, 26]), $a([3, 16, 28]), $a([1, 14, 28])]), $a(["38", 97, 19, 4, 8089, $a([3, 142, 26]), $a([3, 141, 28]), $a([0, -1, -1]), $a([8, 70, 30]), $a([1, 73, 32]), $a([1, 74, 32]), $a([12, 34, 30]), $a([3, 34, 26]), $a([1, 35, 28]), $a([18, 21, 32]), $a([1, 27, 30]), $a([0, -1, -1])]), $a(["39", 99, 20, 4, 8465, $a([5, 116, 22]), $a([2, 103, 20]), $a([1, 102, 20]), $a([9, 74, 32]), $a([1, 74, 30]), $a([0, -1, -1]), $a([14, 34, 28]), $a([2, 32, 32]), $a([1, 32, 30]), $a([19, 21, 32]), $a([1, 25, 26]), $a([0, -1, -1])]), $a(["40", 101, 20, 4, 8841, $a([7, 116, 22]), $a([1, 117, 22]), $a([0, -1, -1]), $a([11, 65, 28]), $a([1, 58, 24]), $a([0, -1, -1]), $a([15, 38, 32]), $a([1, 27, 28]), $a([0, -1, -1]), $a([20, 20, 30]), $a([1, 20, 32]), $a([1, 21, 32])]), $a(["41", 103, 17, 5, 9009, $a([6, 136, 26]), $a([1, 130, 24]), $a([0, -1, -1]), $a([11, 66, 28]), $a([1, 62, 30]), $a([0, -1, -1]), $a([14, 34, 28]), $a([3, 34, 32]), $a([1, 30, 30]), $a([18, 20, 30]), $a([3, 20, 28]), $a([2, 15, 26])]), $a(["42", 105, 17, 5, 9401, $a([5, 105, 20]), $a([2, 115, 22]), $a([2, 116, 22]), $a([10, 75, 32]), $a([1, 73, 32]), $a([0, -1, -1]), $a([16, 38, 32]), $a([1, 27, 28]), $a([0, -1, -1]), $a([22, 19, 28]), $a([2, 16, 30]), $a([1, 19, 30])]), $a(["43", 107, 18, 5, 9799, $a([6, 147, 28]), $a([1, 146, 28]), $a([0, -1, -1]), $a([11, 66, 28]), $a([2, 65, 30]), $a([0, -1, -1]), $a([18, 33, 28]), $a([2, 33, 30]), $a([0, -1, -1]), $a([22, 21, 32]), $a([1, 28, 30]), $a([0, -1, -1])]), $a(["44", 109, 18, 5, 10207, $a([6, 116, 22]), $a([3, 125, 24]), $a([0, -1, -1]), $a([11, 75, 32]), $a([1, 68, 30]), $a([0, -1, -1]), $a([13, 35, 28]), $a([6, 34, 32]), $a([1, 30, 30]), $a([23, 21, 32]), $a([1, 26, 30]), $a([0, -1, -1])]), $a(["45", 111, 18, 5, 10623, $a([7, 105, 20]), $a([4, 95, 18]), $a([0, -1, -1]), $a([12, 67, 28]), $a([1, 63, 30]), $a([1, 62, 32]), $a([21, 31, 26]), $a([2, 33, 32]), $a([0, -1, -1]), $a([23, 21, 32]), $a([2, 24, 30]), $a([0, -1, -1])]), $a(["46", 113, 19, 5, 11045, $a([10, 116, 22]), $a([0, -1, -1]), $a([0, -1, -1]), $a([12, 74, 32]), $a([1, 78, 30]), $a([0, -1, -1]), $a([18, 37, 32]), $a([1, 39, 30]), $a([1, 41, 28]), $a([25, 21, 32]), $a([1, 27, 28]), $a([0, -1, -1])]), $a(["47", 115, 19, 5, 11477, $a([5, 126, 24]), $a([4, 115, 22]), $a([1, 114, 22]), $a([12, 67, 28]), $a([2, 66, 32]), $a([1, 68, 30]), $a([21, 35, 30]), $a([1, 39, 30]), $a([0, -1, -1]), $a([26, 21, 32]), $a([1, 28, 28]), $a([0, -1, -1])]), $a(["48", 117, 19, 5, 11917, $a([9, 126, 24]), $a([1, 117, 22]), $a([0, -1, -1]), $a([13, 75, 32]), $a([1, 68, 30]), $a([0, -1, -1]), $a([20, 35, 30]), $a([3, 35, 28]), $a([0, -1, -1]), $a([27, 21, 32]), $a([1, 28, 30]), $a([0, -1, -1])]), $a(["49", 119, 17, 6, 12111, $a([9, 126, 24]), $a([1, 137, 26]), $a([0, -1, -1]), $a([13, 71, 30]), $a([2, 68, 32]), $a([0, -1, -1]), $a([20, 37, 32]), $a([1, 39, 28]), $a([1, 38, 28]), $a([24, 20, 32]), $a([5, 25, 28]), $a([0, -1, -1])]), $a(["50", 121, 17, 6, 12559, $a([8, 147, 28]), $a([1, 141, 28]), $a([0, -1, -1]), $a([10, 73, 32]), $a([4, 74, 30]), $a([1, 73, 30]), $a([16, 36, 32]), $a([6, 39, 30]), $a([1, 37, 30]), $a([27, 21, 32]), $a([3, 20, 26]), $a([0, -1, -1])]), $a(["51", 123, 18, 6, 13025, $a([9, 137, 26]), $a([1, 135, 26]), $a([0, -1, -1]), $a([12, 70, 30]), $a([4, 75, 32]), $a([0, -1, -1]), $a([24, 35, 30]), $a([1, 40, 28]), $a([0, -1, -1]), $a([23, 20, 32]), $a([8, 24, 30]), $a([0, -1, -1])]), $a(["52", 125, 18, 6, 13489, $a([14, 95, 18]), $a([1, 86, 18]), $a([0, -1, -1]), $a([13, 73, 32]), $a([3, 77, 30]), $a([0, -1, -1]), $a([24, 35, 30]), $a([2, 35, 28]), $a([0, -1, -1]), $a([26, 21, 32]), $a([5, 21, 30]), $a([1, 23, 30])]), $a(["53", 127, 18, 6, 13961, $a([9, 147, 28]), $a([1, 142, 28]), $a([0, -1, -1]), $a([10, 73, 30]), $a([6, 70, 32]), $a([1, 71, 32]), $a([25, 35, 30]), $a([2, 34, 26]), $a([0, -1, -1]), $a([29, 21, 32]), $a([4, 22, 30]), $a([0, -1, -1])]), $a(["54", 129, 18, 6, 14441, $a([11, 126, 24]), $a([1, 131, 24]), $a([0, -1, -1]), $a([16, 74, 32]), $a([1, 79, 30]), $a([0, -1, -1]), $a([25, 38, 32]), $a([1, 25, 30]), $a([0, -1, -1]), $a([33, 21, 32]), $a([1, 28, 28]), $a([0, -1, -1])]), $a(["55", 131, 19, 6, 14939, $a([14, 105, 20]), $a([1, 99, 18]), $a([0, -1, -1]), $a([19, 65, 28]), $a([1, 72, 28]), $a([0, -1, -1]), $a([24, 37, 32]), $a([2, 40, 30]), $a([1, 41, 30]), $a([31, 21, 32]), $a([4, 24, 32]), $a([0, -1, -1])]), $a(["56", 133, 19, 6, 15435, $a([10, 147, 28]), $a([1, 151, 28]), $a([0, -1, -1]), $a([15, 71, 30]), $a([3, 71, 32]), $a([1, 73, 32]), $a([24, 37, 32]), $a([3, 38, 30]), $a([1, 39, 30]), $a([36, 19, 30]), $a([3, 29, 26]), $a([0, -1, -1])]), $a(["57", 135, 19, 6, 15939, $a([15, 105, 20]), $a([1, 99, 18]), $a([0, -1, -1]), $a([19, 70, 30]), $a([1, 64, 28]), $a([0, -1, -1]), $a([27, 38, 32]), $a([2, 25, 26]), $a([0, -1, -1]), $a([38, 20, 30]), $a([2, 18, 28]), $a([0, -1, -1])]), $a(["58", 137, 17, 7, 16171, $a([14, 105, 20]), $a([1, 113, 22]), $a([1, 114, 22]), $a([17, 67, 30]), $a([3, 92, 32]), $a([0, -1, -1]), $a([30, 35, 30]), $a([1, 41, 30]), $a([0, -1, -1]), $a([36, 21, 32]), $a([1, 26, 30]), $a([1, 27, 30])]), $a(["59", 139, 17, 7, 16691, $a([11, 146, 28]), $a([1, 146, 26]), $a([0, -1, -1]), $a([20, 70, 30]), $a([1, 60, 26]), $a([0, -1, -1]), $a([29, 38, 32]), $a([1, 24, 32]), $a([0, -1, -1]), $a([40, 20, 30]), $a([2, 17, 26]), $a([0, -1, -1])]), $a(["60", 141, 18, 7, 17215, $a([3, 137, 26]), $a([1, 136, 26]), $a([10, 126, 24]), $a([22, 65, 28]), $a([1, 75, 30]), $a([0, -1, -1]), $a([30, 37, 32]), $a([1, 51, 30]), $a([0, -1, -1]), $a([42, 20, 30]), $a([1, 21, 30]), $a([0, -1, -1])]), $a(["61", 143, 18, 7, 17751, $a([12, 126, 24]), $a([2, 118, 22]), $a([1, 116, 22]), $a([19, 74, 32]), $a([1, 74, 30]), $a([1, 72, 28]), $a([30, 38, 32]), $a([2, 29, 30]), $a([0, -1, -1]), $a([39, 20, 32]), $a([2, 37, 26]), $a([1, 38, 26])]), $a(["62", 145, 18, 7, 18295, $a([12, 126, 24]), $a([3, 136, 26]), $a([0, -1, -1]), $a([21, 70, 30]), $a([2, 65, 28]), $a([0, -1, -1]), $a([34, 35, 30]), $a([1, 44, 32]), $a([0, -1, -1]), $a([42, 20, 30]), $a([2, 19, 28]), $a([2, 18, 28])]), $a(["63", 147, 18, 7, 18847, $a([12, 126, 24]), $a([3, 117, 22]), $a([1, 116, 22]), $a([25, 61, 26]), $a([2, 62, 28]), $a([0, -1, -1]), $a([34, 35, 30]), $a([1, 40, 32]), $a([1, 41, 32]), $a([45, 20, 30]), $a([1, 20, 32]), $a([1, 21, 32])]), $a(["64", 149, 19, 7, 19403, $a([15, 105, 20]), $a([2, 115, 22]), $a([2, 116, 22]), $a([25, 65, 28]), $a([1, 72, 28]), $a([0, -1, -1]), $a([18, 35, 30]), $a([17, 37, 32]), $a([1, 50, 32]), $a([42, 20, 30]), $a([6, 19, 28]), $a([1, 15, 28])]), $a(["65", 151, 19, 7, 19971, $a([19, 105, 20]), $a([1, 101, 20]), $a([0, -1, -1]), $a([33, 51, 22]), $a([1, 65, 22]), $a([0, -1, -1]), $a([40, 33, 28]), $a([1, 28, 28]), $a([0, -1, -1]), $a([49, 20, 30]), $a([1, 18, 28]), $a([0, -1, -1])]), $a(["66", 153, 17, 8, 20229, $a([18, 105, 20]), $a([2, 117, 22]), $a([0, -1, -1]), $a([26, 65, 28]), $a([1, 80, 30]), $a([0, -1, -1]), $a([35, 35, 30]), $a([3, 35, 28]), $a([1, 36, 28]), $a([52, 18, 28]), $a([2, 38, 30]), $a([0, -1, -1])]), $a(["67", 155, 17, 8, 20805, $a([26, 84, 16]), $a([0, -1, -1]), $a([0, -1, -1]), $a([26, 70, 30]), $a([0, -1, -1]), $a([0, -1, -1]), $a([45, 31, 26]), $a([1, 9, 26]), $a([0, -1, -1]), $a([52, 20, 30]), $a([0, -1, -1]), $a([0, -1, -1])]), $a(["68", 157, 17, 8, 21389, $a([16, 126, 24]), $a([1, 114, 22]), $a([1, 115, 22]), $a([23, 70, 30]), $a([3, 65, 28]), $a([1, 66, 28]), $a([40, 35, 30]), $a([1, 43, 30]), $a([0, -1, -1]), $a([46, 20, 30]), $a([7, 19, 28]), $a([1, 16, 28])]), $a(["69", 159, 18, 8, 21993, $a([19, 116, 22]), $a([1, 105, 22]), $a([0, -1, -1]), $a([20, 70, 30]), $a([7, 66, 28]), $a([1, 63, 28]), $a([40, 35, 30]), $a([1, 42, 32]), $a([1, 43, 32]), $a([54, 20, 30]), $a([1, 19, 30]), $a([0, -1, -1])]), $a(["70", 161, 18, 8, 22593, $a([17, 126, 24]), $a([2, 115, 22]), $a([0, -1, -1]), $a([24, 70, 30]), $a([4, 74, 32]), $a([0, -1, -1]), $a([48, 31, 26]), $a([2, 18, 26]), $a([0, -1, -1]), $a([54, 19, 28]), $a([6, 15, 26]), $a([1, 14, 26])]), $a(["71", 163, 18, 8, 23201, $a([29, 84, 16]), $a([0, -1, -1]), $a([0, -1, -1]), $a([29, 70, 30]), $a([0, -1, -1]), $a([0, -1, -1]), $a([6, 34, 30]), $a([3, 36, 30]), $a([38, 33, 28]), $a([58, 20, 30]), $a([0, -1, -1]), $a([0, -1, -1])]), $a(["72", 165, 18, 8, 23817, $a([16, 147, 28]), $a([1, 149, 28]), $a([0, -1, -1]), $a([31, 66, 28]), $a([1, 37, 26]), $a([0, -1, -1]), $a([48, 33, 28]), $a([1, 23, 26]), $a([0, -1, -1]), $a([53, 20, 30]), $a([6, 19, 28]), $a([1, 17, 28])]), $a(["73", 167, 19, 8, 24453, $a([20, 115, 22]), $a([2, 134, 24]), $a([0, -1, -1]), $a([29, 66, 28]), $a([2, 56, 26]), $a([2, 57, 26]), $a([45, 36, 30]), $a([2, 15, 28]), $a([0, -1, -1]), $a([59, 20, 30]), $a([2, 21, 32]), $a([0, -1, -1])]), $a(["74", 169, 19, 8, 25085, $a([17, 147, 28]), $a([1, 134, 26]), $a([0, -1, -1]), $a([26, 70, 30]), $a([5, 75, 32]), $a([0, -1, -1]), $a([47, 35, 30]), $a([1, 48, 32]), $a([0, -1, -1]), $a([64, 18, 28]), $a([2, 33, 30]), $a([1, 35, 30])]), $a(["75", 171, 17, 9, 25373, $a([22, 115, 22]), $a([1, 133, 24]), $a([0, -1, -1]), $a([33, 65, 28]), $a([1, 74, 28]), $a([0, -1, -1]), $a([43, 36, 30]), $a([5, 27, 28]), $a([1, 30, 28]), $a([57, 20, 30]), $a([5, 21, 32]), $a([1, 24, 32])]), $a(["76", 173, 17, 9, 26021, $a([18, 136, 26]), $a([2, 142, 26]), $a([0, -1, -1]), $a([33, 66, 28]), $a([2, 49, 26]), $a([0, -1, -1]), $a([48, 35, 30]), $a([2, 38, 28]), $a([0, -1, -1]), $a([64, 20, 30]), $a([1, 20, 32]), $a([0, -1, -1])]), $a(["77", 175, 17, 9, 26677, $a([19, 126, 24]), $a([2, 135, 26]), $a([1, 136, 26]), $a([32, 66, 28]), $a([2, 55, 26]), $a([2, 56, 26]), $a([49, 36, 30]), $a([2, 18, 32]), $a([0, -1, -1]), $a([65, 18, 28]), $a([5, 27, 30]), $a([1, 29, 30])]), $a(["78", 177, 18, 9, 27335, $a([20, 137, 26]), $a([1, 130, 26]), $a([0, -1, -1]), $a([30, 75, 32]), $a([2, 71, 32]), $a([0, -1, -1]), $a([46, 35, 30]), $a([6, 39, 32]), $a([0, -1, -1]), $a([3, 12, 30]), $a([70, 19, 28]), $a([0, -1, -1])]), $a(["79", 179, 18, 9, 28007, $a([20, 147, 28]), $a([0, -1, -1]), $a([0, -1, -1]), $a([35, 70, 30]), $a([0, -1, -1]), $a([0, -1, -1]), $a([49, 35, 30]), $a([5, 35, 28]), $a([0, -1, -1]), $a([70, 20, 30]), $a([0, -1, -1]), $a([0, -1, -1])]), $a(["80", 181, 18, 9, 28687, $a([21, 136, 26]), $a([1, 155, 28]), $a([0, -1, -1]), $a([34, 70, 30]), $a([1, 64, 28]), $a([1, 65, 28]), $a([54, 35, 30]), $a([1, 45, 30]), $a([0, -1, -1]), $a([68, 20, 30]), $a([3, 18, 28]), $a([1, 19, 28])]), $a(["81", 183, 18, 9, 29375, $a([19, 126, 24]), $a([5, 115, 22]), $a([1, 114, 22]), $a([33, 70, 30]), $a([3, 65, 28]), $a([1, 64, 28]), $a([52, 35, 30]), $a([3, 41, 32]), $a([1, 40, 32]), $a([67, 20, 30]), $a([5, 21, 32]), $a([1, 24, 32])]), $a(["82", 185, 18, 9, 30071, $a([2, 150, 28]), $a([21, 136, 26]), $a([0, -1, -1]), $a([32, 70, 30]), $a([6, 65, 28]), $a([0, -1, -1]), $a([52, 38, 32]), $a([2, 27, 32]), $a([0, -1, -1]), $a([73, 20, 30]), $a([2, 22, 32]), $a([0, -1, -1])]), $a(["83", 187, 17, 10, 30387, $a([21, 126, 24]), $a([4, 136, 26]), $a([0, -1, -1]), $a([30, 74, 32]), $a([6, 73, 30]), $a([0, -1, -1]), $a([54, 35, 30]), $a([4, 40, 32]), $a([0, -1, -1]), $a([75, 20, 30]), $a([1, 20, 28]), $a([0, -1, -1])]), $a(["84", 189, 17, 10, 31091, $a([30, 105, 20]), $a([1, 114, 22]), $a([0, -1, -1]), $a([3, 45, 22]), $a([55, 47, 20]), $a([0, -1, -1]), $a([2, 26, 26]), $a([62, 33, 28]), $a([0, -1, -1]), $a([79, 18, 28]), $a([4, 33, 30]), $a([0, -1, -1])])]); /*19712*/
		$1.eclval = $get($1.eclevel, 1) - 49; /*19714*/
		for (var _Ik = 0; _Ik <= 83; _Ik += 1) { /*19734*/
			$1.i = _Ik; /*19716*/
			$1.m = $get($1.metrics, $1.i); /*19717*/
			$1.vers = $get($1.m, 0); /*19718*/
			$1.size = $get($1.m, 1); /*19719*/
			$1.alnk = $get($1.m, 2); /*19720*/
			$1.alnn = $get($1.m, 3); /*19721*/
			$1.alnr = $1.size - ($1.alnk * $1.alnn); /*19722*/
			$1.nmod = $get($1.m, 4); /*19723*/
			$1.ncws = ~~($1.nmod / 8); /*19724*/
			$1.rbit = $1.nmod % 8; /*19725*/
			$1.ecbs = $geti($1.m, 5 + ($1.eclval * 3), 3); /*19726*/
			$k[$j++] = "ecws"; /*19727*/
			$k[$j++] = 0; /*19727*/
			$forall($1.ecbs, function() { /*19727*/
				var _J7 = $k[--$j]; /*19727*/
				var _JA = $k[--$j]; /*19727*/
				$k[$j++] = _JA + ($get(_J7, 0) * $get(_J7, 2)); /*19727*/
			}); /*19727*/
			var _JB = $k[--$j]; /*19727*/
			$1[$k[--$j]] = _JB; /*19727*/
			$1.dcws = $1.ncws - $1.ecws; /*19728*/
			$1.dmod = $1.dcws * 8; /*19729*/
			$1.okay = true; /*19730*/
			if ($ne($1.version, "unset") && $ne($1.version, $1.vers)) { /*19731*/
				$1.okay = false; /*19731*/
			} /*19731*/
			if ($1.bits.length > $1.dmod) { /*19732*/
				$1.okay = false; /*19732*/
			} /*19732*/
			if ($1.okay) { /*19733*/
				break; /*19733*/
			} /*19733*/
		} /*19733*/
		if (!$1.okay) { /*19738*/
			$k[$j++] = "bwipp.hanxinNoValidSymbol"; /*19737*/
			$k[$j++] = "No valid symbol available"; /*19737*/
			$0.raiseerror(); /*19737*/
		} /*19737*/
		$1.version = $1.vers; /*19740*/
		$1.msgbits = $1.bits; /*19741*/
		$1.e1nb = $get($get($1.ecbs, 0), 0); /*19742*/
		$1.e2nb = $get($get($1.ecbs, 1), 0); /*19742*/
		$1.e3nb = $get($get($1.ecbs, 2), 0); /*19742*/
		$1.e1dcws = $get($get($1.ecbs, 0), 1); /*19743*/
		$1.e2dcws = $get($get($1.ecbs, 1), 1); /*19743*/
		$1.e3dcws = $get($get($1.ecbs, 2), 1); /*19743*/
		$1.e1ecws = $get($get($1.ecbs, 0), 2); /*19744*/
		$1.e2ecws = $get($get($1.ecbs, 1), 2); /*19744*/
		$1.e3ecws = $get($get($1.ecbs, 2), 2); /*19744*/
		$1.pad = $s($1.dmod); /*19747*/
		for (var _Ju = 0, _Jt = $1.pad.length - 1; _Ju <= _Jt; _Ju += 1) { /*19748*/
			$put($1.pad, _Ju, 48); /*19748*/
		} /*19748*/
		$puti($1.pad, 0, $1.msgbits); /*19749*/
		$1.cws = $a($1.dcws); /*19752*/
		for (var _K2 = 0, _K1 = $1.cws.length - 1; _K2 <= _K1; _K2 += 1) { /*19762*/
			$1.c = _K2; /*19754*/
			$1.cwb = $geti($1.pad, $1.c * 8, 8); /*19755*/
			$1.cw = 0; /*19756*/
			for (var _K6 = 0; _K6 <= 7; _K6 += 1) { /*19760*/
				$1.i = _K6; /*19758*/
				$1.cw = $1.cw + ((~~(Math.pow(2, (8 - $1.i) - 1))) * ($get($1.cwb, $1.i) - 48)); /*19759*/
			} /*19759*/
			$put($1.cws, $1.c, $1.cw); /*19761*/
		} /*19761*/
		$1.rscodes = function() {
			$1.rspm = $k[--$j]; /*19766*/
			$1.rsgf = $k[--$j]; /*19767*/
			$1.rsnc = $k[--$j]; /*19768*/
			$1.rscws = $k[--$j]; /*19769*/
			$k[$j++] = Infinity; /*19772*/
			$k[$j++] = 1; /*19772*/
			for (var _KK = 0, _KL = $1.rsgf - 1; _KK < _KL; _KK++) { /*19772*/
				var _KM = $k[--$j]; /*19772*/
				var _KN = _KM * 2; /*19772*/
				$k[$j++] = _KM; /*19772*/
				$k[$j++] = _KN; /*19772*/
				if (_KN >= $1.rsgf) { /*19772*/
					var _KQ = $k[--$j]; /*19772*/
					$k[$j++] = $xo(_KQ, $1.rspm); /*19772*/
				} /*19772*/
			} /*19772*/
			$1.rsalog = $a(); /*19772*/
			$1.rslog = $a($1.rsgf); /*19773*/
			for (var _KW = 1, _KV = $1.rsgf - 1; _KW <= _KV; _KW += 1) { /*19774*/
				$put($1.rslog, $get($1.rsalog, _KW), _KW); /*19774*/
			} /*19774*/
			$1.rsprod = function() {
				var _Ka = $k[--$j]; /*19778*/
				var _Kb = $k[--$j]; /*19778*/
				$k[$j++] = _Kb; /*19782*/
				$k[$j++] = _Ka; /*19782*/
				if ((_Ka != 0) && (_Kb != 0)) { /*19781*/
					var _Ke = $get($1.rslog, $k[--$j]); /*19779*/
					var _Kk = $get($1.rsalog, (_Ke + $get($1.rslog, $k[--$j])) % ($1.rsgf - 1)); /*19779*/
					$k[$j++] = _Kk; /*19779*/
				} else { /*19781*/
					$j -= 2; /*19781*/
					$k[$j++] = 0; /*19781*/
				} /*19781*/
			}; /*19783*/
			$k[$j++] = Infinity; /*19786*/
			$k[$j++] = 1; /*19786*/
			for (var _Km = 0, _Kn = $1.rsnc; _Km < _Kn; _Km++) { /*19786*/
				$k[$j++] = 0; /*19786*/
			} /*19786*/
			$1.coeffs = $a(); /*19786*/
			for (var _Kr = 1, _Kq = $1.rsnc; _Kr <= _Kq; _Kr += 1) { /*19795*/
				$1.i = _Kr; /*19788*/
				$put($1.coeffs, $1.i, $get($1.coeffs, $1.i - 1)); /*19789*/
				for (var _Ky = $1.i - 1; _Ky >= 1; _Ky -= 1) { /*19793*/
					$1.j = _Ky; /*19791*/
					$k[$j++] = $1.coeffs; /*19792*/
					$k[$j++] = $1.j; /*19792*/
					$k[$j++] = $get($1.coeffs, $1.j - 1); /*19792*/
					$k[$j++] = $get($1.coeffs, $1.j); /*19792*/
					$k[$j++] = $get($1.rsalog, $1.i); /*19792*/
					$1.rsprod(); /*19792*/
					var _LA = $k[--$j]; /*19792*/
					var _LB = $k[--$j]; /*19792*/
					var _LC = $k[--$j]; /*19792*/
					$put($k[--$j], _LC, $xo(_LB, _LA)); /*19792*/
				} /*19792*/
				$k[$j++] = $1.coeffs; /*19794*/
				$k[$j++] = 0; /*19794*/
				$k[$j++] = $get($1.coeffs, 0); /*19794*/
				$k[$j++] = $get($1.rsalog, $1.i); /*19794*/
				$1.rsprod(); /*19794*/
				var _LK = $k[--$j]; /*19794*/
				var _LL = $k[--$j]; /*19794*/
				$put($k[--$j], _LL, _LK); /*19794*/
			} /*19794*/
			$1.nd = $1.rscws.length; /*19798*/
			$k[$j++] = Infinity; /*19799*/
			$forall($1.rscws); /*19799*/
			for (var _LQ = 0, _LR = $1.rsnc; _LQ < _LR; _LQ++) { /*19799*/
				$k[$j++] = 0; /*19799*/
			} /*19799*/
			$k[$j++] = 0; /*19799*/
			$1.rscws = $a(); /*19799*/
			for (var _LV = 0, _LU = $1.nd - 1; _LV <= _LU; _LV += 1) { /*19806*/
				$1.k = $xo($get($1.rscws, _LV), $get($1.rscws, $1.nd)); /*19801*/
				for (var _Ld = 0, _Lc = $1.rsnc - 1; _Ld <= _Lc; _Ld += 1) { /*19805*/
					$1.j = _Ld; /*19803*/
					$k[$j++] = $1.rscws; /*19804*/
					$k[$j++] = $1.nd + $1.j; /*19804*/
					$k[$j++] = $get($1.rscws, ($1.nd + $1.j) + 1); /*19804*/
					$k[$j++] = $1.k; /*19804*/
					$k[$j++] = $get($1.coeffs, ($1.rsnc - $1.j) - 1); /*19804*/
					$1.rsprod(); /*19804*/
					var _Lq = $k[--$j]; /*19804*/
					var _Lr = $k[--$j]; /*19804*/
					var _Ls = $k[--$j]; /*19804*/
					$put($k[--$j], _Ls, $xo(_Lr, _Lq)); /*19804*/
				} /*19804*/
			} /*19804*/
			$k[$j++] = $geti($1.rscws, 0, $1.rscws.length - 1); /*19809*/
		}; /*19811*/
		$1.dcwsb = $a(($1.e1nb + $1.e2nb) + $1.e3nb); /*19814*/
		$1.ecwsb = $a($1.dcwsb.length); /*19815*/
		$1.in = 0; /*19816*/
		$1.out = 0; /*19816*/
		for (var _M4 = 0, _M5 = $1.e1nb; _M4 < _M5; _M4++) { /*19822*/
			$k[$j++] = $geti($1.cws, $1.in, $1.e1dcws); /*19818*/
			$k[$j++] = $1.e1ecws; /*19818*/
			$k[$j++] = 256; /*19818*/
			$k[$j++] = 355; /*19818*/
			$1.rscodes(); /*19818*/
			var _MB = $k[--$j]; /*19819*/
			$put($1.dcwsb, $1.out, $geti(_MB, 0, $1.e1dcws)); /*19819*/
			$put($1.ecwsb, $1.out, $geti(_MB, $1.e1dcws, $1.e1ecws)); /*19820*/
			$1.in = $1.in + $1.e1dcws; /*19821*/
			$1.out = $1.out + 1; /*19821*/
		} /*19821*/
		for (var _MP = 0, _MQ = $1.e2nb; _MP < _MQ; _MP++) { /*19828*/
			$k[$j++] = $geti($1.cws, $1.in, $1.e2dcws); /*19824*/
			$k[$j++] = $1.e2ecws; /*19824*/
			$k[$j++] = 256; /*19824*/
			$k[$j++] = 355; /*19824*/
			$1.rscodes(); /*19824*/
			var _MW = $k[--$j]; /*19825*/
			$put($1.dcwsb, $1.out, $geti(_MW, 0, $1.e2dcws)); /*19825*/
			$put($1.ecwsb, $1.out, $geti(_MW, $1.e2dcws, $1.e2ecws)); /*19826*/
			$1.in = $1.in + $1.e2dcws; /*19827*/
			$1.out = $1.out + 1; /*19827*/
		} /*19827*/
		for (var _Mk = 0, _Ml = $1.e3nb; _Mk < _Ml; _Mk++) { /*19834*/
			$k[$j++] = $geti($1.cws, $1.in, $1.e3dcws); /*19830*/
			$k[$j++] = $1.e3ecws; /*19830*/
			$k[$j++] = 256; /*19830*/
			$k[$j++] = 355; /*19830*/
			$1.rscodes(); /*19830*/
			var _Mr = $k[--$j]; /*19831*/
			$put($1.dcwsb, $1.out, $geti(_Mr, 0, $1.e3dcws)); /*19831*/
			$put($1.ecwsb, $1.out, $geti(_Mr, $1.e3dcws, $1.e3ecws)); /*19832*/
			$1.in = $1.in + $1.e3dcws; /*19833*/
			$1.out = $1.out + 1; /*19833*/
		} /*19833*/
		$1.cws = $a($1.ncws); /*19837*/
		$1.cw = 0; /*19838*/
		for (var _N8 = 0, _N7 = $1.dcwsb.length - 1; _N8 <= _N7; _N8 += 1) { /*19843*/
			$1.i = _N8; /*19840*/
			var _NB = $get($1.dcwsb, $1.i); /*19841*/
			$puti($1.cws, $1.cw, _NB); /*19841*/
			$1.cw = _NB.length + $1.cw; /*19841*/
			var _NH = $get($1.ecwsb, $1.i); /*19842*/
			$puti($1.cws, $1.cw, _NH); /*19842*/
			$1.cw = _NH.length + $1.cw; /*19842*/
		} /*19842*/
		$k[$j++] = Infinity; /*19850*/
		var _NL = $1.ncws; /*19847*/
		var _NM = 12; /*19847*/
		var _NN = _NL - 1; /*19847*/
		if ((_NL - 1) > 12) { /*19847*/
			var _ = _NM; /*19847*/
			_NM = _NN; /*19847*/
			_NN = _; /*19847*/
		} /*19847*/
		for (var _NP = 0, _NO = _NN; _NP <= _NO; _NP += 1) { /*19849*/
			for (var _NS = _NP, _NR = $1.ncws - 1; _NS <= _NR; _NS += 13) { /*19848*/
				$k[$j++] = _NS; /*19848*/
				if (_NS < $1.ncws) { /*19848*/
					var _NW = $get($1.cws, $k[--$j]); /*19848*/
					$k[$j++] = _NW; /*19848*/
				} else { /*19848*/
					$j--; /*19848*/
				} /*19848*/
			} /*19848*/
		} /*19848*/
		$1.cws = $a(); /*19850*/
		if ($1.rbit > 0) { /*19858*/
			$1.pad = $a($1.cws.length + 1); /*19854*/
			$puti($1.pad, 0, $1.cws); /*19855*/
			$put($1.pad, $1.pad.length - 1, 0); /*19856*/
			$1.cws = $1.pad; /*19857*/
		} /*19857*/
		$k[$j++] = Infinity; /*19861*/
		for (var _Ni = 0, _Nj = $1.size * $1.size; _Ni < _Nj; _Ni++) { /*19861*/
			$k[$j++] = -1; /*19861*/
		} /*19861*/
		$1.pixs = $a(); /*19861*/
		$1.qmv = function() {
			var _Nm = $k[--$j]; /*19862*/
			var _Nn = $k[--$j]; /*19862*/
			$k[$j++] = _Nn + (_Nm * $1.size); /*19862*/
		}; /*19862*/
		if ($1.alnn != 0) { /*19921*/
			$1.trmv = function() {
				var _Nq = $k[--$j]; /*19866*/
				var _Ns = $k[--$j]; /*19866*/
				$k[$j++] = (((_Nq * $1.size) + $1.size) - 1) - _Ns; /*19866*/
			}; /*19866*/
			$1.aplot = function() {
				var _Nt = $k[--$j]; /*19868*/
				var _Nu = $k[--$j]; /*19868*/
				var _Nv = $k[--$j]; /*19868*/
				$k[$j++] = _Nt; /*19868*/
				$k[$j++] = _Nv; /*19868*/
				$k[$j++] = _Nu; /*19868*/
				$k[$j++] = _Nt; /*19868*/
				$k[$j++] = _Nu; /*19868*/
				$k[$j++] = _Nv; /*19868*/
				$1.trmv(); /*19868*/
				var _Nx = $k[--$j]; /*19868*/
				$put($1.pixs, _Nx, $k[--$j]); /*19868*/
				$1.trmv(); /*19869*/
				var _O0 = $k[--$j]; /*19869*/
				$put($1.pixs, _O0, $k[--$j]); /*19869*/
			}; /*19870*/
			$1.i = 0; /*19871*/
			$1.stag = 0; /*19871*/
			for (;;) { /*19893*/
				if ($1.i >= $1.size) { /*19872*/
					break; /*19872*/
				} /*19872*/
				for (var _O6 = 0, _O5 = $1.size - 1; _O6 <= _O5; _O6 += 1) { /*19886*/
					$1.j = _O6; /*19874*/
					if (($1.j + $1.alnr) < $1.size) { /*19880*/
						$k[$j++] = (((((~~($1.j / $1.alnk)) + $1.stag) % 2) == 0) && (!(($1.i == 0) && ($1.j < $1.alnk)))) || (($1.j % $1.alnk) == 0); /*19878*/
					} else { /*19880*/
						$k[$j++] = (($1.alnn + $1.stag) % 2) == 0; /*19880*/
					} /*19880*/
					if ($k[--$j]) { /*19885*/
						$k[$j++] = $1.j; /*19883*/
						$k[$j++] = $1.i; /*19883*/
						$k[$j++] = 1; /*19883*/
						$1.aplot(); /*19883*/
						var _ON = $1.j; /*19884*/
						var _OO = $1.i; /*19884*/
						$k[$j++] = _ON + 1; /*19884*/
						$k[$j++] = _OO + 1; /*19884*/
						if (((_OO + 1) < $1.size) && ((_ON + 1) < $1.size)) { /*19884*/
							$k[$j++] = 0; /*19884*/
							$1.aplot(); /*19884*/
						} else { /*19884*/
							$j -= 2; /*19884*/
						} /*19884*/
					} /*19884*/
				} /*19884*/
				if (($1.i + $1.alnr) == $1.size) { /*19890*/
					$1.i = ($1.i + $1.alnr) - 1; /*19888*/
				} else { /*19890*/
					$1.i = $1.i + $1.alnk; /*19890*/
				} /*19890*/
				$1.stag = 1 - $1.stag; /*19892*/
			} /*19892*/
			for (var _Od = $1.alnk, _Oe = $1.alnk, _Oc = $1.size - 2; _Oe < 0 ? _Od >= _Oc : _Od <= _Oc; _Od += _Oe) { /*19920*/
				$1.i = _Od; /*19895*/
				if (((~~($1.i / $1.alnk)) % 2) != 0) { /*19907*/
					$k[$j++] = $1.pixs; /*19897*/
					$k[$j++] = 0; /*19897*/
					$k[$j++] = $1.i - 1; /*19897*/
					$1.trmv(); /*19897*/
					var _Oj = $k[--$j]; /*19897*/
					$put($k[--$j], _Oj, 0); /*19897*/
					$k[$j++] = $1.pixs; /*19898*/
					$k[$j++] = 0; /*19898*/
					$k[$j++] = $1.i + 1; /*19898*/
					$1.trmv(); /*19898*/
					var _On = $k[--$j]; /*19898*/
					$put($k[--$j], _On, 0); /*19898*/
					$k[$j++] = $1.pixs; /*19899*/
					$k[$j++] = 1; /*19899*/
					$k[$j++] = $1.i - 1; /*19899*/
					$1.trmv(); /*19899*/
					var _Or = $k[--$j]; /*19899*/
					$put($k[--$j], _Or, 0); /*19899*/
					$k[$j++] = $1.pixs; /*19900*/
					$k[$j++] = 1; /*19900*/
					$k[$j++] = $1.i; /*19900*/
					$1.trmv(); /*19900*/
					var _Ov = $k[--$j]; /*19900*/
					$put($k[--$j], _Ov, 0); /*19900*/
					$k[$j++] = $1.pixs; /*19901*/
					$k[$j++] = 1; /*19901*/
					$k[$j++] = $1.i + 1; /*19901*/
					$1.trmv(); /*19901*/
					var _Oz = $k[--$j]; /*19901*/
					$put($k[--$j], _Oz, 0); /*19901*/
					$k[$j++] = $1.pixs; /*19902*/
					$k[$j++] = $1.i - 1; /*19902*/
					$k[$j++] = 0; /*19902*/
					$1.trmv(); /*19902*/
					var _P3 = $k[--$j]; /*19902*/
					$put($k[--$j], _P3, 0); /*19902*/
					$k[$j++] = $1.pixs; /*19903*/
					$k[$j++] = $1.i + 1; /*19903*/
					$k[$j++] = 0; /*19903*/
					$1.trmv(); /*19903*/
					var _P7 = $k[--$j]; /*19903*/
					$put($k[--$j], _P7, 0); /*19903*/
					$k[$j++] = $1.pixs; /*19904*/
					$k[$j++] = $1.i - 1; /*19904*/
					$k[$j++] = 1; /*19904*/
					$1.trmv(); /*19904*/
					var _PB = $k[--$j]; /*19904*/
					$put($k[--$j], _PB, 0); /*19904*/
					$k[$j++] = $1.pixs; /*19905*/
					$k[$j++] = $1.i; /*19905*/
					$k[$j++] = 1; /*19905*/
					$1.trmv(); /*19905*/
					var _PF = $k[--$j]; /*19905*/
					$put($k[--$j], _PF, 0); /*19905*/
					$k[$j++] = $1.pixs; /*19906*/
					$k[$j++] = $1.i + 1; /*19906*/
					$k[$j++] = 1; /*19906*/
					$1.trmv(); /*19906*/
					var _PJ = $k[--$j]; /*19906*/
					$put($k[--$j], _PJ, 0); /*19906*/
				} /*19906*/
				$k[$j++] = $1.pixs; /*19908*/
				$k[$j++] = $1.size - 1; /*19908*/
				$k[$j++] = $1.i - 1; /*19908*/
				$1.trmv(); /*19908*/
				var _PO = $k[--$j]; /*19908*/
				if ($get($k[--$j], _PO) != 1) { /*19919*/
					$k[$j++] = $1.pixs; /*19909*/
					$k[$j++] = $1.size - 1; /*19909*/
					$k[$j++] = $1.i - 1; /*19909*/
					$1.trmv(); /*19909*/
					var _PU = $k[--$j]; /*19909*/
					$put($k[--$j], _PU, 0); /*19909*/
					$k[$j++] = $1.pixs; /*19910*/
					$k[$j++] = $1.size - 2; /*19910*/
					$k[$j++] = $1.i - 1; /*19910*/
					$1.trmv(); /*19910*/
					var _PZ = $k[--$j]; /*19910*/
					$put($k[--$j], _PZ, 0); /*19910*/
					$k[$j++] = $1.pixs; /*19911*/
					$k[$j++] = $1.size - 2; /*19911*/
					$k[$j++] = $1.i; /*19911*/
					$1.trmv(); /*19911*/
					var _Pe = $k[--$j]; /*19911*/
					$put($k[--$j], _Pe, 0); /*19911*/
					$k[$j++] = $1.pixs; /*19912*/
					$k[$j++] = $1.size - 2; /*19912*/
					$k[$j++] = $1.i + 1; /*19912*/
					$1.trmv(); /*19912*/
					var _Pj = $k[--$j]; /*19912*/
					$put($k[--$j], _Pj, 0); /*19912*/
					$k[$j++] = $1.pixs; /*19913*/
					$k[$j++] = $1.size - 1; /*19913*/
					$k[$j++] = $1.i + 1; /*19913*/
					$1.trmv(); /*19913*/
					var _Po = $k[--$j]; /*19913*/
					$put($k[--$j], _Po, 0); /*19913*/
					$k[$j++] = $1.pixs; /*19914*/
					$k[$j++] = $1.i - 1; /*19914*/
					$k[$j++] = $1.size - 1; /*19914*/
					$1.trmv(); /*19914*/
					var _Pt = $k[--$j]; /*19914*/
					$put($k[--$j], _Pt, 0); /*19914*/
					$k[$j++] = $1.pixs; /*19915*/
					$k[$j++] = $1.i - 1; /*19915*/
					$k[$j++] = $1.size - 2; /*19915*/
					$1.trmv(); /*19915*/
					var _Py = $k[--$j]; /*19915*/
					$put($k[--$j], _Py, 0); /*19915*/
					$k[$j++] = $1.pixs; /*19916*/
					$k[$j++] = $1.i; /*19916*/
					$k[$j++] = $1.size - 2; /*19916*/
					$1.trmv(); /*19916*/
					var _Q3 = $k[--$j]; /*19916*/
					$put($k[--$j], _Q3, 0); /*19916*/
					$k[$j++] = $1.pixs; /*19917*/
					$k[$j++] = $1.i + 1; /*19917*/
					$k[$j++] = $1.size - 2; /*19917*/
					$1.trmv(); /*19917*/
					var _Q8 = $k[--$j]; /*19917*/
					$put($k[--$j], _Q8, 0); /*19917*/
					$k[$j++] = $1.pixs; /*19918*/
					$k[$j++] = $1.i + 1; /*19918*/
					$k[$j++] = $1.size - 1; /*19918*/
					$1.trmv(); /*19918*/
					var _QD = $k[--$j]; /*19918*/
					$put($k[--$j], _QD, 0); /*19918*/
				} /*19918*/
			} /*19918*/
		} /*19918*/
		$1.fpat = $a([$a([1, 1, 1, 1, 1, 1, 1, 0]), $a([1, 0, 0, 0, 0, 0, 0, 0]), $a([1, 0, 1, 1, 1, 1, 1, 0]), $a([1, 0, 1, 0, 0, 0, 0, 0]), $a([1, 0, 1, 0, 1, 1, 1, 0]), $a([1, 0, 1, 0, 1, 1, 1, 0]), $a([1, 0, 1, 0, 1, 1, 1, 0]), $a([0, 0, 0, 0, 0, 0, 0, 0])]); /*19933*/
		$1.fpat2 = $a([$a([1, 1, 1, 0, 1, 0, 1, 0]), $a([1, 1, 1, 0, 1, 0, 1, 0]), $a([1, 1, 1, 0, 1, 0, 1, 0]), $a([0, 0, 0, 0, 1, 0, 1, 0]), $a([1, 1, 1, 1, 1, 0, 1, 0]), $a([0, 0, 0, 0, 0, 0, 1, 0]), $a([1, 1, 1, 1, 1, 1, 1, 0]), $a([0, 0, 0, 0, 0, 0, 0, 0])]); /*19943*/
		for (var _QZ = 0, _QY = $1.fpat.length - 1; _QZ <= _QY; _QZ += 1) { /*19955*/
			$1.y = _QZ; /*19945*/
			for (var _Qd = 0, _Qc = $get($1.fpat, 0).length - 1; _Qd <= _Qc; _Qd += 1) { /*19954*/
				$1.x = _Qd; /*19947*/
				$1.fpb = $get($get($1.fpat, $1.y), $1.x); /*19948*/
				$1.fpb2 = $get($get($1.fpat2, $1.y), $1.x); /*19949*/
				$k[$j++] = $1.pixs; /*19950*/
				$k[$j++] = $1.x; /*19950*/
				$k[$j++] = $1.y; /*19950*/
				$1.qmv(); /*19950*/
				var _Qs = $k[--$j]; /*19950*/
				$put($k[--$j], _Qs, $1.fpb); /*19950*/
				$k[$j++] = $1.pixs; /*19951*/
				$k[$j++] = ($1.size - $1.x) - 1; /*19951*/
				$k[$j++] = $1.y; /*19951*/
				$1.qmv(); /*19951*/
				var _Qz = $k[--$j]; /*19951*/
				$put($k[--$j], _Qz, $1.fpb); /*19951*/
				$k[$j++] = $1.pixs; /*19952*/
				$k[$j++] = ($1.size - $1.x) - 1; /*19952*/
				$k[$j++] = ($1.size - $1.y) - 1; /*19952*/
				$1.qmv(); /*19952*/
				var _R7 = $k[--$j]; /*19952*/
				$put($k[--$j], _R7, $1.fpb); /*19952*/
				$k[$j++] = $1.pixs; /*19953*/
				$k[$j++] = $1.x; /*19953*/
				$k[$j++] = ($1.size - $1.y) - 1; /*19953*/
				$1.qmv(); /*19953*/
				var _RE = $k[--$j]; /*19953*/
				$put($k[--$j], _RE, $1.fpb2); /*19953*/
			} /*19953*/
		} /*19953*/
		$1.functionmap = $a([$a([$a([0, 8]), $a([$1.size - 1, $1.size - 9])]), $a([$a([1, 8]), $a([$1.size - 2, $1.size - 9])]), $a([$a([2, 8]), $a([$1.size - 3, $1.size - 9])]), $a([$a([3, 8]), $a([$1.size - 4, $1.size - 9])]), $a([$a([4, 8]), $a([$1.size - 5, $1.size - 9])]), $a([$a([5, 8]), $a([$1.size - 6, $1.size - 9])]), $a([$a([6, 8]), $a([$1.size - 7, $1.size - 9])]), $a([$a([7, 8]), $a([$1.size - 8, $1.size - 9])]), $a([$a([8, 8]), $a([$1.size - 9, $1.size - 9])]), $a([$a([8, 7]), $a([$1.size - 9, $1.size - 8])]), $a([$a([8, 6]), $a([$1.size - 9, $1.size - 7])]), $a([$a([8, 5]), $a([$1.size - 9, $1.size - 6])]), $a([$a([8, 4]), $a([$1.size - 9, $1.size - 5])]), $a([$a([8, 3]), $a([$1.size - 9, $1.size - 4])]), $a([$a([8, 2]), $a([$1.size - 9, $1.size - 3])]), $a([$a([8, 1]), $a([$1.size - 9, $1.size - 2])]), $a([$a([8, 0]), $a([$1.size - 9, $1.size - 1])]), $a([$a([$1.size - 9, 0]), $a([8, $1.size - 1])]), $a([$a([$1.size - 9, 1]), $a([8, $1.size - 2])]), $a([$a([$1.size - 9, 2]), $a([8, $1.size - 3])]), $a([$a([$1.size - 9, 3]), $a([8, $1.size - 4])]), $a([$a([$1.size - 9, 4]), $a([8, $1.size - 5])]), $a([$a([$1.size - 9, 5]), $a([8, $1.size - 6])]), $a([$a([$1.size - 9, 6]), $a([8, $1.size - 7])]), $a([$a([$1.size - 9, 7]), $a([8, $1.size - 8])]), $a([$a([$1.size - 9, 8]), $a([8, $1.size - 9])]), $a([$a([$1.size - 8, 8]), $a([7, $1.size - 9])]), $a([$a([$1.size - 7, 8]), $a([6, $1.size - 9])]), $a([$a([$1.size - 6, 8]), $a([5, $1.size - 9])]), $a([$a([$1.size - 5, 8]), $a([4, $1.size - 9])]), $a([$a([$1.size - 4, 8]), $a([3, $1.size - 9])]), $a([$a([$1.size - 3, 8]), $a([2, $1.size - 9])]), $a([$a([$1.size - 2, 8]), $a([1, $1.size - 9])]), $a([$a([$1.size - 1, 8]), $a([0, $1.size - 9])])]); /*19977*/
		var _U1 = $1.functionmap; /*19978*/
		for (var _U2 = 0, _U3 = _U1.length; _U2 < _U3; _U2++) { /*19980*/
			$forall($get(_U1, _U2), function() { /*19979*/
				$forall($k[--$j]); /*19979*/
				$1.qmv(); /*19979*/
				$put($1.pixs, $k[--$j], 0); /*19979*/
			}); /*19979*/
		} /*19979*/
		var _UE = $a([function() {
			$j -= 2; /*19983*/
			$k[$j++] = 1; /*19983*/
		}, function() {
			var _U8 = $k[--$j]; /*19984*/
			var _U9 = $k[--$j]; /*19984*/
			$k[$j++] = (_U9 + _U8) % 2; /*19984*/
		}, function() {
			var _UA = $k[--$j]; /*19985*/
			var _UB = $k[--$j]; /*19985*/
			$k[$j++] = (((_UA + _UB) % 3) + (_UB % 3)) % 2; /*19985*/
		}, function() {
			var _UC = $k[--$j]; /*19986*/
			var _UD = $k[--$j]; /*19986*/
			$k[$j++] = ((_UD % _UC) + ((_UC % _UD) + ((_UC % 3) + (_UD % 3)))) % 2; /*19987*/
		}]); /*19987*/
		$1.maskfuncs = _UE; /*19988*/
		if ($1.mask != -1) { /*19992*/
			$1.maskfuncs = $a([$get($1.maskfuncs, $1.mask - 1)]); /*19990*/
			$1.bestmaskval = $1.mask - 1; /*19991*/
		} /*19991*/
		$1.masks = $a($1.maskfuncs.length); /*19993*/
		for (var _UP = 0, _UO = $1.masks.length - 1; _UP <= _UO; _UP += 1) { /*20007*/
			$1.m = _UP; /*19995*/
			$1.mask = $a($1.size * $1.size); /*19996*/
			for (var _UV = 0, _UU = $1.size - 1; _UV <= _UU; _UV += 1) { /*20005*/
				$1.j = _UV; /*19998*/
				for (var _UY = 0, _UX = $1.size - 1; _UY <= _UX; _UY += 1) { /*20004*/
					$1.i = _UY; /*20000*/
					$k[$j++] = $1.i + 1; /*20001*/
					$k[$j++] = $1.j + 1; /*20001*/
					$get($1.maskfuncs, $1.m)(); /*20001*/
					var _Ue = $k[--$j]; /*20001*/
					$k[$j++] = _Ue == 0; /*20002*/
					$k[$j++] = $1.pixs; /*20002*/
					$k[$j++] = $1.i; /*20002*/
					$k[$j++] = $1.j; /*20002*/
					$1.qmv(); /*20002*/
					var _Ui = $k[--$j]; /*20002*/
					var _Uk = $get($k[--$j], _Ui); /*20002*/
					var _Um = ($k[--$j] && (_Uk == -1)) ? 1 : 0; /*20002*/
					$k[$j++] = _Um; /*20003*/
					$k[$j++] = $1.mask; /*20003*/
					$k[$j++] = $1.i; /*20003*/
					$k[$j++] = $1.j; /*20003*/
					$1.qmv(); /*20003*/
					var _Uq = $k[--$j]; /*20003*/
					var _Ur = $k[--$j]; /*20003*/
					$put(_Ur, _Uq, $k[--$j]); /*20003*/
				} /*20003*/
			} /*20003*/
			$put($1.masks, $1.m, $1.mask); /*20006*/
		} /*20006*/
		$1.posx = 0; /*20010*/
		$1.posy = 0; /*20011*/
		$1.num = 0; /*20012*/
		for (;;) { /*20022*/
			if ($1.posy == $1.size) { /*20014*/
				break; /*20014*/
			} /*20014*/
			$k[$j++] = $1.pixs; /*20015*/
			$k[$j++] = $1.posx; /*20015*/
			$k[$j++] = $1.posy; /*20015*/
			$1.qmv(); /*20015*/
			var _V1 = $k[--$j]; /*20015*/
			if ($get($k[--$j], _V1) == -1) { /*20019*/
				var _V6 = $get($1.cws, ~~($1.num / 8)); /*20016*/
				var _V8 = -(7 - ($1.num % 8)); /*20016*/
				$k[$j++] = ((_V8 < 0 ? _V6 >>> -_V8 : _V6 << _V8)) & 1; /*20017*/
				$k[$j++] = $1.pixs; /*20017*/
				$k[$j++] = $1.posx; /*20017*/
				$k[$j++] = $1.posy; /*20017*/
				$1.qmv(); /*20017*/
				var _VC = $k[--$j]; /*20017*/
				var _VD = $k[--$j]; /*20017*/
				$put(_VD, _VC, $k[--$j]); /*20017*/
				$1.num = $1.num + 1; /*20018*/
			} /*20018*/
			$1.posx = $1.posx + 1; /*20020*/
			if ($1.posx == $1.size) { /*20021*/
				$1.posx = 0; /*20021*/
				$1.posy = $1.posy + 1; /*20021*/
			} /*20021*/
		} /*20021*/
		$1.evalfulln1n3 = function() {
			$1.scrle = $k[--$j]; /*20026*/
			$k[$j++] = "scr1"; /*20028*/
			$k[$j++] = 0; /*20028*/
			$forall($1.scrle, function() { /*20028*/
				var _VM = $k[--$j]; /*20028*/
				$k[$j++] = _VM; /*20028*/
				if (_VM >= 3) { /*20028*/
					var _VN = $k[--$j]; /*20028*/
					var _VP = $k[--$j] + (_VN * 4); /*20028*/
					$k[$j++] = _VP; /*20028*/
					$k[$j++] = _VP; /*20028*/
				} /*20028*/
				$j--; /*20028*/
			}); /*20028*/
			var _VQ = $k[--$j]; /*20028*/
			$1[$k[--$j]] = _VQ; /*20028*/
			$1.scr3 = 0; /*20029*/
			for (var _VU = 5, _VT = $1.scrle.length - 1; _VU <= _VT; _VU += 2) { /*20045*/
				$1.j = _VU; /*20032*/
				if (($get($1.scrle, $1.j) % 3) == 0) { /*20044*/
					$1.fact = ~~($get($1.scrle, $1.j) / 3); /*20034*/
					$forall($geti($1.scrle, $1.j - 4, 4), function() { /*20035*/
						var _Vf = $k[--$j]; /*20035*/
						$k[$j++] = _Vf == $1.fact; /*20035*/
					}); /*20035*/
					var _Vg = $k[--$j]; /*20035*/
					var _Vh = $k[--$j]; /*20035*/
					var _Vi = $k[--$j]; /*20035*/
					if ($k[--$j] && (_Vi && (_Vh && _Vg))) { /*20043*/
						if (($1.j == 5) || (($1.j + 2) >= $1.scrle.length)) { /*20040*/
							$1.scr3 = $1.scr3 + 50; /*20037*/
						} else { /*20040*/
							if (($get($1.scrle, $1.j - 5) >= 3) || ($get($1.scrle, $1.j + 1) >= 3)) { /*20041*/
								$1.scr3 = $1.scr3 + 50; /*20040*/
							} /*20040*/
						} /*20040*/
					} /*20040*/
				} /*20040*/
			} /*20040*/
			for (var _Vx = 1, _Vw = $1.scrle.length - 5; _Vx <= _Vw; _Vx += 2) { /*20061*/
				$1.j = _Vx; /*20048*/
				if (($get($1.scrle, $1.j) % 3) == 0) { /*20060*/
					$1.fact = ~~($get($1.scrle, $1.j) / 3); /*20050*/
					$forall($geti($1.scrle, $1.j + 1, 4), function() { /*20051*/
						var _W8 = $k[--$j]; /*20051*/
						$k[$j++] = _W8 == $1.fact; /*20051*/
					}); /*20051*/
					var _W9 = $k[--$j]; /*20051*/
					var _WA = $k[--$j]; /*20051*/
					var _WB = $k[--$j]; /*20051*/
					if ($k[--$j] && (_WB && (_WA && _W9))) { /*20059*/
						if (($1.j == 1) || (($1.j + 6) >= $1.scrle.length)) { /*20056*/
							$1.scr3 = $1.scr3 + 50; /*20053*/
						} else { /*20056*/
							if (($get($1.scrle, $1.j - 1) >= 3) || ($get($1.scrle, $1.j + 5) >= 3)) { /*20057*/
								$1.scr3 = $1.scr3 + 50; /*20056*/
							} /*20056*/
						} /*20056*/
					} /*20056*/
				} /*20056*/
			} /*20056*/
			$k[$j++] = $1.scr1; /*20062*/
			$k[$j++] = $1.scr3; /*20062*/
		}; /*20063*/
		$1.evalfull = function() {
			$1.sym = $k[--$j]; /*20067*/
			$1.n1 = 0; /*20069*/
			$1.n3 = 0; /*20069*/
			$1.rle = $a($1.size + 1); /*20070*/
			$1.lastpairs = $a($1.size); /*20071*/
			$1.thispairs = $a($1.size); /*20072*/
			$1.sizeadd1 = $1.size + 1; /*20073*/
			for (var _Wa = 0, _WZ = $1.size - 1; _Wa <= _WZ; _Wa += 1) { /*20098*/
				$1.i = _Wa; /*20075*/
				$k[$j++] = Infinity; /*20078*/
				var _Wc = $1.size; /*20079*/
				$k[$j++] = 0; /*20081*/
				$k[$j++] = 0; /*20081*/
				for (var _We = $1.i, _Wf = _Wc, _Wd = (_Wc * _Wc) - 1; _Wf < 0 ? _We >= _Wd : _We <= _Wd; _We += _Wf) { /*20081*/
					var _Wh = $get($1.sym, _We); /*20080*/
					var _Wi = $k[--$j]; /*20080*/
					$k[$j++] = _Wh; /*20080*/
					if ($eq(_Wi, _Wh)) { /*20080*/
						var _Wj = $k[--$j]; /*20080*/
						var _Wk = $k[--$j]; /*20080*/
						$k[$j++] = _Wk + 1; /*20080*/
						$k[$j++] = _Wj; /*20080*/
					} else { /*20080*/
						var _Wl = $k[--$j]; /*20080*/
						$k[$j++] = 1; /*20080*/
						$k[$j++] = _Wl; /*20080*/
					} /*20080*/
				} /*20080*/
				$j--; /*20082*/
				var _Wn = $counttomark() + 2; /*20083*/
				$astore($geti($1.rle, 0, _Wn - 2)); /*20083*/
				$1.evalfulln1n3(); /*20084*/
				$1.n3 = $k[--$j] + $1.n3; /*20084*/
				$1.n1 = $k[--$j] + $1.n1; /*20084*/
				$j--; /*20085*/
				$1.symrow = $geti($1.sym, $1.i * $1.size, $1.size); /*20088*/
				$k[$j++] = Infinity; /*20089*/
				$k[$j++] = 0; /*20092*/
				$k[$j++] = 0; /*20092*/
				$forall($1.symrow, function() { /*20092*/
					var _Wz = $k[--$j]; /*20091*/
					var _X0 = $k[--$j]; /*20091*/
					$k[$j++] = _Wz; /*20091*/
					if ($eq(_X0, _Wz)) { /*20091*/
						var _X1 = $k[--$j]; /*20091*/
						var _X2 = $k[--$j]; /*20091*/
						$k[$j++] = _X2 + 1; /*20091*/
						$k[$j++] = _X1; /*20091*/
					} else { /*20091*/
						var _X3 = $k[--$j]; /*20091*/
						$k[$j++] = 1; /*20091*/
						$k[$j++] = _X3; /*20091*/
					} /*20091*/
				}); /*20091*/
				$j--; /*20093*/
				var _X5 = $counttomark() + 2; /*20094*/
				$astore($geti($1.rle, 0, _X5 - 2)); /*20094*/
				$1.evalfulln1n3(); /*20095*/
				$1.n3 = $k[--$j] + $1.n3; /*20095*/
				$1.n1 = $k[--$j] + $1.n1; /*20095*/
				$j--; /*20096*/
			} /*20096*/
			$k[$j++] = $1.n1 + $1.n3; /*20100*/
		}; /*20101*/
		$1.bestscore = 999999999; /*20104*/
		for (var _XF = 0, _XE = $1.masks.length - 1; _XF <= _XE; _XF += 1) { /*20122*/
			$1.m = _XF; /*20106*/
			$1.masksym = $a($1.size * $1.size); /*20107*/
			for (var _XM = 0, _XL = ($1.size * $1.size) - 1; _XM <= _XL; _XM += 1) { /*20111*/
				$1.i = _XM; /*20109*/
				$put($1.masksym, $1.i, $xo($get($1.pixs, $1.i), $get($get($1.masks, $1.m), $1.i))); /*20110*/
			} /*20110*/
			if ($1.masks.length != 1) { /*20120*/
				$k[$j++] = $1.masksym; /*20113*/
				$1.evalfull(); /*20113*/
				$1.score = $k[--$j]; /*20113*/
				if ($1.score < $1.bestscore) { /*20118*/
					$1.bestsym = $1.masksym; /*20115*/
					$1.bestmaskval = $1.m; /*20116*/
					$1.bestscore = $1.score; /*20117*/
				} /*20117*/
			} else { /*20120*/
				$1.bestsym = $1.masksym; /*20120*/
			} /*20120*/
		} /*20120*/
		$1.pixs = $1.bestsym; /*20123*/
		$1.funval = (((((~~(($1.size - 21) / 2)) + 20) * 4) + $1.eclval) * 4) + $1.bestmaskval; /*20126*/
		$k[$j++] = $a([($1.funval & 3840) >>> 8, ($1.funval & 240) >>> 4, $1.funval & 15]); /*20130*/
		$k[$j++] = 4; /*20130*/
		$k[$j++] = 16; /*20130*/
		$k[$j++] = 19; /*20130*/
		$1.rscodes(); /*20130*/
		$1.funvals = $k[--$j]; /*20130*/
		$k[$j++] = Infinity; /*20136*/
		$forall($1.funvals, function() { /*20134*/
			$k[$j++] = 4; /*20133*/
			$1.tobin(); /*20133*/
			$forall($k[--$j], function() { /*20133*/
				var _Xr = $k[--$j]; /*20133*/
				$k[$j++] = _Xr - 48; /*20133*/
			}); /*20133*/
		}); /*20133*/
		$k[$j++] = 0; /*20135*/
		$k[$j++] = 1; /*20135*/
		$k[$j++] = 0; /*20135*/
		$k[$j++] = 1; /*20135*/
		$k[$j++] = 0; /*20135*/
		$k[$j++] = 1; /*20135*/
		$1.funbits = $a(); /*20136*/
		for (var _Xv = 0, _Xu = $1.functionmap.length - 1; _Xv <= _Xu; _Xv += 1) { /*20142*/
			$1.i = _Xv; /*20138*/
			$forall($get($1.functionmap, $1.i), function() { /*20141*/
				var _Y0 = $k[--$j]; /*20140*/
				$k[$j++] = $1.pixs; /*20140*/
				$aload(_Y0); /*20140*/
				$1.qmv(); /*20140*/
				var _Y4 = $k[--$j]; /*20140*/
				$put($k[--$j], _Y4, $get($1.funbits, $1.i)); /*20140*/
			}); /*20140*/
		} /*20140*/
		var _YC = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.size,
			pixy: $1.size,
			height: ($1.size * 2) / 72,
			width: ($1.size * 2) / 72,
			opt: $1.options
		}; /*20152*/
		$k[$j++] = _YC; /*20155*/
		if (!$1.dontdraw) { /*20155*/
			$0.renmatrix(); /*20155*/
		} /*20155*/
	};
	$0["gs1-cc"] = function() {
		var $1 = {}; /*20184*/
		$1.options = $k[--$j]; /*20186*/
		$1.barcode = $k[--$j]; /*20187*/
		$1.dontdraw = false; /*20189*/
		$1.ccversion = "a"; /*20190*/
		$1.cccolumns = -1; /*20191*/
		$1.lintype = ""; /*20192*/
		$1.linwidth = -1; /*20193*/
		$forall($1.options, function() { /*20204*/
			var _3 = $k[--$j]; /*20204*/
			$1[$k[--$j]] = _3; /*20204*/
		}); /*20204*/
		$1.cccolumns = ~~$1.cccolumns; /*20206*/
		$1.linwidth = ~~$1.linwidth; /*20207*/
		if ($1.cccolumns == -1) { /*20226*/
			$k[$j++] = Infinity; /*20224*/
			$k[$j++] = "ean13"; /*20217*/
			$k[$j++] = 4; /*20217*/
			$k[$j++] = "upca"; /*20217*/
			$k[$j++] = 4; /*20217*/
			$k[$j++] = "ean8"; /*20217*/
			$k[$j++] = 3; /*20217*/
			$k[$j++] = "upce"; /*20217*/
			$k[$j++] = 2; /*20217*/
			$k[$j++] = "gs1-128"; /*20217*/
			if ($ne($1.ccversion, "c")) { /*20217*/
				$k[$j++] = 4; /*20217*/
			} else { /*20217*/
				$k[$j++] = ~~(($1.linwidth - 52) / 17); /*20217*/
			} /*20217*/
			$k[$j++] = "databaromni"; /*20224*/
			$k[$j++] = 4; /*20224*/
			$k[$j++] = "databarstacked"; /*20224*/
			$k[$j++] = 2; /*20224*/
			$k[$j++] = "databarstackedomni"; /*20224*/
			$k[$j++] = 2; /*20224*/
			$k[$j++] = "databartruncated"; /*20224*/
			$k[$j++] = 4; /*20224*/
			$k[$j++] = "databarlimited"; /*20224*/
			$k[$j++] = 3; /*20224*/
			$k[$j++] = "databarexpanded"; /*20224*/
			$k[$j++] = 4; /*20224*/
			$k[$j++] = "databarexpandedstacked"; /*20224*/
			$k[$j++] = 4; /*20224*/
			$1.cccolumns = $get($d(), $1.lintype); /*20225*/
		} /*20225*/
		$1.expand = function() {
			$1.in = $k[--$j]; /*20230*/
			$1.out = $s($1.in.length); /*20231*/
			$1.j = 0; /*20232*/
			$k[$j++] = $1.in; /*20246*/
			for (;;) { /*20246*/
				$search($k[--$j], "^"); /*20235*/
				if ($k[--$j]) { /*20244*/
					var _J = $k[--$j]; /*20236*/
					$puti($1.out, $1.j, _J); /*20236*/
					$1.j = (_J.length + $1.j) + 1; /*20237*/
					$j--; /*20238*/
					var _N = $k[--$j]; /*20239*/
					$put($1.out, $1.j - 1, ~~$z($geti(_N, 0, 3))); /*20239*/
					$k[$j++] = $geti(_N, 3, _N.length - 3); /*20240*/
				} else { /*20244*/
					var _S = $k[--$j]; /*20242*/
					$puti($1.out, $1.j, _S); /*20242*/
					$1.j = _S.length + $1.j; /*20243*/
					$k[$j++] = $geti($1.out, 0, $1.j); /*20244*/
					break; /*20244*/
				} /*20244*/
			} /*20244*/
		}; /*20247*/
		$1.ais = $a([]); /*20250*/
		$1.aival = {}; /*20251*/
		var _a = $1.barcode; /*20252*/
		$k[$j++] = $geti(_a, 1, _a.length - 1); /*20264*/
		for (;;) { /*20264*/
			var _c = $k[--$j]; /*20254*/
			$k[$j++] = _c; /*20254*/
			if ($eq(_c, "")) { /*20254*/
				break; /*20254*/
			} /*20254*/
			$search($k[--$j], ")"); /*20255*/
			$j--; /*20255*/
			var _e = $k[--$j]; /*20256*/
			var _f = $k[--$j]; /*20256*/
			var _g = $k[--$j]; /*20257*/
			$k[$j++] = _e; /*20257*/
			$search(_g, "("); /*20257*/
			if ($k[--$j]) { /*20260*/
				var _i = $k[--$j]; /*20258*/
				var _j = $k[--$j]; /*20258*/
				var _k = $k[--$j]; /*20258*/
				var _l = $k[--$j]; /*20258*/
				$k[$j++] = _k; /*20258*/
				$k[$j++] = _l; /*20258*/
				$k[$j++] = _i; /*20258*/
			} else { /*20260*/
				var _m = $k[--$j]; /*20260*/
				var _n = $k[--$j]; /*20260*/
				$k[$j++] = ""; /*20260*/
				$k[$j++] = _n; /*20260*/
				$k[$j++] = _m; /*20260*/
			} /*20260*/
			$k[$j++] = Infinity; /*20262*/
			$aload($1.ais); /*20262*/
			var _q = $k[$j - 1 - ($counttomark() + 2)]; /*20262*/
			$k[$j++] = _q; /*20262*/
			$1.ais = $a(); /*20262*/
			var _t = $k[--$j]; /*20263*/
			var _u = $k[--$j]; /*20263*/
			$k[$j++] = $1.aival; /*20263*/
			$k[$j++] = _u; /*20263*/
			$k[$j++] = _t; /*20263*/
			$1.expand(); /*20263*/
			var _v = $k[--$j]; /*20263*/
			var _w = $k[--$j]; /*20263*/
			$put($k[--$j], _w, _v); /*20263*/
		} /*20263*/
		$j--; /*20265*/
		$1.isupper = function() {
			var _y = $k[--$j]; /*20268*/
			$k[$j++] = (_y >= 65) && (_y <= 90); /*20268*/
		}; /*20268*/
		$1.isnum0 = function() {
			var _z = $k[--$j]; /*20269*/
			$k[$j++] = (_z >= 48) && (_z <= 57); /*20269*/
		}; /*20269*/
		$1.isnum1 = function() {
			var _10 = $k[--$j]; /*20270*/
			$k[$j++] = (_10 >= 49) && (_10 <= 57); /*20270*/
		}; /*20270*/
		for (;;) { /*20316*/
			if ($1.ais.length >= 1) { /*20278*/
				if (($eq($get($1.ais, 0), "10") || $eq($get($1.ais, 0), "11")) || $eq($get($1.ais, 0), "17")) { /*20277*/
					$k[$j++] = -1; /*20276*/
					$k[$j++] = "10"; /*20276*/
					break; /*20276*/
				} /*20276*/
			} /*20276*/
			if ($1.ais.length >= 1) { /*20311*/
				if ($eq($get($1.ais, 0), "90")) { /*20310*/
					$1.v = $1.aival["90"]; /*20283*/
					if ($1.v.length >= 1) { /*20288*/
						$k[$j++] = $get($1.v, 0); /*20285*/
						$1.isupper(); /*20285*/
						if ($k[--$j]) { /*20287*/
							$k[$j++] = 0; /*20286*/
							$k[$j++] = "11"; /*20286*/
							break; /*20286*/
						} /*20286*/
					} /*20286*/
					if ($1.v.length >= 2) { /*20294*/
						$k[$j++] = $get($1.v, 0); /*20290*/
						$1.isnum1(); /*20290*/
						$k[$j++] = $get($1.v, 1); /*20291*/
						$1.isupper(); /*20291*/
						var _1M = $k[--$j]; /*20291*/
						if (($k[--$j] && _1M)) { /*20293*/
							$k[$j++] = 1; /*20292*/
							$k[$j++] = "11"; /*20292*/
							break; /*20292*/
						} /*20292*/
					} /*20292*/
					if ($1.v.length >= 3) { /*20301*/
						$k[$j++] = $get($1.v, 0); /*20296*/
						$1.isnum1(); /*20296*/
						$k[$j++] = $get($1.v, 1); /*20297*/
						$1.isnum0(); /*20297*/
						var _1T = $k[--$j]; /*20297*/
						var _1U = $k[--$j]; /*20297*/
						$k[$j++] = $an(_1U, _1T); /*20298*/
						$k[$j++] = $get($1.v, 2); /*20298*/
						$1.isupper(); /*20298*/
						var _1X = $k[--$j]; /*20298*/
						if (($k[--$j] && _1X)) { /*20300*/
							$k[$j++] = 2; /*20299*/
							$k[$j++] = "11"; /*20299*/
							break; /*20299*/
						} /*20299*/
					} /*20299*/
					if ($1.v.length >= 4) { /*20309*/
						$k[$j++] = $get($1.v, 0); /*20303*/
						$1.isnum1(); /*20303*/
						$k[$j++] = $get($1.v, 1); /*20304*/
						$1.isnum0(); /*20304*/
						var _1e = $k[--$j]; /*20304*/
						var _1f = $k[--$j]; /*20304*/
						$k[$j++] = $an(_1f, _1e); /*20305*/
						$k[$j++] = $get($1.v, 2); /*20305*/
						$1.isnum0(); /*20305*/
						var _1i = $k[--$j]; /*20305*/
						var _1j = $k[--$j]; /*20305*/
						$k[$j++] = $an(_1j, _1i); /*20306*/
						$k[$j++] = $get($1.v, 3); /*20306*/
						$1.isupper(); /*20306*/
						var _1m = $k[--$j]; /*20306*/
						if (($k[--$j] && _1m)) { /*20308*/
							$k[$j++] = 3; /*20307*/
							$k[$j++] = "11"; /*20307*/
							break; /*20307*/
						} /*20307*/
					} /*20307*/
				} /*20307*/
			} /*20307*/
			$k[$j++] = -1; /*20314*/
			$k[$j++] = "0"; /*20314*/
			break; /*20314*/
		} /*20314*/
		$1.method = $k[--$j]; /*20317*/
		$1.npre = $k[--$j]; /*20318*/
		$1.fnc1 = -1; /*20320*/
		$1.lnumeric = -2; /*20320*/
		$1.lalphanumeric = -3; /*20320*/
		$1.liso646 = -4; /*20320*/
		$1.tobin = function() {
			var _1r = $s($k[--$j]); /*20323*/
			$k[$j++] = _1r; /*20323*/
			for (var _1t = 0, _1s = _1r.length - 1; _1t <= _1s; _1t += 1) { /*20323*/
				var _1u = $k[--$j]; /*20323*/
				$put(_1u, _1t, 48); /*20323*/
				$k[$j++] = _1u; /*20323*/
			} /*20323*/
			var _1v = $k[--$j]; /*20324*/
			var _1y = $cvrs($s(_1v.length), $k[--$j], 2); /*20324*/
			$puti(_1v, _1v.length - _1y.length, _1y); /*20324*/
			$k[$j++] = _1v; /*20324*/
		}; /*20325*/
		$k[$j++] = "alpha"; /*20330*/
		$k[$j++] = Infinity; /*20330*/
		for (var _1z = 65; _1z <= 90; _1z += 1) { /*20328*/
			$k[$j++] = _1z; /*20328*/
			$k[$j++] = _1z - 65; /*20328*/
			$k[$j++] = 5; /*20328*/
			$1.tobin(); /*20328*/
		} /*20328*/
		for (var _20 = 48; _20 <= 57; _20 += 1) { /*20329*/
			$k[$j++] = _20; /*20329*/
			$k[$j++] = _20 + 4; /*20329*/
			$k[$j++] = 6; /*20329*/
			$1.tobin(); /*20329*/
		} /*20329*/
		$k[$j++] = $1.fnc1; /*20330*/
		$k[$j++] = "11111"; /*20330*/
		var _22 = $d(); /*20330*/
		$1[$k[--$j]] = _22; /*20331*/
		$k[$j++] = "numeric"; /*20343*/
		$k[$j++] = Infinity; /*20343*/
		for (var _24 = 0; _24 <= 119; _24 += 1) { /*20342*/
			var _26 = $strcpy($s(2), "00"); /*20335*/
			var _28 = $cvrs($s(2), _24, 11); /*20335*/
			$puti(_26, 2 - _28.length, _28); /*20336*/
			$k[$j++] = _24; /*20337*/
			$k[$j++] = _26; /*20337*/
			if ($get(_26, 0) == 65) { /*20337*/
				var _2A = $k[--$j]; /*20337*/
				$put(_2A, 0, 94); /*20337*/
				$k[$j++] = _2A; /*20337*/
			} /*20337*/
			var _2B = $k[--$j]; /*20338*/
			$k[$j++] = _2B; /*20338*/
			if ($get(_2B, 1) == 65) { /*20338*/
				var _2D = $k[--$j]; /*20338*/
				$put(_2D, 1, 94); /*20338*/
				$k[$j++] = _2D; /*20338*/
			} /*20338*/
			var _2E = $k[--$j]; /*20339*/
			var _2H = $strcpy($s(7), "0000000"); /*20340*/
			var _2J = $cvrs($s(7), $k[--$j] + 8, 2); /*20340*/
			$puti(_2H, 7 - _2J.length, _2J); /*20341*/
			$k[$j++] = _2E; /*20341*/
			$k[$j++] = _2H; /*20341*/
		} /*20341*/
		$k[$j++] = $1.lalphanumeric; /*20343*/
		$k[$j++] = "0000"; /*20343*/
		var _2L = $d(); /*20343*/
		$1[$k[--$j]] = _2L; /*20344*/
		$k[$j++] = "alphanumeric"; /*20353*/
		$k[$j++] = Infinity; /*20353*/
		for (var _2N = 48; _2N <= 57; _2N += 1) { /*20347*/
			$k[$j++] = _2N; /*20347*/
			$k[$j++] = _2N - 43; /*20347*/
			$k[$j++] = 5; /*20347*/
			$1.tobin(); /*20347*/
		} /*20347*/
		$k[$j++] = $1.fnc1; /*20349*/
		$k[$j++] = "01111"; /*20349*/
		for (var _2P = 65; _2P <= 90; _2P += 1) { /*20349*/
			$k[$j++] = _2P; /*20349*/
			$k[$j++] = _2P - 33; /*20349*/
			$k[$j++] = 6; /*20349*/
			$1.tobin(); /*20349*/
		} /*20349*/
		$k[$j++] = 42; /*20351*/
		$k[$j++] = "111010"; /*20351*/
		for (var _2Q = 44; _2Q <= 47; _2Q += 1) { /*20351*/
			$k[$j++] = _2Q; /*20351*/
			$k[$j++] = _2Q + 15; /*20351*/
			$k[$j++] = 6; /*20351*/
			$1.tobin(); /*20351*/
		} /*20351*/
		$k[$j++] = $1.lnumeric; /*20353*/
		$k[$j++] = "000"; /*20353*/
		$k[$j++] = $1.liso646; /*20353*/
		$k[$j++] = "00100"; /*20353*/
		var _2T = $d(); /*20353*/
		$1[$k[--$j]] = _2T; /*20354*/
		$k[$j++] = "iso646"; /*20368*/
		$k[$j++] = Infinity; /*20368*/
		for (var _2V = 48; _2V <= 57; _2V += 1) { /*20357*/
			$k[$j++] = _2V; /*20357*/
			$k[$j++] = _2V - 43; /*20357*/
			$k[$j++] = 5; /*20357*/
			$1.tobin(); /*20357*/
		} /*20357*/
		$k[$j++] = $1.fnc1; /*20359*/
		$k[$j++] = "01111"; /*20359*/
		for (var _2X = 65; _2X <= 90; _2X += 1) { /*20359*/
			$k[$j++] = _2X; /*20359*/
			$k[$j++] = _2X - 1; /*20359*/
			$k[$j++] = 7; /*20359*/
			$1.tobin(); /*20359*/
		} /*20359*/
		for (var _2Y = 97; _2Y <= 122; _2Y += 1) { /*20360*/
			$k[$j++] = _2Y; /*20360*/
			$k[$j++] = _2Y - 7; /*20360*/
			$k[$j++] = 7; /*20360*/
			$1.tobin(); /*20360*/
		} /*20360*/
		$k[$j++] = 33; /*20363*/
		$k[$j++] = "11101000"; /*20363*/
		$k[$j++] = 34; /*20363*/
		$k[$j++] = "11101001"; /*20363*/
		for (var _2Z = 37; _2Z <= 47; _2Z += 1) { /*20363*/
			$k[$j++] = _2Z; /*20363*/
			$k[$j++] = _2Z + 197; /*20363*/
			$k[$j++] = 8; /*20363*/
			$1.tobin(); /*20363*/
		} /*20363*/
		for (var _2a = 58; _2a <= 63; _2a += 1) { /*20364*/
			$k[$j++] = _2a; /*20364*/
			$k[$j++] = _2a + 187; /*20364*/
			$k[$j++] = 8; /*20364*/
			$1.tobin(); /*20364*/
		} /*20364*/
		$k[$j++] = 95; /*20368*/
		$k[$j++] = "11111011"; /*20368*/
		$k[$j++] = 32; /*20368*/
		$k[$j++] = "11111100"; /*20368*/
		$k[$j++] = $1.lnumeric; /*20368*/
		$k[$j++] = "000"; /*20368*/
		$k[$j++] = $1.lalphanumeric; /*20368*/
		$k[$j++] = "00100"; /*20368*/
		var _2d = $d(); /*20368*/
		$1[$k[--$j]] = _2d; /*20369*/
		if ($eq($1.method, "10")) { /*20400*/
			if ($eq($get($1.ais, 0), "11") || $eq($get($1.ais, 0), "17")) { /*20385*/
				var _2n = $get($1.aival, $get($1.ais, 0)); /*20373*/
				var _2s = $strcpy($s(16), "0000000000000000"); /*20377*/
				var _2u = $cvrs($s(16), ((~~$z($geti(_2n, 0, 2))) * 384) + ((((~~$z($geti(_2n, 2, 2))) - 1) * 32) + (~~$z($geti(_2n, 4, 2)))), 2); /*20377*/
				$puti(_2s, 16 - _2u.length, _2u); /*20378*/
				$k[$j++] = _2s; /*20381*/
				$k[$j++] = Infinity; /*20381*/
				var _2v = $k[--$j]; /*20380*/
				var _2w = $k[--$j]; /*20380*/
				$k[$j++] = _2v; /*20380*/
				$k[$j++] = 1; /*20380*/
				$k[$j++] = 0; /*20380*/
				$forall(_2w, function() { /*20380*/
					var _2x = $k[--$j]; /*20380*/
					$k[$j++] = _2x - 48; /*20380*/
				}); /*20380*/
				var _30 = $eq($get($1.ais, 0), "11") ? 0 : 1; /*20381*/
				$k[$j++] = _30; /*20381*/
				$1.cdf = $a(); /*20382*/
				$1.ais = $geti($1.ais, 1, $1.ais.length - 1); /*20383*/
			} else { /*20385*/
				$1.cdf = $a([1, 0, 1, 1]); /*20385*/
			} /*20385*/
			if ($1.ais.length != 0) { /*20397*/
				if ($eq($get($1.ais, 0), "10")) { /*20393*/
					$k[$j++] = Infinity; /*20389*/
					$forall($1.aival["10"]); /*20389*/
					$1.gpf = $a(); /*20389*/
					if ($1.ais.length > 1) { /*20390*/
						$k[$j++] = Infinity; /*20390*/
						$aload($1.gpf); /*20390*/
						$k[$j++] = $1.fnc1; /*20390*/
						$1.gpf = $a(); /*20390*/
					} /*20390*/
					$1.ais = $geti($1.ais, 1, $1.ais.length - 1); /*20391*/
				} else { /*20393*/
					$1.gpf = $a([$1.fnc1]); /*20393*/
				} /*20393*/
			} else { /*20397*/
				$k[$j++] = Infinity; /*20396*/
				$aload($1.cdf); /*20396*/
				$k[$j++] = 0; /*20396*/
				$k[$j++] = 0; /*20396*/
				$k[$j++] = 0; /*20396*/
				$k[$j++] = 0; /*20396*/
				$k[$j++] = 0; /*20396*/
				$k[$j++] = 1; /*20396*/
				$k[$j++] = 1; /*20396*/
				$k[$j++] = 1; /*20396*/
				$k[$j++] = 1; /*20396*/
				$1.cdf = $a(); /*20396*/
				$1.gpf = $a([]); /*20397*/
			} /*20397*/
			$1.mode = "numeric"; /*20399*/
		} /*20399*/
		if ($eq($1.method, "11")) { /*20490*/
			$1.cdf = $a([1, 1]); /*20403*/
			$1.ai90 = $1.aival["90"]; /*20404*/
			if (($1.npre + 1) != $1.ai90.length) { /*20408*/
				$k[$j++] = $geti($1.ai90, $1.npre + 1, ($1.ai90.length - $1.npre) - 1); /*20406*/
			} else { /*20408*/
				$k[$j++] = ""; /*20408*/
			} /*20408*/
			$1.ai90rem = $k[--$j]; /*20410*/
			$k[$j++] = "nalpha"; /*20411*/
			$k[$j++] = 0; /*20411*/
			$forall($1.ai90rem, function() { /*20411*/
				var _3b = $k[--$j]; /*20411*/
				if ((_3b >= 65) && (_3b <= 90)) { /*20411*/
					var _3c = $k[--$j]; /*20411*/
					$k[$j++] = _3c + 1; /*20411*/
				} /*20411*/
			}); /*20411*/
			var _3d = $k[--$j]; /*20411*/
			$1[$k[--$j]] = _3d; /*20411*/
			$k[$j++] = "nnums"; /*20412*/
			$k[$j++] = 0; /*20412*/
			$forall($1.ai90rem, function() { /*20412*/
				var _3g = $k[--$j]; /*20412*/
				if ((_3g >= 48) && (_3g <= 57)) { /*20412*/
					var _3h = $k[--$j]; /*20412*/
					$k[$j++] = _3h + 1; /*20412*/
				} /*20412*/
			}); /*20412*/
			var _3i = $k[--$j]; /*20412*/
			$1[$k[--$j]] = _3i; /*20412*/
			$k[$j++] = "mode"; /*20413*/
			if ($gt($1.nalpha, $1.nnums)) { /*20413*/
				$k[$j++] = "alpha"; /*20413*/
			} else { /*20413*/
				$k[$j++] = "numeric"; /*20413*/
			} /*20413*/
			var _3m = $k[--$j]; /*20413*/
			$1[$k[--$j]] = _3m; /*20413*/
			if (($1.nalpha + $1.nnums) != $1.ai90rem.length) { /*20414*/
				$1.mode = "alphanumeric"; /*20414*/
			} /*20414*/
			$k[$j++] = Infinity; /*20420*/
			$aload($1.cdf); /*20416*/
			if ($eq($1.mode, "alphanumeric")) { /*20417*/
				$k[$j++] = 0; /*20417*/
			} /*20417*/
			if ($eq($1.mode, "numeric")) { /*20418*/
				$k[$j++] = 1; /*20418*/
				$k[$j++] = 0; /*20418*/
			} /*20418*/
			if ($eq($1.mode, "alpha")) { /*20419*/
				$k[$j++] = 1; /*20419*/
				$k[$j++] = 1; /*20419*/
			} /*20419*/
			$1.cdf = $a(); /*20420*/
			$k[$j++] = "ais1"; /*20421*/
			if ($1.ais.length > 1) { /*20421*/
				$k[$j++] = $get($1.ais, 1); /*20421*/
			} else { /*20421*/
				$k[$j++] = -1; /*20421*/
			} /*20421*/
			var _3z = $k[--$j]; /*20421*/
			$1[$k[--$j]] = _3z; /*20421*/
			if ($eq($1.ais1, "21") || $eq($1.ais1, "8004")) { /*20425*/
				$k[$j++] = Infinity; /*20423*/
				$aload($1.cdf); /*20423*/
				if ($eq($1.ais1, "21")) { /*20423*/
					$k[$j++] = 1; /*20423*/
					$k[$j++] = 0; /*20423*/
				} else { /*20423*/
					$k[$j++] = 1; /*20423*/
					$k[$j++] = 1; /*20423*/
				} /*20423*/
				$1.cdf = $a(); /*20423*/
			} else { /*20425*/
				$k[$j++] = Infinity; /*20425*/
				$aload($1.cdf); /*20425*/
				$k[$j++] = 0; /*20425*/
				$1.cdf = $a(); /*20425*/
			} /*20425*/
			$k[$j++] = "nval"; /*20427*/
			if ($1.npre != 0) { /*20427*/
				$k[$j++] = ~~$z($geti($1.ai90, 0, $1.npre)); /*20427*/
			} else { /*20427*/
				$k[$j++] = 0; /*20427*/
			} /*20427*/
			var _4C = $k[--$j]; /*20427*/
			$1[$k[--$j]] = _4C; /*20427*/
			$search("BDHIJKLNPQRSTVXZ", $geti($1.ai90, $1.npre, 1)); /*20428*/
			if ($k[--$j]) { /*20432*/
				var _4I = $k[--$j]; /*20429*/
				var _4J = $k[--$j]; /*20429*/
				var _4K = $k[--$j]; /*20429*/
				$1.aval = _4I.length; /*20430*/
			} else { /*20432*/
				$j--; /*20432*/
				$1.aval = -1; /*20432*/
			} /*20432*/
			if (($1.nval < 31) && ($1.aval != -1)) { /*20458*/
				var _4O = $strcpy($s(5), "00000"); /*20435*/
				var _4R = $cvrs($s(5), $1.nval, 2); /*20435*/
				$puti(_4O, 5 - _4R.length, _4R); /*20436*/
				$k[$j++] = _4O; /*20437*/
				$k[$j++] = Infinity; /*20437*/
				var _4S = $k[--$j]; /*20437*/
				var _4T = $k[--$j]; /*20437*/
				$k[$j++] = _4S; /*20437*/
				$forall(_4T, function() { /*20437*/
					var _4U = $k[--$j]; /*20437*/
					$k[$j++] = _4U - 48; /*20437*/
				}); /*20437*/
				$1.nbits = $a(); /*20437*/
				var _4X = $strcpy($s(4), "0000"); /*20438*/
				var _4a = $cvrs($s(4), $1.aval, 2); /*20438*/
				$puti(_4X, 4 - _4a.length, _4a); /*20439*/
				$k[$j++] = _4X; /*20440*/
				$k[$j++] = Infinity; /*20440*/
				var _4b = $k[--$j]; /*20440*/
				var _4c = $k[--$j]; /*20440*/
				$k[$j++] = _4b; /*20440*/
				$forall(_4c, function() { /*20440*/
					var _4d = $k[--$j]; /*20440*/
					$k[$j++] = _4d - 48; /*20440*/
				}); /*20440*/
				$1.abits = $a(); /*20440*/
				$k[$j++] = Infinity; /*20445*/
				$aload($1.cdf); /*20442*/
				$aload($1.nbits); /*20443*/
				$aload($1.abits); /*20444*/
				$1.cdf = $a(); /*20445*/
			} else { /*20458*/
				var _4k = $strcpy($s(10), "0000000000"); /*20447*/
				var _4n = $cvrs($s(10), $1.nval, 2); /*20447*/
				$puti(_4k, 10 - _4n.length, _4n); /*20448*/
				$k[$j++] = _4k; /*20449*/
				$k[$j++] = Infinity; /*20449*/
				var _4o = $k[--$j]; /*20449*/
				var _4p = $k[--$j]; /*20449*/
				$k[$j++] = _4o; /*20449*/
				$forall(_4p, function() { /*20449*/
					var _4q = $k[--$j]; /*20449*/
					$k[$j++] = _4q - 48; /*20449*/
				}); /*20449*/
				$1.nbits = $a(); /*20449*/
				var _4t = $strcpy($s(5), "00000"); /*20450*/
				var _4y = $cvrs($s(5), $get($1.ai90, $1.npre) - 65, 2); /*20450*/
				$puti(_4t, 5 - _4y.length, _4y); /*20451*/
				$k[$j++] = _4t; /*20452*/
				$k[$j++] = Infinity; /*20452*/
				var _4z = $k[--$j]; /*20452*/
				var _50 = $k[--$j]; /*20452*/
				$k[$j++] = _4z; /*20452*/
				$forall(_50, function() { /*20452*/
					var _51 = $k[--$j]; /*20452*/
					$k[$j++] = _51 - 48; /*20452*/
				}); /*20452*/
				$1.abits = $a(); /*20452*/
				$k[$j++] = Infinity; /*20458*/
				$aload($1.cdf); /*20454*/
				$k[$j++] = 1; /*20456*/
				$k[$j++] = 1; /*20456*/
				$k[$j++] = 1; /*20456*/
				$k[$j++] = 1; /*20456*/
				$k[$j++] = 1; /*20456*/
				$aload($1.nbits); /*20456*/
				$aload($1.abits); /*20457*/
				$1.cdf = $a(); /*20458*/
			} /*20458*/
			if ($eq($1.mode, "numeric")) { /*20477*/
				$k[$j++] = Infinity; /*20461*/
				$forall($1.ai90rem); /*20461*/
				if ($1.ais.length > 1) { /*20461*/
					$k[$j++] = $1.fnc1; /*20461*/
				} /*20461*/
				$1.gpf = $a(); /*20461*/
			} else { /*20477*/
				$k[$j++] = "encs"; /*20463*/
				if ($eq($1.mode, "alpha")) { /*20463*/
					$k[$j++] = $1.alpha; /*20463*/
				} else { /*20463*/
					$k[$j++] = $1.alphanumeric; /*20463*/
				} /*20463*/
				var _5F = $k[--$j]; /*20463*/
				$1[$k[--$j]] = _5F; /*20463*/
				$k[$j++] = Infinity; /*20464*/
				$forall($1.ai90rem); /*20464*/
				if ($1.ais.length > 1) { /*20464*/
					$k[$j++] = $1.fnc1; /*20464*/
				} /*20464*/
				$1.in = $a(); /*20464*/
				$1.out = $a($1.in.length * 6); /*20465*/
				$1.j = 0; /*20466*/
				for (var _5P = 0, _5O = $1.in.length - 1; _5P <= _5O; _5P += 1) { /*20471*/
					var _5T = $get($1.encs, $get($1.in, _5P)); /*20468*/
					$k[$j++] = _5T; /*20469*/
					$k[$j++] = _5T; /*20469*/
					$k[$j++] = Infinity; /*20469*/
					var _5U = $k[--$j]; /*20469*/
					var _5V = $k[--$j]; /*20469*/
					$k[$j++] = _5U; /*20469*/
					$forall(_5V, function() { /*20469*/
						var _5W = $k[--$j]; /*20469*/
						$k[$j++] = _5W - 48; /*20469*/
					}); /*20469*/
					$puti($1.out, $1.j, $a()); /*20469*/
					$1.j = $k[--$j].length + $1.j; /*20470*/
				} /*20470*/
				$k[$j++] = Infinity; /*20475*/
				$aload($1.cdf); /*20473*/
				$aload($geti($1.out, 0, $1.j)); /*20474*/
				$1.cdf = $a(); /*20475*/
				$1.gpf = $a([]); /*20476*/
				if (($1.ais.length > 1) || $ne($1.mode, "alpha")) { /*20477*/
					$1.mode = "numeric"; /*20477*/
				} /*20477*/
			} /*20477*/
			$1.ais = $geti($1.ais, 1, $1.ais.length - 1); /*20479*/
			if ($1.ais.length != 0) { /*20489*/
				if ($eq($1.ais1, "21") || $eq($1.ais1, "8004")) { /*20488*/
					$k[$j++] = Infinity; /*20485*/
					$aload($1.gpf); /*20483*/
					$forall($get($1.aival, $1.ais1)); /*20484*/
					$1.gpf = $a(); /*20485*/
					$1.ais = $geti($1.ais, 1, $1.ais.length - 1); /*20486*/
					if ($1.ais.length != 0) { /*20487*/
						$k[$j++] = Infinity; /*20487*/
						$aload($1.gpf); /*20487*/
						$k[$j++] = $1.fnc1; /*20487*/
						$1.gpf = $a(); /*20487*/
					} /*20487*/
				} /*20487*/
			} /*20487*/
		} /*20487*/
		if ($eq($1.method, "0")) { /*20496*/
			$1.cdf = $a([0]); /*20493*/
			$1.gpf = $a([]); /*20494*/
			$1.mode = "numeric"; /*20495*/
		} /*20495*/
		$1.aifixed = {}; /*20501*/
		$k[$j++] = Infinity; /*20503*/
		for (var _65 = 0; _65 <= 4; _65 += 1) { /*20503*/
			$k[$j++] = _65; /*20503*/
		} /*20503*/
		var _66 = $a(); /*20503*/
		for (var _67 = 0, _68 = _66.length; _67 < _68; _67++) { /*20506*/
			var _6B = $strcpy($s(2), "00"); /*20505*/
			$put(_6B, 1, $get(_66, _67) + 48); /*20505*/
			$put($1.aifixed, _6B, _6B); /*20505*/
		} /*20505*/
		$k[$j++] = Infinity; /*20511*/
		for (var _6D = 11; _6D <= 20; _6D += 1) { /*20508*/
			$k[$j++] = _6D; /*20508*/
		} /*20508*/
		$k[$j++] = 23; /*20510*/
		for (var _6E = 31; _6E <= 36; _6E += 1) { /*20510*/
			$k[$j++] = _6E; /*20510*/
		} /*20510*/
		$k[$j++] = 41; /*20511*/
		var _6F = $a(); /*20511*/
		for (var _6G = 0, _6H = _6F.length; _6G < _6H; _6G++) { /*20514*/
			var _6K = $cvrs($s(2), $get(_6F, _6G), 10); /*20513*/
			$put($1.aifixed, _6K, _6K); /*20513*/
		} /*20513*/
		for (var _6O = 0, _6N = $1.ais.length - 1; _6O <= _6N; _6O += 1) { /*20532*/
			$1.i = _6O; /*20518*/
			$1.ai = $get($1.ais, $1.i); /*20519*/
			$1.val = $get($1.aival, $1.ai); /*20520*/
			var _6Y = $a(($1.gpf.length + $1.ai.length) + $1.val.length); /*20521*/
			$puti(_6Y, 0, $1.gpf); /*20522*/
			$k[$j++] = _6Y; /*20523*/
			$k[$j++] = _6Y; /*20523*/
			$k[$j++] = $1.gpf.length; /*20523*/
			$k[$j++] = $1.ai; /*20523*/
			$k[$j++] = Infinity; /*20523*/
			var _6c = $k[--$j]; /*20523*/
			var _6d = $k[--$j]; /*20523*/
			$k[$j++] = _6c; /*20523*/
			$forall(_6d); /*20523*/
			var _6e = $a(); /*20523*/
			var _6f = $k[--$j]; /*20523*/
			$puti($k[--$j], _6f, _6e); /*20523*/
			var _6h = $k[--$j]; /*20524*/
			$k[$j++] = _6h; /*20524*/
			$k[$j++] = _6h; /*20524*/
			$k[$j++] = $1.gpf.length + $1.ai.length; /*20524*/
			$k[$j++] = $1.val; /*20524*/
			$k[$j++] = Infinity; /*20524*/
			var _6l = $k[--$j]; /*20524*/
			var _6m = $k[--$j]; /*20524*/
			$k[$j++] = _6l; /*20524*/
			$forall(_6m); /*20524*/
			var _6n = $a(); /*20524*/
			var _6o = $k[--$j]; /*20524*/
			$puti($k[--$j], _6o, _6n); /*20524*/
			$1.gpf = $k[--$j]; /*20525*/
			var _6w = $get($1.aifixed, $geti($1.ai, 0, 2)) !== undefined; /*20526*/
			if (($1.i != ($1.ais.length - 1)) && (!_6w)) { /*20531*/
				var _6y = $a($1.gpf.length + 1); /*20527*/
				$puti(_6y, 0, $1.gpf); /*20528*/
				$put(_6y, $1.gpf.length, $1.fnc1); /*20529*/
				$1.gpf = _6y; /*20530*/
			} /*20530*/
		} /*20530*/
		$1.rembits = function() {
			$1.used = $k[--$j]; /*20536*/
			if ($ne($1.ccversion, "c")) { /*20565*/
				var _7C = {
					a: $a([$a([167, 138, 118, 108, 88, 78, 59]), $a([167, 138, 118, 98, 78]), $a([197, 167, 138, 108, 78])]),
					b: $a([$a([336, 296, 256, 208, 160, 104, 56]), $a([768, 648, 536, 416, 304, 208, 152, 112, 72, 32]), $a([1184, 1016, 840, 672, 496, 352, 264, 208, 152, 96, 56])])
				}; /*20547*/
				$1.bitcaps = $get($get(_7C, $1.ccversion), $1.cccolumns - 2); /*20549*/
				$k[$j++] = -1; /*20550*/
				$forall($1.bitcaps, function() { /*20550*/
					var _7I = $k[--$j]; /*20550*/
					$k[$j++] = _7I; /*20550*/
					if ($ge(_7I, $1.used)) { /*20550*/
						var _7K = $k[--$j]; /*20550*/
						var _7L = $k[--$j]; /*20550*/
						$k[$j++] = _7K; /*20550*/
						$k[$j++] = _7L; /*20550*/
					} /*20550*/
					$j--; /*20550*/
				}); /*20550*/
				var _7M = $k[--$j]; /*20551*/
				$k[$j++] = _7M; /*20551*/
				if (_7M != -1) { /*20551*/
					var _7O = $k[--$j]; /*20551*/
					$k[$j++] = _7O - $1.used; /*20551*/
				} /*20551*/
			} else { /*20565*/
				var _7P = {
					c: -1
				}; /*20553*/
				var _7R = $get(_7P, $1.ccversion); /*20553*/
				var _7T = ~~Math.ceil($1.used / 8); /*20554*/
				$1.m = ((~~(_7T / 6)) * 5) + (_7T % 6); /*20554*/
				if ($1.m <= 40) { /*20555*/
					$k[$j++] = 8; /*20555*/
				} /*20555*/
				if (($1.m >= 41) && ($1.m <= 160)) { /*20556*/
					$k[$j++] = 16; /*20556*/
				} /*20556*/
				if (($1.m >= 161) && ($1.m <= 320)) { /*20557*/
					$k[$j++] = 32; /*20557*/
				} /*20557*/
				if ($1.m >= 321) { /*20558*/
					$k[$j++] = 64; /*20558*/
				} /*20558*/
				$1.eccws = $k[--$j]; /*20559*/
				$1.m = ($1.m + $1.eccws) + 3; /*20560*/
				$1.c = ~~(($1.linwidth - 52) / 17); /*20561*/
				if ((~~($1.m / $1.c)) > 90) { /*20562*/
					$1.c = $1.c + 1; /*20562*/
				} /*20562*/
				$1.r = ~~Math.ceil($1.m / $1.c); /*20563*/
				var _7m = (($1.c * $1.r) - $1.eccws) - 3; /*20564*/
				$1.tgt = (((~~(_7m / 5)) * 6) + (_7m % 5)) * 8; /*20564*/
				if ($1.used <= 8296) { /*20565*/
					$k[$j++] = $1.tgt - $1.used; /*20565*/
				} else { /*20565*/
					$k[$j++] = -1; /*20565*/
				} /*20565*/
			} /*20565*/
			var _7q = $k[--$j]; /*20567*/
			$k[$j++] = _7q; /*20580*/
			if (_7q == -1) { /*20580*/
				$j--; /*20568*/
				if ($eq($1.ccversion, "a")) { /*20576*/
					$1.ccversion = "b"; /*20570*/
				} else { /*20576*/
					if ($eq($1.ccversion, "b") && $eq($1.lintype, "gs1-128")) { /*20576*/
						$1.ccversion = "c"; /*20573*/
						$1.cccolumns = ~~(($1.linwidth - 52) / 17); /*20574*/
					} else { /*20576*/
						$1.ccversion = -1; /*20576*/
					} /*20576*/
				} /*20576*/
				$k[$j++] = $1.used; /*20579*/
				$1.rembits(); /*20579*/
			} /*20579*/
		}; /*20581*/
		$1.encode = function() {
			var _7w = $k[--$j]; /*20584*/
			$k[$j++] = _7w; /*20584*/
			if ($ne(_7w, "raw")) { /*20584*/
				var _7x = $k[--$j]; /*20584*/
				var _7z = $get(_7x, $k[--$j]); /*20584*/
				$k[$j++] = _7z; /*20584*/
			} else { /*20584*/
				$j--; /*20584*/
			} /*20584*/
			$k[$j++] = Infinity; /*20585*/
			var _80 = $k[--$j]; /*20585*/
			var _81 = $k[--$j]; /*20585*/
			$k[$j++] = _80; /*20585*/
			$forall(_81, function() { /*20585*/
				var _82 = $k[--$j]; /*20585*/
				$k[$j++] = _82 - 48; /*20585*/
			}); /*20585*/
			var _83 = $a(); /*20585*/
			$puti($1.gpfenc, $1.j, _83); /*20587*/
			$1.j = _83.length + $1.j; /*20588*/
		}; /*20589*/
		$k[$j++] = Infinity; /*20592*/
		for (var _88 = 0, _89 = $1.gpf.length; _88 < _89; _88++) { /*20592*/
			$k[$j++] = 0; /*20592*/
		} /*20592*/
		$k[$j++] = 0; /*20592*/
		$k[$j++] = -1; /*20592*/
		$1.numericruns = $a(); /*20592*/
		$k[$j++] = Infinity; /*20593*/
		for (var _8C = 0, _8D = $1.gpf.length; _8C < _8D; _8C++) { /*20593*/
			$k[$j++] = 0; /*20593*/
		} /*20593*/
		$k[$j++] = 0; /*20593*/
		$1.alphanumericruns = $a(); /*20593*/
		$k[$j++] = Infinity; /*20594*/
		for (var _8G = 0, _8H = $1.gpf.length; _8G < _8H; _8G++) { /*20594*/
			$k[$j++] = 0; /*20594*/
		} /*20594*/
		$k[$j++] = 9999; /*20594*/
		$1.nextiso646only = $a(); /*20594*/
		for (var _8K = $1.gpf.length - 1; _8K >= 0; _8K -= 1) { /*20616*/
			$1.i = _8K; /*20596*/
			var _8P = $strcpy($s(2), "00"); /*20598*/
			var _8S = $get($1.gpf, $1.i); /*20599*/
			$k[$j++] = $get($1.gpf, $1.i); /*20599*/
			$k[$j++] = _8P; /*20599*/
			$k[$j++] = _8P; /*20599*/
			$k[$j++] = 0; /*20599*/
			$k[$j++] = _8S; /*20599*/
			if (_8S == $1.fnc1) { /*20599*/
				$j--; /*20599*/
				$k[$j++] = 94; /*20599*/
			} /*20599*/
			var _8U = $k[--$j]; /*20599*/
			var _8V = $k[--$j]; /*20599*/
			$put($k[--$j], _8V, _8U); /*20599*/
			if ($1.i < ($1.gpf.length - 1)) { /*20600*/
				var _8Z = $k[--$j]; /*20600*/
				var _8c = $get($1.gpf, $1.i + 1); /*20600*/
				$k[$j++] = _8Z; /*20600*/
				$k[$j++] = _8Z; /*20600*/
				$k[$j++] = 1; /*20600*/
				$k[$j++] = _8c; /*20600*/
				if (_8c == $1.fnc1) { /*20600*/
					$j--; /*20600*/
					$k[$j++] = 94; /*20600*/
				} /*20600*/
				var _8e = $k[--$j]; /*20600*/
				var _8f = $k[--$j]; /*20600*/
				$put($k[--$j], _8f, _8e); /*20600*/
			} /*20600*/
			var _8j = $get($1.numeric, $k[--$j]) !== undefined; /*20601*/
			if (_8j) { /*20604*/
				$put($1.numericruns, $1.i, $get($1.numericruns, $1.i + 2) + 2); /*20602*/
			} else { /*20604*/
				$put($1.numericruns, $1.i, 0); /*20604*/
			} /*20604*/
			var _8r = $k[--$j]; /*20606*/
			var _8t = $get($1.alphanumeric, _8r) !== undefined; /*20606*/
			$k[$j++] = _8r; /*20610*/
			if (_8t) { /*20609*/
				$put($1.alphanumericruns, $1.i, $get($1.alphanumericruns, $1.i + 1) + 1); /*20607*/
			} else { /*20609*/
				$put($1.alphanumericruns, $1.i, 0); /*20609*/
			} /*20609*/
			var _91 = $k[--$j]; /*20611*/
			var _93 = $get($1.iso646, _91) !== undefined; /*20611*/
			var _95 = $get($1.alphanumeric, _91) !== undefined; /*20611*/
			if (_93 && (!_95)) { /*20614*/
				$put($1.nextiso646only, $1.i, 0); /*20612*/
			} else { /*20614*/
				$put($1.nextiso646only, $1.i, $get($1.nextiso646only, $1.i + 1) + 1); /*20614*/
			} /*20614*/
		} /*20614*/
		$1.gpfenc = $a(8296); /*20619*/
		$1.i = 0; /*20620*/
		$1.j = 0; /*20620*/
		for (;;) { /*20710*/
			if ($1.i == $1.gpf.length) { /*20622*/
				break; /*20622*/
			} /*20622*/
			for (;;) { /*20709*/
				if ($eq($1.mode, "numeric")) { /*20658*/
					if ($1.i <= ($1.gpf.length - 2)) { /*20655*/
						var _9J = $s(2); /*20627*/
						var _9M = $get($1.gpf, $1.i); /*20628*/
						$k[$j++] = _9J; /*20628*/
						$k[$j++] = _9J; /*20628*/
						$k[$j++] = 0; /*20628*/
						$k[$j++] = _9M; /*20628*/
						if (_9M == $1.fnc1) { /*20628*/
							$j--; /*20628*/
							$k[$j++] = 94; /*20628*/
						} /*20628*/
						var _9O = $k[--$j]; /*20628*/
						var _9P = $k[--$j]; /*20628*/
						$put($k[--$j], _9P, _9O); /*20628*/
						var _9R = $k[--$j]; /*20629*/
						var _9U = $get($1.gpf, $1.i + 1); /*20629*/
						$k[$j++] = _9R; /*20629*/
						$k[$j++] = _9R; /*20629*/
						$k[$j++] = 1; /*20629*/
						$k[$j++] = _9U; /*20629*/
						if (_9U == $1.fnc1) { /*20629*/
							$j--; /*20629*/
							$k[$j++] = 94; /*20629*/
						} /*20629*/
						var _9W = $k[--$j]; /*20629*/
						var _9X = $k[--$j]; /*20629*/
						$put($k[--$j], _9X, _9W); /*20629*/
						var _9Z = $k[--$j]; /*20630*/
						var _9b = $get($1.numeric, _9Z) !== undefined; /*20630*/
						$k[$j++] = _9Z; /*20634*/
						if (_9b) { /*20634*/
							$k[$j++] = $1.numeric; /*20631*/
							$1.encode(); /*20631*/
							$1.i = $1.i + 2; /*20632*/
							break; /*20633*/
						} /*20633*/
						$j--; /*20635*/
						$k[$j++] = $1.lalphanumeric; /*20636*/
						$k[$j++] = $1.numeric; /*20636*/
						$1.encode(); /*20636*/
						$1.mode = "alphanumeric"; /*20637*/
						break; /*20638*/
					} else { /*20655*/
						var _9i = $get($1.gpf, $1.i); /*20640*/
						if ((_9i < 48) || (_9i > 57)) { /*20644*/
							$k[$j++] = $1.lalphanumeric; /*20641*/
							$k[$j++] = $1.numeric; /*20641*/
							$1.encode(); /*20641*/
							$1.mode = "alphanumeric"; /*20642*/
							break; /*20643*/
						} /*20643*/
						$k[$j++] = "rem"; /*20645*/
						$k[$j++] = $1.cdf.length + $1.j; /*20645*/
						$1.rembits(); /*20645*/
						var _9n = $k[--$j]; /*20645*/
						$1[$k[--$j]] = _9n; /*20645*/
						if (($1.rem >= 4) && ($1.rem <= 6)) { /*20655*/
							var _9u = $geti($strcpy($s(6), "000000"), 0, $1.rem); /*20647*/
							var _9z = $cvrs($s(4), $get($1.gpf, $1.i) - 47, 2); /*20648*/
							$puti(_9u, 4 - _9z.length, _9z); /*20649*/
							$k[$j++] = _9u; /*20649*/
							$k[$j++] = "raw"; /*20649*/
							$1.encode(); /*20649*/
							$1.i = $1.i + 1; /*20650*/
							break; /*20651*/
						} else { /*20655*/
							var _A1 = $s(2); /*20653*/
							$put(_A1, 0, $get($1.gpf, $1.i)); /*20653*/
							$put(_A1, 1, 94); /*20653*/
							$k[$j++] = _A1; /*20653*/
							$k[$j++] = $1.numeric; /*20653*/
							$1.encode(); /*20653*/
							$1.i = $1.i + 1; /*20654*/
							break; /*20655*/
						} /*20655*/
					} /*20655*/
				} /*20655*/
				if ($eq($1.mode, "alphanumeric")) { /*20685*/
					if ($get($1.gpf, $1.i) == $1.fnc1) { /*20666*/
						$k[$j++] = $1.fnc1; /*20662*/
						$k[$j++] = $1.alphanumeric; /*20662*/
						$1.encode(); /*20662*/
						$1.mode = "numeric"; /*20663*/
						$1.i = $1.i + 1; /*20664*/
						break; /*20665*/
					} /*20665*/
					var _AH = $get($1.gpf, $1.i); /*20667*/
					var _AJ = $get($1.iso646, _AH) !== undefined; /*20667*/
					var _AL = $get($1.alphanumeric, _AH) !== undefined; /*20667*/
					if (_AJ && (!_AL)) { /*20671*/
						$k[$j++] = $1.liso646; /*20668*/
						$k[$j++] = $1.alphanumeric; /*20668*/
						$1.encode(); /*20668*/
						$1.mode = "iso646"; /*20669*/
						break; /*20670*/
					} /*20670*/
					if ($get($1.numericruns, $1.i) >= 6) { /*20676*/
						$k[$j++] = $1.lnumeric; /*20673*/
						$k[$j++] = $1.alphanumeric; /*20673*/
						$1.encode(); /*20673*/
						$1.mode = "numeric"; /*20674*/
						break; /*20675*/
					} /*20675*/
					var _AV = $get($1.numericruns, $1.i); /*20677*/
					if ((_AV >= 4) && ((_AV + $1.i) == $1.gpf.length)) { /*20681*/
						$k[$j++] = $1.lnumeric; /*20678*/
						$k[$j++] = $1.alphanumeric; /*20678*/
						$1.encode(); /*20678*/
						$1.mode = "numeric"; /*20679*/
						break; /*20680*/
					} /*20680*/
					$k[$j++] = $get($1.gpf, $1.i); /*20682*/
					$k[$j++] = $1.alphanumeric; /*20682*/
					$1.encode(); /*20682*/
					$1.i = $1.i + 1; /*20683*/
					break; /*20684*/
				} /*20684*/
				if ($eq($1.mode, "iso646")) { /*20707*/
					if ($get($1.gpf, $1.i) == $1.fnc1) { /*20693*/
						$k[$j++] = $1.fnc1; /*20689*/
						$k[$j++] = $1.iso646; /*20689*/
						$1.encode(); /*20689*/
						$1.mode = "numeric"; /*20690*/
						$1.i = $1.i + 1; /*20691*/
						break; /*20692*/
					} /*20692*/
					if (($get($1.numericruns, $1.i) >= 4) && ($get($1.nextiso646only, $1.i) >= 10)) { /*20698*/
						$k[$j++] = $1.lnumeric; /*20695*/
						$k[$j++] = $1.iso646; /*20695*/
						$1.encode(); /*20695*/
						$1.mode = "numeric"; /*20696*/
						break; /*20697*/
					} /*20697*/
					if (($get($1.alphanumericruns, $1.i) >= 5) && ($get($1.nextiso646only, $1.i) >= 10)) { /*20703*/
						$k[$j++] = $1.lalphanumeric; /*20700*/
						$k[$j++] = $1.iso646; /*20700*/
						$1.encode(); /*20700*/
						$1.mode = "alphanumeric"; /*20701*/
						break; /*20702*/
					} /*20702*/
					$k[$j++] = $get($1.gpf, $1.i); /*20704*/
					$k[$j++] = $1.iso646; /*20704*/
					$1.encode(); /*20704*/
					$1.i = $1.i + 1; /*20705*/
					break; /*20706*/
				} /*20706*/
			} /*20706*/
		} /*20706*/
		$1.gpf = $geti($1.gpfenc, 0, $1.j); /*20711*/
		$k[$j++] = "pad"; /*20714*/
		$k[$j++] = $1.cdf.length + $1.gpf.length; /*20714*/
		$1.rembits(); /*20714*/
		var _BE = $a($k[--$j]); /*20714*/
		$1[$k[--$j]] = _BE; /*20714*/
		if ($1.pad.length > 0) { /*20726*/
			for (var _BJ = 0, _BI = $1.pad.length - 1; _BJ <= _BI; _BJ += 5) { /*20719*/
				$1.i = _BJ; /*20717*/
				var _BK = $1.pad; /*20718*/
				var _BL = $1.i; /*20718*/
				var _BM = $a([0, 0, 1, 0, 0]); /*20718*/
				var _BN = $1.pad; /*20718*/
				var _BO = $1.i; /*20718*/
				var _BP = 5; /*20718*/
				var _BQ = _BN.length - _BO; /*20718*/
				if ((_BN.length - _BO) > 5) { /*20718*/
					var _ = _BP; /*20718*/
					_BP = _BQ; /*20718*/
					_BQ = _; /*20718*/
				} /*20718*/
				$puti(_BK, _BL, $geti(_BM, 0, _BQ)); /*20718*/
			} /*20718*/
			if ($eq($1.mode, "numeric")) { /*20722*/
				$k[$j++] = "pad"; /*20721*/
				$k[$j++] = Infinity; /*20721*/
				$k[$j++] = 0; /*20721*/
				$k[$j++] = 0; /*20721*/
				$k[$j++] = 0; /*20721*/
				$k[$j++] = 0; /*20721*/
				$aload($1.pad); /*20721*/
				var _BW = $geti($a(), 0, $1.pad.length); /*20721*/
				$1[$k[--$j]] = _BW; /*20721*/
			} /*20721*/
			if ($eq($1.mode, "alpha")) { /*20725*/
				$k[$j++] = "pad"; /*20724*/
				$k[$j++] = Infinity; /*20724*/
				$k[$j++] = 1; /*20724*/
				$k[$j++] = 1; /*20724*/
				$k[$j++] = 1; /*20724*/
				$k[$j++] = 1; /*20724*/
				$k[$j++] = 1; /*20724*/
				$aload($1.pad); /*20724*/
				var _Bc = $geti($a(), 0, $1.pad.length); /*20724*/
				$1[$k[--$j]] = _Bc; /*20724*/
			} /*20724*/
		} /*20724*/
		$k[$j++] = Infinity; /*20733*/
		$aload($1.cdf); /*20730*/
		$aload($1.gpf); /*20731*/
		$aload($1.pad); /*20732*/
		$1.bits = $a(); /*20733*/
		if ($1.ccversion == "a") { /*20788*/
			$k[$j++] = Infinity; /*20739*/
			$k[$j++] = $a([0, 0, 0, 0, 0, 0, 1]); /*20738*/
			for (var _Bk = 0, _Bl = 68; _Bk < _Bl; _Bk++) { /*20738*/
				$k[$j++] = $a(7); /*20738*/
			} /*20738*/
			$1.pwr928 = $a(); /*20739*/
			for (var _Bo = 1; _Bo <= 68; _Bo += 1) { /*20749*/
				$1.j = _Bo; /*20741*/
				$1.v = 0; /*20742*/
				for (var _Bp = 6; _Bp >= 1; _Bp -= 1) { /*20747*/
					$1.i = _Bp; /*20744*/
					$1.v = ($get($get($1.pwr928, $1.j - 1), $1.i) * 2) + (~~($1.v / 928)); /*20745*/
					$put($get($1.pwr928, $1.j), $1.i, $1.v % 928); /*20746*/
				} /*20746*/
				$put($get($1.pwr928, $1.j), 0, ($get($get($1.pwr928, $1.j - 1), 0) * 2) + (~~($1.v / 928))); /*20748*/
			} /*20748*/
			$k[$j++] = Infinity; /*20750*/
			for (var _C9 = 0, _CA = 28; _C9 < _CA; _C9++) { /*20750*/
				$k[$j++] = 0; /*20750*/
			} /*20750*/
			$1.cws = $a(); /*20750*/
			$1.b = 0; /*20751*/
			$1.c = 0; /*20751*/
			for (;;) { /*20775*/
				if ($1.b == $1.bits.length) { /*20753*/
					break; /*20753*/
				} /*20753*/
				var _CE = $1.bits; /*20754*/
				var _CF = $1.b; /*20754*/
				var _CG = $1.bits; /*20754*/
				var _CH = $1.b; /*20754*/
				var _CI = _CG.length - _CH; /*20754*/
				var _CJ = 69; /*20754*/
				if (69 > (_CG.length - _CH)) { /*20754*/
					var _ = _CI; /*20754*/
					_CI = _CJ; /*20754*/
					_CJ = _; /*20754*/
				} /*20754*/
				$1.bs = $geti(_CE, _CF, _CJ); /*20754*/
				$1.bsl = $1.bs.length; /*20755*/
				$1.cs = $geti($1.cws, $1.c, (~~($1.bsl / 10)) + 1); /*20756*/
				$1.csl = $1.cs.length; /*20757*/
				for (var _CT = 0, _CS = $1.bsl - 1; _CT <= _CS; _CT += 1) { /*20767*/
					$1.i = _CT; /*20759*/
					for (var _CW = 0, _CV = $1.csl - 1; _CW <= _CV; _CW += 1) { /*20766*/
						$1.j = _CW; /*20761*/
						var _CX = $1.cs; /*20762*/
						var _CY = $1.j; /*20762*/
						$put(_CX, _CY, $get(_CX, _CY) + ($get($get($1.pwr928, $1.i), ($1.j + 7) - $1.csl) * $get($1.bs, ($1.bsl - $1.i) - 1))); /*20765*/
					} /*20765*/
				} /*20765*/
				for (var _Cl = $1.csl - 1; _Cl >= 1; _Cl -= 1) { /*20772*/
					$1.i = _Cl; /*20769*/
					var _Cm = $1.cs; /*20770*/
					var _Cn = $1.i; /*20770*/
					$put(_Cm, _Cn - 1, $get(_Cm, _Cn - 1) + (~~($get($1.cs, $1.i) / 928))); /*20770*/
					var _Cs = $1.cs; /*20771*/
					var _Ct = $1.i; /*20771*/
					$put(_Cs, _Ct, $get(_Cs, _Ct) % 928); /*20771*/
				} /*20771*/
				$1.b = $1.b + $1.bsl; /*20773*/
				$1.c = $1.c + $1.csl; /*20774*/
			} /*20774*/
			$1.cws = $geti($1.cws, 0, $1.c); /*20776*/
			$1.barcode = $s($1.cws.length * 4); /*20777*/
			for (var _D6 = 0, _D5 = $1.cws.length - 1; _D6 <= _D5; _D6 += 1) { /*20783*/
				$1.i = _D6; /*20779*/
				var _D8 = $strcpy($s(4), "^   "); /*20780*/
				var _DD = $cvrs($s(4), $get($1.cws, $1.i), 10); /*20780*/
				$puti(_D8, 4 - _DD.length, _DD); /*20781*/
				$puti($1.barcode, $1.i * 4, _D8); /*20782*/
			} /*20782*/
			$1.options.dontdraw = true; /*20784*/
			$1.options.cca = true; /*20785*/
			$1.options.columns = $1.cccolumns; /*20786*/
			$k[$j++] = "args"; /*20787*/
			$k[$j++] = $1.barcode; /*20787*/
			$k[$j++] = $1.options; /*20787*/
			$0.micropdf417(); /*20787*/
			var _DM = $k[--$j]; /*20787*/
			$1[$k[--$j]] = _DM; /*20787*/
		} /*20787*/
		if ($1.ccversion == "b") { /*20801*/
			$1.barcode = $s(~~($1.bits.length / 8)); /*20791*/
			for (var _DT = 0, _DS = $1.barcode.length - 1; _DT <= _DS; _DT += 1) { /*20796*/
				$1.i = _DT; /*20793*/
				$k[$j++] = 0; /*20794*/
				$forall($geti($1.bits, $1.i * 8, 8), function() { /*20794*/
					var _DX = $k[--$j]; /*20794*/
					var _DY = $k[--$j]; /*20794*/
					$k[$j++] = (_DY + _DX) * 2; /*20794*/
				}); /*20794*/
				$put($1.barcode, $1.i, ~~($k[--$j] / 2)); /*20795*/
			} /*20795*/
			$1.options.dontdraw = true; /*20797*/
			$1.options.ccb = true; /*20798*/
			$1.options.columns = $1.cccolumns; /*20799*/
			$k[$j++] = "args"; /*20800*/
			$k[$j++] = $1.barcode; /*20800*/
			$k[$j++] = $1.options; /*20800*/
			$0.micropdf417(); /*20800*/
			var _Di = $k[--$j]; /*20800*/
			$1[$k[--$j]] = _Di; /*20800*/
		} /*20800*/
		if ($1.ccversion == "c") { /*20814*/
			$1.barcode = $s(~~($1.bits.length / 8)); /*20804*/
			for (var _Dp = 0, _Do = $1.barcode.length - 1; _Dp <= _Do; _Dp += 1) { /*20809*/
				$1.i = _Dp; /*20806*/
				$k[$j++] = 0; /*20807*/
				$forall($geti($1.bits, $1.i * 8, 8), function() { /*20807*/
					var _Dt = $k[--$j]; /*20807*/
					var _Du = $k[--$j]; /*20807*/
					$k[$j++] = (_Du + _Dt) * 2; /*20807*/
				}); /*20807*/
				$put($1.barcode, $1.i, ~~($k[--$j] / 2)); /*20808*/
			} /*20808*/
			$1.options.dontdraw = true; /*20810*/
			$1.options.ccc = true; /*20811*/
			$1.options.columns = $1.cccolumns; /*20812*/
			$k[$j++] = "args"; /*20813*/
			$k[$j++] = $1.barcode; /*20813*/
			$k[$j++] = $1.options; /*20813*/
			$0.pdf417(); /*20813*/
			var _E4 = $k[--$j]; /*20813*/
			$1[$k[--$j]] = _E4; /*20813*/
		} /*20813*/
		$k[$j++] = $1.args; /*20817*/
		if (!$1.dontdraw) { /*20817*/
			$0.renmatrix(); /*20817*/
		} /*20817*/
	};
	$0.ean13composite = function() {
		var $1 = {}; /*20847*/
		$1.options = $k[--$j]; /*20849*/
		$1.barcode = $k[--$j]; /*20850*/
		$1.dontdraw = false; /*20852*/
		$forall($1.options, function() { /*20863*/
			var _3 = $k[--$j]; /*20863*/
			$1[$k[--$j]] = _3; /*20863*/
		}); /*20863*/
		$search($1.barcode, "|"); /*20866*/
		if ($k[--$j]) { /*20871*/
			$1.linear = $k[--$j]; /*20867*/
			$j--; /*20868*/
			$1.comp = $k[--$j]; /*20869*/
		} else { /*20871*/
			$j--; /*20871*/
		} /*20871*/
		$$.save(); /*20874*/
		$1.options.lintype = "ean13"; /*20876*/
		$1.options.inkspread = "0"; /*20877*/
		$1.options.dontdraw = true; /*20878*/
		$k[$j++] = $1.linear; /*20881*/
		$k[$j++] = $1.options; /*20881*/
		$0.ean13(); /*20881*/
		$0.renlinear(); /*20881*/
		$$.rmoveto(-1, 72); /*20884*/
		$k[$j++] = Infinity; /*20895*/
		$k[$j++] = "ren"; /*20891*/
		$k[$j++] = $0.renmatrix; /*20891*/
		$k[$j++] = "pixs"; /*20891*/
		$k[$j++] = Infinity; /*20891*/
		$k[$j++] = 0; /*20887*/
		$k[$j++] = 1; /*20887*/
		for (var _E = 0, _F = 93; _E < _F; _E++) { /*20887*/
			$k[$j++] = 0; /*20887*/
		} /*20887*/
		$k[$j++] = 1; /*20888*/
		$k[$j++] = 0; /*20888*/
		$k[$j++] = 1; /*20888*/
		$k[$j++] = 0; /*20888*/
		for (var _G = 0, _H = 93; _G < _H; _G++) { /*20888*/
			$k[$j++] = 0; /*20888*/
		} /*20888*/
		$k[$j++] = 0; /*20889*/
		$k[$j++] = 1; /*20889*/
		$k[$j++] = 0; /*20889*/
		$k[$j++] = 1; /*20889*/
		for (var _I = 0, _J = 93; _I < _J; _I++) { /*20889*/
			$k[$j++] = 0; /*20889*/
		} /*20889*/
		$k[$j++] = 1; /*20889*/
		$k[$j++] = 0; /*20889*/
		var _K = $a(); /*20891*/
		$k[$j++] = _K; /*20895*/
		$k[$j++] = "pixx"; /*20895*/
		$k[$j++] = 97; /*20895*/
		$k[$j++] = "pixy"; /*20895*/
		$k[$j++] = 3; /*20895*/
		$k[$j++] = "height"; /*20895*/
		$k[$j++] = 6 / 72; /*20895*/
		$k[$j++] = "width"; /*20895*/
		$k[$j++] = 97 / 72; /*20895*/
		$k[$j++] = "opt"; /*20895*/
		$k[$j++] = $1.options; /*20895*/
		var _M = $d(); /*20895*/
		$k[$j++] = _M; /*20896*/
		$0.renmatrix(); /*20896*/
		$$.rmoveto(-2, 6); /*20899*/
		$k[$j++] = $1.comp; /*20899*/
		$k[$j++] = $1.options; /*20899*/
		$0["gs1-cc"](); /*20899*/
		$0.renmatrix(); /*20899*/
		$$.restore(); /*20901*/
	};
	$0.ean8composite = function() {
		var $1 = {}; /*20931*/
		$1.options = $k[--$j]; /*20933*/
		$1.barcode = $k[--$j]; /*20934*/
		$1.dontdraw = false; /*20936*/
		$forall($1.options, function() { /*20947*/
			var _3 = $k[--$j]; /*20947*/
			$1[$k[--$j]] = _3; /*20947*/
		}); /*20947*/
		$search($1.barcode, "|"); /*20950*/
		if ($k[--$j]) { /*20955*/
			$1.linear = $k[--$j]; /*20951*/
			$j--; /*20952*/
			$1.comp = $k[--$j]; /*20953*/
		} else { /*20955*/
			$j--; /*20955*/
		} /*20955*/
		$$.save(); /*20958*/
		$1.options.lintype = "ean8"; /*20961*/
		$1.options.inkspread = "0"; /*20962*/
		$1.options.dontdraw = true; /*20963*/
		$k[$j++] = $1.linear; /*20966*/
		$k[$j++] = $1.options; /*20966*/
		$0.ean8(); /*20966*/
		$0.renlinear(); /*20966*/
		$$.rmoveto(-1, 72); /*20969*/
		$k[$j++] = Infinity; /*20980*/
		$k[$j++] = "ren"; /*20976*/
		$k[$j++] = $0.renmatrix; /*20976*/
		$k[$j++] = "pixs"; /*20976*/
		$k[$j++] = Infinity; /*20976*/
		$k[$j++] = 0; /*20972*/
		$k[$j++] = 1; /*20972*/
		for (var _E = 0, _F = 65; _E < _F; _E++) { /*20972*/
			$k[$j++] = 0; /*20972*/
		} /*20972*/
		$k[$j++] = 1; /*20973*/
		$k[$j++] = 0; /*20973*/
		$k[$j++] = 1; /*20973*/
		$k[$j++] = 0; /*20973*/
		for (var _G = 0, _H = 65; _G < _H; _G++) { /*20973*/
			$k[$j++] = 0; /*20973*/
		} /*20973*/
		$k[$j++] = 0; /*20974*/
		$k[$j++] = 1; /*20974*/
		$k[$j++] = 0; /*20974*/
		$k[$j++] = 1; /*20974*/
		for (var _I = 0, _J = 65; _I < _J; _I++) { /*20974*/
			$k[$j++] = 0; /*20974*/
		} /*20974*/
		$k[$j++] = 1; /*20974*/
		$k[$j++] = 0; /*20974*/
		var _K = $a(); /*20976*/
		$k[$j++] = _K; /*20980*/
		$k[$j++] = "pixx"; /*20980*/
		$k[$j++] = 69; /*20980*/
		$k[$j++] = "pixy"; /*20980*/
		$k[$j++] = 3; /*20980*/
		$k[$j++] = "height"; /*20980*/
		$k[$j++] = 6 / 72; /*20980*/
		$k[$j++] = "width"; /*20980*/
		$k[$j++] = 69 / 72; /*20980*/
		$k[$j++] = "opt"; /*20980*/
		$k[$j++] = $1.options; /*20980*/
		var _M = $d(); /*20980*/
		$k[$j++] = _M; /*20981*/
		$0.renmatrix(); /*20981*/
		$k[$j++] = $1.comp; /*20984*/
		$k[$j++] = $1.options; /*20984*/
		$0["gs1-cc"](); /*20984*/
		var _P = $k[--$j]; /*20985*/
		$$.rmoveto(69 - _P.pixx, 6); /*20985*/
		$k[$j++] = _P; /*20986*/
		$0.renmatrix(); /*20986*/
		$$.restore(); /*20988*/
	};
	$0.upcacomposite = function() {
		var $1 = {}; /*21018*/
		$1.options = $k[--$j]; /*21020*/
		$1.barcode = $k[--$j]; /*21021*/
		$1.dontdraw = false; /*21023*/
		$forall($1.options, function() { /*21034*/
			var _3 = $k[--$j]; /*21034*/
			$1[$k[--$j]] = _3; /*21034*/
		}); /*21034*/
		$search($1.barcode, "|"); /*21037*/
		if ($k[--$j]) { /*21042*/
			$1.linear = $k[--$j]; /*21038*/
			$j--; /*21039*/
			$1.comp = $k[--$j]; /*21040*/
		} else { /*21042*/
			$j--; /*21042*/
		} /*21042*/
		$$.save(); /*21045*/
		$1.options.lintype = "ean13"; /*21047*/
		$1.options.inkspread = "0"; /*21048*/
		$1.options.dontdraw = true; /*21049*/
		$k[$j++] = $1.linear; /*21052*/
		$k[$j++] = $1.options; /*21052*/
		$0.upca(); /*21052*/
		$0.renlinear(); /*21052*/
		$$.rmoveto(-1, 72); /*21055*/
		$k[$j++] = Infinity; /*21066*/
		$k[$j++] = "ren"; /*21062*/
		$k[$j++] = $0.renmatrix; /*21062*/
		$k[$j++] = "pixs"; /*21062*/
		$k[$j++] = Infinity; /*21062*/
		$k[$j++] = 0; /*21058*/
		$k[$j++] = 1; /*21058*/
		for (var _E = 0, _F = 93; _E < _F; _E++) { /*21058*/
			$k[$j++] = 0; /*21058*/
		} /*21058*/
		$k[$j++] = 1; /*21059*/
		$k[$j++] = 0; /*21059*/
		$k[$j++] = 1; /*21059*/
		$k[$j++] = 0; /*21059*/
		for (var _G = 0, _H = 93; _G < _H; _G++) { /*21059*/
			$k[$j++] = 0; /*21059*/
		} /*21059*/
		$k[$j++] = 0; /*21060*/
		$k[$j++] = 1; /*21060*/
		$k[$j++] = 0; /*21060*/
		$k[$j++] = 1; /*21060*/
		for (var _I = 0, _J = 93; _I < _J; _I++) { /*21060*/
			$k[$j++] = 0; /*21060*/
		} /*21060*/
		$k[$j++] = 1; /*21060*/
		$k[$j++] = 0; /*21060*/
		var _K = $a(); /*21062*/
		$k[$j++] = _K; /*21066*/
		$k[$j++] = "pixx"; /*21066*/
		$k[$j++] = 97; /*21066*/
		$k[$j++] = "pixy"; /*21066*/
		$k[$j++] = 3; /*21066*/
		$k[$j++] = "height"; /*21066*/
		$k[$j++] = 6 / 72; /*21066*/
		$k[$j++] = "width"; /*21066*/
		$k[$j++] = 97 / 72; /*21066*/
		$k[$j++] = "opt"; /*21066*/
		$k[$j++] = $1.options; /*21066*/
		var _M = $d(); /*21066*/
		$k[$j++] = _M; /*21067*/
		$0.renmatrix(); /*21067*/
		$$.rmoveto(-2, 6); /*21070*/
		$k[$j++] = $1.comp; /*21070*/
		$k[$j++] = $1.options; /*21070*/
		$0["gs1-cc"](); /*21070*/
		$0.renmatrix(); /*21070*/
		$$.restore(); /*21072*/
	};
	$0.upcecomposite = function() {
		var $1 = {}; /*21102*/
		$1.options = $k[--$j]; /*21104*/
		$1.barcode = $k[--$j]; /*21105*/
		$1.dontdraw = false; /*21107*/
		$forall($1.options, function() { /*21118*/
			var _3 = $k[--$j]; /*21118*/
			$1[$k[--$j]] = _3; /*21118*/
		}); /*21118*/
		$search($1.barcode, "|"); /*21121*/
		if ($k[--$j]) { /*21126*/
			$1.linear = $k[--$j]; /*21122*/
			$j--; /*21123*/
			$1.comp = $k[--$j]; /*21124*/
		} else { /*21126*/
			$j--; /*21126*/
		} /*21126*/
		$k[$j++] = "sep"; /*21141*/
		$k[$j++] = Infinity; /*21141*/
		$k[$j++] = "ren"; /*21137*/
		$k[$j++] = $0.renmatrix; /*21137*/
		$k[$j++] = "pixs"; /*21137*/
		$k[$j++] = Infinity; /*21137*/
		$k[$j++] = 0; /*21133*/
		$k[$j++] = 1; /*21133*/
		for (var _9 = 0, _A = 49; _9 < _A; _9++) { /*21133*/
			$k[$j++] = 0; /*21133*/
		} /*21133*/
		$k[$j++] = 1; /*21134*/
		$k[$j++] = 0; /*21134*/
		$k[$j++] = 1; /*21134*/
		$k[$j++] = 0; /*21134*/
		for (var _B = 0, _C = 49; _B < _C; _B++) { /*21134*/
			$k[$j++] = 0; /*21134*/
		} /*21134*/
		$k[$j++] = 0; /*21135*/
		$k[$j++] = 1; /*21135*/
		$k[$j++] = 0; /*21135*/
		$k[$j++] = 1; /*21135*/
		for (var _D = 0, _E = 49; _D < _E; _D++) { /*21135*/
			$k[$j++] = 0; /*21135*/
		} /*21135*/
		$k[$j++] = 1; /*21135*/
		$k[$j++] = 0; /*21135*/
		var _F = $a(); /*21137*/
		$k[$j++] = _F; /*21141*/
		$k[$j++] = "pixx"; /*21141*/
		$k[$j++] = 53; /*21141*/
		$k[$j++] = "pixy"; /*21141*/
		$k[$j++] = 3; /*21141*/
		$k[$j++] = "height"; /*21141*/
		$k[$j++] = 6 / 72; /*21141*/
		$k[$j++] = "width"; /*21141*/
		$k[$j++] = 53 / 72; /*21141*/
		$k[$j++] = "opt"; /*21141*/
		$k[$j++] = $1.options; /*21141*/
		var _H = $d(); /*21141*/
		$1[$k[--$j]] = _H; /*21142*/
		$$.save(); /*21144*/
		$1.options.lintype = "upce"; /*21146*/
		$1.options.inkspread = "0"; /*21147*/
		$1.options.dontdraw = true; /*21148*/
		$k[$j++] = $1.linear; /*21151*/
		$k[$j++] = $1.options; /*21151*/
		$0.upce(); /*21151*/
		$0.renlinear(); /*21151*/
		$$.rmoveto(-1, 72); /*21154*/
		$k[$j++] = Infinity; /*21165*/
		$k[$j++] = "ren"; /*21161*/
		$k[$j++] = $0.renmatrix; /*21161*/
		$k[$j++] = "pixs"; /*21161*/
		$k[$j++] = Infinity; /*21161*/
		$k[$j++] = 0; /*21157*/
		$k[$j++] = 1; /*21157*/
		for (var _O = 0, _P = 49; _O < _P; _O++) { /*21157*/
			$k[$j++] = 0; /*21157*/
		} /*21157*/
		$k[$j++] = 1; /*21158*/
		$k[$j++] = 0; /*21158*/
		$k[$j++] = 1; /*21158*/
		$k[$j++] = 0; /*21158*/
		for (var _Q = 0, _R = 49; _Q < _R; _Q++) { /*21158*/
			$k[$j++] = 0; /*21158*/
		} /*21158*/
		$k[$j++] = 0; /*21159*/
		$k[$j++] = 1; /*21159*/
		$k[$j++] = 0; /*21159*/
		$k[$j++] = 1; /*21159*/
		for (var _S = 0, _T = 49; _S < _T; _S++) { /*21159*/
			$k[$j++] = 0; /*21159*/
		} /*21159*/
		$k[$j++] = 1; /*21159*/
		$k[$j++] = 0; /*21159*/
		var _U = $a(); /*21161*/
		$k[$j++] = _U; /*21165*/
		$k[$j++] = "pixx"; /*21165*/
		$k[$j++] = 53; /*21165*/
		$k[$j++] = "pixy"; /*21165*/
		$k[$j++] = 3; /*21165*/
		$k[$j++] = "height"; /*21165*/
		$k[$j++] = 6 / 72; /*21165*/
		$k[$j++] = "width"; /*21165*/
		$k[$j++] = 53 / 72; /*21165*/
		$k[$j++] = "opt"; /*21165*/
		$k[$j++] = $1.options; /*21165*/
		var _W = $d(); /*21165*/
		$k[$j++] = _W; /*21166*/
		$0.renmatrix(); /*21166*/
		$$.rmoveto(-2, 6); /*21169*/
		$k[$j++] = $1.comp; /*21169*/
		$k[$j++] = $1.options; /*21169*/
		$0["gs1-cc"](); /*21169*/
		$0.renmatrix(); /*21169*/
		$$.restore(); /*21171*/
	};
	$0.databaromnicomposite = function() {
		var $1 = {}; /*21201*/
		$1.options = $k[--$j]; /*21203*/
		$1.barcode = $k[--$j]; /*21204*/
		$1.dontdraw = false; /*21206*/
		$forall($1.options, function() { /*21217*/
			var _3 = $k[--$j]; /*21217*/
			$1[$k[--$j]] = _3; /*21217*/
		}); /*21217*/
		$search($1.barcode, "|"); /*21220*/
		if ($k[--$j]) { /*21225*/
			$1.linear = $k[--$j]; /*21221*/
			$j--; /*21222*/
			$1.comp = $k[--$j]; /*21223*/
		} else { /*21225*/
			$j--; /*21225*/
		} /*21225*/
		$$.save(); /*21228*/
		$1.options.lintype = "databaromni"; /*21230*/
		$1.options.linkage = true; /*21231*/
		$1.options.inkspread = "0"; /*21232*/
		$1.options.dontdraw = true; /*21233*/
		$k[$j++] = $1.linear; /*21236*/
		$k[$j++] = $1.options; /*21236*/
		$0.databaromni(); /*21236*/
		var _F = $k[--$j]; /*21237*/
		$1.linsbs = _F.sbs; /*21237*/
		$1.linheight = $get(_F.bhs, 0) * 72; /*21238*/
		$k[$j++] = _F; /*21239*/
		$0.renlinear(); /*21239*/
		$1.sepfinder = function() {
			$1.fp = $k[--$j]; /*21243*/
			for (var _N = $1.fp, _M = $1.fp + 12; _N <= _M; _N += 1) { /*21256*/
				$1.i = _N; /*21245*/
				if ($get($1.bot, $1.i) == 0) { /*21253*/
					if ($get($1.bot, $1.i - 1) == 1) { /*21250*/
						$k[$j++] = 1; /*21248*/
					} else { /*21250*/
						var _X = ($get($1.sep, $1.i - 1) == 0) ? 1 : 0; /*21250*/
						$k[$j++] = _X; /*21250*/
					} /*21250*/
				} else { /*21253*/
					$k[$j++] = 0; /*21253*/
				} /*21253*/
				$put($1.sep, $1.i, $k[--$j]); /*21255*/
			} /*21255*/
			$1.f3 = $a([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]); /*21257*/
			$k[$j++] = true; /*21258*/
			for (var _c = 0; _c <= 12; _c += 1) { /*21258*/
				var _i = $k[--$j]; /*21258*/
				$k[$j++] = _i && $eq($get($1.bot, _c + $1.fp), $get($1.f3, _c)); /*21258*/
			} /*21258*/
			if ($k[--$j]) { /*21261*/
				$puti($1.sep, $1.fp, $a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0])); /*21260*/
			} /*21260*/
		}; /*21262*/
		$k[$j++] = Infinity; /*21263*/
		$k[$j++] = 0; /*21264*/
		$forall($1.linsbs, function() { /*21264*/
			var _o = $k[--$j]; /*21264*/
			var _p = $k[--$j]; /*21264*/
			var _q = (_p == 1) ? 0 : 1; /*21264*/
			$k[$j++] = _p; /*21264*/
			for (var _r = 0, _s = _o; _r < _s; _r++) { /*21264*/
				$k[$j++] = _q /*21264*/
			} /*21264*/
		}); /*21264*/
		$astore($a($counttomark() - 1)); /*21265*/
		$1.bot = $k[--$j]; /*21265*/
		$j -= 2; /*21265*/
		$k[$j++] = Infinity; /*21266*/
		$forall($1.bot, function() { /*21266*/
			var _x = $k[--$j]; /*21266*/
			$k[$j++] = 1 - _x; /*21266*/
		}); /*21266*/
		$1.sep = $a(); /*21266*/
		$puti($1.sep, 0, $a([0, 0, 0])); /*21267*/
		$puti($1.sep, $1.sep.length - 4, $a([0, 0, 0, 0])); /*21268*/
		$k[$j++] = 18; /*21269*/
		$1.sepfinder(); /*21269*/
		$k[$j++] = 64; /*21269*/
		$1.sepfinder(); /*21269*/
		$$.rmoveto(0, $1.linheight); /*21270*/
		var _19 = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*21277*/
		$k[$j++] = _19; /*21278*/
		$0.renmatrix(); /*21278*/
		$$.rmoveto(-5, 1); /*21281*/
		$k[$j++] = $1.comp; /*21281*/
		$k[$j++] = $1.options; /*21281*/
		$0["gs1-cc"](); /*21281*/
		$0.renmatrix(); /*21281*/
		$$.restore(); /*21283*/
	};
	$0.databarstackedcomposite = function() {
		var $1 = {}; /*21312*/
		$1.options = $k[--$j]; /*21314*/
		$1.barcode = $k[--$j]; /*21315*/
		$1.dontdraw = false; /*21317*/
		$forall($1.options, function() { /*21328*/
			var _3 = $k[--$j]; /*21328*/
			$1[$k[--$j]] = _3; /*21328*/
		}); /*21328*/
		$search($1.barcode, "|"); /*21331*/
		if ($k[--$j]) { /*21336*/
			$1.linear = $k[--$j]; /*21332*/
			$j--; /*21333*/
			$1.comp = $k[--$j]; /*21334*/
		} else { /*21336*/
			$j--; /*21336*/
		} /*21336*/
		$$.save(); /*21339*/
		$1.options.lintype = "databarstacked"; /*21341*/
		$1.options.linkage = true; /*21342*/
		$1.options.inkspread = "0"; /*21343*/
		$1.options.dontdraw = true; /*21344*/
		$k[$j++] = $1.linear; /*21347*/
		$k[$j++] = $1.options; /*21347*/
		$0.databarstacked(); /*21347*/
		var _F = $k[--$j]; /*21348*/
		$1.bot = $geti(_F.pixs, 0, _F.pixx); /*21348*/
		$1.linheight = _F.pixy; /*21349*/
		$k[$j++] = _F; /*21350*/
		$0.renmatrix(); /*21350*/
		$1.sepfinder = function() {
			$1.fp = $k[--$j]; /*21354*/
			for (var _O = $1.fp, _N = $1.fp + 12; _O <= _N; _O += 1) { /*21367*/
				$1.i = _O; /*21356*/
				if ($get($1.bot, $1.i) == 0) { /*21364*/
					if ($get($1.bot, $1.i - 1) == 1) { /*21361*/
						$k[$j++] = 1; /*21359*/
					} else { /*21361*/
						var _Y = ($get($1.sep, $1.i - 1) == 0) ? 1 : 0; /*21361*/
						$k[$j++] = _Y; /*21361*/
					} /*21361*/
				} else { /*21364*/
					$k[$j++] = 0; /*21364*/
				} /*21364*/
				$put($1.sep, $1.i, $k[--$j]); /*21366*/
			} /*21366*/
			$1.f3 = $a([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]); /*21368*/
			$k[$j++] = true; /*21369*/
			for (var _d = 0; _d <= 12; _d += 1) { /*21369*/
				var _j = $k[--$j]; /*21369*/
				$k[$j++] = _j && $eq($get($1.bot, _d + $1.fp), $get($1.f3, _d)); /*21369*/
			} /*21369*/
			if ($k[--$j]) { /*21372*/
				$puti($1.sep, $1.fp, $a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0])); /*21371*/
			} /*21371*/
		}; /*21373*/
		$k[$j++] = Infinity; /*21374*/
		$forall($1.bot, function() { /*21374*/
			var _p = $k[--$j]; /*21374*/
			$k[$j++] = 1 - _p; /*21374*/
		}); /*21374*/
		$1.sep = $a(); /*21374*/
		$puti($1.sep, 0, $a([0, 0, 0, 0])); /*21375*/
		$puti($1.sep, $1.sep.length - 4, $a([0, 0, 0, 0])); /*21376*/
		$k[$j++] = 18; /*21377*/
		$1.sepfinder(); /*21377*/
		$$.rmoveto(0, $1.linheight); /*21378*/
		var _11 = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*21385*/
		$k[$j++] = _11; /*21386*/
		$0.renmatrix(); /*21386*/
		$$.rmoveto(1, 1); /*21389*/
		$k[$j++] = $1.comp; /*21389*/
		$k[$j++] = $1.options; /*21389*/
		$0["gs1-cc"](); /*21389*/
		$0.renmatrix(); /*21389*/
		$$.restore(); /*21391*/
	};
	$0.databarstackedomnicomposite = function() {
		var $1 = {}; /*21420*/
		$1.options = $k[--$j]; /*21422*/
		$1.barcode = $k[--$j]; /*21423*/
		$1.dontdraw = false; /*21425*/
		$forall($1.options, function() { /*21436*/
			var _3 = $k[--$j]; /*21436*/
			$1[$k[--$j]] = _3; /*21436*/
		}); /*21436*/
		$search($1.barcode, "|"); /*21439*/
		if ($k[--$j]) { /*21444*/
			$1.linear = $k[--$j]; /*21440*/
			$j--; /*21441*/
			$1.comp = $k[--$j]; /*21442*/
		} else { /*21444*/
			$j--; /*21444*/
		} /*21444*/
		$$.save(); /*21447*/
		$1.options.lintype = "databarstackedomni"; /*21449*/
		$1.options.linkage = true; /*21450*/
		$1.options.inkspread = "0"; /*21451*/
		$1.options.dontdraw = true; /*21452*/
		$k[$j++] = $1.linear; /*21455*/
		$k[$j++] = $1.options; /*21455*/
		$0.databarstackedomni(); /*21455*/
		var _F = $k[--$j]; /*21456*/
		$1.bot = $geti(_F.pixs, 0, _F.pixx); /*21456*/
		$1.linheight = _F.pixy; /*21457*/
		$k[$j++] = _F; /*21458*/
		$0.renmatrix(); /*21458*/
		$1.sepfinder = function() {
			$1.fp = $k[--$j]; /*21462*/
			for (var _O = $1.fp, _N = $1.fp + 12; _O <= _N; _O += 1) { /*21475*/
				$1.i = _O; /*21464*/
				if ($get($1.bot, $1.i) == 0) { /*21472*/
					if ($get($1.bot, $1.i - 1) == 1) { /*21469*/
						$k[$j++] = 1; /*21467*/
					} else { /*21469*/
						var _Y = ($get($1.sep, $1.i - 1) == 0) ? 1 : 0; /*21469*/
						$k[$j++] = _Y; /*21469*/
					} /*21469*/
				} else { /*21472*/
					$k[$j++] = 0; /*21472*/
				} /*21472*/
				$put($1.sep, $1.i, $k[--$j]); /*21474*/
			} /*21474*/
			$1.f3 = $a([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]); /*21476*/
			$k[$j++] = true; /*21477*/
			for (var _d = 0; _d <= 12; _d += 1) { /*21477*/
				var _j = $k[--$j]; /*21477*/
				$k[$j++] = _j && $eq($get($1.bot, _d + $1.fp), $get($1.f3, _d)); /*21477*/
			} /*21477*/
			if ($k[--$j]) { /*21480*/
				$puti($1.sep, $1.fp, $a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0])); /*21479*/
			} /*21479*/
		}; /*21481*/
		$k[$j++] = Infinity; /*21482*/
		$forall($1.bot, function() { /*21482*/
			var _p = $k[--$j]; /*21482*/
			$k[$j++] = 1 - _p; /*21482*/
		}); /*21482*/
		$1.sep = $a(); /*21482*/
		$puti($1.sep, 0, $a([0, 0, 0])); /*21483*/
		$puti($1.sep, $1.sep.length - 4, $a([0, 0, 0, 0])); /*21484*/
		$k[$j++] = 18; /*21485*/
		$1.sepfinder(); /*21485*/
		$$.rmoveto(0, $1.linheight); /*21486*/
		var _11 = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*21493*/
		$k[$j++] = _11; /*21494*/
		$0.renmatrix(); /*21494*/
		$$.rmoveto(1, 1); /*21497*/
		$k[$j++] = $1.comp; /*21497*/
		$k[$j++] = $1.options; /*21497*/
		$0["gs1-cc"](); /*21497*/
		$0.renmatrix(); /*21497*/
		$$.restore(); /*21499*/
	};
	$0.databartruncatedcomposite = function() {
		var $1 = {}; /*21529*/
		$1.options = $k[--$j]; /*21531*/
		$1.barcode = $k[--$j]; /*21532*/
		$1.dontdraw = false; /*21534*/
		$forall($1.options, function() { /*21545*/
			var _3 = $k[--$j]; /*21545*/
			$1[$k[--$j]] = _3; /*21545*/
		}); /*21545*/
		$search($1.barcode, "|"); /*21548*/
		if ($k[--$j]) { /*21553*/
			$1.linear = $k[--$j]; /*21549*/
			$j--; /*21550*/
			$1.comp = $k[--$j]; /*21551*/
		} else { /*21553*/
			$j--; /*21553*/
		} /*21553*/
		$$.save(); /*21556*/
		$1.options.lintype = "databartruncated"; /*21558*/
		$1.options.linkage = true; /*21559*/
		$1.options.inkspread = "0"; /*21560*/
		$1.options.dontdraw = true; /*21561*/
		$k[$j++] = $1.linear; /*21564*/
		$k[$j++] = $1.options; /*21564*/
		$0.databartruncated(); /*21564*/
		var _F = $k[--$j]; /*21565*/
		$1.linsbs = _F.sbs; /*21565*/
		$1.linheight = $get(_F.bhs, 0) * 72; /*21566*/
		$k[$j++] = _F; /*21567*/
		$0.renlinear(); /*21567*/
		$1.sepfinder = function() {
			$1.fp = $k[--$j]; /*21571*/
			for (var _N = $1.fp, _M = $1.fp + 12; _N <= _M; _N += 1) { /*21584*/
				$1.i = _N; /*21573*/
				if ($get($1.bot, $1.i) == 0) { /*21581*/
					if ($get($1.bot, $1.i - 1) == 1) { /*21578*/
						$k[$j++] = 1; /*21576*/
					} else { /*21578*/
						var _X = ($get($1.sep, $1.i - 1) == 0) ? 1 : 0; /*21578*/
						$k[$j++] = _X; /*21578*/
					} /*21578*/
				} else { /*21581*/
					$k[$j++] = 0; /*21581*/
				} /*21581*/
				$put($1.sep, $1.i, $k[--$j]); /*21583*/
			} /*21583*/
			$1.f3 = $a([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]); /*21585*/
			$k[$j++] = true; /*21586*/
			for (var _c = 0; _c <= 12; _c += 1) { /*21586*/
				var _i = $k[--$j]; /*21586*/
				$k[$j++] = _i && $eq($get($1.bot, _c + $1.fp), $get($1.f3, _c)); /*21586*/
			} /*21586*/
			if ($k[--$j]) { /*21589*/
				$puti($1.sep, $1.fp, $a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0])); /*21588*/
			} /*21588*/
		}; /*21590*/
		$k[$j++] = Infinity; /*21591*/
		$k[$j++] = 0; /*21592*/
		$forall($1.linsbs, function() { /*21592*/
			var _o = $k[--$j]; /*21592*/
			var _p = $k[--$j]; /*21592*/
			var _q = (_p == 1) ? 0 : 1; /*21592*/
			$k[$j++] = _p; /*21592*/
			for (var _r = 0, _s = _o; _r < _s; _r++) { /*21592*/
				$k[$j++] = _q /*21592*/
			} /*21592*/
		}); /*21592*/
		$astore($a($counttomark() - 1)); /*21593*/
		$1.bot = $k[--$j]; /*21593*/
		$j -= 2; /*21593*/
		$k[$j++] = Infinity; /*21594*/
		$forall($1.bot, function() { /*21594*/
			var _x = $k[--$j]; /*21594*/
			$k[$j++] = 1 - _x; /*21594*/
		}); /*21594*/
		$1.sep = $a(); /*21594*/
		$puti($1.sep, 0, $a([0, 0, 0])); /*21595*/
		$puti($1.sep, $1.sep.length - 4, $a([0, 0, 0, 0])); /*21596*/
		$k[$j++] = 18; /*21597*/
		$1.sepfinder(); /*21597*/
		$k[$j++] = 64; /*21597*/
		$1.sepfinder(); /*21597*/
		$$.rmoveto(0, $1.linheight); /*21598*/
		var _19 = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*21605*/
		$k[$j++] = _19; /*21606*/
		$0.renmatrix(); /*21606*/
		$$.rmoveto(-5, 1); /*21609*/
		$k[$j++] = $1.comp; /*21609*/
		$k[$j++] = $1.options; /*21609*/
		$0["gs1-cc"](); /*21609*/
		$0.renmatrix(); /*21609*/
		$$.restore(); /*21611*/
	};
	$0.databarlimitedcomposite = function() {
		var $1 = {}; /*21641*/
		$1.options = $k[--$j]; /*21643*/
		$1.barcode = $k[--$j]; /*21644*/
		$1.dontdraw = false; /*21646*/
		$forall($1.options, function() { /*21657*/
			var _3 = $k[--$j]; /*21657*/
			$1[$k[--$j]] = _3; /*21657*/
		}); /*21657*/
		$search($1.barcode, "|"); /*21660*/
		if ($k[--$j]) { /*21665*/
			$1.linear = $k[--$j]; /*21661*/
			$j--; /*21662*/
			$1.comp = $k[--$j]; /*21663*/
		} else { /*21665*/
			$j--; /*21665*/
		} /*21665*/
		$$.save(); /*21668*/
		$1.options.lintype = "databarlimited"; /*21670*/
		$1.options.linkage = true; /*21671*/
		$1.options.inkspread = "0"; /*21672*/
		$1.options.dontdraw = true; /*21673*/
		$k[$j++] = $1.linear; /*21676*/
		$k[$j++] = $1.options; /*21676*/
		$0.databarlimited(); /*21676*/
		var _F = $k[--$j]; /*21677*/
		$1.linsbs = _F.sbs; /*21677*/
		$1.linheight = $get(_F.bhs, 0) * 72; /*21678*/
		$k[$j++] = _F; /*21679*/
		$0.renlinear(); /*21679*/
		$k[$j++] = Infinity; /*21682*/
		$k[$j++] = 1; /*21683*/
		$forall($1.linsbs, function() { /*21683*/
			var _K = $k[--$j]; /*21683*/
			var _L = $k[--$j]; /*21683*/
			var _M = (_L == 0) ? 1 : 0; /*21683*/
			$k[$j++] = _L; /*21683*/
			for (var _N = 0, _O = _K; _N < _O; _N++) { /*21683*/
				$k[$j++] = _M /*21683*/
			} /*21683*/
		}); /*21683*/
		$astore($a($counttomark() - 1)); /*21684*/
		$1.sep = $k[--$j]; /*21684*/
		$j -= 2; /*21684*/
		$puti($1.sep, 0, $a([0, 0, 0])); /*21685*/
		$puti($1.sep, $1.sep.length - 4, $a([0, 0, 0, 0])); /*21686*/
		$$.rmoveto(0, $1.linheight); /*21687*/
		var _c = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*21694*/
		$k[$j++] = _c; /*21695*/
		$0.renmatrix(); /*21695*/
		$k[$j++] = $1.comp; /*21698*/
		$k[$j++] = $1.options; /*21698*/
		$0["gs1-cc"](); /*21698*/
		var _f = $k[--$j]; /*21699*/
		$$.rmoveto(72 - _f.pixx, 1); /*21699*/
		$k[$j++] = _f; /*21700*/
		$0.renmatrix(); /*21700*/
		$$.restore(); /*21702*/
	};
	$0.databarexpandedcomposite = function() {
		var $1 = {}; /*21732*/
		$1.options = $k[--$j]; /*21734*/
		$1.barcode = $k[--$j]; /*21735*/
		$1.dontdraw = false; /*21737*/
		$forall($1.options, function() { /*21748*/
			var _3 = $k[--$j]; /*21748*/
			$1[$k[--$j]] = _3; /*21748*/
		}); /*21748*/
		$search($1.barcode, "|"); /*21751*/
		if ($k[--$j]) { /*21756*/
			$1.linear = $k[--$j]; /*21752*/
			$j--; /*21753*/
			$1.comp = $k[--$j]; /*21754*/
		} else { /*21756*/
			$j--; /*21756*/
		} /*21756*/
		$$.save(); /*21759*/
		$1.options.lintype = "databarexpanded"; /*21761*/
		$1.options.linkage = true; /*21762*/
		$1.options.inkspread = "0"; /*21763*/
		$1.options.dontdraw = true; /*21764*/
		$k[$j++] = $1.linear; /*21767*/
		$k[$j++] = $1.options; /*21767*/
		$0.databarexpanded(); /*21767*/
		var _F = $k[--$j]; /*21768*/
		$1.linsbs = _F.sbs; /*21768*/
		$1.linheight = $get(_F.bhs, 0) * 72; /*21769*/
		$k[$j++] = _F; /*21770*/
		$0.renlinear(); /*21770*/
		$1.sepfinder = function() {
			$1.fp = $k[--$j]; /*21774*/
			for (var _N = $1.fp, _M = $1.fp + 12; _N <= _M; _N += 1) { /*21787*/
				$1.i = _N; /*21776*/
				if ($get($1.bot, $1.i) == 0) { /*21784*/
					if ($get($1.bot, $1.i - 1) == 1) { /*21781*/
						$k[$j++] = 1; /*21779*/
					} else { /*21781*/
						var _X = ($get($1.sep, $1.i - 1) == 0) ? 1 : 0; /*21781*/
						$k[$j++] = _X; /*21781*/
					} /*21781*/
				} else { /*21784*/
					$k[$j++] = 0; /*21784*/
				} /*21784*/
				$put($1.sep, $1.i, $k[--$j]); /*21786*/
			} /*21786*/
		}; /*21788*/
		$k[$j++] = Infinity; /*21789*/
		$k[$j++] = 0; /*21790*/
		$forall($1.linsbs, function() { /*21790*/
			var _c = $k[--$j]; /*21790*/
			var _d = $k[--$j]; /*21790*/
			var _e = (_d == 1) ? 0 : 1; /*21790*/
			$k[$j++] = _d; /*21790*/
			for (var _f = 0, _g = _c; _f < _g; _f++) { /*21790*/
				$k[$j++] = _e /*21790*/
			} /*21790*/
		}); /*21790*/
		$astore($a($counttomark() - 1)); /*21791*/
		$1.bot = $k[--$j]; /*21791*/
		$j -= 2; /*21791*/
		$k[$j++] = Infinity; /*21792*/
		$forall($1.bot, function() { /*21792*/
			var _l = $k[--$j]; /*21792*/
			$k[$j++] = 1 - _l; /*21792*/
		}); /*21792*/
		$1.sep = $a(); /*21792*/
		$puti($1.sep, 0, $a([0, 0, 0])); /*21793*/
		$puti($1.sep, $1.sep.length - 4, $a([0, 0, 0, 0])); /*21794*/
		$k[$j++] = Infinity; /*21797*/
		for (var _u = 18, _t = $1.bot.length - 13; _u <= _t; _u += 98) { /*21796*/
			$k[$j++] = _u; /*21796*/
		} /*21796*/
		for (var _x = 69, _w = $1.bot.length - 13; _x <= _w; _x += 98) { /*21797*/
			$k[$j++] = _x; /*21797*/
		} /*21797*/
		var _y = $a(); /*21797*/
		for (var _z = 0, _10 = _y.length; _z < _10; _z++) { /*21798*/
			$k[$j++] = $get(_y, _z); /*21798*/
			$1.sepfinder(); /*21798*/
		} /*21798*/
		$$.rmoveto(0, $1.linheight); /*21799*/
		var _17 = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*21806*/
		$k[$j++] = _17; /*21807*/
		$0.renmatrix(); /*21807*/
		$$.rmoveto(1, 1); /*21810*/
		$k[$j++] = $1.comp; /*21810*/
		$k[$j++] = $1.options; /*21810*/
		$0["gs1-cc"](); /*21810*/
		$0.renmatrix(); /*21810*/
		$$.restore(); /*21812*/
	};
	$0.databarexpandedstackedcomposite = function() {
		var $1 = {}; /*21841*/
		$1.options = $k[--$j]; /*21843*/
		$1.barcode = $k[--$j]; /*21844*/
		$1.dontdraw = false; /*21846*/
		$forall($1.options, function() { /*21857*/
			var _3 = $k[--$j]; /*21857*/
			$1[$k[--$j]] = _3; /*21857*/
		}); /*21857*/
		$search($1.barcode, "|"); /*21860*/
		if ($k[--$j]) { /*21865*/
			$1.linear = $k[--$j]; /*21861*/
			$j--; /*21862*/
			$1.comp = $k[--$j]; /*21863*/
		} else { /*21865*/
			$j--; /*21865*/
		} /*21865*/
		$$.save(); /*21868*/
		$1.options.lintype = "databarexpandedstacked"; /*21870*/
		$1.options.linkage = true; /*21871*/
		$1.options.inkspread = "0"; /*21872*/
		$1.options.dontdraw = true; /*21873*/
		$k[$j++] = $1.linear; /*21876*/
		$k[$j++] = $1.options; /*21876*/
		$0.databarexpandedstacked(); /*21876*/
		var _F = $k[--$j]; /*21877*/
		$1.bot = $geti(_F.pixs, 0, _F.pixx); /*21877*/
		$1.linheight = _F.pixy; /*21878*/
		$k[$j++] = _F; /*21879*/
		$0.renmatrix(); /*21879*/
		$1.sepfinder = function() {
			$1.fp = $k[--$j]; /*21883*/
			for (var _O = $1.fp, _N = $1.fp + 12; _O <= _N; _O += 1) { /*21896*/
				$1.i = _O; /*21885*/
				if ($get($1.bot, $1.i) == 0) { /*21893*/
					if ($get($1.bot, $1.i - 1) == 1) { /*21890*/
						$k[$j++] = 1; /*21888*/
					} else { /*21890*/
						var _Y = ($get($1.sep, $1.i - 1) == 0) ? 1 : 0; /*21890*/
						$k[$j++] = _Y; /*21890*/
					} /*21890*/
				} else { /*21893*/
					$k[$j++] = 0; /*21893*/
				} /*21893*/
				$put($1.sep, $1.i, $k[--$j]); /*21895*/
			} /*21895*/
		}; /*21897*/
		$k[$j++] = Infinity; /*21898*/
		$forall($1.bot, function() { /*21898*/
			var _d = $k[--$j]; /*21898*/
			$k[$j++] = 1 - _d; /*21898*/
		}); /*21898*/
		$1.sep = $a(); /*21898*/
		$puti($1.sep, 0, $a([0, 0, 0])); /*21899*/
		$puti($1.sep, $1.sep.length - 4, $a([0, 0, 0, 0])); /*21900*/
		$k[$j++] = Infinity; /*21903*/
		for (var _m = 19, _l = $1.bot.length - 13; _m <= _l; _m += 98) { /*21902*/
			$k[$j++] = _m; /*21902*/
		} /*21902*/
		for (var _p = 70, _o = $1.bot.length - 13; _p <= _o; _p += 98) { /*21903*/
			$k[$j++] = _p; /*21903*/
		} /*21903*/
		var _q = $a(); /*21903*/
		for (var _r = 0, _s = _q.length; _r < _s; _r++) { /*21904*/
			$k[$j++] = $get(_q, _r); /*21904*/
			$1.sepfinder(); /*21904*/
		} /*21904*/
		$$.rmoveto(0, $1.linheight); /*21905*/
		var _z = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*21912*/
		$k[$j++] = _z; /*21913*/
		$0.renmatrix(); /*21913*/
		var _12 = ($get($1.bot, 0) == 0) ? 2 : 0; /*21916*/
		$$.rmoveto(_12, 1); /*21916*/
		$k[$j++] = $1.comp; /*21917*/
		$k[$j++] = $1.options; /*21917*/
		$0["gs1-cc"](); /*21917*/
		$0.renmatrix(); /*21917*/
		$$.restore(); /*21919*/
	};
	$0["gs1-128composite"] = function() {
		var $1 = {}; /*21949*/
		$1.options = $k[--$j]; /*21951*/
		$1.barcode = $k[--$j]; /*21952*/
		$1.dontdraw = false; /*21954*/
		$forall($1.options, function() { /*21965*/
			var _3 = $k[--$j]; /*21965*/
			$1[$k[--$j]] = _3; /*21965*/
		}); /*21965*/
		$search($1.barcode, "|"); /*21968*/
		if ($k[--$j]) { /*21973*/
			$1.linear = $k[--$j]; /*21969*/
			$j--; /*21970*/
			$1.comp = $k[--$j]; /*21971*/
		} else { /*21973*/
			$j--; /*21973*/
		} /*21973*/
		$$.save(); /*21976*/
		$1.options.inkspread = "0"; /*21978*/
		$1.options.dontdraw = true; /*21979*/
		$1.options.linkagea = true; /*21982*/
		$k[$j++] = $1.linear; /*21983*/
		$k[$j++] = Infinity; /*21983*/
		$forall($1.options); /*21983*/
		var _E = $d(); /*21983*/
		$k[$j++] = _E; /*21983*/
		$0["gs1-128"](); /*21983*/
		var _G = $k[--$j].sbs; /*21984*/
		$k[$j++] = 0; /*21984*/
		$forall(_G, function() { /*21984*/
			var _H = $k[--$j]; /*21984*/
			var _I = $k[--$j]; /*21984*/
			$k[$j++] = _I + _H; /*21984*/
		}); /*21984*/
		$1.linwidth = $k[--$j]; /*21984*/
		$1.options.lintype = "gs1-128"; /*21987*/
		$1.options.linwidth = $1.linwidth; /*21988*/
		$k[$j++] = $1.comp; /*21989*/
		$k[$j++] = $1.options; /*21989*/
		$0["gs1-cc"](); /*21989*/
		$1.compsym = $k[--$j]; /*21989*/
		if ($1.compsym.pixx == 99) { /*21990*/
			$k[$j++] = "a"; /*21990*/
		} else { /*21990*/
			$k[$j++] = "c"; /*21990*/
		} /*21990*/
		$1.linktype = $k[--$j]; /*21990*/
		if ($eq($1.linktype, "a")) { /*21998*/
			$1.options.linkagea = true; /*21994*/
			$1.options.linkagec = false; /*21995*/
		} else { /*21998*/
			$1.options.linkagea = false; /*21997*/
			$1.options.linkagec = true; /*21998*/
		} /*21998*/
		$k[$j++] = $1.linear; /*22000*/
		$k[$j++] = Infinity; /*22000*/
		$forall($1.options); /*22000*/
		var _a = $d(); /*22000*/
		$k[$j++] = _a; /*22000*/
		$0["gs1-128"](); /*22000*/
		var _b = $k[--$j]; /*22001*/
		$1.linsbs = _b.sbs; /*22001*/
		$1.linheight = $get(_b.bhs, 0) * 72; /*22002*/
		$k[$j++] = _b; /*22003*/
		$0.renlinear(); /*22003*/
		$k[$j++] = Infinity; /*22006*/
		$k[$j++] = 1; /*22007*/
		$forall($1.linsbs, function() { /*22007*/
			var _g = $k[--$j]; /*22007*/
			var _h = $k[--$j]; /*22007*/
			var _i = (_h == 0) ? 1 : 0; /*22007*/
			$k[$j++] = _h; /*22007*/
			for (var _j = 0, _k = _g; _j < _k; _j++) { /*22007*/
				$k[$j++] = _i /*22007*/
			} /*22007*/
		}); /*22007*/
		$astore($a($counttomark() - 1)); /*22008*/
		$1.sep = $k[--$j]; /*22008*/
		$j -= 2; /*22008*/
		$$.rmoveto(0, $1.linheight); /*22009*/
		var _t = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*22016*/
		$k[$j++] = _t; /*22017*/
		$0.renmatrix(); /*22017*/
		if ($eq($1.linktype, "a")) { /*22026*/
			$1.s = ~~(($1.linwidth - 2) / 11); /*22021*/
			$1.p = ~~(($1.s - 9) / 2); /*22022*/
			$k[$j++] = "x"; /*22023*/
			$k[$j++] = ((($1.s - $1.p) - 1) * 11) + 10; /*22023*/
			if ($1.p == 0) { /*22023*/
				var _10 = $k[--$j]; /*22023*/
				$k[$j++] = _10 + 2; /*22023*/
			} /*22023*/
			var _11 = $k[--$j]; /*22023*/
			$1[$k[--$j]] = _11 - 99; /*22023*/
			$$.rmoveto($1.x, 1); /*22024*/
		} else { /*22026*/
			$$.rmoveto(-7, 1); /*22026*/
		} /*22026*/
		$k[$j++] = $1.compsym; /*22029*/
		$0.renmatrix(); /*22029*/
		$$.restore(); /*22031*/
	};
	$0.gs1datamatrix = function() {
		var $1 = {}; /*22059*/
		$1.options = $k[--$j]; /*22061*/
		$1.barcode = $k[--$j]; /*22062*/
		$1.dontdraw = false; /*22064*/
		$forall($1.options, function() { /*22075*/
			var _3 = $k[--$j]; /*22075*/
			$1[$k[--$j]] = _3; /*22075*/
		}); /*22075*/
		$1.expand = function() {
			$1.in = $k[--$j]; /*22079*/
			$1.out = $s($1.in.length); /*22080*/
			$1.j = 0; /*22081*/
			$k[$j++] = $1.in; /*22095*/
			for (;;) { /*22095*/
				$search($k[--$j], "^"); /*22084*/
				if ($k[--$j]) { /*22093*/
					var _B = $k[--$j]; /*22085*/
					$puti($1.out, $1.j, _B); /*22085*/
					$1.j = (_B.length + $1.j) + 1; /*22086*/
					$j--; /*22087*/
					var _F = $k[--$j]; /*22088*/
					$put($1.out, $1.j - 1, ~~$z($geti(_F, 0, 3))); /*22088*/
					$k[$j++] = $geti(_F, 3, _F.length - 3); /*22089*/
				} else { /*22093*/
					var _K = $k[--$j]; /*22091*/
					$puti($1.out, $1.j, _K); /*22091*/
					$1.j = _K.length + $1.j; /*22092*/
					$k[$j++] = $geti($1.out, 0, $1.j); /*22093*/
					break; /*22093*/
				} /*22093*/
			} /*22093*/
		}; /*22096*/
		$1.ais = $a([]); /*22099*/
		$1.aival = {}; /*22100*/
		var _S = $1.barcode; /*22101*/
		$k[$j++] = $geti(_S, 1, _S.length - 1); /*22113*/
		for (;;) { /*22113*/
			var _U = $k[--$j]; /*22103*/
			$k[$j++] = _U; /*22103*/
			if ($eq(_U, "")) { /*22103*/
				break; /*22103*/
			} /*22103*/
			$search($k[--$j], ")"); /*22104*/
			$j--; /*22104*/
			var _W = $k[--$j]; /*22105*/
			var _X = $k[--$j]; /*22105*/
			var _Y = $k[--$j]; /*22106*/
			$k[$j++] = _W; /*22106*/
			$search(_Y, "("); /*22106*/
			if ($k[--$j]) { /*22109*/
				var _a = $k[--$j]; /*22107*/
				var _b = $k[--$j]; /*22107*/
				var _c = $k[--$j]; /*22107*/
				var _d = $k[--$j]; /*22107*/
				$k[$j++] = _c; /*22107*/
				$k[$j++] = _d; /*22107*/
				$k[$j++] = _a; /*22107*/
			} else { /*22109*/
				var _e = $k[--$j]; /*22109*/
				var _f = $k[--$j]; /*22109*/
				$k[$j++] = ""; /*22109*/
				$k[$j++] = _f; /*22109*/
				$k[$j++] = _e; /*22109*/
			} /*22109*/
			$k[$j++] = Infinity; /*22111*/
			$aload($1.ais); /*22111*/
			var _i = $k[$j - 1 - ($counttomark() + 2)]; /*22111*/
			$k[$j++] = _i; /*22111*/
			$1.ais = $a(); /*22111*/
			var _l = $k[--$j]; /*22112*/
			var _m = $k[--$j]; /*22112*/
			$k[$j++] = $1.aival; /*22112*/
			$k[$j++] = _m; /*22112*/
			$k[$j++] = _l; /*22112*/
			$1.expand(); /*22112*/
			var _n = $k[--$j]; /*22112*/
			var _o = $k[--$j]; /*22112*/
			$put($k[--$j], _o, _n); /*22112*/
		} /*22112*/
		$j--; /*22114*/
		$1.aifixed = {}; /*22119*/
		$k[$j++] = Infinity; /*22121*/
		for (var _q = 0; _q <= 4; _q += 1) { /*22121*/
			$k[$j++] = _q; /*22121*/
		} /*22121*/
		var _r = $a(); /*22121*/
		for (var _s = 0, _t = _r.length; _s < _t; _s++) { /*22124*/
			var _w = $strcpy($s(2), "00"); /*22123*/
			$put(_w, 1, $get(_r, _s) + 48); /*22123*/
			$put($1.aifixed, _w, _w); /*22123*/
		} /*22123*/
		$k[$j++] = Infinity; /*22129*/
		for (var _y = 11; _y <= 20; _y += 1) { /*22126*/
			$k[$j++] = _y; /*22126*/
		} /*22126*/
		$k[$j++] = 23; /*22128*/
		for (var _z = 31; _z <= 36; _z += 1) { /*22128*/
			$k[$j++] = _z; /*22128*/
		} /*22128*/
		$k[$j++] = 41; /*22129*/
		var _10 = $a(); /*22129*/
		for (var _11 = 0, _12 = _10.length; _11 < _12; _11++) { /*22132*/
			var _15 = $cvrs($s(2), $get(_10, _11), 10); /*22131*/
			$put($1.aifixed, _15, _15); /*22131*/
		} /*22131*/
		$1.fnc1 = -1; /*22135*/
		$1.dmtx = $a([$1.fnc1]); /*22136*/
		for (var _1B = 0, _1A = $1.ais.length - 1; _1B <= _1A; _1B += 1) { /*22152*/
			$1.i = _1B; /*22138*/
			$1.ai = $get($1.ais, $1.i); /*22139*/
			$1.val = $get($1.aival, $1.ai); /*22140*/
			var _1L = $a(($1.dmtx.length + $1.ai.length) + $1.val.length); /*22141*/
			$puti(_1L, 0, $1.dmtx); /*22142*/
			$k[$j++] = _1L; /*22143*/
			$k[$j++] = _1L; /*22143*/
			$k[$j++] = $1.dmtx.length; /*22143*/
			$k[$j++] = $1.ai; /*22143*/
			$k[$j++] = Infinity; /*22143*/
			var _1P = $k[--$j]; /*22143*/
			var _1Q = $k[--$j]; /*22143*/
			$k[$j++] = _1P; /*22143*/
			$forall(_1Q); /*22143*/
			var _1R = $a(); /*22143*/
			var _1S = $k[--$j]; /*22143*/
			$puti($k[--$j], _1S, _1R); /*22143*/
			var _1U = $k[--$j]; /*22144*/
			$k[$j++] = _1U; /*22144*/
			$k[$j++] = _1U; /*22144*/
			$k[$j++] = $1.dmtx.length + $1.ai.length; /*22144*/
			$k[$j++] = $1.val; /*22144*/
			$k[$j++] = Infinity; /*22144*/
			var _1Y = $k[--$j]; /*22144*/
			var _1Z = $k[--$j]; /*22144*/
			$k[$j++] = _1Y; /*22144*/
			$forall(_1Z); /*22144*/
			var _1a = $a(); /*22144*/
			var _1b = $k[--$j]; /*22144*/
			$puti($k[--$j], _1b, _1a); /*22144*/
			$1.dmtx = $k[--$j]; /*22145*/
			var _1j = $get($1.aifixed, $geti($1.ai, 0, 2)) !== undefined; /*22146*/
			if (($1.i != ($1.ais.length - 1)) && (!_1j)) { /*22151*/
				var _1l = $a($1.dmtx.length + 1); /*22147*/
				$puti(_1l, 0, $1.dmtx); /*22148*/
				$put(_1l, $1.dmtx.length, $1.fnc1); /*22149*/
				$1.dmtx = _1l; /*22150*/
			} /*22150*/
		} /*22150*/
		$1.barcode = $s(($1.dmtx.length + 1) * 5); /*22155*/
		$1.i = 0; /*22156*/
		$1.j = 0; /*22156*/
		for (;;) { /*22166*/
			if ($1.i == $1.dmtx.length) { /*22157*/
				break; /*22157*/
			} /*22157*/
			var _1v = $get($1.dmtx, $1.i); /*22158*/
			$k[$j++] = _1v; /*22163*/
			if (_1v == $1.fnc1) { /*22162*/
				$j--; /*22159*/
				$puti($1.barcode, $1.j, "^FNC1"); /*22159*/
				$1.j = $1.j + 4; /*22160*/
			} else { /*22162*/
				$put($1.barcode, $1.j, $k[--$j]); /*22162*/
			} /*22162*/
			$1.i = $1.i + 1; /*22164*/
			$1.j = $1.j + 1; /*22165*/
		} /*22165*/
		$1.barcode = $geti($1.barcode, 0, $1.j); /*22167*/
		$1.options.dontdraw = true; /*22170*/
		$1.options.parsefnc = true; /*22171*/
		$k[$j++] = "args"; /*22172*/
		$k[$j++] = $1.barcode; /*22172*/
		$k[$j++] = $1.options; /*22172*/
		$0.datamatrix(); /*22172*/
		var _2C = $k[--$j]; /*22172*/
		$1[$k[--$j]] = _2C; /*22172*/
		$1.args.opt = $1.options; /*22174*/
		$k[$j++] = $1.args; /*22177*/
		if (!$1.dontdraw) { /*22177*/
			$0.renmatrix(); /*22177*/
		} /*22177*/
	};
	$0.gs1datamatrixrectangular = function() {
		var $1 = {}; /*22205*/
		$1.options = $k[--$j]; /*22207*/
		$1.barcode = $k[--$j]; /*22208*/
		$1.dontdraw = false; /*22210*/
		$forall($1.options, function() { /*22221*/
			var _3 = $k[--$j]; /*22221*/
			$1[$k[--$j]] = _3; /*22221*/
		}); /*22221*/
		$1.expand = function() {
			$1.in = $k[--$j]; /*22225*/
			$1.out = $s($1.in.length); /*22226*/
			$1.j = 0; /*22227*/
			$k[$j++] = $1.in; /*22241*/
			for (;;) { /*22241*/
				$search($k[--$j], "^"); /*22230*/
				if ($k[--$j]) { /*22239*/
					var _B = $k[--$j]; /*22231*/
					$puti($1.out, $1.j, _B); /*22231*/
					$1.j = (_B.length + $1.j) + 1; /*22232*/
					$j--; /*22233*/
					var _F = $k[--$j]; /*22234*/
					$put($1.out, $1.j - 1, ~~$z($geti(_F, 0, 3))); /*22234*/
					$k[$j++] = $geti(_F, 3, _F.length - 3); /*22235*/
				} else { /*22239*/
					var _K = $k[--$j]; /*22237*/
					$puti($1.out, $1.j, _K); /*22237*/
					$1.j = _K.length + $1.j; /*22238*/
					$k[$j++] = $geti($1.out, 0, $1.j); /*22239*/
					break; /*22239*/
				} /*22239*/
			} /*22239*/
		}; /*22242*/
		$1.ais = $a([]); /*22245*/
		$1.aival = {}; /*22246*/
		var _S = $1.barcode; /*22247*/
		$k[$j++] = $geti(_S, 1, _S.length - 1); /*22259*/
		for (;;) { /*22259*/
			var _U = $k[--$j]; /*22249*/
			$k[$j++] = _U; /*22249*/
			if ($eq(_U, "")) { /*22249*/
				break; /*22249*/
			} /*22249*/
			$search($k[--$j], ")"); /*22250*/
			$j--; /*22250*/
			var _W = $k[--$j]; /*22251*/
			var _X = $k[--$j]; /*22251*/
			var _Y = $k[--$j]; /*22252*/
			$k[$j++] = _W; /*22252*/
			$search(_Y, "("); /*22252*/
			if ($k[--$j]) { /*22255*/
				var _a = $k[--$j]; /*22253*/
				var _b = $k[--$j]; /*22253*/
				var _c = $k[--$j]; /*22253*/
				var _d = $k[--$j]; /*22253*/
				$k[$j++] = _c; /*22253*/
				$k[$j++] = _d; /*22253*/
				$k[$j++] = _a; /*22253*/
			} else { /*22255*/
				var _e = $k[--$j]; /*22255*/
				var _f = $k[--$j]; /*22255*/
				$k[$j++] = ""; /*22255*/
				$k[$j++] = _f; /*22255*/
				$k[$j++] = _e; /*22255*/
			} /*22255*/
			$k[$j++] = Infinity; /*22257*/
			$aload($1.ais); /*22257*/
			var _i = $k[$j - 1 - ($counttomark() + 2)]; /*22257*/
			$k[$j++] = _i; /*22257*/
			$1.ais = $a(); /*22257*/
			var _l = $k[--$j]; /*22258*/
			var _m = $k[--$j]; /*22258*/
			$k[$j++] = $1.aival; /*22258*/
			$k[$j++] = _m; /*22258*/
			$k[$j++] = _l; /*22258*/
			$1.expand(); /*22258*/
			var _n = $k[--$j]; /*22258*/
			var _o = $k[--$j]; /*22258*/
			$put($k[--$j], _o, _n); /*22258*/
		} /*22258*/
		$j--; /*22260*/
		$1.aifixed = {}; /*22265*/
		$k[$j++] = Infinity; /*22267*/
		for (var _q = 0; _q <= 4; _q += 1) { /*22267*/
			$k[$j++] = _q; /*22267*/
		} /*22267*/
		var _r = $a(); /*22267*/
		for (var _s = 0, _t = _r.length; _s < _t; _s++) { /*22270*/
			var _w = $strcpy($s(2), "00"); /*22269*/
			$put(_w, 1, $get(_r, _s) + 48); /*22269*/
			$put($1.aifixed, _w, _w); /*22269*/
		} /*22269*/
		$k[$j++] = Infinity; /*22275*/
		for (var _y = 11; _y <= 20; _y += 1) { /*22272*/
			$k[$j++] = _y; /*22272*/
		} /*22272*/
		$k[$j++] = 23; /*22274*/
		for (var _z = 31; _z <= 36; _z += 1) { /*22274*/
			$k[$j++] = _z; /*22274*/
		} /*22274*/
		$k[$j++] = 41; /*22275*/
		var _10 = $a(); /*22275*/
		for (var _11 = 0, _12 = _10.length; _11 < _12; _11++) { /*22278*/
			var _15 = $cvrs($s(2), $get(_10, _11), 10); /*22277*/
			$put($1.aifixed, _15, _15); /*22277*/
		} /*22277*/
		$1.fnc1 = -1; /*22281*/
		$1.dmtx = $a([$1.fnc1]); /*22282*/
		for (var _1B = 0, _1A = $1.ais.length - 1; _1B <= _1A; _1B += 1) { /*22298*/
			$1.i = _1B; /*22284*/
			$1.ai = $get($1.ais, $1.i); /*22285*/
			$1.val = $get($1.aival, $1.ai); /*22286*/
			var _1L = $a(($1.dmtx.length + $1.ai.length) + $1.val.length); /*22287*/
			$puti(_1L, 0, $1.dmtx); /*22288*/
			$k[$j++] = _1L; /*22289*/
			$k[$j++] = _1L; /*22289*/
			$k[$j++] = $1.dmtx.length; /*22289*/
			$k[$j++] = $1.ai; /*22289*/
			$k[$j++] = Infinity; /*22289*/
			var _1P = $k[--$j]; /*22289*/
			var _1Q = $k[--$j]; /*22289*/
			$k[$j++] = _1P; /*22289*/
			$forall(_1Q); /*22289*/
			var _1R = $a(); /*22289*/
			var _1S = $k[--$j]; /*22289*/
			$puti($k[--$j], _1S, _1R); /*22289*/
			var _1U = $k[--$j]; /*22290*/
			$k[$j++] = _1U; /*22290*/
			$k[$j++] = _1U; /*22290*/
			$k[$j++] = $1.dmtx.length + $1.ai.length; /*22290*/
			$k[$j++] = $1.val; /*22290*/
			$k[$j++] = Infinity; /*22290*/
			var _1Y = $k[--$j]; /*22290*/
			var _1Z = $k[--$j]; /*22290*/
			$k[$j++] = _1Y; /*22290*/
			$forall(_1Z); /*22290*/
			var _1a = $a(); /*22290*/
			var _1b = $k[--$j]; /*22290*/
			$puti($k[--$j], _1b, _1a); /*22290*/
			$1.dmtx = $k[--$j]; /*22291*/
			var _1j = $get($1.aifixed, $geti($1.ai, 0, 2)) !== undefined; /*22292*/
			if (($1.i != ($1.ais.length - 1)) && (!_1j)) { /*22297*/
				var _1l = $a($1.dmtx.length + 1); /*22293*/
				$puti(_1l, 0, $1.dmtx); /*22294*/
				$put(_1l, $1.dmtx.length, $1.fnc1); /*22295*/
				$1.dmtx = _1l; /*22296*/
			} /*22296*/
		} /*22296*/
		$1.barcode = $s(($1.dmtx.length + 1) * 5); /*22301*/
		$1.i = 0; /*22302*/
		$1.j = 0; /*22302*/
		for (;;) { /*22312*/
			if ($1.i == $1.dmtx.length) { /*22303*/
				break; /*22303*/
			} /*22303*/
			var _1v = $get($1.dmtx, $1.i); /*22304*/
			$k[$j++] = _1v; /*22309*/
			if (_1v == $1.fnc1) { /*22308*/
				$j--; /*22305*/
				$puti($1.barcode, $1.j, "^FNC1"); /*22305*/
				$1.j = $1.j + 4; /*22306*/
			} else { /*22308*/
				$put($1.barcode, $1.j, $k[--$j]); /*22308*/
			} /*22308*/
			$1.i = $1.i + 1; /*22310*/
			$1.j = $1.j + 1; /*22311*/
		} /*22311*/
		$1.barcode = $geti($1.barcode, 0, $1.j); /*22313*/
		$1.options.dontdraw = true; /*22316*/
		$1.options.parsefnc = true; /*22317*/
		$1.options.format = "rectangle"; /*22318*/
		$k[$j++] = "args"; /*22319*/
		$k[$j++] = $1.barcode; /*22319*/
		$k[$j++] = $1.options; /*22319*/
		$0.datamatrix(); /*22319*/
		var _2D = $k[--$j]; /*22319*/
		$1[$k[--$j]] = _2D; /*22319*/
		$1.args.opt = $1.options; /*22321*/
		$k[$j++] = $1.args; /*22324*/
		if (!$1.dontdraw) { /*22324*/
			$0.renmatrix(); /*22324*/
		} /*22324*/
	};
	$0.gs1qrcode = function() {
		var $1 = {}; /*22351*/
		$1.options = $k[--$j]; /*22353*/
		$1.barcode = $k[--$j]; /*22354*/
		$1.dontdraw = false; /*22356*/
		$forall($1.options, function() { /*22367*/
			var _3 = $k[--$j]; /*22367*/
			$1[$k[--$j]] = _3; /*22367*/
		}); /*22367*/
		$1.expand = function() {
			$1.in = $k[--$j]; /*22371*/
			$1.out = $s($1.in.length); /*22372*/
			$1.j = 0; /*22373*/
			$k[$j++] = $1.in; /*22387*/
			for (;;) { /*22387*/
				$search($k[--$j], "^"); /*22376*/
				if ($k[--$j]) { /*22385*/
					var _B = $k[--$j]; /*22377*/
					$puti($1.out, $1.j, _B); /*22377*/
					$1.j = (_B.length + $1.j) + 1; /*22378*/
					$j--; /*22379*/
					var _F = $k[--$j]; /*22380*/
					$put($1.out, $1.j - 1, ~~$z($geti(_F, 0, 3))); /*22380*/
					$k[$j++] = $geti(_F, 3, _F.length - 3); /*22381*/
				} else { /*22385*/
					var _K = $k[--$j]; /*22383*/
					$puti($1.out, $1.j, _K); /*22383*/
					$1.j = _K.length + $1.j; /*22384*/
					$k[$j++] = $geti($1.out, 0, $1.j); /*22385*/
					break; /*22385*/
				} /*22385*/
			} /*22385*/
		}; /*22388*/
		$1.ais = $a([]); /*22391*/
		$1.aival = {}; /*22392*/
		var _S = $1.barcode; /*22393*/
		$k[$j++] = $geti(_S, 1, _S.length - 1); /*22405*/
		for (;;) { /*22405*/
			var _U = $k[--$j]; /*22395*/
			$k[$j++] = _U; /*22395*/
			if ($eq(_U, "")) { /*22395*/
				break; /*22395*/
			} /*22395*/
			$search($k[--$j], ")"); /*22396*/
			$j--; /*22396*/
			var _W = $k[--$j]; /*22397*/
			var _X = $k[--$j]; /*22397*/
			var _Y = $k[--$j]; /*22398*/
			$k[$j++] = _W; /*22398*/
			$search(_Y, "("); /*22398*/
			if ($k[--$j]) { /*22401*/
				var _a = $k[--$j]; /*22399*/
				var _b = $k[--$j]; /*22399*/
				var _c = $k[--$j]; /*22399*/
				var _d = $k[--$j]; /*22399*/
				$k[$j++] = _c; /*22399*/
				$k[$j++] = _d; /*22399*/
				$k[$j++] = _a; /*22399*/
			} else { /*22401*/
				var _e = $k[--$j]; /*22401*/
				var _f = $k[--$j]; /*22401*/
				$k[$j++] = ""; /*22401*/
				$k[$j++] = _f; /*22401*/
				$k[$j++] = _e; /*22401*/
			} /*22401*/
			$k[$j++] = Infinity; /*22403*/
			$aload($1.ais); /*22403*/
			var _i = $k[$j - 1 - ($counttomark() + 2)]; /*22403*/
			$k[$j++] = _i; /*22403*/
			$1.ais = $a(); /*22403*/
			var _l = $k[--$j]; /*22404*/
			var _m = $k[--$j]; /*22404*/
			$k[$j++] = $1.aival; /*22404*/
			$k[$j++] = _m; /*22404*/
			$k[$j++] = _l; /*22404*/
			$1.expand(); /*22404*/
			var _n = $k[--$j]; /*22404*/
			var _o = $k[--$j]; /*22404*/
			$put($k[--$j], _o, _n); /*22404*/
		} /*22404*/
		$j--; /*22406*/
		$1.aifixed = {}; /*22411*/
		$k[$j++] = Infinity; /*22413*/
		for (var _q = 0; _q <= 4; _q += 1) { /*22413*/
			$k[$j++] = _q; /*22413*/
		} /*22413*/
		var _r = $a(); /*22413*/
		for (var _s = 0, _t = _r.length; _s < _t; _s++) { /*22416*/
			var _w = $strcpy($s(2), "00"); /*22415*/
			$put(_w, 1, $get(_r, _s) + 48); /*22415*/
			$put($1.aifixed, _w, _w); /*22415*/
		} /*22415*/
		$k[$j++] = Infinity; /*22421*/
		for (var _y = 11; _y <= 20; _y += 1) { /*22418*/
			$k[$j++] = _y; /*22418*/
		} /*22418*/
		$k[$j++] = 23; /*22420*/
		for (var _z = 31; _z <= 36; _z += 1) { /*22420*/
			$k[$j++] = _z; /*22420*/
		} /*22420*/
		$k[$j++] = 41; /*22421*/
		var _10 = $a(); /*22421*/
		for (var _11 = 0, _12 = _10.length; _11 < _12; _11++) { /*22424*/
			var _15 = $cvrs($s(2), $get(_10, _11), 10); /*22423*/
			$put($1.aifixed, _15, _15); /*22423*/
		} /*22423*/
		$1.fnc1 = -1; /*22427*/
		$1.qrc = $a([$1.fnc1]); /*22428*/
		for (var _1B = 0, _1A = $1.ais.length - 1; _1B <= _1A; _1B += 1) { /*22444*/
			$1.i = _1B; /*22430*/
			$1.ai = $get($1.ais, $1.i); /*22431*/
			$1.val = $get($1.aival, $1.ai); /*22432*/
			var _1L = $a(($1.qrc.length + $1.ai.length) + $1.val.length); /*22433*/
			$puti(_1L, 0, $1.qrc); /*22434*/
			$k[$j++] = _1L; /*22435*/
			$k[$j++] = _1L; /*22435*/
			$k[$j++] = $1.qrc.length; /*22435*/
			$k[$j++] = $1.ai; /*22435*/
			$k[$j++] = Infinity; /*22435*/
			var _1P = $k[--$j]; /*22435*/
			var _1Q = $k[--$j]; /*22435*/
			$k[$j++] = _1P; /*22435*/
			$forall(_1Q); /*22435*/
			var _1R = $a(); /*22435*/
			var _1S = $k[--$j]; /*22435*/
			$puti($k[--$j], _1S, _1R); /*22435*/
			var _1U = $k[--$j]; /*22436*/
			$k[$j++] = _1U; /*22436*/
			$k[$j++] = _1U; /*22436*/
			$k[$j++] = $1.qrc.length + $1.ai.length; /*22436*/
			$k[$j++] = $1.val; /*22436*/
			$k[$j++] = Infinity; /*22436*/
			var _1Y = $k[--$j]; /*22436*/
			var _1Z = $k[--$j]; /*22436*/
			$k[$j++] = _1Y; /*22436*/
			$forall(_1Z); /*22436*/
			var _1a = $a(); /*22436*/
			var _1b = $k[--$j]; /*22436*/
			$puti($k[--$j], _1b, _1a); /*22436*/
			$1.qrc = $k[--$j]; /*22437*/
			var _1j = $get($1.aifixed, $geti($1.ai, 0, 2)) !== undefined; /*22438*/
			if (($1.i != ($1.ais.length - 1)) && (!_1j)) { /*22443*/
				var _1l = $a($1.qrc.length + 1); /*22439*/
				$puti(_1l, 0, $1.qrc); /*22440*/
				$put(_1l, $1.qrc.length, $1.fnc1); /*22441*/
				$1.qrc = _1l; /*22442*/
			} /*22442*/
		} /*22442*/
		$1.barcode = $s(($1.qrc.length + 1) * 5); /*22447*/
		$1.i = 0; /*22448*/
		$1.j = 0; /*22448*/
		for (;;) { /*22458*/
			if ($1.i == $1.qrc.length) { /*22449*/
				break; /*22449*/
			} /*22449*/
			var _1v = $get($1.qrc, $1.i); /*22450*/
			$k[$j++] = _1v; /*22455*/
			if (_1v == $1.fnc1) { /*22454*/
				$j--; /*22451*/
				$puti($1.barcode, $1.j, "^FNC1"); /*22451*/
				$1.j = $1.j + 4; /*22452*/
			} else { /*22454*/
				$put($1.barcode, $1.j, $k[--$j]); /*22454*/
			} /*22454*/
			$1.i = $1.i + 1; /*22456*/
			$1.j = $1.j + 1; /*22457*/
		} /*22457*/
		$1.barcode = $geti($1.barcode, 0, $1.j); /*22459*/
		$1.options.dontdraw = true; /*22462*/
		$1.options.parsefnc = true; /*22463*/
		$k[$j++] = "args"; /*22464*/
		$k[$j++] = $1.barcode; /*22464*/
		$k[$j++] = $1.options; /*22464*/
		$0.qrcode(); /*22464*/
		var _2C = $k[--$j]; /*22464*/
		$1[$k[--$j]] = _2C; /*22464*/
		$1.args.opt = $1.options; /*22466*/
		$k[$j++] = $1.args; /*22469*/
		if (!$1.dontdraw) { /*22469*/
			$0.renmatrix(); /*22469*/
		} /*22469*/
	};
	$0.hibccode39 = function() {
		var $1 = {}; /*22497*/
		$1.options = $k[--$j]; /*22499*/
		$1.barcode = $k[--$j]; /*22500*/
		$1.dontdraw = false; /*22502*/
		$1.textfont = "Courier"; /*22503*/
		$1.textsize = 10; /*22504*/
		$1.textyoffset = -8.5; /*22505*/
		$1.textxoffset = 0; /*22506*/
		$1.validatecheck = false; /*22507*/
		$forall($1.options, function() { /*22518*/
			var _3 = $k[--$j]; /*22518*/
			$1[$k[--$j]] = _3; /*22518*/
		}); /*22518*/
		$1.textfont = "" + $1.textfont; /*22520*/
		$1.textsize = +$1.textsize; /*22521*/
		$1.textyoffset = +$1.textyoffset; /*22522*/
		$1.textxoffset = +$1.textxoffset; /*22523*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*22526*/
		$1.charvals = {}; /*22527*/
		for (var _9 = 0; _9 <= 42; _9 += 1) { /*22528*/
			$put($1.charvals, $geti($1.barchars, _9, 1), _9); /*22528*/
		} /*22528*/
		for (var _F = 0, _E = $1.barcode.length - 1; _F <= _E; _F += 1) { /*22535*/
			var _J = $get($1.charvals, $geti($1.barcode, _F, 1)) !== undefined; /*22532*/
			if (!_J) { /*22534*/
				$k[$j++] = "bwipp.hibccode39badCharacter"; /*22533*/
				$k[$j++] = "HIBC Code 39 must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*22533*/
				$0.raiseerror(); /*22533*/
			} /*22533*/
		} /*22533*/
		$k[$j++] = "barlen"; /*22537*/
		$k[$j++] = $1.barcode.length; /*22537*/
		if ($1.validatecheck) { /*22537*/
			var _M = $k[--$j]; /*22537*/
			$k[$j++] = _M - 1; /*22537*/
		} /*22537*/
		var _N = $k[--$j]; /*22537*/
		$1[$k[--$j]] = _N; /*22537*/
		$1.checksum = 41; /*22539*/
		for (var _R = 0, _Q = $1.barlen - 1; _R <= _Q; _R += 1) { /*22543*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _R, 1)) + $1.checksum; /*22542*/
		} /*22542*/
		$1.checksum = $1.checksum % 43; /*22544*/
		if ($1.validatecheck) { /*22550*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*22548*/
				$k[$j++] = "bwipp.hibccode39badCheckDigit"; /*22547*/
				$k[$j++] = "Incorrect HIBC Code 39 check digit provided"; /*22547*/
				$0.raiseerror(); /*22547*/
			} /*22547*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*22549*/
		} /*22549*/
		var _j = $s($1.barlen + 2); /*22552*/
		$puti(_j, 1, $1.barcode); /*22552*/
		$1.barcode = _j; /*22552*/
		$put($1.barcode, 0, 43); /*22553*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*22554*/
		$1.text = $s($1.barlen + 4); /*22556*/
		$put($1.text, 0, 42); /*22557*/
		$puti($1.text, 1, $1.barcode); /*22558*/
		var _10 = $get($1.barcode, $1.barlen + 1); /*22559*/
		$k[$j++] = $1.text; /*22559*/
		$k[$j++] = $1.barlen + 2; /*22559*/
		$k[$j++] = _10; /*22559*/
		if (_10 == 32) { /*22559*/
			$j--; /*22559*/
			$k[$j++] = 95; /*22559*/
		} /*22559*/
		var _11 = $k[--$j]; /*22559*/
		var _12 = $k[--$j]; /*22559*/
		$put($k[--$j], _12, _11); /*22559*/
		$put($1.text, $1.barlen + 3, 42); /*22560*/
		$1.options.dontdraw = true; /*22563*/
		$1.options.includecheck = false; /*22564*/
		$1.options.validatecheck = false; /*22565*/
		$k[$j++] = "args"; /*22566*/
		$k[$j++] = $1.barcode; /*22566*/
		$k[$j++] = $1.options; /*22566*/
		$0.code39(); /*22566*/
		var _1B = $k[--$j]; /*22566*/
		$1[$k[--$j]] = _1B; /*22566*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*22568*/
		$1.args.textxalign = "center"; /*22569*/
		$1.args.opt = $1.options; /*22570*/
		$k[$j++] = $1.args; /*22573*/
		if (!$1.dontdraw) { /*22573*/
			$0.renlinear(); /*22573*/
		} /*22573*/
	};
	$0.hibccode128 = function() {
		var $1 = {}; /*22601*/
		$1.options = $k[--$j]; /*22603*/
		$1.barcode = $k[--$j]; /*22604*/
		$1.dontdraw = false; /*22606*/
		$1.textfont = "Courier"; /*22607*/
		$1.textsize = 10; /*22608*/
		$1.textyoffset = -8.5; /*22609*/
		$1.textxoffset = 0; /*22610*/
		$1.validatecheck = false; /*22611*/
		$forall($1.options, function() { /*22622*/
			var _3 = $k[--$j]; /*22622*/
			$1[$k[--$j]] = _3; /*22622*/
		}); /*22622*/
		$1.textfont = "" + $1.textfont; /*22624*/
		$1.textsize = +$1.textsize; /*22625*/
		$1.textyoffset = +$1.textyoffset; /*22626*/
		$1.textxoffset = +$1.textxoffset; /*22627*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*22630*/
		$1.charvals = {}; /*22631*/
		for (var _9 = 0; _9 <= 42; _9 += 1) { /*22632*/
			$put($1.charvals, $geti($1.barchars, _9, 1), _9); /*22632*/
		} /*22632*/
		for (var _F = 0, _E = $1.barcode.length - 1; _F <= _E; _F += 1) { /*22639*/
			var _J = $get($1.charvals, $geti($1.barcode, _F, 1)) !== undefined; /*22636*/
			if (!_J) { /*22638*/
				$k[$j++] = "bwipp.hibccode128badCharacter"; /*22637*/
				$k[$j++] = "HIBC Code 128 must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*22637*/
				$0.raiseerror(); /*22637*/
			} /*22637*/
		} /*22637*/
		$k[$j++] = "barlen"; /*22641*/
		$k[$j++] = $1.barcode.length; /*22641*/
		if ($1.validatecheck) { /*22641*/
			var _M = $k[--$j]; /*22641*/
			$k[$j++] = _M - 1; /*22641*/
		} /*22641*/
		var _N = $k[--$j]; /*22641*/
		$1[$k[--$j]] = _N; /*22641*/
		$1.checksum = 41; /*22643*/
		for (var _R = 0, _Q = $1.barlen - 1; _R <= _Q; _R += 1) { /*22647*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _R, 1)) + $1.checksum; /*22646*/
		} /*22646*/
		$1.checksum = $1.checksum % 43; /*22648*/
		if ($1.validatecheck) { /*22654*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*22652*/
				$k[$j++] = "bwipp.hibccode128badCheckDigit"; /*22651*/
				$k[$j++] = "Incorrect HIBC Code 128 check digit provided"; /*22651*/
				$0.raiseerror(); /*22651*/
			} /*22651*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*22653*/
		} /*22653*/
		var _j = $s($1.barlen + 2); /*22656*/
		$puti(_j, 1, $1.barcode); /*22656*/
		$1.barcode = _j; /*22656*/
		$put($1.barcode, 0, 43); /*22657*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*22658*/
		$1.text = $s($1.barlen + 4); /*22660*/
		$put($1.text, 0, 42); /*22661*/
		$puti($1.text, 1, $1.barcode); /*22662*/
		var _10 = $get($1.barcode, $1.barlen + 1); /*22663*/
		$k[$j++] = $1.text; /*22663*/
		$k[$j++] = $1.barlen + 2; /*22663*/
		$k[$j++] = _10; /*22663*/
		if (_10 == 32) { /*22663*/
			$j--; /*22663*/
			$k[$j++] = 95; /*22663*/
		} /*22663*/
		var _11 = $k[--$j]; /*22663*/
		var _12 = $k[--$j]; /*22663*/
		$put($k[--$j], _12, _11); /*22663*/
		$put($1.text, $1.barlen + 3, 42); /*22664*/
		$1.options.dontdraw = true; /*22667*/
		$1.options.validatecheck = false; /*22668*/
		$k[$j++] = "args"; /*22669*/
		$k[$j++] = $1.barcode; /*22669*/
		$k[$j++] = $1.options; /*22669*/
		$0.code128(); /*22669*/
		var _1A = $k[--$j]; /*22669*/
		$1[$k[--$j]] = _1A; /*22669*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*22671*/
		$1.args.textxalign = "center"; /*22672*/
		$1.args.opt = $1.options; /*22673*/
		$k[$j++] = $1.args; /*22676*/
		if (!$1.dontdraw) { /*22676*/
			$0.renlinear(); /*22676*/
		} /*22676*/
	};
	$0.hibcdatamatrix = function() {
		var $1 = {}; /*22704*/
		$1.options = $k[--$j]; /*22706*/
		$1.barcode = $k[--$j]; /*22707*/
		$1.dontdraw = false; /*22709*/
		$1.validatecheck = false; /*22710*/
		$forall($1.options, function() { /*22721*/
			var _3 = $k[--$j]; /*22721*/
			$1[$k[--$j]] = _3; /*22721*/
		}); /*22721*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*22724*/
		$1.charvals = {}; /*22725*/
		for (var _5 = 0; _5 <= 42; _5 += 1) { /*22726*/
			$put($1.charvals, $geti($1.barchars, _5, 1), _5); /*22726*/
		} /*22726*/
		for (var _B = 0, _A = $1.barcode.length - 1; _B <= _A; _B += 1) { /*22733*/
			var _F = $get($1.charvals, $geti($1.barcode, _B, 1)) !== undefined; /*22730*/
			if (!_F) { /*22732*/
				$k[$j++] = "bwipp.hibcdatamatrixBadCharacter"; /*22731*/
				$k[$j++] = "HIBC Data Matrix must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*22731*/
				$0.raiseerror(); /*22731*/
			} /*22731*/
		} /*22731*/
		$k[$j++] = "barlen"; /*22735*/
		$k[$j++] = $1.barcode.length; /*22735*/
		if ($1.validatecheck) { /*22735*/
			var _I = $k[--$j]; /*22735*/
			$k[$j++] = _I - 1; /*22735*/
		} /*22735*/
		var _J = $k[--$j]; /*22735*/
		$1[$k[--$j]] = _J; /*22735*/
		$1.checksum = 41; /*22737*/
		for (var _N = 0, _M = $1.barlen - 1; _N <= _M; _N += 1) { /*22741*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _N, 1)) + $1.checksum; /*22740*/
		} /*22740*/
		$1.checksum = $1.checksum % 43; /*22742*/
		if ($1.validatecheck) { /*22748*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*22746*/
				$k[$j++] = "bwipp.hibcdatamatrixBadCheckDigit"; /*22745*/
				$k[$j++] = "Incorrect HIBC Data Matrix check digit provided"; /*22745*/
				$0.raiseerror(); /*22745*/
			} /*22745*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*22747*/
		} /*22747*/
		var _f = $s($1.barlen + 2); /*22750*/
		$puti(_f, 1, $1.barcode); /*22750*/
		$1.barcode = _f; /*22750*/
		$put($1.barcode, 0, 43); /*22751*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*22752*/
		$1.options.dontdraw = true; /*22755*/
		$1.options.validatecheck = false; /*22756*/
		$k[$j++] = "args"; /*22757*/
		$k[$j++] = $1.barcode; /*22757*/
		$k[$j++] = $1.options; /*22757*/
		$0.datamatrix(); /*22757*/
		var _r = $k[--$j]; /*22757*/
		$1[$k[--$j]] = _r; /*22757*/
		$1.args.opt = $1.options; /*22759*/
		$k[$j++] = $1.args; /*22762*/
		if (!$1.dontdraw) { /*22762*/
			$0.renmatrix(); /*22762*/
		} /*22762*/
	};
	$0.hibcdatamatrixrectangular = function() {
		var $1 = {}; /*22790*/
		$1.options = $k[--$j]; /*22792*/
		$1.barcode = $k[--$j]; /*22793*/
		$1.dontdraw = false; /*22795*/
		$1.validatecheck = false; /*22796*/
		$forall($1.options, function() { /*22807*/
			var _3 = $k[--$j]; /*22807*/
			$1[$k[--$j]] = _3; /*22807*/
		}); /*22807*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*22810*/
		$1.charvals = {}; /*22811*/
		for (var _5 = 0; _5 <= 42; _5 += 1) { /*22812*/
			$put($1.charvals, $geti($1.barchars, _5, 1), _5); /*22812*/
		} /*22812*/
		for (var _B = 0, _A = $1.barcode.length - 1; _B <= _A; _B += 1) { /*22819*/
			var _F = $get($1.charvals, $geti($1.barcode, _B, 1)) !== undefined; /*22816*/
			if (!_F) { /*22818*/
				$k[$j++] = "bwipp.hibcdatamatrixrectangularBadCharacter"; /*22817*/
				$k[$j++] = "HIBC Data Matrix Rectangular must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*22817*/
				$0.raiseerror(); /*22817*/
			} /*22817*/
		} /*22817*/
		$k[$j++] = "barlen"; /*22821*/
		$k[$j++] = $1.barcode.length; /*22821*/
		if ($1.validatecheck) { /*22821*/
			var _I = $k[--$j]; /*22821*/
			$k[$j++] = _I - 1; /*22821*/
		} /*22821*/
		var _J = $k[--$j]; /*22821*/
		$1[$k[--$j]] = _J; /*22821*/
		$1.checksum = 41; /*22823*/
		for (var _N = 0, _M = $1.barlen - 1; _N <= _M; _N += 1) { /*22827*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _N, 1)) + $1.checksum; /*22826*/
		} /*22826*/
		$1.checksum = $1.checksum % 43; /*22828*/
		if ($1.validatecheck) { /*22834*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*22832*/
				$k[$j++] = "bwipp.hibcdatamatrixrectangularBadCheckDigit"; /*22831*/
				$k[$j++] = "Incorrect HIBC Data Matrix Rectangular check digit provided"; /*22831*/
				$0.raiseerror(); /*22831*/
			} /*22831*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*22833*/
		} /*22833*/
		var _f = $s($1.barlen + 2); /*22836*/
		$puti(_f, 1, $1.barcode); /*22836*/
		$1.barcode = _f; /*22836*/
		$put($1.barcode, 0, 43); /*22837*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*22838*/
		$1.options.dontdraw = true; /*22841*/
		$1.options.validatecheck = false; /*22842*/
		$1.options.format = "rectangle"; /*22843*/
		$k[$j++] = "args"; /*22844*/
		$k[$j++] = $1.barcode; /*22844*/
		$k[$j++] = $1.options; /*22844*/
		$0.datamatrix(); /*22844*/
		var _s = $k[--$j]; /*22844*/
		$1[$k[--$j]] = _s; /*22844*/
		$1.args.opt = $1.options; /*22846*/
		$k[$j++] = $1.args; /*22849*/
		if (!$1.dontdraw) { /*22849*/
			$0.renmatrix(); /*22849*/
		} /*22849*/
	};
	$0.hibcpdf417 = function() {
		var $1 = {}; /*22877*/
		$1.options = $k[--$j]; /*22879*/
		$1.barcode = $k[--$j]; /*22880*/
		$1.dontdraw = false; /*22882*/
		$1.columns = 2; /*22883*/
		$1.validatecheck = false; /*22884*/
		$forall($1.options, function() { /*22895*/
			var _3 = $k[--$j]; /*22895*/
			$1[$k[--$j]] = _3; /*22895*/
		}); /*22895*/
		$1.columns = ~~$1.columns; /*22897*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*22900*/
		$1.charvals = {}; /*22901*/
		for (var _6 = 0; _6 <= 42; _6 += 1) { /*22902*/
			$put($1.charvals, $geti($1.barchars, _6, 1), _6); /*22902*/
		} /*22902*/
		for (var _C = 0, _B = $1.barcode.length - 1; _C <= _B; _C += 1) { /*22909*/
			var _G = $get($1.charvals, $geti($1.barcode, _C, 1)) !== undefined; /*22906*/
			if (!_G) { /*22908*/
				$k[$j++] = "bwipp.hibcpdf417BadCharacter"; /*22907*/
				$k[$j++] = "HIBC PDF417 must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*22907*/
				$0.raiseerror(); /*22907*/
			} /*22907*/
		} /*22907*/
		$k[$j++] = "barlen"; /*22911*/
		$k[$j++] = $1.barcode.length; /*22911*/
		if ($1.validatecheck) { /*22911*/
			var _J = $k[--$j]; /*22911*/
			$k[$j++] = _J - 1; /*22911*/
		} /*22911*/
		var _K = $k[--$j]; /*22911*/
		$1[$k[--$j]] = _K; /*22911*/
		$1.checksum = 41; /*22913*/
		for (var _O = 0, _N = $1.barlen - 1; _O <= _N; _O += 1) { /*22917*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _O, 1)) + $1.checksum; /*22916*/
		} /*22916*/
		$1.checksum = $1.checksum % 43; /*22918*/
		if ($1.validatecheck) { /*22924*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*22922*/
				$k[$j++] = "bwipp.hibcpdf417BadCheckDigit"; /*22921*/
				$k[$j++] = "Incorrect HIBC PDF417 check digit provided"; /*22921*/
				$0.raiseerror(); /*22921*/
			} /*22921*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*22923*/
		} /*22923*/
		var _g = $s($1.barlen + 2); /*22926*/
		$puti(_g, 1, $1.barcode); /*22926*/
		$1.barcode = _g; /*22926*/
		$put($1.barcode, 0, 43); /*22927*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*22928*/
		$1.options.dontdraw = true; /*22931*/
		$1.options.columns = $1.columns; /*22932*/
		$1.options.validatecheck = false; /*22933*/
		$k[$j++] = "args"; /*22934*/
		$k[$j++] = $1.barcode; /*22934*/
		$k[$j++] = $1.options; /*22934*/
		$0.pdf417(); /*22934*/
		var _u = $k[--$j]; /*22934*/
		$1[$k[--$j]] = _u; /*22934*/
		$1.args.opt = $1.options; /*22936*/
		$k[$j++] = $1.args; /*22939*/
		if (!$1.dontdraw) { /*22939*/
			$0.renmatrix(); /*22939*/
		} /*22939*/
	};
	$0.hibcmicropdf417 = function() {
		var $1 = {}; /*22967*/
		$1.options = $k[--$j]; /*22969*/
		$1.barcode = $k[--$j]; /*22970*/
		$1.dontdraw = false; /*22972*/
		$1.columns = 2; /*22973*/
		$1.validatecheck = false; /*22974*/
		$forall($1.options, function() { /*22985*/
			var _3 = $k[--$j]; /*22985*/
			$1[$k[--$j]] = _3; /*22985*/
		}); /*22985*/
		$1.columns = ~~$1.columns; /*22987*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*22990*/
		$1.charvals = {}; /*22991*/
		for (var _6 = 0; _6 <= 42; _6 += 1) { /*22992*/
			$put($1.charvals, $geti($1.barchars, _6, 1), _6); /*22992*/
		} /*22992*/
		for (var _C = 0, _B = $1.barcode.length - 1; _C <= _B; _C += 1) { /*22999*/
			var _G = $get($1.charvals, $geti($1.barcode, _C, 1)) !== undefined; /*22996*/
			if (!_G) { /*22998*/
				$k[$j++] = "bwipp.hibcmicropdf417BadCharacter"; /*22997*/
				$k[$j++] = "HIBC MicroPDF417 must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*22997*/
				$0.raiseerror(); /*22997*/
			} /*22997*/
		} /*22997*/
		$k[$j++] = "barlen"; /*23001*/
		$k[$j++] = $1.barcode.length; /*23001*/
		if ($1.validatecheck) { /*23001*/
			var _J = $k[--$j]; /*23001*/
			$k[$j++] = _J - 1; /*23001*/
		} /*23001*/
		var _K = $k[--$j]; /*23001*/
		$1[$k[--$j]] = _K; /*23001*/
		$1.checksum = 41; /*23003*/
		for (var _O = 0, _N = $1.barlen - 1; _O <= _N; _O += 1) { /*23007*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _O, 1)) + $1.checksum; /*23006*/
		} /*23006*/
		$1.checksum = $1.checksum % 43; /*23008*/
		if ($1.validatecheck) { /*23014*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*23012*/
				$k[$j++] = "bwipp.hibcmicropdf417BadCheckDigit"; /*23011*/
				$k[$j++] = "Incorrect HIBC MicroPDF417 check digit provided"; /*23011*/
				$0.raiseerror(); /*23011*/
			} /*23011*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*23013*/
		} /*23013*/
		var _g = $s($1.barlen + 2); /*23016*/
		$puti(_g, 1, $1.barcode); /*23016*/
		$1.barcode = _g; /*23016*/
		$put($1.barcode, 0, 43); /*23017*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*23018*/
		$1.options.dontdraw = true; /*23021*/
		$1.options.columns = $1.columns; /*23022*/
		$1.options.validatecheck = false; /*23023*/
		$k[$j++] = "args"; /*23024*/
		$k[$j++] = $1.barcode; /*23024*/
		$k[$j++] = $1.options; /*23024*/
		$0.micropdf417(); /*23024*/
		var _u = $k[--$j]; /*23024*/
		$1[$k[--$j]] = _u; /*23024*/
		$1.args.opt = $1.options; /*23026*/
		$k[$j++] = $1.args; /*23029*/
		if (!$1.dontdraw) { /*23029*/
			$0.renmatrix(); /*23029*/
		} /*23029*/
	};
	$0.hibcqrcode = function() {
		var $1 = {}; /*23057*/
		$1.options = $k[--$j]; /*23059*/
		$1.barcode = $k[--$j]; /*23060*/
		$1.dontdraw = false; /*23062*/
		$1.validatecheck = false; /*23063*/
		$forall($1.options, function() { /*23074*/
			var _3 = $k[--$j]; /*23074*/
			$1[$k[--$j]] = _3; /*23074*/
		}); /*23074*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*23077*/
		$1.charvals = {}; /*23078*/
		for (var _5 = 0; _5 <= 42; _5 += 1) { /*23079*/
			$put($1.charvals, $geti($1.barchars, _5, 1), _5); /*23079*/
		} /*23079*/
		for (var _B = 0, _A = $1.barcode.length - 1; _B <= _A; _B += 1) { /*23086*/
			var _F = $get($1.charvals, $geti($1.barcode, _B, 1)) !== undefined; /*23083*/
			if (!_F) { /*23085*/
				$k[$j++] = "bwipp.hibcqrcodeBadCharacter"; /*23084*/
				$k[$j++] = "HIBC QR Code must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*23084*/
				$0.raiseerror(); /*23084*/
			} /*23084*/
		} /*23084*/
		$k[$j++] = "barlen"; /*23088*/
		$k[$j++] = $1.barcode.length; /*23088*/
		if ($1.validatecheck) { /*23088*/
			var _I = $k[--$j]; /*23088*/
			$k[$j++] = _I - 1; /*23088*/
		} /*23088*/
		var _J = $k[--$j]; /*23088*/
		$1[$k[--$j]] = _J; /*23088*/
		$1.checksum = 41; /*23090*/
		for (var _N = 0, _M = $1.barlen - 1; _N <= _M; _N += 1) { /*23094*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _N, 1)) + $1.checksum; /*23093*/
		} /*23093*/
		$1.checksum = $1.checksum % 43; /*23095*/
		if ($1.validatecheck) { /*23101*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*23099*/
				$k[$j++] = "bwipp.hibcqrcodeBadCheckDigit"; /*23098*/
				$k[$j++] = "Incorrect HIBC QR Code check digit provided"; /*23098*/
				$0.raiseerror(); /*23098*/
			} /*23098*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*23100*/
		} /*23100*/
		var _f = $s($1.barlen + 2); /*23103*/
		$puti(_f, 1, $1.barcode); /*23103*/
		$1.barcode = _f; /*23103*/
		$put($1.barcode, 0, 43); /*23104*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*23105*/
		$1.options.dontdraw = true; /*23108*/
		$1.options.validatecheck = false; /*23109*/
		$k[$j++] = "args"; /*23110*/
		$k[$j++] = $1.barcode; /*23110*/
		$k[$j++] = $1.options; /*23110*/
		$0.qrcode(); /*23110*/
		var _r = $k[--$j]; /*23110*/
		$1[$k[--$j]] = _r; /*23110*/
		$1.args.opt = $1.options; /*23112*/
		$k[$j++] = $1.args; /*23115*/
		if (!$1.dontdraw) { /*23115*/
			$0.renmatrix(); /*23115*/
		} /*23115*/
	};
	$0.hibccodablockf = function() {
		var $1 = {}; /*23143*/
		$1.options = $k[--$j]; /*23145*/
		$1.barcode = $k[--$j]; /*23146*/
		$1.dontdraw = false; /*23148*/
		$1.validatecheck = false; /*23149*/
		$forall($1.options, function() { /*23160*/
			var _3 = $k[--$j]; /*23160*/
			$1[$k[--$j]] = _3; /*23160*/
		}); /*23160*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*23163*/
		$1.charvals = {}; /*23164*/
		for (var _5 = 0; _5 <= 42; _5 += 1) { /*23165*/
			$put($1.charvals, $geti($1.barchars, _5, 1), _5); /*23165*/
		} /*23165*/
		for (var _B = 0, _A = $1.barcode.length - 1; _B <= _A; _B += 1) { /*23172*/
			var _F = $get($1.charvals, $geti($1.barcode, _B, 1)) !== undefined; /*23169*/
			if (!_F) { /*23171*/
				$k[$j++] = "bwipp.codablockfBadCharacter"; /*23170*/
				$k[$j++] = "HIBC Codablock F must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*23170*/
				$0.raiseerror(); /*23170*/
			} /*23170*/
		} /*23170*/
		$k[$j++] = "barlen"; /*23174*/
		$k[$j++] = $1.barcode.length; /*23174*/
		if ($1.validatecheck) { /*23174*/
			var _I = $k[--$j]; /*23174*/
			$k[$j++] = _I - 1; /*23174*/
		} /*23174*/
		var _J = $k[--$j]; /*23174*/
		$1[$k[--$j]] = _J; /*23174*/
		$1.checksum = 41; /*23176*/
		for (var _N = 0, _M = $1.barlen - 1; _N <= _M; _N += 1) { /*23180*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _N, 1)) + $1.checksum; /*23179*/
		} /*23179*/
		$1.checksum = $1.checksum % 43; /*23181*/
		if ($1.validatecheck) { /*23187*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*23185*/
				$k[$j++] = "bwipp.hibccodablockfBadCheckDigit"; /*23184*/
				$k[$j++] = "Incorrect HIBC Codablock F check digit provided"; /*23184*/
				$0.raiseerror(); /*23184*/
			} /*23184*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*23186*/
		} /*23186*/
		var _f = $s($1.barlen + 2); /*23189*/
		$puti(_f, 1, $1.barcode); /*23189*/
		$1.barcode = _f; /*23189*/
		$put($1.barcode, 0, 43); /*23190*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*23191*/
		$1.options.dontdraw = true; /*23194*/
		$1.options.validatecheck = false; /*23195*/
		$k[$j++] = "args"; /*23196*/
		$k[$j++] = $1.barcode; /*23196*/
		$k[$j++] = $1.options; /*23196*/
		$0.codablockf(); /*23196*/
		var _r = $k[--$j]; /*23196*/
		$1[$k[--$j]] = _r; /*23196*/
		$1.args.opt = $1.options; /*23198*/
		$k[$j++] = $1.args; /*23201*/
		if (!$1.dontdraw) { /*23201*/
			$0.renmatrix(); /*23201*/
		} /*23201*/
	};
	$0.hibcazteccode = function() {
		var $1 = {}; /*23229*/
		$1.options = $k[--$j]; /*23231*/
		$1.barcode = $k[--$j]; /*23232*/
		$1.dontdraw = false; /*23234*/
		$1.validatecheck = false; /*23235*/
		$forall($1.options, function() { /*23246*/
			var _3 = $k[--$j]; /*23246*/
			$1[$k[--$j]] = _3; /*23246*/
		}); /*23246*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*23249*/
		$1.charvals = {}; /*23250*/
		for (var _5 = 0; _5 <= 42; _5 += 1) { /*23251*/
			$put($1.charvals, $geti($1.barchars, _5, 1), _5); /*23251*/
		} /*23251*/
		for (var _B = 0, _A = $1.barcode.length - 1; _B <= _A; _B += 1) { /*23258*/
			var _F = $get($1.charvals, $geti($1.barcode, _B, 1)) !== undefined; /*23255*/
			if (!_F) { /*23257*/
				$k[$j++] = "bwipp.hibcazteccodeBadCharacter"; /*23256*/
				$k[$j++] = "HIBC Aztec Code must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*23256*/
				$0.raiseerror(); /*23256*/
			} /*23256*/
		} /*23256*/
		$k[$j++] = "barlen"; /*23260*/
		$k[$j++] = $1.barcode.length; /*23260*/
		if ($1.validatecheck) { /*23260*/
			var _I = $k[--$j]; /*23260*/
			$k[$j++] = _I - 1; /*23260*/
		} /*23260*/
		var _J = $k[--$j]; /*23260*/
		$1[$k[--$j]] = _J; /*23260*/
		$1.checksum = 41; /*23262*/
		for (var _N = 0, _M = $1.barlen - 1; _N <= _M; _N += 1) { /*23266*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _N, 1)) + $1.checksum; /*23265*/
		} /*23265*/
		$1.checksum = $1.checksum % 43; /*23267*/
		if ($1.validatecheck) { /*23273*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*23271*/
				$k[$j++] = "bwipp.hibcazteccodeBadCheckDigit"; /*23270*/
				$k[$j++] = "Incorrect HIBC Aztec Code check digit provided"; /*23270*/
				$0.raiseerror(); /*23270*/
			} /*23270*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*23272*/
		} /*23272*/
		var _f = $s($1.barlen + 2); /*23275*/
		$puti(_f, 1, $1.barcode); /*23275*/
		$1.barcode = _f; /*23275*/
		$put($1.barcode, 0, 43); /*23276*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*23277*/
		$1.options.dontdraw = true; /*23280*/
		$1.options.validatecheck = false; /*23281*/
		$k[$j++] = "args"; /*23282*/
		$k[$j++] = $1.barcode; /*23282*/
		$k[$j++] = $1.options; /*23282*/
		$0.azteccode(); /*23282*/
		var _r = $k[--$j]; /*23282*/
		$1[$k[--$j]] = _r; /*23282*/
		$1.args.opt = $1.options; /*23284*/
		$k[$j++] = $1.args; /*23287*/
		if (!$1.dontdraw) { /*23287*/
			$0.renmatrix(); /*23287*/
		} /*23287*/
	};
	$0.renlinear = function() {
		if ($0.bwipjs_dontdraw) { /*23310*/
			return; /*23310*/
		} /*23310*/
		var $1 = {}; /*23312*/
		$1.args = $k[--$j]; /*23314*/
		$1.sbs = $a([]); /*23317*/
		$1.bhs = $a([]); /*23318*/
		$1.bbs = $a([]); /*23319*/
		$1.txt = $a([]); /*23320*/
		$1.barcolor = "unset"; /*23321*/
		$1.includetext = false; /*23322*/
		$1.textcolor = "unset"; /*23323*/
		$1.textxalign = "unset"; /*23324*/
		$1.textyalign = "unset"; /*23325*/
		$1.textfont = "Courier"; /*23326*/
		$1.textsize = 10; /*23327*/
		$1.textxoffset = 0; /*23328*/
		$1.textyoffset = 0; /*23329*/
		$1.textgaps = 0; /*23330*/
		$1.alttext = ""; /*23331*/
		$1.bordercolor = "unset"; /*23332*/
		$1.backgroundcolor = "unset"; /*23333*/
		$1.inkspread = 0; /*23334*/
		$1.width = 0; /*23335*/
		$1.barratio = 1; /*23336*/
		$1.spaceratio = 1; /*23337*/
		$1.showborder = false; /*23338*/
		$1.borderleft = 0; /*23339*/
		$1.borderright = 0; /*23340*/
		$1.bordertop = 0; /*23341*/
		$1.borderbottom = 0; /*23342*/
		$1.borderwidth = 0.5; /*23343*/
		$1.guardwhitespace = false; /*23344*/
		$1.guardleftpos = 0; /*23345*/
		$1.guardleftypos = 0; /*23346*/
		$1.guardrightpos = 0; /*23347*/
		$1.guardrightypos = 0; /*23348*/
		$1.guardwidth = 7; /*23349*/
		$1.guardheight = 7; /*23350*/
		$forall($1.args, function() { /*23353*/
			var _7 = $k[--$j]; /*23353*/
			$1[$k[--$j]] = _7; /*23353*/
		}); /*23353*/
		var _9 = $1.opt; /*23354*/
		for (var _A in _9) { /*23354*/
			$1[_A] = _9[_A]; /*23354*/
		} /*23354*/
		$1.barcolor = "" + $1.barcolor; /*23356*/
		$1.textcolor = "" + $1.textcolor; /*23357*/
		$1.textxalign = "" + $1.textxalign; /*23358*/
		$1.textyalign = "" + $1.textyalign; /*23359*/
		$1.textfont = "" + $1.textfont; /*23360*/
		$1.textsize = +$1.textsize; /*23361*/
		$1.textxoffset = +$1.textxoffset; /*23362*/
		$1.textyoffset = +$1.textyoffset; /*23363*/
		$1.textgaps = +$1.textgaps; /*23364*/
		$1.alttext = "" + $1.alttext; /*23365*/
		$1.bordercolor = "" + $1.bordercolor; /*23366*/
		$1.backgroundcolor = "" + $1.backgroundcolor; /*23367*/
		$1.inkspread = +$1.inkspread; /*23368*/
		$1.width = +$1.width; /*23369*/
		$1.barratio = +$1.barratio; /*23370*/
		$1.spaceratio = +$1.spaceratio; /*23371*/
		$1.borderleft = +$1.borderleft; /*23372*/
		$1.borderright = +$1.borderright; /*23373*/
		$1.bordertop = +$1.bordertop; /*23374*/
		$1.borderbottom = +$1.borderbottom; /*23375*/
		$1.borderwidth = +$1.borderwidth; /*23376*/
		$1.guardleftpos = +$1.guardleftpos; /*23377*/
		$1.guardleftypos = +$1.guardleftypos; /*23378*/
		$1.guardrightpos = +$1.guardrightpos; /*23379*/
		$1.guardrightypos = +$1.guardrightypos; /*23380*/
		$1.guardwidth = +$1.guardwidth; /*23381*/
		$1.guardheight = +$1.guardheight; /*23382*/
		$1.bars = $a(~~(($1.sbs.length + 1) / 2)); /*23385*/
		$1.x = 0; /*23386*/
		$1.maxh = 0; /*23386*/
		for (var _h = 0, _g = ((~~(($1.sbs.length + 1) / 2)) * 2) - 2; _h <= _g; _h += 1) { /*23405*/
			$1.i = _h; /*23388*/
			if (($1.i % 2) == 0) { /*23402*/
				$1.d = (($get($1.sbs, $1.i) * $1.barratio) - $1.barratio) + 1; /*23390*/
				if ($get($1.sbs, $1.i) != 0) { /*23399*/
					$1.h = $get($1.bhs, ~~($1.i / 2)) * 72; /*23392*/
					$1.c = ($1.d / 2) + $1.x; /*23393*/
					$1.y = $get($1.bbs, ~~($1.i / 2)) * 72; /*23394*/
					$1.w = $1.d - $1.inkspread; /*23395*/
					$put($1.bars, ~~($1.i / 2), $a([$1.h, $1.c, $1.y, $1.w])); /*23396*/
					if (($1.h + $1.y) > $1.maxh) { /*23397*/
						$1.maxh = $1.h + $1.y; /*23397*/
					} /*23397*/
				} else { /*23399*/
					$put($1.bars, ~~($1.i / 2), -1); /*23399*/
				} /*23399*/
			} else { /*23402*/
				$1.d = (($get($1.sbs, $1.i) * $1.spaceratio) - $1.spaceratio) + 1; /*23402*/
			} /*23402*/
			$1.x = $1.x + $1.d; /*23404*/
		} /*23404*/
		$$.save(); /*23407*/
		var _1M = $$.currpos(); /*23409*/
		$$.translate(_1M.x, _1M.y); /*23409*/
		if ($1.width != 0) { /*23414*/
			$$.scale(($1.width * 72) / $1.x, 1); /*23413*/
		} /*23413*/
		$$.floorscale(); /*23417*/
		if (($1.borderleft > 0) || (($1.borderright > 0) || (($1.bordertop > 0) || ($1.borderbottom > 0)))) { /*23431*/
			$$.newpath(); /*23421*/
			$$.moveto(-$1.borderleft, -$1.borderbottom); /*23422*/
			$$.rlineto(($1.x + $1.borderleft) + $1.borderright, 0); /*23423*/
			$$.rlineto(0, ($1.maxh + $1.borderbottom) + $1.bordertop); /*23424*/
			$$.rlineto(-(($1.x + $1.borderleft) + $1.borderright), 0); /*23425*/
			$$.rlineto(0, -(($1.maxh + $1.borderbottom) + $1.bordertop)); /*23426*/
			$$.closepath(); /*23427*/
			$$.setextent(); /*23430*/
		} /*23430*/
		if ($1.showborder) { /*23439*/
			$$.save(); /*23435*/
			if ($ne($1.bordercolor, "unset")) { /*23436*/
				$$.setcolor($1.bordercolor); /*23436*/
			} /*23436*/
			$$.setlinewidth($1.borderwidth); /*23437*/
			$$.stroke(); /*23437*/
			$$.restore(); /*23438*/
		} /*23438*/
		$$.save(); /*23442*/
		if ($ne($1.barcolor, "unset")) { /*23444*/
			$$.setcolor($1.barcolor); /*23444*/
		} /*23444*/
		var _1o = $1.bars; /*23445*/
		for (var _1p = 0, _1q = _1o.length; _1p < _1q; _1p++) { /*23451*/
			var _1r = $get(_1o, _1p); /*23451*/
			$k[$j++] = _1r; /*23450*/
			if (_1r != -1) { /*23449*/
				$aload($k[--$j]); /*23447*/
				$$.newpath(); /*23447*/
				$$.setlinewidth($k[--$j]); /*23447*/
				var _1u = $k[--$j]; /*23447*/
				$$.moveto($k[--$j], _1u); /*23447*/
				$$.rlineto(0, $k[--$j]); /*23447*/
				$$.stroke(); /*23447*/
			} else { /*23449*/
				$j--; /*23449*/
			} /*23449*/
		} /*23449*/
		$$.restore(); /*23452*/
		if ($ne($1.textcolor, "unset")) { /*23455*/
			$$.setcolor($1.textcolor); /*23455*/
		} /*23455*/
		if ($1.includetext) { /*23512*/
			if (($eq($1.textxalign, "unset") && $eq($1.textyalign, "unset")) && $eq($1.alttext, "")) { /*23510*/
				$1.s = 0; /*23458*/
				$1.fn = ""; /*23458*/
				var _23 = $1.txt; /*23459*/
				for (var _24 = 0, _25 = _23.length; _24 < _25; _24++) { /*23468*/
					$forall($get(_23, _24)); /*23460*/
					var _27 = $k[--$j]; /*23461*/
					var _28 = $k[--$j]; /*23461*/
					$k[$j++] = _28; /*23466*/
					$k[$j++] = _27; /*23466*/
					if ((_27 != $1.s) || $ne(_28, $1.fn)) { /*23465*/
						var _2B = $k[--$j]; /*23462*/
						var _2C = $k[--$j]; /*23462*/
						$1.s = _2B; /*23462*/
						$1.fn = _2C; /*23462*/
						var _2D = $$.findfont(_2C); /*23463*/
						_2D.FontSize = _2B; /*23463*/
						$$.setfont(_2D); /*23463*/
					} else { /*23465*/
						$j -= 2; /*23465*/
					} /*23465*/
					var _2E = $k[--$j]; /*23467*/
					$$.moveto($k[--$j], _2E); /*23467*/
					$$.show($k[--$j], 0, 0); /*23467*/
				} /*23467*/
			} else { /*23510*/
				var _2I = $$.findfont($1.textfont); /*23470*/
				_2I.FontSize = $1.textsize; /*23470*/
				$$.setfont(_2I); /*23470*/
				if ($eq($1.alttext, "")) { /*23476*/
					$k[$j++] = Infinity; /*23472*/
					var _2L = $1.txt; /*23472*/
					for (var _2M = 0, _2N = _2L.length; _2M < _2N; _2M++) { /*23472*/
						$forall($get($get(_2L, _2M), 0)); /*23472*/
					} /*23472*/
					$1.txt = $a(); /*23472*/
					$1.tstr = $s($1.txt.length); /*23473*/
					for (var _2V = 0, _2U = $1.txt.length - 1; _2V <= _2U; _2V += 1) { /*23474*/
						$put($1.tstr, _2V, $get($1.txt, _2V)); /*23474*/
					} /*23474*/
				} else { /*23476*/
					$1.tstr = $1.alttext; /*23476*/
				} /*23476*/
				if ($1.tstr.length == 0) { /*23492*/
					$k[$j++] = 0; /*23481*/
				} else { /*23492*/
					$$.save(); /*23483*/
					$$.newpath(); /*23484*/
					$$.moveto(0, 0); /*23484*/
					$$.charpath("0", false); /*23484*/
					var _2b = $$.pathbbox(); /*23484*/
					$$.restore(); /*23486*/
					var _2c = $$.currfont(); /*23487*/
					var _2d = _2c.PaintType !== undefined; /*23487*/
					$k[$j++] = _2b.ury; /*23487*/
					if (_2d) { /*23487*/
						var _2e = $$.currfont(); /*23487*/
						$k[$j++] = _2e.PaintType == 2; /*23487*/
					} else { /*23487*/
						$k[$j++] = false; /*23487*/
					} /*23487*/
					var _2g = $$.currfont(); /*23488*/
					var _2h = _2g.StrokeWidth !== undefined; /*23488*/
					if ($k[--$j] && _2h) { /*23493*/
						var _2j = $$.currfont(); /*23489*/
						var _2l = $$.currfont(); /*23490*/
						var _2m = _2l.FontMatrix; /*23490*/
						var _2n = _2j.StrokeWidth / 2; /*23491*/
						var _2o = $k[--$j]; /*23492*/
						$k[$j++] = _2o + (Math.sqrt((_2n * _2n) + (0 * 0))); /*23492*/
					} /*23492*/
				} /*23492*/
				$1.textascent = $k[--$j]; /*23495*/
				var _2r = $$.stringwidth($1.tstr); /*23496*/
				$1.textwidth = _2r.w + (($1.tstr.length - 1) * $1.textgaps); /*23496*/
				$1.textxpos = $1.textxoffset + (($1.x - $1.textwidth) / 2); /*23498*/
				if ($eq($1.textxalign, "left")) { /*23499*/
					$1.textxpos = $1.textxoffset; /*23499*/
				} /*23499*/
				if ($eq($1.textxalign, "right")) { /*23500*/
					$1.textxpos = ($1.x - $1.textxoffset) - $1.textwidth; /*23500*/
				} /*23500*/
				if ($eq($1.textxalign, "offleft")) { /*23501*/
					$1.textxpos = -($1.textwidth + $1.textxoffset); /*23501*/
				} /*23501*/
				if ($eq($1.textxalign, "offright")) { /*23502*/
					$1.textxpos = $1.x + $1.textxoffset; /*23502*/
				} /*23502*/
				if ($eq($1.textxalign, "justify") && ($1.textwidth < $1.x)) { /*23506*/
					$1.textxpos = 0; /*23504*/
					$1.textgaps = ($1.x - $1.textwidth) / ($1.tstr.length - 1); /*23505*/
				} /*23505*/
				$1.textypos = -(($1.textyoffset + $1.textascent) + 1); /*23507*/
				if ($eq($1.textyalign, "above")) { /*23508*/
					$1.textypos = ($1.textyoffset + $1.maxh) + 1; /*23508*/
				} /*23508*/
				if ($eq($1.textyalign, "center")) { /*23509*/
					$1.textypos = $1.textyoffset + (($1.maxh - $1.textascent) / 2); /*23509*/
				} /*23509*/
				$$.moveto($1.textxpos, $1.textypos); /*23510*/
				$$.show($1.tstr, $1.textgaps, 0); /*23510*/
			} /*23510*/
		} /*23510*/
		if ($1.guardwhitespace) { /*23525*/
			var _3T = $$.findfont("OCR-B"); /*23516*/
			_3T.FontSize = ($1.guardheight * 2) - 1; /*23516*/
			$$.setfont(_3T); /*23516*/
			if ($1.guardleftpos != 0) { /*23520*/
				$$.moveto((-$1.guardleftpos) - 1.5, ($1.guardleftypos - ($1.guardheight / 2)) - 1); /*23518*/
				$$.show("<", 0, 0); /*23519*/
			} /*23519*/
			if ($1.guardrightpos != 0) { /*23524*/
				$$.moveto(($1.guardrightpos + $1.x) - $1.guardwidth, ($1.guardrightypos - ($1.guardheight / 2)) - 1); /*23522*/
				$$.show(">", 0, 0); /*23523*/
			} /*23523*/
		} /*23523*/
		$$.restore(); /*23527*/
	};
	$0.renmatrix = function() {
		if ($0.bwipjs_dontdraw) { /*23545*/
			return; /*23545*/
		} /*23545*/
		var $1 = {}; /*23547*/
		$1.args = $k[--$j]; /*23549*/
		$1.width = 1; /*23552*/
		$1.height = 1; /*23553*/
		$1.barcolor = "unset"; /*23554*/
		$1.backgroundcolor = "unset"; /*23555*/
		$forall($1.args, function() { /*23558*/
			var _3 = $k[--$j]; /*23558*/
			$1[$k[--$j]] = _3; /*23558*/
		}); /*23558*/
		var _5 = $1.opt; /*23559*/
		for (var _6 in _5) { /*23559*/
			$1[_6] = _5[_6]; /*23559*/
		} /*23559*/
		$1.width = +$1.width; /*23561*/
		$1.height = +$1.height; /*23562*/
		$1.barcolor = "" + $1.barcolor; /*23563*/
		$1.backgroundcolor = "" + $1.backgroundcolor; /*23564*/
		$1.pixx8 = (~~Math.ceil($1.pixx / 8)) * 8; /*23567*/
		$k[$j++] = Infinity; /*23568*/
		for (var _F = 0, _G = $1.pixx8 * $1.pixy; _F < _G; _F++) { /*23568*/
			$k[$j++] = 0; /*23568*/
		} /*23568*/
		$1.pixs8 = $a(); /*23568*/
		for (var _K = 0, _J = $1.pixy - 1; _K <= _J; _K += 1) { /*23572*/
			$1.i = _K; /*23570*/
			$puti($1.pixs8, $1.pixx8 * $1.i, $geti($1.pixs, $1.pixx * $1.i, $1.pixx)); /*23571*/
		} /*23571*/
		$1.pixs = $1.pixs8; /*23573*/
		$1.imgstr = $s(~~($1.pixs.length / 8)); /*23576*/
		for (var _Y = 0, _X = $1.pixs.length - 1; _Y <= _X; _Y += 1) { /*23580*/
			$1.i = _Y; /*23578*/
			var _Z = $1.imgstr; /*23579*/
			var _a = $1.i; /*23579*/
			$put(_Z, ~~(_a / 8), $get(_Z, ~~(_a / 8)) + ((~~(Math.pow(2, 7 - ($1.i % 8)))) * $get($1.pixs, $1.i))); /*23579*/
		} /*23579*/
		$$.save(); /*23583*/
		var _g = $$.currpos(); /*23584*/
		$$.translate(_g.x, _g.y); /*23584*/
		$$.scale(72 * $1.width, 72 * $1.height); /*23585*/
		$$.moveto(0.0001, 0.0001); /*23586*/
		$$.lineto(0.9999, 0.0001); /*23586*/
		$$.lineto(0.9999, 0.9999); /*23586*/
		$$.lineto(0.0001, 0.9999); /*23586*/
		$$.closepath(); /*23586*/
		if ($ne($1.barcolor, "unset")) { /*23589*/
			$$.setcolor($1.barcolor); /*23589*/
		} /*23589*/
		$$.imagemask($1.pixx, $1.pixy, $1.imgstr); /*23594*/
		$$.restore(); /*23595*/
	};
	$0.renmaximatrix = function() {
		if ($0.bwipjs_dontdraw) { /*23615*/
			return; /*23615*/
		} /*23615*/
		var $1 = {}; /*23617*/
		$1.args = $k[--$j]; /*23619*/
		$1.barcolor = "unset"; /*23622*/
		$1.backgroundcolor = "unset"; /*23623*/
		$forall($1.args, function() { /*23626*/
			var _3 = $k[--$j]; /*23626*/
			$1[$k[--$j]] = _3; /*23626*/
		}); /*23626*/
		var _5 = $1.opt; /*23627*/
		for (var _6 in _5) { /*23627*/
			$1[_6] = _5[_6]; /*23627*/
		} /*23627*/
		$1.barcolor = "" + $1.barcolor; /*23629*/
		$1.backgroundcolor = "" + $1.backgroundcolor; /*23630*/
		$$.save(); /*23632*/
		var _A = $$.currpos(); /*23634*/
		$$.translate(_A.x, _A.y); /*23634*/
		$$.scale(2.4945, 2.4945); /*23636*/
		$$.moveto(0, 0); /*23638*/
		$$.lineto(30, 0); /*23638*/
		$$.lineto(30, 29); /*23638*/
		$$.lineto(0, 29); /*23638*/
		$$.closepath(); /*23638*/
		if ($ne($1.barcolor, "unset")) { /*23641*/
			$$.setcolor($1.barcolor); /*23641*/
		} /*23641*/
		$$.translate(0.5, 0.5774); /*23643*/
		var _D = $$.findfont("OCRB"); /*23645*/
		_D.FontSize = 2.8; /*23645*/
		$$.setfont(_D); /*23645*/
		$$.newpath(); /*23647*/
		var _E = $1.pixs; /*23648*/
		for (var _F = 0, _G = _E.length; _F < _G; _F++) { /*23656*/
			var _H = $get(_E, _F); /*23656*/
			$1.x = _H % 30; /*23650*/
			$1.y = ~~(_H / 30); /*23651*/
			if (($1.y % 2) == 0) { /*23652*/
				$k[$j++] = $1.x; /*23652*/
			} else { /*23652*/
				$k[$j++] = $1.x + 0.5; /*23652*/
			} /*23652*/
			$$.moveto($k[--$j], (32 - $1.y) * 0.8661); /*23654*/
			$$.show("\xae", 0, 0); /*23655*/
		} /*23655*/
		var _N = $$.findfont("OCRB"); /*23659*/
		_N.FontSize = 2.85; /*23659*/
		$$.setfont(_N); /*23659*/
		$$.moveto(14, 13.8576); /*23660*/
		$$.show("\xa9", 0, 0); /*23660*/
		$$.restore(); /*23662*/
	};
	// bwip-js/barcode-ftr.js
	//
	// This code is injected below the cross-compiled barcode.ps.

	// The BWIPP symbol is a factory object.  When called, it returns this
	// function, which is a re-usable postscript emulation for BWIPP.
	return function(bwipjs, encoder, text, opts, dontdraw) {
		if (!$0[encoder]) {
			throw new Error('bwipp.unknownEncoder: ' + encoder);
		}
		if (typeof text !== 'string') {
			throw new Error('bwipp.typeError: barcode text not a string (' +
				text + ')');
		}
		opts = opts || {};
		if (typeof opts === 'string') {
			var tmp = opts.split(' ');
			opts = {};
			for (var i = 0; i < tmp.length; i++) {
				if (!tmp[i]) {
					continue;
				}
				var eq = tmp[i].indexOf('=');
				if (eq == -1) {
					opts[tmp[i]] = true;
				} else {
					opts[tmp[i].substr(0, eq)] = tmp[i].substr(eq + 1);
				}
			}
		} else if (typeof opts !== 'object' || opts.constructor !== Object) {
			throw new Error('bwipp.typeError: options not an object');
		}

		// Convert utf-16 to utf-8 but leave binary (8-bit) strings untouched.
		if (/[\u0100-\uffff]/.test(text)) {
			text = unescape(encodeURIComponent(text));
		}

		// Handle the `parse` option here rather than in BWIPP - eliminates
		// conflict with the parsefnc option and allows removing the parsing
		// code from BWIPP.
		if (opts.parse) {
			text = text.replace(/\^(\d\d\d)/g, function($0, $1) {
				var v = +$1;
				if (v > 255) {
					throw new Error('bwipp.rangeError:' +
						' ^NNN out-of-range (' + $0 + ')');
				}
				return String.fromCharCode(v);
			});
			delete opts.parse;
		}

		// Don't draw? (See file runtest)
		$0.bwipjs_dontdraw = dontdraw || false;

		// Invoke the encoder
		$$ = bwipjs;
		$k = [text, opts];
		$j = 2;
		$0[encoder]();

		// Return what is left on the stack.  This branch should only be taken
		// when running tests with the dontdraw option.
		if ($j) {
			return $k.splice(0, $j);
		}
		// Otherwise, just return ok
		return true;
	}
}
if (typeof module === 'object' && module.exports) {
	module.exports = BWIPP;
}